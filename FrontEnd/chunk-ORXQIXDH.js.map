{
  "version": 3,
  "sources": ["src/app/pages/gestion-cobros/pago-trabajadores/dialog-estado-masivo/dialog-estado-masivo.component.ts", "src/app/pages/gestion-cobros/pago-trabajadores/dialog-estado-masivo/dialog-estado-masivo.component.html", "src/app/pages/gestion-cobros/pago-trabajadores/dialog-abonos-masivos/dialog-abonos-masivos.component.ts", "src/app/pages/gestion-cobros/pago-trabajadores/dialog-abonos-masivos/dialog-abonos-masivos.component.html", "src/app/pages/gestion-cobros/pago-trabajadores/grid-pago-trabajadores/grid-pago-trabajadores.component.ts", "src/app/pages/gestion-cobros/pago-trabajadores/grid-pago-trabajadores/grid-pago-trabajadores.component.html", "src/app/pages/gestion-cobros/pago-trabajadores/form-pago-trabajadores/form-pago-trabajadores.component.ts", "src/app/pages/gestion-cobros/pago-trabajadores/form-pago-trabajadores/form-pago-trabajadores.component.html", "src/app/pages/gestion-cobros/pago-trabajadores/form-view-pago-trabajadores/form-view-pago-trabajadores.component.ts", "src/app/pages/gestion-cobros/pago-trabajadores/form-view-pago-trabajadores/form-view-pago-trabajadores.component.html", "src/app/pages/gestion-cobros/pago-trabajadores/pago-trabajadores.routes.ts"],
  "sourcesContent": ["import { Component, inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogClose, MatDialogRef } from '@angular/material/dialog';\r\nimport { FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { PagoTrabajadoresService } from '../../../../core/services/pago-trabajadores.service';\r\nimport { EstadosDatosService } from '../../../../core/services/estados-datos.service';\r\nimport { SwalService } from '../../../../core/services/swal.service';\r\nimport { CodigoCobroTrabajador } from '../../../../core/enums/codigo-cobro-trabajador';\r\nimport { MatButton } from '@angular/material/button';\r\nimport { MatFormField, MatLabel } from '@angular/material/form-field';\r\nimport { MatIcon } from '@angular/material/icon';\r\nimport { MatInput } from '@angular/material/input';\r\nimport { IConfig, NgxMaskDirective, provideNgxMask } from 'ngx-mask';\r\nimport { DateAdapter, MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { DateAdapterService } from '../../../../core/services/date-adapter.service';\r\nimport { CurrencyPipe, DatePipe } from '@angular/common';\r\n\r\nconst maskConfig: Partial<IConfig> = {\r\n    validation: false,\r\n};\r\n\r\n\r\n@Component({\r\n  selector: 'app-dialog-estado-masivo',\r\n  standalone: true,\r\n    imports: [\r\n        FormsModule,\r\n        MatButton,\r\n        MatFormField,\r\n        MatIcon,\r\n        MatInput,\r\n        MatLabel,\r\n        NgxMaskDirective,\r\n        ReactiveFormsModule,\r\n        MatDialogClose,\r\n    ],\r\n    providers: [\r\n        { provide: DateAdapter, useClass: DateAdapterService },\r\n        { provide: MAT_DATE_LOCALE, useValue: 'en-GB' },\r\n        DatePipe,\r\n        CurrencyPipe,\r\n        provideNgxMask(maskConfig)\r\n    ],\r\n  templateUrl: './dialog-estado-masivo.component.html',\r\n  styleUrl: './dialog-estado-masivo.component.scss'\r\n})\r\nexport class DialogEstadoMasivoComponent  implements OnInit{\r\n    public dialogRef = inject(MatDialogRef<DialogEstadoMasivoComponent>);\r\n    public _matData = inject(MAT_DIALOG_DATA);\r\n    private fb = inject(FormBuilder);\r\n    public form: FormGroup;\r\n    private pagoTrabajadoresService = inject(PagoTrabajadoresService);\r\n    public estadosDatosService = inject(EstadosDatosService);\r\n    private swalService = inject(SwalService);\r\n\r\n    ngOnInit(): void {\r\n        this.createForm();\r\n        const data = this._matData.data;\r\n        console.log(data);\r\n        this.form.patchValue({\r\n            valorRecibido: parseFloat(data.total.replace(/[\\$,]/g, ''))\r\n        });\r\n    }\r\n\r\n    onCambioEstado() {\r\n        if(this.form.valid) {\r\n            const dataInput = this._matData.data;\r\n            const data = this.form.getRawValue();\r\n            const {valorRecibido, ...form} = data;\r\n\r\n            const createData = {\r\n                id: dataInput.id,\r\n                idEstadoCobroPago: CodigoCobroTrabajador.PAGADOS,\r\n                valorRecibido:  parseFloat(valorRecibido),\r\n                ...form\r\n            }\r\n\r\n            this.pagoTrabajadoresService.putPagoTrabajadorIndividual(createData).subscribe((response) => {\r\n                this.estadosDatosService.stateGrid.next(true);\r\n                this.swalService.ToastAler({\r\n                    icon: 'success',\r\n                    title: 'Registro Creado o Actualizado con Exito.',\r\n                    timer: 4000,\r\n                })\r\n                this.closeDialog();\r\n            }, error => {\r\n                this.swalService.ToastAler({\r\n                    icon: 'error',\r\n                    title: 'Ha ocurrido un error al crear el registro!',\r\n                    timer: 4000,\r\n                })\r\n            })\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    closeDialog() {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    private createForm() {\r\n        this.form = this.fb.group({\r\n            comprobante: ['', Validators.required],\r\n            valorRecibido: [''],\r\n            observacion: [''],\r\n        })\r\n\r\n    }\r\n\r\n}\r\n", "<div class=\"relative flex h-full w-full flex-col\">\r\n    <!-- Content -->\r\n    <div\r\n        class=\"flex flex-auto flex-col items-center pb-6 sm:flex-row sm:items-start sm:pb-8\"\r\n    >\r\n        <div class=\"flex h-10 w-10 flex-0 items-center justify-center rounded-full sm:mr-4 bg-blue-100 text-blue-600 dark:bg-blue-600 dark:text-blue-50\"\r\n        >\r\n            <mat-icon\r\n                [svgIcon]=\"'heroicons_solid:question-mark-circle'\"\r\n            >\r\n\r\n            </mat-icon>\r\n        </div>\r\n\r\n        <div class=\"flex flex-col items-center space-y-1 text-center sm:mt-0 sm:items-start sm:pr-8 sm:text-left\">\r\n            <div class=\"text-xl font-medium leading-6\">\r\n                Confirmacion\r\n            </div>\r\n\r\n            <div  class=\"text-secondary\">\r\n                ¿Está seguro de cambiar el estado?.\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <form class=\"mt-8\" [formGroup]=\"form\">\r\n\r\n        <div class=\"mt-4 flex flex-col items-center space-y-1 text-center sm:mt-0 sm:items-start sm:text-left\">\r\n            <mat-form-field  class=\"w-full min-w-90\" floatLabel=\"always\">\r\n                <mat-label>Número de comprobante</mat-label>\r\n                <input matInput placeholder=\"Comprobante\" [formControlName]=\"'comprobante'\">\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"mt-4 flex flex-col items-center space-y-1 text-center sm:mt-0 sm:items-start sm:text-left\">\r\n            <mat-form-field  class=\"w-full min-w-90\" floatLabel=\"always\">\r\n                <mat-label>Valor recibido</mat-label>\r\n                <input matInput placeholder=\"Valor recibido\" [formControlName]=\"'valorRecibido'\" mask=\"separator.2\" thousandSeparator=\",\" decimalMarker=\".\" >\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"mt-4 flex flex-col items-center space-y-1 text-center sm:mt-0 sm:items-start sm:text-left\">\r\n            <mat-form-field class=\"w-full\" floatLabel=\"always\">\r\n                <mat-label>Observaciones</mat-label>\r\n                <textarea matInput placeholder=\"Observaciones\" [formControlName]=\"'observacion'\" ></textarea>\r\n            </mat-form-field>\r\n        </div>\r\n    </form>\r\n\r\n    <div\r\n        class=\"flex items-center justify-center space-x-3 bg-gray-50  py-4 dark:bg-black dark:bg-opacity-10 sm:justify-end\"\r\n    >\r\n        <button mat-stroked-button [matDialogClose]=\"'cancelled'\"\r\n                class=\"sm:w-auto w-full bg-crediorange-100 rounded-lg transition duration-200 text-white font-semibold\">\r\n            Cancelar\r\n        </button>\r\n\r\n        <button\r\n            mat-flat-button\r\n            [color]=\"'primary'\"\r\n            [matDialogClose]=\"'confirmed'\"\r\n            class=\"sm:w-auto w-full bg-crediblue-50  hover:bg-crediblue-100 text-white font-semibold py-2 px-4 rounded-lg transition duration-200\"\r\n            (click)=\"onCambioEstado()\"\r\n        >\r\n            Confirmar\r\n        </button>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n", "import { Component, inject, OnInit } from '@angular/core';\r\nimport {\r\n    AbstractControl,\r\n    FormBuilder,\r\n    FormGroup,\r\n    FormsModule,\r\n    ReactiveFormsModule, ValidationErrors,\r\n    ValidatorFn,\r\n    Validators,\r\n} from '@angular/forms';\r\nimport { MatButton } from '@angular/material/button';\r\nimport { MatError, MatFormField, MatLabel } from '@angular/material/form-field';\r\nimport { MatIcon } from '@angular/material/icon';\r\nimport { MatInput } from '@angular/material/input';\r\nimport { IConfig, NgxMaskDirective, provideNgxMask } from 'ngx-mask';\r\nimport { MAT_DIALOG_DATA, MatDialogClose, MatDialogRef } from '@angular/material/dialog';\r\nimport { DateAdapter, MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { DateAdapterService } from '../../../../core/services/date-adapter.service';\r\nimport { CurrencyPipe, DatePipe, NgClass, NgIf } from '@angular/common';\r\nimport { EstadosDatosService } from '../../../../core/services/estados-datos.service';\r\nimport { SwalService } from '../../../../core/services/swal.service';\r\nimport { PagoTrabajadoresService } from '../../../../core/services/pago-trabajadores.service';\r\n\r\nconst maskConfig: Partial<IConfig> = {\r\n    validation: false,\r\n};\r\n\r\n@Component({\r\n  selector: 'app-dialog-abonos-masivos',\r\n  standalone: true,\r\n    imports: [\r\n        FormsModule,\r\n        MatButton,\r\n        MatFormField,\r\n        MatIcon,\r\n        MatInput,\r\n        MatLabel,\r\n        NgxMaskDirective,\r\n        ReactiveFormsModule,\r\n        MatDialogClose,\r\n        MatError,\r\n        NgIf,\r\n        NgClass,\r\n    ],\r\n    providers: [\r\n        { provide: DateAdapter, useClass: DateAdapterService },\r\n        { provide: MAT_DATE_LOCALE, useValue: 'en-GB' },\r\n        DatePipe,\r\n        CurrencyPipe,\r\n        provideNgxMask(maskConfig)\r\n    ],\r\n  templateUrl: './dialog-abonos-masivos.component.html',\r\n  styleUrl: './dialog-abonos-masivos.component.scss'\r\n})\r\nexport class DialogAbonosMasivosComponent  implements OnInit{\r\n    public dialogRef = inject(MatDialogRef<DialogAbonosMasivosComponent>);\r\n    public _matData = inject(MAT_DIALOG_DATA);\r\n    private fb = inject(FormBuilder);\r\n    public form: FormGroup;\r\n    public estadosDatosService = inject(EstadosDatosService);\r\n    private pagoTrabajadoresService = inject(PagoTrabajadoresService);\r\n    private swalService = inject(SwalService);\r\n\r\n    ngOnInit(): void {\r\n        this.createForm();\r\n        const data = this._matData.data;\r\n        const totalNumber  = typeof data.total  === 'string' ? parseFloat(data.total.replace(/[\\$,]/g, '')) : typeof data.total  === 'number' ? data.total : 0;\r\n        const totalAbonoNumber = typeof data.totalAbono  === 'string' ?  parseFloat(data.totalAbono.replace(/[\\$,]/g, '')) : typeof data.totalAbono  === 'number' ? data.totalAbono : 0;\r\n        this.form.get('valor').setValidators([maxAmountValidator(totalNumber, totalAbonoNumber) , Validators.required]);\r\n        this.form.updateValueAndValidity();\r\n    }\r\n\r\n    closeDialog() {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    private createForm() {\r\n        this.form = this.fb.group({\r\n            comprobante: ['', Validators.required],\r\n            valor: ['', Validators.required],\r\n            idPagoTrabajador: [''],\r\n        });\r\n    }\r\n\r\n    onAbono() {\r\n        if(this.form.valid) {\r\n            const dataInput = this._matData.data;\r\n            const data = this.form.getRawValue();\r\n\r\n            const {valor, comprobante} = data;\r\n\r\n            const createData = {\r\n                idPagoTrabajador: dataInput.id,\r\n                valor:  parseFloat(valor),\r\n                comprobante\r\n            }\r\n\r\n            this.pagoTrabajadoresService.pagoTrabajadoresAbono(createData).subscribe((response) => {\r\n                this.estadosDatosService.stateGrid.next(true);\r\n                this.swalService.ToastAler({\r\n                    icon: 'success',\r\n                    title: 'Registro Creado o Actualizado con Exito.',\r\n                    timer: 4000,\r\n                })\r\n                this.closeDialog();\r\n            }, error => {\r\n                this.swalService.ToastAler({\r\n                    icon: 'error',\r\n                    title: 'Ha ocurrido un error al crear el registro!',\r\n                    timer: 4000,\r\n                })\r\n            })\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport function maxAmountValidator(total: number, totalAbono: number): ValidatorFn {\r\n    return (control: AbstractControl): ValidationErrors | null => {\r\n        const value = control.value;\r\n        const maxValue = total - totalAbono;\r\n\r\n        return value >= maxValue ? { maxAmount: { maxValue, actual: value } } : null;\r\n    };\r\n}\r\n", "<div class=\"relative flex h-full w-full flex-col\">\r\n    <!-- Content -->\r\n    <div\r\n        class=\"flex flex-auto flex-col items-center pb-6 sm:flex-row sm:items-start sm:pb-8\"\r\n    >\r\n        <div class=\"flex h-10 w-10 flex-0 items-center justify-center rounded-full sm:mr-4 bg-blue-100 text-blue-600 dark:bg-blue-600 dark:text-blue-50\"\r\n        >\r\n            <mat-icon\r\n                [svgIcon]=\"'heroicons_solid:question-mark-circle'\"\r\n            >\r\n\r\n            </mat-icon>\r\n        </div>\r\n\r\n        <div class=\"flex flex-col items-center space-y-1 text-center sm:mt-0 sm:items-start sm:pr-8 sm:text-left\">\r\n            <div class=\"text-xl font-medium leading-6\">\r\n                Confirmacion\r\n            </div>\r\n\r\n            <div  class=\"text-secondary\">\r\n                ¿Está seguro de realizar abono?.\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <form class=\"mt-8\" [formGroup]=\"form\">\r\n\r\n        <div class=\"mt-4 flex flex-col items-center space-y-1 text-center sm:mt-0 sm:items-start sm:text-left\">\r\n            <mat-form-field  class=\"w-full min-w-90\" floatLabel=\"always\">\r\n                <mat-label>Número de comprobante</mat-label>\r\n                <input matInput placeholder=\"Comprobante\" [formControlName]=\"'comprobante'\">\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"mt-4 flex flex-col items-center space-y-1 text-center sm:mt-0 sm:items-start sm:text-left\">\r\n            <mat-form-field  class=\"w-full min-w-90\" floatLabel=\"always\">\r\n                <mat-label>Valor abono</mat-label>\r\n                <input matInput placeholder=\"Valor recibido\" [formControlName]=\"'valor'\" mask=\"separator.2\" thousandSeparator=\",\" decimalMarker=\".\" >\r\n                <mat-error *ngIf=\"form.get('valor').dirty || form.get('valor').touched\">\r\n                    <span *ngIf=\"form.get('valor').errors?.maxAmount\">Error el abono no puede ser mayor igual al total, favor realice el pago por cambio de estado.</span>\r\n                </mat-error>\r\n            </mat-form-field>\r\n        </div>\r\n    </form>\r\n\r\n    <div\r\n        class=\"flex items-center justify-center space-x-3 bg-gray-50  py-4 dark:bg-black dark:bg-opacity-10 sm:justify-end\"\r\n    >\r\n        <button mat-stroked-button [matDialogClose]=\"'cancelled'\"\r\n                class=\"sm:w-auto w-full bg-crediorange-100 rounded-lg transition duration-200 text-white font-semibold\">\r\n            Cancelar\r\n        </button>\r\n\r\n        <button\r\n            mat-flat-button\r\n            [color]=\"'primary'\"\r\n            [matDialogClose]=\"'confirmed'\"\r\n            class=\"sm:w-auto w-full  hover:bg-crediblue-100 text-white font-semibold py-2 px-4 rounded-lg transition duration-200\"\r\n            [ngClass]=\"{'bg-crediblue-50': form.valid, 'bg-credigray-100': form.invalid}\"\r\n            (click)=\"onAbono()\"\r\n            [disabled]=\"form.invalid\"\r\n        >\r\n            Guardar\r\n        </button>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n", "import { Component, inject, OnDestroy, OnInit } from '@angular/core';\r\nimport { CustomTableComponent } from '../../../shared/custom-table/custom-table.component';\r\nimport { MatButton } from '@angular/material/button';\r\nimport { MatFormField } from '@angular/material/form-field';\r\nimport { MatIcon } from '@angular/material/icon';\r\nimport { MatInput } from '@angular/material/input';\r\nimport { CurrencyPipe, DatePipe, NgIf } from '@angular/common';\r\nimport { Subscription, tap } from 'rxjs';\r\nimport { PagoAliadosService } from '../../../../core/services/pago-aliados.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { EstadosDatosService } from '../../../../core/services/estados-datos.service';\r\nimport { Router } from '@angular/router';\r\nimport { IButton } from '../../../shared/interfaces/buttonsInterfaces';\r\nimport { PagoTrabajadoresService } from '../../../../core/services/pago-trabajadores.service';\r\nimport { FuseAlertComponent } from '../../../../../@fuse/components/alert';\r\nimport { MatTab, MatTabChangeEvent, MatTabContent, MatTabGroup } from '@angular/material/tabs';\r\nimport { CodigoCobroTrabajador } from '../../../../core/enums/codigo-cobro-trabajador';\r\nimport { DialogEstadoMasivoComponent } from '../dialog-estado-masivo/dialog-estado-masivo.component';\r\nimport { DialogAbonosMasivosComponent } from '../dialog-abonos-masivos/dialog-abonos-masivos.component';\r\n\r\n@Component({\r\n  selector: 'app-grid-pago-trabajadores',\r\n  standalone: true,\r\n    imports: [\r\n        CustomTableComponent,\r\n        MatButton,\r\n        MatFormField,\r\n        MatIcon,\r\n        MatInput,\r\n        FuseAlertComponent,\r\n        MatTab,\r\n        MatTabContent,\r\n        MatTabGroup,\r\n        NgIf,\r\n    ],\r\n    providers: [\r\n        DatePipe,\r\n        CurrencyPipe\r\n    ],\r\n  templateUrl: './grid-pago-trabajadores.component.html',\r\n  styleUrl: './grid-pago-trabajadores.component.scss'\r\n})\r\nexport class GridPagoTrabajadoresComponent implements OnInit, OnDestroy{\r\n    private datePipe = inject(DatePipe);\r\n    public subcription$: Subscription;\r\n    public selectedData: any;\r\n    public searchTerm: string = '';\r\n    private currencyPipe = inject(CurrencyPipe);\r\n\r\n    private pagoTrabajadorService = inject(PagoTrabajadoresService);\r\n    private _matDialog = inject(MatDialog);\r\n    private estadoDatosService = inject(EstadosDatosService)\r\n    private router = inject(Router);\r\n    private selectedTab: any = CodigoCobroTrabajador.PENDIENTES;\r\n    public tabIndex ;\r\n\r\n    data = [];\r\n\r\n    columns = ['Fecha de liquidación', 'Empresa', 'Valor', 'Estado' ];\r\n    columnPropertyMap = {\r\n        'Fecha de liquidación': 'fechaCreacion',\r\n        'Empresa': 'nombreSubempresa',\r\n        'Valor': 'total',\r\n        'Estado': 'nombreEstadoCobro',\r\n    };\r\n\r\n    buttons: IButton[] = [\r\n        {\r\n            label: 'Ver',\r\n            icon: 'visibility',\r\n            action: (element) => {\r\n                console.log('Editing', element);\r\n                this.router.navigate(['/pages/gestion-cobros/trabajadores/pago/', element.id])\r\n            }\r\n        },\r\n        {\r\n            label: 'Cambiar estado',\r\n            icon: 'published_with_changes',\r\n            action: (element) => {\r\n                console.log('View', element);\r\n                this.selectedData = element;\r\n                this.onCambioEstado();\r\n            }\r\n        },\r\n        {\r\n            label: 'Abonos',\r\n            icon: 'request_quote',\r\n            action: (element) => {\r\n                console.log('View', element);\r\n                this.selectedData = element;\r\n                this.onAbono();\r\n            }\r\n        },\r\n        {\r\n            label: 'Comprobante',\r\n            icon: 'document_scanner',\r\n            action: (element) => {\r\n                console.log('Editing', element);\r\n                this.router.navigate(['/pages/gestion-cobros/trabajador/individual/', element.id])\r\n            }\r\n        },\r\n    ];\r\n\r\n    buttonsPagado: IButton[] = [\r\n        {\r\n            label: 'Ver',\r\n            icon: 'visibility',\r\n            action: (element) => {\r\n                console.log('Editing', element);\r\n                this.router.navigate(['/pages/gestion-cobros/trabajadores/pago/', element.id])\r\n            }\r\n        },\r\n        {\r\n            label: 'Comprobante',\r\n            icon: 'document_scanner',\r\n            action: (element) => {\r\n                console.log('Editing', element);\r\n                this.router.navigate(['/pages/gestion-cobros/trabajador/individual/', element.id])\r\n            }\r\n        },\r\n    ];\r\n\r\n    onCambioEstado(): void {\r\n        this._matDialog.open(DialogEstadoMasivoComponent, {\r\n            autoFocus: false,\r\n            data: {\r\n                edit: true,\r\n                data: this.selectedData\r\n            },\r\n            width: '35%',\r\n            disableClose: true,\r\n            panelClass: 'custom-dialog-container'\r\n        })\r\n    }\r\n\r\n    onAbono(): void {\r\n        this._matDialog.open(DialogAbonosMasivosComponent, {\r\n            autoFocus: false,\r\n            data: {\r\n                edit: true,\r\n                data: this.selectedData\r\n            },\r\n            width: '35%',\r\n            disableClose: true,\r\n            panelClass: 'custom-dialog-container'\r\n        })\r\n    }\r\n\r\n    tabChanged = (tabChangeEvent: MatTabChangeEvent): void => {\r\n        this.tabIndex = tabChangeEvent.index;\r\n        this.selectedTab = tabChangeEvent.index == 0 ? CodigoCobroTrabajador.PENDIENTES : CodigoCobroTrabajador.PAGADOS;\r\n        this.getPagoTrabajadores(this.selectedTab);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.getPagoTrabajadores(this.selectedTab);\r\n        this.listenGrid();\r\n    }\r\n\r\n    onNew() {\r\n        this.router.navigate(['/pages/gestion-cobros/trabajadores/pago'])\r\n    }\r\n\r\n    public getPagoTrabajadores(params) {\r\n        this.pagoTrabajadorService.getPagosTrabajadores(params).pipe(\r\n            tap((response) => {\r\n                response.data.forEach((items) => {\r\n                    items.fechaCreacion = this.datePipe.transform(items.fechaCreacion, 'dd/MM/yyyy');\r\n                    items.total = params == CodigoCobroTrabajador.PENDIENTES ?  items.total - items.totalAbono : items.total;\r\n                    items.total = this.currencyPipe.transform(items.total, 'USD', 'symbol', '1.2-2');\r\n                    //items.nombreTrabajador = this.datePipe.transform(items.nombreTrabajador, 'titlecase');\r\n                })\r\n                return response;\r\n            })\r\n\r\n        ).subscribe((response) => {\r\n\r\n            this.data = response.data;\r\n\r\n        })\r\n    }\r\n\r\n    onSearch(event: Event) {\r\n        const target = event.target as HTMLInputElement;\r\n        this.searchTerm = target.value.trim().toLowerCase();\r\n    }\r\n\r\n\r\n\r\n\r\n    private listenGrid() {\r\n        const refreshData$ = this.estadoDatosService.stateGrid.asObservable();\r\n\r\n        refreshData$.subscribe((state) => {\r\n            if (state) {\r\n                this.getPagoTrabajadores(this.selectedTab);\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n}\r\n", "<div\r\n    class=\"bg-card flex min-w-0 flex-auto flex-col dark:bg-transparent sm:absolute sm:inset-0 sm:overflow-hidden\"\r\n>\r\n    <div\r\n        class=\"relative flex flex-0 flex-col border-b px-6 py-8 sm:flex-row sm:items-center sm:justify-between md:px-8\"\r\n    >\r\n        <!-- Title -->\r\n        <div class=\"text-3xl font-semibold tracking-tight\">Registro de Cobro Masivo</div>\r\n\r\n        <!-- Actions -->\r\n        <div class=\"mt-6 flex w-full shrink-0 flex-col items-center sm:ml-4 sm:mt-0 sm:flex-row sm:space-x-2 sm:w-auto\">\r\n            <!-- Search -->\r\n            <mat-form-field\r\n                class=\"fuse-mat-dense rounded-lg w-full sm:w-auto min-w-64\"\r\n                [subscriptSizing]=\"'dynamic'\"\r\n            >\r\n                <mat-icon\r\n                    class=\"icon-size-5\"\r\n                    matPrefix\r\n                    [svgIcon]=\"'heroicons_solid:magnifying-glass'\"\r\n                ></mat-icon>\r\n                <input\r\n                    matInput\r\n                    [autocomplete]=\"'off'\"\r\n                    [placeholder]=\"'Buscar'\"\r\n                    (input)=\"onSearch($event)\"\r\n                />\r\n            </mat-form-field>\r\n            <!-- Add product button -->\r\n            <button\r\n                class=\"mt-2 w-full bg-crediblue-50 rounded-lg transition duration-200 text-white font-semibold sm:ml-4 sm:mt-0 sm:w-auto\"\r\n                mat-flat-button\r\n                [color]=\"'primary'\"\r\n                (click)=\"onNew()\"\r\n            >\r\n                <mat-icon [svgIcon]=\"'heroicons_outline:plus'\"></mat-icon>\r\n                <span class=\"ml-2 mr-1\">Registrar</span>\r\n            </button>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <!--Main-->\r\n    <div class=\"flex flex-auto overflow-hidden\">\r\n        <!-- Products list -->\r\n        <div\r\n            class=\"flex flex-auto flex-col overflow-hidden sm:mb-18 sm:overflow-y-auto\"\r\n        >\r\n            <mat-tab-group\r\n                class=\"sm:px-2\"\r\n                mat-stretch-tabs=\"false\"\r\n                [animationDuration]=\"'500'\"\r\n                [(selectedIndex)]=\"tabIndex\"\r\n                #tabGroup (selectedTabChange)=\"tabChanged($event)\"\r\n            >\r\n                <mat-tab label=\"Pendientes\">\r\n                    <ng-template matTabContent>\r\n                        <ng-container *ngIf=\"data.length; else noData\">\r\n                            <app-custom-table\r\n                                [columns]=\"columns\"\r\n                                [displayedColumns]=\"columns\"\r\n                                [columnPropertyMap]=\"columnPropertyMap\"\r\n                                [data]=\"data\"\r\n                                [buttons]=\"buttons\"\r\n                                [searchTerm]=\"searchTerm\"\r\n                            ></app-custom-table>\r\n                        </ng-container>\r\n                        <ng-template #noData>\r\n                            <div class=\"inset-0 min-w-0 overflow-auto print:overflow-visible\">\r\n\r\n                                <div class=\"inline-block p-4 sm:p-2 print:p-0 w-full\">\r\n                                    <fuse-alert\r\n                                        [type]=\"'info'\"\r\n                                        [appearance]=\"'outline'\">\r\n                                        <span fuseAlertTitle>Información</span>\r\n                                        No hay pagos pendientes hasta el momento.\r\n                                    </fuse-alert>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </ng-template>\r\n                    </ng-template>\r\n                </mat-tab>\r\n                <mat-tab label=\"Pagados\">\r\n                    <ng-template matTabContent>\r\n                        <ng-container *ngIf=\"data.length; else noData\">\r\n                            <app-custom-table\r\n                                [columns]=\"columns\"\r\n                                [displayedColumns]=\"columns\"\r\n                                [columnPropertyMap]=\"columnPropertyMap\"\r\n                                [data]=\"data\"\r\n                                [buttons]=\"buttonsPagado\"\r\n                                [searchTerm]=\"searchTerm\"\r\n                            ></app-custom-table>\r\n                        </ng-container>\r\n                        <ng-template #noData>\r\n                            <div class=\"inset-0 min-w-0 overflow-auto print:overflow-visible\">\r\n\r\n                                <div class=\"inline-block p-4 sm:p-2 print:p-0 w-full\">\r\n                                    <fuse-alert\r\n                                        [type]=\"'info'\"\r\n                                        [appearance]=\"'outline'\">\r\n                                        <span fuseAlertTitle>Información</span>\r\n                                        No hay pagos hasta el momento.\r\n                                    </fuse-alert>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </ng-template>\r\n                    </ng-template>\r\n                </mat-tab>\r\n            </mat-tab-group>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n", "import { Component, inject, OnInit } from '@angular/core';\r\nimport { AsyncPipe, CurrencyPipe, DatePipe, DecimalPipe, NgClass, NgForOf, NgIf } from '@angular/common';\r\nimport { CustomTableComponent } from '../../../shared/custom-table/custom-table.component';\r\nimport { FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { FuseAlertComponent } from '../../../../../@fuse/components/alert';\r\nimport { MatButton } from '@angular/material/button';\r\nimport { MatDatepicker, MatDatepickerInput, MatDatepickerToggle } from '@angular/material/datepicker';\r\nimport { MatFormField, MatLabel, MatSuffix } from '@angular/material/form-field';\r\nimport { MatInput } from '@angular/material/input';\r\nimport { DateAdapter, MAT_DATE_LOCALE, MatOption } from '@angular/material/core';\r\nimport { MatSelect } from '@angular/material/select';\r\nimport { EstadosDatosService } from '../../../../core/services/estados-datos.service';\r\nimport { FuseConfirmationService } from '../../../../../@fuse/services/confirmation';\r\nimport { Router } from '@angular/router';\r\nimport { EmpresasClientesService } from '../../../../core/services/empresas-clientes.service';\r\nimport { DetalleConsumoService } from '../../../../core/services/detalle-consumo.service';\r\nimport { PagoAliadosService } from '../../../../core/services/pago-aliados.service';\r\nimport { SwalService } from '../../../../core/services/swal.service';\r\nimport { map } from 'rxjs';\r\nimport { confirmarPago } from '../../../../core/constant/dialogs';\r\nimport { PagoTrabajadoresService } from '../../../../core/services/pago-trabajadores.service';\r\nimport { CobroTrabajadoresService } from '../../../../core/services/cobro-trabajadores.service';\r\nimport { DateAdapterService } from '../../../../core/services/date-adapter.service';\r\nimport { IConfig, provideNgxMask } from 'ngx-mask';\r\nimport { AesEncryptionService } from '../../../../core/services/aes-encryption.service';\r\nimport { IButton } from '../../../shared/interfaces/buttonsInterfaces';\r\nconst maskConfig: Partial<IConfig> = {\r\n    validation: false,\r\n};\r\n\r\n@Component({\r\n  selector: 'app-form-pago-trabajadores',\r\n  standalone: true,\r\n    imports: [\r\n        AsyncPipe,\r\n        CurrencyPipe,\r\n        CustomTableComponent,\r\n        FormsModule,\r\n        FuseAlertComponent,\r\n        MatButton,\r\n        MatDatepicker,\r\n        MatDatepickerInput,\r\n        MatDatepickerToggle,\r\n        MatFormField,\r\n        MatInput,\r\n        MatLabel,\r\n        MatOption,\r\n        MatSelect,\r\n        MatSuffix,\r\n        NgForOf,\r\n        NgIf,\r\n        ReactiveFormsModule,\r\n        NgClass,\r\n    ],\r\n  templateUrl: './form-pago-trabajadores.component.html',\r\n  styleUrl: './form-pago-trabajadores.component.scss',\r\n    providers: [\r\n        { provide: DateAdapter, useClass: DateAdapterService },\r\n        { provide: MAT_DATE_LOCALE, useValue: 'en-GB' },\r\n        DatePipe,\r\n        CurrencyPipe,\r\n        DecimalPipe,\r\n        provideNgxMask(maskConfig)\r\n    ],\r\n})\r\nexport class FormPagoTrabajadoresComponent implements OnInit{\r\n    private fb = inject(FormBuilder);\r\n    public form: FormGroup;\r\n    private empresaClienteService = inject(EmpresasClientesService)\r\n    private pagoTrabajadorService = inject(PagoTrabajadoresService);\r\n    private cobroTrabajadorService = inject(CobroTrabajadoresService);\r\n    private datePipe = inject(DatePipe);\r\n    private swalService = inject(SwalService);\r\n    public estadosDatosService = inject(EstadosDatosService);\r\n    public fuseService = inject(FuseConfirmationService);\r\n    private currencyPipe = inject(CurrencyPipe);\r\n    private decimalPipe =  inject(DecimalPipe)\r\n    private router = inject(Router);\r\n    public message: string;\r\n    idTipoPagoTrabajador: any;\r\n    empresa$ = this.empresaClienteService.getEmpresasClientes();\r\n    tipoPago$ = this.pagoTrabajadorService.tipoPagoTrabajadores().subscribe((response) => {\r\n        this.idTipoPagoTrabajador = response.data[0].id;\r\n    })\r\n    data = [];\r\n    totalPagar: number;\r\n    totalComision: number;\r\n    subtotal: number;\r\n    fechaActual: Date = new Date();\r\n    private aesEncriptService = inject(AesEncryptionService);\r\n\r\n    columns = ['Fecha de desembolso', 'Identificación', 'Nombres Apellidos', 'Valor pendiente'  ];\r\n    columnPropertyMap = {\r\n        'Fecha de desembolso': 'fechaCreacion',\r\n        'Identificación': 'documentoTrabajador',\r\n        'Nombres Apellidos': 'nombreCompleto',\r\n        'Valor pendiente': 'valorPendiente',\r\n    };\r\n\r\n    buttons: IButton[] = [\r\n        {\r\n            label: 'Eliminar',\r\n            icon: 'delete',\r\n            action: this.deleteItem.bind(this),\r\n            iconColor: 'text-crediorange-100'\r\n        },\r\n    ];\r\n\r\n    private createForm() {\r\n        this.form = this.fb.group({\r\n            fechaFinal: ['', Validators.required],\r\n            idSubEmpresa: ['', Validators.required],\r\n            idTipoPagoTrabajador: [''],\r\n        })\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.createForm();\r\n    }\r\n\r\n    closeDialog() {\r\n        this.router.navigate(['/pages/gestion-cobros/trabajadores']);\r\n    }\r\n\r\n    onGet() {\r\n        if (this.form.valid) {\r\n            const {fechaFinal, idSubEmpresa } = this.form.getRawValue();\r\n            console.log(fechaFinal)\r\n\r\n            const fechaFinallData = this.datePipe.transform(fechaFinal, 'yyyy-MM-dd')\r\n\r\n            const consulta = {\r\n                fechaFinallData,\r\n                idSubEmpresa\r\n            }\r\n\r\n            this.getAllPagoTrabajador(consulta);\r\n\r\n        }\r\n    }\r\n\r\n    onSave() {\r\n        const {fechaFinal, idSubEmpresa, idTipoPagoTrabajador } = this.form.getRawValue();\r\n\r\n        const fechaFinallData = this.datePipe.transform(fechaFinal, 'yyyy-MM-dd');\r\n\r\n        const consulta = {\r\n            fechaFinal: fechaFinallData,\r\n            idSubEmpresa\r\n        }\r\n\r\n        let detallePagoTrabajador = []\r\n        detallePagoTrabajador = this.data.map((item) => {\r\n            return {\r\n                idCobroTrabajador: item.id\r\n            }\r\n        })\r\n\r\n        const createData = {\r\n            ...consulta,\r\n            detallePagoTrabajador\r\n        }\r\n\r\n        console.log(createData)\r\n        const dialog = this.fuseService.open({\r\n            ...confirmarPago\r\n        });\r\n\r\n        dialog.afterClosed().subscribe((response) => {\r\n            if (response === 'confirmed') {\r\n                this.postSave(createData)\r\n            }\r\n        })\r\n    }\r\n\r\n    private getAllPagoTrabajador(data) {\r\n        this.cobroTrabajadorService.getCobroTrabajadores(data).pipe(\r\n            map((response) => {\r\n                this.subtotal = 0;\r\n                this.totalComision = 0;\r\n                this.totalPagar = 0;\r\n                if (response && Array.isArray(response.data)) {\r\n                    response.data.forEach((items) => {\r\n                        if (items.montoCuota) {\r\n                            items.montoCuota = this.aesEncriptService.decrypt(items.montoCuota);\r\n                        }\r\n                        if (items.valorPendiente) {\r\n                            items.valorPendiente = this.aesEncriptService.decrypt(items.valorPendiente);\r\n                        }\r\n\r\n                        //items.comision = ((items.montoConsumo * items.porcentajeSubEmpresa) / 100);\r\n                        //items.pagar = (items.montoConsumo - items.comision);\r\n                        items.montoCuota = this.currencyPipe.transform(items.montoCuota, 'USD', 'symbol', '1.2-2');\r\n                        //items.comision = this.currencyPipe.transform(items.comision, 'USD', 'symbol', '1.2-2');\r\n                        items.pagar = this.currencyPipe.transform(items.pagar, 'USD', 'symbol', '1.2-2');\r\n                        items.valorPendiente = this.currencyPipe.transform(items.valorPendiente, 'USD', 'symbol', '1.2-2');\r\n                        //items.porcentajeSubEmpresa = this.decimalPipe.transform(items.porcentajeSubEmpresa, '1.2-2') + '%';\r\n                        items.fechaCobro = this.datePipe.transform(items.fechaCobro, 'dd/MM/yyyy');\r\n                        items.fechaCreacion = this.datePipe.transform(items.fechaCreacion, 'dd/MM/yyyy');\r\n\r\n                        //this.subtotal += parseFloat(items.montoCuota.replace(/[^0-9.-]+/g, ''));\r\n                        //this.totalComision += parseFloat(items.comision.replace(/[^0-9.-]+/g, ''));\r\n                        this.totalPagar += parseFloat(items.montoCuota.replace(/[^0-9.-]+/g, ''));\r\n                    });\r\n                }else {\r\n                    this.data = [];\r\n                }\r\n                return response\r\n            })\r\n\r\n        ).subscribe((response) => {\r\n            if (response && Array.isArray(response.data)) {\r\n                this.data = response.data;\r\n            }else {\r\n                this.data = [];\r\n                this.message = response.msg;\r\n            }\r\n        })\r\n    }\r\n\r\n    private postSave(data) {\r\n        this.pagoTrabajadorService.postPagosTrabajadores(data).subscribe((response) => {\r\n            this.swalService.ToastAler({\r\n                icon: 'success',\r\n                title: 'Registro Creado o Actualizado con Exito.',\r\n                timer: 4000,\r\n            })\r\n            this.estadosDatosService.stateGrid.next(true);\r\n            this.closeDialog();\r\n        }, error => {\r\n            this.swalService.ToastAler({\r\n                icon: 'error',\r\n                title: 'Ha ocurrido un error al crear el registro!',\r\n                timer: 4000,\r\n            })\r\n        })\r\n    }\r\n\r\n    deleteItem(item: any): void {\r\n        const index = this.data.findIndex((d) => d === item);\r\n        if (index > -1) {\r\n            // Extraer el valor numérico de `montoCuota` antes de eliminar el item\r\n            const montoCuota = parseFloat(item.montoCuota.replace(/[^0-9.-]+/g, ''));\r\n\r\n            // Restar el valor eliminado del totalPagar\r\n            this.totalPagar -= isNaN(montoCuota) ? 0 : montoCuota;\r\n\r\n            // Eliminar el item de la lista\r\n            this.data.splice(index, 1);\r\n            this.data = [...this.data]; // Para disparar detección de cambios en Angular\r\n        }\r\n    }\r\n\r\n\r\n}\r\n", "<div class=\"bg-card flex min-w-0 flex-auto flex-col dark:bg-transparent sm:absolute sm:inset-0 sm:overflow-hidden\" >\r\n\r\n    <div\r\n        class=\"mt-8 text-3xl font-semibold leading-tight tracking-tight pl-8\"\r\n    >\r\n        Cobro Masivo\r\n    </div>\r\n\r\n    <div class=\"relative flex flex-0 flex-col border-b px-6 sm:flex-row md:px-8\">\r\n\r\n        <div class=\"mt-6 w-full shrink-0 sm:mt-0 sm:space-x-2 lg:w-full\">\r\n\r\n            <form class=\"mt-8\" [formGroup]=\"form\">\r\n                <div class=\"flex flex-col sm:flex-row gap-2.5\">\r\n                    <mat-form-field  class=\"w-full min-w-90\" floatLabel=\"always\">\r\n                        <mat-label>Fecha de corte</mat-label>\r\n                        <input matInput [matDatepicker]=\"finalPicker\"  [formControlName]=\"'fechaFinal'\" placeholder=\"dd/mm/yyyy\">\r\n                        <mat-datepicker-toggle matIconSuffix [for]=\"finalPicker\"></mat-datepicker-toggle>\r\n                        <mat-datepicker #finalPicker></mat-datepicker>\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field  class=\"w-full min-w-90\" floatLabel=\"always\">\r\n                        <mat-label>Empresa</mat-label>\r\n                        <mat-select placeholder=\"Empresa\" [formControlName]=\"'idSubEmpresa'\" >\r\n                            <ng-container *ngIf=\"empresa$ | async as empresas\">\r\n                                <mat-option [value]=\"item.id\" *ngFor=\"let item of empresas.data\">{{item.razonSocial}}</mat-option>\r\n                            </ng-container>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n\r\n                </div>\r\n\r\n                <div class=\"relative border border-gray-300 rounded-lg\">\r\n                    <div class=\"absolute -top-3 left-4 bg-white px-2 text-gray-500 font-semibold\">\r\n                        Opciones\r\n                    </div>\r\n                    <div class=\"flex flex-wrap justify-end gap-2.5 sm:mb-4 pr-2 \">\r\n                        <button\r\n                            class=\"sm:w-auto w-full sm:mt-6 bg-credigray-100 rounded-lg transition duration-200 text-white font-semibold\"\r\n                            mat-flat-button\r\n                            [color]=\"'primary'\"\r\n                            (click)=\"closeDialog()\"\r\n                        >\r\n\r\n                            <span> Atras </span>\r\n                        </button>\r\n\r\n                        <button\r\n                            class=\"sm:w-auto w-full sm:mt-6 bg-crediblue-50 rounded-lg transition duration-200 text-white font-semibold\"\r\n                            mat-flat-button\r\n                            [color]=\"'primary'\"\r\n                            (click)=\"onGet()\"\r\n                        >\r\n\r\n                            <span> Consultar </span>\r\n                        </button>\r\n\r\n                        <button\r\n                            class=\"lg:w-auto w-full sm:mt-6 transition duration-200 text-white font-semibold rounded-lg md:w-auto\"\r\n                            [ngClass]=\"{'bg-credigray-100' : data.length == 0,  'bg-green-600' : data.length > 0 }\"\r\n                            mat-flat-button\r\n                            (click)=\"onSave()\"\r\n                            [disabled]=\"data.length == 0\"\r\n                        >\r\n                            <span> Regitrar </span>\r\n                        </button>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    @if (data.length) {\r\n        <div class=\"flex flex-auto overflow-hidden \">\r\n            <!-- Products list -->\r\n            <div\r\n                class=\"flex flex-auto flex-col overflow-hidden sm:p-4 sm:mb-10 sm:overflow-y-auto\"\r\n            >\r\n                <app-custom-table\r\n                    [columns]=\"columns\"\r\n                    [displayedColumns]=\"columns\"\r\n                    [columnPropertyMap]=\"columnPropertyMap\"\r\n                    [data]=\"data\"\r\n                    [buttons]=\"buttons\"\r\n                ></app-custom-table>\r\n            </div>\r\n\r\n        </div>\r\n    } @else if (message) {\r\n        <div class=\"inset-0 min-w-0 overflow-auto print:overflow-visible\">\r\n\r\n            <div class=\"inline-block p-4 sm:p-8 print:p-0 w-full\">\r\n                <fuse-alert\r\n                    [type]=\"'info'\"\r\n                    [appearance]=\"'outline'\">\r\n                    <span fuseAlertTitle>Información</span>\r\n                    {{message}}\r\n                </fuse-alert>\r\n            </div>\r\n\r\n        </div>\r\n    }\r\n\r\n    <div class=\"flex flex-col gap-4 justify-end sm:flex-row\">\r\n        @if(subtotal) {\r\n            <span class=\"sm:pr-4 text-gray-600 font-bold text-right \" >Subtotal:\r\n               <span class=\"text-gray-800\">{{subtotal | currency}}</span>\r\n            </span>\r\n        }\r\n\r\n        @if(totalComision) {\r\n            <span class=\"sm:pr-4 text-gray-600 font-bold text-right \" >Comisiones:\r\n                <span class=\"text-gray-800\">{{totalComision | currency}}</span>\r\n            </span>\r\n        }\r\n\r\n        @if(totalPagar) {\r\n            <span class=\"sm:pr-4 text-gray-600 font-bold text-right \" >Total a pagar:\r\n                <span class=\"text-gray-800\">\r\n                    {{totalPagar | currency}}\r\n                </span>\r\n            </span>\r\n        }\r\n    </div>\r\n\r\n\r\n\r\n\r\n</div>\r\n", "import { Component, inject, OnDestroy, OnInit } from '@angular/core';\r\nimport { CustomTableComponent } from '../../../shared/custom-table/custom-table.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButton } from '@angular/material/button';\r\nimport { MatFormField, MatLabel } from '@angular/material/form-field';\r\nimport { MatInput } from '@angular/material/input';\r\nimport { DateAdapter, MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { DateAdapterService } from '../../../../core/services/date-adapter.service';\r\nimport { CurrencyPipe, DatePipe, DecimalPipe } from '@angular/common';\r\nimport { IConfig, provideNgxMask } from 'ngx-mask';\r\nimport { FuseConfirmationService } from '../../../../../@fuse/services/confirmation';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription, tap } from 'rxjs';\r\nimport { PagoTrabajadoresService } from '../../../../core/services/pago-trabajadores.service';\r\nimport * as XLSX from 'xlsx';\r\nimport { parseCurrency } from '../../../../core/utils/number-utils';\r\nconst maskConfig: Partial<IConfig> = {\r\n    validation: false,\r\n};\r\n\r\n@Component({\r\n  selector: 'app-form-view-pago-trabajadores',\r\n  standalone: true,\r\n    imports: [\r\n        CustomTableComponent,\r\n        FormsModule,\r\n        MatButton,\r\n        MatFormField,\r\n        MatInput,\r\n        MatLabel,\r\n        ReactiveFormsModule,\r\n    ],\r\n  templateUrl: './form-view-pago-trabajadores.component.html',\r\n  styleUrl: './form-view-pago-trabajadores.component.scss',\r\n    providers: [\r\n        { provide: DateAdapter, useClass: DateAdapterService },\r\n        { provide: MAT_DATE_LOCALE, useValue: 'en-GB' },\r\n        DatePipe,\r\n        CurrencyPipe,\r\n        DecimalPipe,\r\n        provideNgxMask(maskConfig)\r\n    ],\r\n})\r\nexport class FormViewPagoTrabajadoresComponent implements OnInit, OnDestroy {\r\n    public fuseService = inject(FuseConfirmationService);\r\n    private currencyPipe = inject(CurrencyPipe);\r\n    private decimalPipe =  inject(DecimalPipe)\r\n    private router = inject(Router);\r\n    private activatedRoute = inject(ActivatedRoute);\r\n    private datePipe = inject(DatePipe);\r\n    private pagoTrabajadorService = inject(PagoTrabajadoresService);\r\n    private subscription$: Subscription;\r\n    exportData: any;\r\n\r\n    data = [];\r\n    totalPagar: number;\r\n    totalComision: number;\r\n    subtotal: number;\r\n    id: string;\r\n    form: any = {\r\n        fechaCreacion: '',\r\n        fechaFinal: '',\r\n        fechaIncial: '',\r\n        nombreSubempresa: '',\r\n        total: ''\r\n    }\r\n\r\n    columns = ['Identificación', 'Nombres Apellidos', 'Valor cobro',];\r\n    columnPropertyMap = {\r\n        'Identificación': 'documentoTrabajador',\r\n        'Nombres Apellidos': 'nombreCompleto',\r\n        'Valor cobro': 'valorPago',\r\n    };\r\n    ngOnDestroy(): void {\r\n        this.subscription$.unsubscribe();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.id = this.activatedRoute.snapshot.paramMap.get('id');\r\n        this.getTrabajador(this.id);\r\n    }\r\n\r\n    private getTrabajador(id) {\r\n        this.subscription$ = this.pagoTrabajadorService.getPagosTrabajador(id).pipe(\r\n            tap((response) => {\r\n                response.data.detallePagoTrabajador?.forEach((items) => {\r\n                    items.fechaCobro = this.datePipe.transform(items.fechaCobro, 'dd/MM/yyyy');\r\n                    items.valorPago = this.currencyPipe.transform(items.valorPago, 'USD', 'symbol', '1.2-2');\r\n                })\r\n                return response;\r\n            })\r\n        ).subscribe((response) => {\r\n            //TODO remover los comentarios una vez se compongan los arrays\r\n            //if (response && Array.isArray(response.data.detallePagoTrabajador)) {\r\n                console.log('Si entra')\r\n                this.data = response.data.detallePagoTrabajador;\r\n                this.form.fechaCreacion = this.datePipe.transform( response.data.fechaCreacion, 'dd/MM/YYYY');\r\n                this.form.fechaFinal = response.data.fechaFinal;\r\n                this.form.nombreSubempresa = response.data.nombreSubempresa;\r\n                this.form.total = this.currencyPipe.transform(response.data.total, 'USD', 'symbol', '1.2-2');\r\n                this.exportData = response.data;\r\n            //}\r\n        })\r\n    }\r\n\r\n    exportToExcel() {\r\n        const header = [\r\n            ['Detalle cobro trabajadores'], // Título\r\n            ['Empresa:', this.exportData.nombreSubempresa],\r\n            ['Fecha de liquidación:',this.exportData.fechaFinal],\r\n            ['Total:', this.exportData.total],\r\n        ];\r\n\r\n\r\n        const detalle = this.exportData.detallePagoTrabajador.map((items) => {\r\n            return {\r\n                Identificación: items.documentoTrabajador,\r\n                'Nombre completo': items.nombreCompleto,\r\n                'Valor': parseCurrency(items.valorPago),\r\n            };\r\n        })\r\n\r\n        // Crear una hoja de trabajo para el encabezado\r\n        const worksheet = XLSX.utils.aoa_to_sheet(header);\r\n\r\n        // Agregar espacio entre el encabezado y el detalle\r\n        const detailStartRow = header.length + 2; // Encabezado + 1 fila vacía\r\n\r\n        // Combinar encabezado y detalle en la misma hoja\r\n        XLSX.utils.sheet_add_json(worksheet, detalle, {\r\n            origin: `A${detailStartRow}`, // Comienza después del encabezado\r\n            skipHeader: false, // Incluye encabezados de columnas\r\n        });\r\n\r\n        // Ajustar celdas (opcional: unir celdas para título)\r\n        worksheet['!merges'] = [\r\n            { s: { r: 0, c: 0 }, e: { r: 0, c: 2 } }, // Unir celdas para el título\r\n        ];\r\n\r\n        // Crear el libro de trabajo y guardar\r\n        const workbook: XLSX.WorkBook = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(workbook, worksheet, `DetallePago${this.exportData.fechaFinal}`);\r\n        XLSX.writeFile(workbook, `DetallePago${this.exportData.fechaFinal}.xlsx`);\r\n\r\n    }\r\n\r\n    closeDialog() {\r\n        this.router.navigate(['/pages/gestion-cobros/trabajadores']);\r\n    }\r\n\r\n}\r\n", "<div class=\"bg-card flex min-w-0 flex-auto flex-col dark:bg-transparent sm:absolute sm:inset-0 sm:overflow-hidden\" >\r\n    <div\r\n        class=\"sm:ml-8 mt-8 text-3xl font-semibold leading-tight tracking-tight \"\r\n    >\r\n        Detalle cobro trabajadores\r\n    </div>\r\n\r\n    <div class=\"relative flex flex-0 flex-col border-b px-6 sm:flex-row md:px-8\">\r\n\r\n        <div class=\"mt-6 w-full shrink-0 sm:mt-0 sm:space-x-2 lg:w-full\">\r\n            <form class=\"mt-8\">\r\n                <div class=\"flex flex-col sm:flex-row gap-2.5\">\r\n                    <mat-form-field  class=\"w-full min-w-90\" floatLabel=\"always\">\r\n                        <mat-label>Empresa</mat-label>\r\n                        <input matInput placeholder=\"Empresa\" [value]=\"form.nombreSubempresa\" readonly>\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field  class=\"w-full min-w-90\" floatLabel=\"always\">\r\n                        <mat-label>Fecha de liquidación</mat-label>\r\n                        <input matInput placeholder=\"Empresa\" [value]=\"form.fechaCreacion\" readonly>\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field  class=\"w-full min-w-90\" floatLabel=\"always\">\r\n                        <mat-label>Total</mat-label>\r\n                        <input matInput placeholder=\"Empresa\" [value]=\"form.total\" readonly>\r\n                    </mat-form-field>\r\n\r\n                </div>\r\n\r\n                <div class=\"relative p-2 border border-gray-300 rounded-lg \">\r\n                    <div class=\"absolute -top-3 left-4 bg-white px-2 text-gray-500 font-semibold\">\r\n                        Opciones\r\n                    </div>\r\n                    <div class=\"flex flex-wrap justify-end gap-2.5 sm:mb-4 \">\r\n                        <button\r\n                            class=\"sm:w-auto w-full sm:mt-6 bg-credigray-100 rounded-lg transition duration-200 text-white font-semibold\"\r\n                            mat-flat-button\r\n                            [color]=\"'primary'\"\r\n                            (click)=\"closeDialog()\"\r\n                        >\r\n\r\n                            <span> Atras </span>\r\n                        </button>\r\n\r\n                        <button\r\n                            class=\"lg:w-auto w-full sm:mt-6 bg-green-600 transition duration-200 text-white font-semibold rounded-lg md:w-auto\"\r\n                            mat-flat-button\r\n                            (click)=\"exportToExcel()\"\r\n                        >\r\n                            <span> Descargar </span>\r\n                        </button>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </form>\r\n\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <div class=\"flex flex-auto overflow-hidden \">\r\n        <!-- Products list -->\r\n        <div\r\n            class=\"flex flex-auto flex-col overflow-hidden sm:p-4 sm:mb-10 sm:overflow-y-auto\"\r\n        >\r\n            <app-custom-table\r\n                [columns]=\"columns\"\r\n                [displayedColumns]=\"columns\"\r\n                [columnPropertyMap]=\"columnPropertyMap\"\r\n                [data]=\"data\"\r\n            ></app-custom-table>\r\n        </div>\r\n\r\n    </div>\r\n\r\n\r\n</div>\r\n", "import { Routes } from '@angular/router';\r\nimport { GridPagoTrabajadoresComponent } from './grid-pago-trabajadores/grid-pago-trabajadores.component';\r\nimport { FormPagoTrabajadoresComponent } from './form-pago-trabajadores/form-pago-trabajadores.component';\r\nimport { FormViewPagoTrabajadoresComponent } from './form-view-pago-trabajadores/form-view-pago-trabajadores.component';\r\n\r\nexport  default [\r\n    {\r\n        path: '',\r\n        component: GridPagoTrabajadoresComponent\r\n    },\r\n    {\r\n        path: 'pago',\r\n        component: FormPagoTrabajadoresComponent\r\n    },\r\n    {\r\n        path: 'pago/:id',\r\n        component: FormViewPagoTrabajadoresComponent\r\n    }\r\n\r\n] as Routes;\r\n"],
  "mappings": "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",
  "names": ["maskConfig", "maskConfig", "_c0", "maskConfig"]
}
