{
  "version": 3,
  "sources": ["src/app/core/services/pago-aliados.service.ts", "src/app/pages/gestion-cobros/pago-aliados/grid-aliados/grid-aliados.component.ts", "src/app/pages/gestion-cobros/pago-aliados/grid-aliados/grid-aliados.component.html", "src/app/pages/gestion-cobros/pago-aliados/form-aliados/form-aliados.component.ts", "src/app/pages/gestion-cobros/pago-aliados/form-aliados/form-aliados.component.html", "src/app/pages/gestion-cobros/pago-aliados/form-view-aliados/form-view-aliados.component.ts", "src/app/pages/gestion-cobros/pago-aliados/form-view-aliados/form-view-aliados.component.html", "src/app/pages/gestion-cobros/pago-aliados/pago-aliados.routes.ts"],
  "sourcesContent": ["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AppSettingsService } from '../app-config/app-settings-service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PagoAliadosService {\r\n\r\n  constructor(\r\n      private _http: HttpClient,\r\n      private appSettings: AppSettingsService\r\n  ) { }\r\n\r\n  getAliados(): Observable<any> {\r\n      return this._http.get(`${this.appSettings.pagoAliados.url.base}/Tabla`)\r\n  }\r\n  postAliados(data): Observable<any> {\r\n      return this._http.post(this.appSettings.pagoAliados.url.base, data)\r\n  }\r\n\r\n    getAliado(id): Observable<any> {\r\n        return this._http.get(`${this.appSettings.pagoAliados.url.base}/${id}`)\r\n    }\r\n\r\n}\r\n", "import { Component, inject, OnDestroy, OnInit } from '@angular/core';\r\nimport { AsyncPipe, CurrencyPipe, DatePipe, NgForOf, NgIf } from '@angular/common';\r\nimport { CustomTableComponent } from '../../../shared/custom-table/custom-table.component';\r\nimport { MatFormField, MatLabel } from '@angular/material/form-field';\r\nimport { MatIcon } from '@angular/material/icon';\r\nimport { MatInput } from '@angular/material/input';\r\nimport { MatOption, MatSelect } from '@angular/material/select';\r\nimport { MatButton } from '@angular/material/button';\r\nimport { Subscription, tap } from 'rxjs';\r\nimport { IButton } from '../../../shared/interfaces/buttonsInterfaces';\r\nimport { PagoAliadosService } from '../../../../core/services/pago-aliados.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FormAliadosComponent } from '../form-aliados/form-aliados.component';\r\nimport { EstadosDatosService } from '../../../../core/services/estados-datos.service';\r\nimport { Router } from '@angular/router';\r\nimport { FuseAlertComponent } from '../../../../../@fuse/components/alert';\r\n\r\n@Component({\r\n    selector: 'app-grid-aliados',\r\n    standalone: true,\r\n    imports: [\r\n        AsyncPipe,\r\n        CustomTableComponent,\r\n        MatFormField,\r\n        MatIcon,\r\n        MatInput,\r\n        MatLabel,\r\n        MatOption,\r\n        MatSelect,\r\n        NgForOf,\r\n        NgIf,\r\n        MatButton,\r\n        FuseAlertComponent,\r\n    ],\r\n    templateUrl: './grid-aliados.component.html',\r\n    styleUrl: './grid-aliados.component.scss',\r\n    providers: [DatePipe, CurrencyPipe],\r\n})\r\nexport class GridAliadosComponent implements OnInit, OnDestroy {\r\n    private datePipe = inject(DatePipe);\r\n    public subcription$: Subscription;\r\n    public selectedData: any;\r\n    public searchTerm: string = '';\r\n    private currencyPipe = inject(CurrencyPipe);\r\n\r\n    private pagoAliadoService = inject(PagoAliadosService);\r\n    private _matDialog = inject(MatDialog);\r\n    private estadoDatosService = inject(EstadosDatosService);\r\n    private router = inject(Router);\r\n\r\n    data = [];\r\n\r\n    columns = ['Creaci贸n', 'Empresa', 'Total'];\r\n    columnPropertyMap = {\r\n        Creaci贸n: 'fechaCreacion',\r\n        Empresa: 'nombreSubempresa',\r\n        Total: 'total',\r\n    };\r\n\r\n    buttons: IButton[] = [\r\n        {\r\n            label: 'Ver',\r\n            icon: 'visibility',\r\n            action: (element) => {\r\n                console.log('Editing', element);\r\n                this.router.navigate([\r\n                    '/pages/gestion-cobros/aliados/detalle/',\r\n                    element.id,\r\n                ]);\r\n            },\r\n        },\r\n    ];\r\n\r\n    ngOnDestroy(): void {}\r\n\r\n    ngOnInit(): void {\r\n        this.getAliados();\r\n        this.listenGrid();\r\n    }\r\n\r\n    onNew() {\r\n        this.router.navigate(['/pages/gestion-cobros/aliados/aliado']);\r\n    }\r\n\r\n    public getAliados() {\r\n        this.pagoAliadoService\r\n            .getAliados()\r\n            .pipe(\r\n                tap((response) => {\r\n                    response.data.forEach((items) => {\r\n                        items.fechaCreacion = this.datePipe.transform(\r\n                            items.fechaCreacion,\r\n                            'dd/MM/yyyy'\r\n                        );\r\n                        items.total = this.currencyPipe.transform(\r\n                            items.total,\r\n                            'USD',\r\n                            'symbol',\r\n                            '1.2-2'\r\n                        );\r\n                        //items.nombreTrabajador = this.datePipe.transform(items.nombreTrabajador, 'titlecase');\r\n                    });\r\n                    return response;\r\n                })\r\n            )\r\n            .subscribe((response) => {\r\n                this.data = response.data;\r\n            });\r\n    }\r\n\r\n    onSearch(event: Event) {\r\n        const target = event.target as HTMLInputElement;\r\n        this.searchTerm = target.value.trim().toLowerCase();\r\n    }\r\n\r\n    private listenGrid() {\r\n        const refreshData$ = this.estadoDatosService.stateGrid.asObservable();\r\n\r\n        refreshData$.subscribe((state) => {\r\n            if (state) {\r\n                this.getAliados();\r\n            }\r\n        });\r\n    }\r\n}\r\n", "<div\r\n    class=\"bg-card flex min-w-0 flex-auto flex-col dark:bg-transparent sm:absolute sm:inset-0 sm:overflow-hidden\"\r\n>\r\n    <div\r\n        class=\"relative flex flex-0 flex-col border-b px-6 py-8 sm:flex-row sm:items-center sm:justify-between md:px-8\"\r\n    >\r\n        <!-- Title -->\r\n        <div class=\"text-3xl font-semibold tracking-tight\">Pago proveedores</div>\r\n\r\n        <!-- Actions -->\r\n        <div class=\"mt-6 flex w-full shrink-0 flex-col items-center sm:ml-4 sm:mt-0 sm:flex-row sm:space-x-2 sm:w-auto\">\r\n            <!-- Search -->\r\n            <mat-form-field\r\n                class=\"fuse-mat-dense rounded-lg w-full sm:w-auto min-w-64\"\r\n                [subscriptSizing]=\"'dynamic'\"\r\n            >\r\n                <mat-icon\r\n                    class=\"icon-size-5\"\r\n                    matPrefix\r\n                    [svgIcon]=\"'heroicons_solid:magnifying-glass'\"\r\n                ></mat-icon>\r\n                <input\r\n                    matInput\r\n                    [autocomplete]=\"'off'\"\r\n                    [placeholder]=\"'Buscar'\"\r\n                    (input)=\"onSearch($event)\"\r\n                />\r\n            </mat-form-field>\r\n            <!-- Add product button -->\r\n            <button\r\n                class=\"mt-2 w-full bg-crediblue-50 rounded-lg transition duration-200 text-white font-semibold sm:ml-4 sm:mt-0 sm:w-auto\"\r\n                mat-flat-button\r\n                [color]=\"'primary'\"\r\n                (click)=\"onNew()\"\r\n            >\r\n                <mat-icon [svgIcon]=\"'heroicons_outline:plus'\"></mat-icon>\r\n                <span class=\"ml-2 mr-1\">Pagar</span>\r\n            </button>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <!--Main-->\r\n    @if(data.length > 0) {\r\n        <div class=\"flex flex-auto overflow-hidden\">\r\n            <!-- Products list -->\r\n            <div\r\n                class=\"flex flex-auto flex-col overflow-hidden sm:mb-18 sm:overflow-y-auto\"\r\n            >\r\n                <app-custom-table\r\n                    [columns]=\"columns\"\r\n                    [displayedColumns]=\"columns\"\r\n                    [columnPropertyMap]=\"columnPropertyMap\"\r\n                    [data]=\"data\"\r\n                    [buttons]=\"buttons\"\r\n                    [searchTerm]=\"searchTerm\"\r\n                ></app-custom-table>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    }@else {\r\n        <div class=\"inset-0 min-w-0 overflow-auto print:overflow-visible\">\r\n\r\n            <div class=\"inline-block p-4 sm:p-2 print:p-0 w-full\">\r\n                <fuse-alert\r\n                    [type]=\"'info'\"\r\n                    [appearance]=\"'outline'\">\r\n                    <span fuseAlertTitle>Informaci贸n</span>\r\n                    No hay informaci贸n hasta el momento.\r\n                </fuse-alert>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n\r\n</div>\r\n", "import { Component, inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { MatDatepicker, MatDatepickerInput, MatDatepickerToggle } from '@angular/material/datepicker';\r\nimport { MatFormField, MatLabel, MatSuffix } from '@angular/material/form-field';\r\nimport { MatInput } from '@angular/material/input';\r\nimport { AsyncPipe, CurrencyPipe, DatePipe, DecimalPipe, NgClass, NgForOf, NgIf } from '@angular/common';\r\nimport { DateAdapter, MAT_DATE_LOCALE} from '@angular/material/core';\r\nimport { MatOption, MatSelect } from '@angular/material/select';\r\nimport { DateAdapterService } from '../../../../core/services/date-adapter.service';\r\nimport { IConfig, provideNgxMask } from 'ngx-mask';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatButton } from '@angular/material/button';\r\nimport { EmpresasClientesService } from '../../../../core/services/empresas-clientes.service';\r\nimport { DetalleConsumoService } from '../../../../core/services/detalle-consumo.service';\r\nimport { CustomTableComponent } from '../../../shared/custom-table/custom-table.component';\r\nimport { IButton } from '../../../shared/interfaces/buttonsInterfaces';\r\nimport { SwalService } from '../../../../core/services/swal.service';\r\nimport { EstadosDatosService } from '../../../../core/services/estados-datos.service';\r\nimport { FuseConfirmationService } from '../../../../../@fuse/services/confirmation';\r\nimport { PagoAliadosService } from '../../../../core/services/pago-aliados.service';\r\nimport { confirmarPago, guardar } from '../../../../core/constant/dialogs';\r\nimport { map } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { FuseAlertComponent } from '../../../../../@fuse/components/alert';\r\n\r\nconst maskConfig: Partial<IConfig> = {\r\n    validation: false,\r\n};\r\n\r\n@Component({\r\n  selector: 'app-form-aliados',\r\n  standalone: true,\r\n    imports: [\r\n        ReactiveFormsModule,\r\n        MatDatepicker,\r\n        MatDatepickerInput,\r\n        MatDatepickerToggle,\r\n        MatFormField,\r\n        MatInput,\r\n        MatLabel,\r\n        MatSuffix,\r\n        AsyncPipe,\r\n        MatOption,\r\n        MatSelect,\r\n        NgForOf,\r\n        NgIf,\r\n        MatButton,\r\n        CustomTableComponent,\r\n        NgClass,\r\n        CurrencyPipe,\r\n        FuseAlertComponent,\r\n    ],\r\n  templateUrl: './form-aliados.component.html',\r\n  styleUrl: './form-aliados.component.scss',\r\n    providers: [\r\n        { provide: DateAdapter, useClass: DateAdapterService },\r\n        { provide: MAT_DATE_LOCALE, useValue: 'en-GB' },\r\n        DatePipe,\r\n        CurrencyPipe,\r\n        DecimalPipe,\r\n        provideNgxMask(maskConfig)\r\n    ],\r\n})\r\nexport class FormAliadosComponent implements OnInit{\r\n    private fb = inject(FormBuilder);\r\n    public form: FormGroup;\r\n    private empresaClienteService = inject(EmpresasClientesService)\r\n    private detalleConsumoService = inject(DetalleConsumoService);\r\n    private pagoAliadoService = inject(PagoAliadosService);\r\n    private datePipe = inject(DatePipe);\r\n    private swalService = inject(SwalService);\r\n    public estadosDatosService = inject(EstadosDatosService);\r\n    public fuseService = inject(FuseConfirmationService);\r\n    private currencyPipe = inject(CurrencyPipe);\r\n    private decimalPipe =  inject(DecimalPipe)\r\n    private router = inject(Router);\r\n    public message: string;\r\n\r\n    empresa$ = this.empresaClienteService.getEmpresasClientes();\r\n    data = [];\r\n    totalPagar: number;\r\n    totalComision: number;\r\n    subtotal: number;\r\n\r\n    columns = ['N煤mero de factura', 'Porcentaje', 'Valor', 'Comision', 'Total a Pagar', ];\r\n    columnPropertyMap = {\r\n        'N煤mero de factura': 'numeroFactura',\r\n        'Porcentaje': 'porcentajeSubEmpresa',\r\n        'Valor': 'montoConsumo',\r\n        'Comision': 'comision',\r\n        'Total a Pagar': 'pagar'\r\n    };\r\n\r\n\r\n    private createForm() {\r\n        this.form = this.fb.group({\r\n            fechaFinal: ['', Validators.required],\r\n            idSubEmpresa: ['', Validators.required],\r\n        })\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.createForm();\r\n    }\r\n\r\n    closeDialog() {\r\n        this.router.navigate(['/pages/gestion-cobros/aliados']);;\r\n    }\r\n\r\n    onGet() {\r\n        if (this.form.valid) {\r\n            const {fechaFinal, idSubEmpresa } = this.form.getRawValue();\r\n            console.log(fechaFinal)\r\n\r\n            const fechaFinallData = this.datePipe.transform(fechaFinal, 'yyyy-MM-dd')\r\n\r\n            const consulta = {\r\n                fechaFinallData,\r\n                idSubEmpresa\r\n            }\r\n\r\n            this.getAllPago(consulta);\r\n\r\n        }\r\n    }\r\n\r\n    onSave() {\r\n        const {fechaFinal, idSubEmpresa } = this.form.getRawValue();\r\n\r\n        const fechaFinallData = this.datePipe.transform(fechaFinal, 'yyyy-MM-dd');\r\n\r\n        const consulta = {\r\n            fechaFinal: fechaFinallData,\r\n            idSubEmpresa\r\n        }\r\n\r\n        let detallePagoAliado = []\r\n        detallePagoAliado = this.data.map((item) => {\r\n            return {\r\n                idDetalleConsumo: item.id\r\n            }\r\n        })\r\n\r\n        const createData = {\r\n            ...consulta,\r\n            detallePagoAliado\r\n        }\r\n\r\n        console.log(createData)\r\n        const dialog = this.fuseService.open({\r\n            ...confirmarPago\r\n        });\r\n\r\n        dialog.afterClosed().subscribe((response) => {\r\n            if (response === 'confirmed') {\r\n                this.postSave(createData)\r\n            }\r\n        })\r\n    }\r\n\r\n    private getAllPago(data) {\r\n        this.detalleConsumoService.getPagosAliados(data).pipe(\r\n            map((response) => {\r\n                this.subtotal = 0;\r\n                this.totalComision = 0;\r\n                this.totalPagar = 0;\r\n                if (response && Array.isArray(response.data)) {\r\n                    response.data.forEach((items) => {\r\n                        items.comision = ((items.montoConsumo * items.porcentajeSubEmpresa) / 100);\r\n                        items.pagar = (items.montoConsumo - items.comision);\r\n                        items.montoConsumo = this.currencyPipe.transform(items.montoConsumo, 'USD', 'symbol', '1.2-2');\r\n                        items.comision = this.currencyPipe.transform(items.comision, 'USD', 'symbol', '1.2-2');\r\n                        items.pagar = this.currencyPipe.transform(items.pagar, 'USD', 'symbol', '1.2-2');\r\n                        items.porcentajeSubEmpresa = this.decimalPipe.transform(items.porcentajeSubEmpresa, '1.2-2') + '%';\r\n\r\n                        this.subtotal += parseFloat(items.montoConsumo.replace(/[^0-9.-]+/g, ''));\r\n                        this.totalComision += parseFloat(items.comision.replace(/[^0-9.-]+/g, ''));\r\n                        this.totalPagar += parseFloat(items.pagar.replace(/[^0-9.-]+/g, ''));\r\n                    });\r\n                }else {\r\n                    this.data = [];\r\n                }\r\n                return response\r\n            })\r\n\r\n        ).subscribe((response) => {\r\n            if (response && Array.isArray(response.data)) {\r\n                this.data = response.data;\r\n            }else {\r\n                this.data = [];\r\n                this.message = response.msg;\r\n            }\r\n        })\r\n    }\r\n\r\n    private postSave(data) {\r\n        this.pagoAliadoService.postAliados(data).subscribe((response) => {\r\n            this.swalService.ToastAler({\r\n                icon: 'success',\r\n                title: 'Registro Creado o Actualizado con Exito.',\r\n                timer: 4000,\r\n            })\r\n            this.estadosDatosService.stateGrid.next(true);\r\n            this.closeDialog();\r\n        }, error => {\r\n            this.swalService.ToastAler({\r\n                icon: 'error',\r\n                title: 'Ha ocurrido un error al crear el registro!',\r\n                timer: 4000,\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n\r\n}\r\n", "<div class=\"bg-card flex min-w-0 flex-auto flex-col dark:bg-transparent sm:absolute sm:inset-0 sm:overflow-hidden\" >\r\n\r\n    <div\r\n        class=\"mt-8 text-3xl font-semibold leading-tight tracking-tight text-center\"\r\n    >\r\n        {{'Pago proveedores'}}\r\n    </div>\r\n\r\n    <div class=\"relative flex flex-0 flex-col border-b px-6 sm:flex-row md:px-8\">\r\n\r\n        <div class=\"mt-6 w-full shrink-0 sm:mt-0 sm:space-x-2 lg:w-full\">\r\n\r\n            <form class=\"mt-8\" [formGroup]=\"form\">\r\n                <div class=\"flex flex-col sm:flex-row gap-2.5\">\r\n                    <mat-form-field  class=\"w-full min-w-90\" floatLabel=\"always\">\r\n                        <mat-label>Fecha de corte</mat-label>\r\n                        <input matInput [matDatepicker]=\"finalPicker\"  [formControlName]=\"'fechaFinal'\" placeholder=\"dd/mm/yyyy\">\r\n                        <mat-datepicker-toggle matIconSuffix [for]=\"finalPicker\"></mat-datepicker-toggle>\r\n                        <mat-datepicker #finalPicker></mat-datepicker>\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field  class=\"w-full min-w-90\" floatLabel=\"always\">\r\n                        <mat-label>Empresa</mat-label>\r\n                        <mat-select placeholder=\"Empresa\" [formControlName]=\"'idSubEmpresa'\">\r\n                            <ng-container *ngIf=\"empresa$ | async as empresas\">\r\n                                <mat-option [value]=\"item.id\" *ngFor=\"let item of empresas.data\">{{item.razonSocial}}</mat-option>\r\n                            </ng-container>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n\r\n                </div>\r\n\r\n                <div class=\"relative p-4 border border-gray-300 rounded-lg mt-4\">\r\n                    <div class=\"absolute -top-3 left-4 bg-white px-2 text-gray-500 font-semibold\">\r\n                        Opciones\r\n                    </div>\r\n                    <div class=\"flex flex-wrap justify-end gap-2.5 sm:mb-4 \">\r\n                        <button\r\n                            class=\"sm:w-auto w-full sm:mt-6 bg-credigray-100 rounded-lg transition duration-200 text-white font-semibold\"\r\n                            mat-flat-button\r\n                            [color]=\"'primary'\"\r\n                            (click)=\"closeDialog()\"\r\n                        >\r\n\r\n                            <span> Atras </span>\r\n                        </button>\r\n\r\n                        <button\r\n                            class=\"sm:w-auto w-full sm:mt-6 bg-crediblue-50 rounded-lg transition duration-200 text-white font-semibold\"\r\n                            mat-flat-button\r\n                            [color]=\"'primary'\"\r\n                            (click)=\"onGet()\"\r\n                        >\r\n\r\n                            <span> Consultar </span>\r\n                        </button>\r\n\r\n                        <button\r\n                            class=\"lg:w-auto w-full sm:mt-6 transition duration-200 text-white font-semibold rounded-lg md:w-auto\"\r\n                            [ngClass]=\"{'bg-credigray-100' : data.length == 0,  'bg-green-600' : data.length > 0 }\"\r\n                            mat-flat-button\r\n                            (click)=\"onSave()\"\r\n                            [disabled]=\"data.length == 0\"\r\n                        >\r\n                            <span> Pagar </span>\r\n                        </button>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    @if (data.length) {\r\n        <div class=\"flex flex-auto overflow-hidden \">\r\n            <!-- Products list -->\r\n            <div\r\n                class=\"flex flex-auto flex-col overflow-hidden sm:p-4 sm:mb-10 sm:overflow-y-auto\"\r\n            >\r\n                <app-custom-table\r\n                    [columns]=\"columns\"\r\n                    [displayedColumns]=\"columns\"\r\n                    [columnPropertyMap]=\"columnPropertyMap\"\r\n                    [data]=\"data\"\r\n                ></app-custom-table>\r\n            </div>\r\n\r\n        </div>\r\n    } @else if (message) {\r\n        <div class=\"inset-0 min-w-0 overflow-auto print:overflow-visible\">\r\n\r\n            <div class=\"inline-block p-4 sm:p-8 print:p-0 w-full\">\r\n                <fuse-alert\r\n                    [type]=\"'info'\"\r\n                    [appearance]=\"'outline'\">\r\n                    <span fuseAlertTitle>Informaci贸n</span>\r\n                    {{message}}\r\n                </fuse-alert>\r\n            </div>\r\n\r\n        </div>\r\n    }\r\n\r\n    <div class=\"flex flex-col gap-4 justify-end sm:flex-row\">\r\n        @if(subtotal) {\r\n            <span class=\"sm:pr-4 text-gray-600 font-bold text-right \" >Subtotal:\r\n               <span class=\"text-gray-800\">{{subtotal | currency}}</span>\r\n            </span>\r\n        }\r\n\r\n        @if(totalComision) {\r\n            <span class=\"sm:pr-4 text-gray-600 font-bold text-right \" >Comisiones:\r\n                <span class=\"text-gray-800\">{{totalComision | currency}}</span>\r\n            </span>\r\n        }\r\n\r\n        @if(totalPagar) {\r\n            <span class=\"sm:pr-4 text-gray-600 font-bold text-right \" >Total a pagar:\r\n                <span class=\"text-gray-800\">\r\n                    {{totalPagar | currency}}\r\n                </span>\r\n            </span>\r\n        }\r\n    </div>\r\n\r\n\r\n\r\n\r\n</div>\r\n", "import { Component, inject, OnDestroy, OnInit } from '@angular/core';\r\nimport { FuseConfirmationService } from '../../../../../@fuse/services/confirmation';\r\nimport { AsyncPipe, CurrencyPipe, DatePipe, DecimalPipe, NgForOf, NgIf } from '@angular/common';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { PagoAliadosService } from '../../../../core/services/pago-aliados.service';\r\nimport { DateAdapter, MAT_DATE_LOCALE, MatOption } from '@angular/material/core';\r\nimport { DateAdapterService } from '../../../../core/services/date-adapter.service';\r\nimport { IConfig, provideNgxMask } from 'ngx-mask';\r\nimport { Subscription, tap } from 'rxjs';\r\nimport { CustomTableComponent } from '../../../shared/custom-table/custom-table.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatFormField, MatLabel } from '@angular/material/form-field';\r\nimport { MatSelect } from '@angular/material/select';\r\nimport { MatDatepickerInput } from '@angular/material/datepicker';\r\nimport { MatInput } from '@angular/material/input';\r\nimport { MatButton } from '@angular/material/button';\r\nconst maskConfig: Partial<IConfig> = {\r\n    validation: false,\r\n};\r\n\r\n@Component({\r\n  selector: 'app-form-view-aliados',\r\n  standalone: true,\r\n    imports: [\r\n        CustomTableComponent,\r\n        FormsModule,\r\n        AsyncPipe,\r\n        MatFormField,\r\n        MatLabel,\r\n        MatOption,\r\n        MatSelect,\r\n        NgForOf,\r\n        NgIf,\r\n        MatDatepickerInput,\r\n        MatInput,\r\n        MatButton,\r\n    ],\r\n  templateUrl: './form-view-aliados.component.html',\r\n  styleUrl: './form-view-aliados.component.scss',\r\n    providers: [\r\n        { provide: DateAdapter, useClass: DateAdapterService },\r\n        { provide: MAT_DATE_LOCALE, useValue: 'en-GB' },\r\n        DatePipe,\r\n        CurrencyPipe,\r\n        DecimalPipe,\r\n        provideNgxMask(maskConfig)\r\n    ],\r\n})\r\nexport class FormViewAliadosComponent implements OnInit, OnDestroy{\r\n    public fuseService = inject(FuseConfirmationService);\r\n    private currencyPipe = inject(CurrencyPipe);\r\n    private decimalPipe =  inject(DecimalPipe)\r\n    private router = inject(Router);\r\n    private activatedRoute = inject(ActivatedRoute);\r\n    private pagoAliadoService = inject(PagoAliadosService);\r\n    private datePipe = inject(DatePipe);\r\n    private subscription$: Subscription;\r\n\r\n    data = [];\r\n    totalPagar: number;\r\n    totalComision: number;\r\n    subtotal: number;\r\n    id: string;\r\n    form: any = {\r\n        fechaCreacion: '',\r\n        fechaFinal: '',\r\n        fechaIncial: '',\r\n        nombreSubempresa: '',\r\n        total: ''\r\n    }\r\n\r\n    columns = ['N煤mero de factura', 'Porcentaje', 'Valor facturado', 'Total' ];\r\n    columnPropertyMap = {\r\n        'N煤mero de factura': 'numeroFactura',\r\n        'Porcentaje': 'porcentaje',\r\n        'Valor facturado': 'valorFacturado',\r\n        'Total': 'total',\r\n    };\r\n\r\n    ngOnInit(): void {\r\n        this.id = this.activatedRoute.snapshot.paramMap.get('id');\r\n        this.getAliado(this.id);\r\n    }\r\n\r\n    private getAliado(id) {\r\n        this.subscription$ = this.pagoAliadoService.getAliado(id).pipe(\r\n            tap((response) => {\r\n                response.data.detallePagoAliados.forEach((items) => {\r\n                    items.total = this.currencyPipe.transform(items.total, 'USD', 'symbol', '1.2-2');\r\n                    items.valorFacturado = this.currencyPipe.transform(items.valorFacturado, 'USD', 'symbol', '1.2-2');\r\n                    items.porcentaje = this.decimalPipe.transform(items.porcentaje, '1.2-2') + '%';\r\n                })\r\n                return response;\r\n            })\r\n        ).subscribe((response) => {\r\n            if (response && Array.isArray(response.data.detallePagoAliados)) {\r\n                this.data = response.data.detallePagoAliados;\r\n                this.form.fechaCreacion = this.datePipe.transform( response.data.fechaCreacion, 'dd/MM/YYYY');\r\n                this.form.fechaFinal = response.data.fechaFinal;\r\n                this.form.nombreSubempresa = response.data.nombreSubempresa;\r\n                this.form.total = this.currencyPipe.transform(response.data.total, 'USD', 'symbol', '1.2-2');;\r\n            }\r\n        })\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.subscription$.unsubscribe();\r\n    }\r\n\r\n    closeDialog() {\r\n        this.router.navigate(['/pages/gestion-cobros/aliados']);;\r\n    }\r\n\r\n\r\n}\r\n", "<div class=\"bg-card flex min-w-0 flex-auto flex-col dark:bg-transparent sm:absolute sm:inset-0 sm:overflow-hidden\" >\r\n    <div\r\n        class=\"sm:ml-8 mt-8 text-3xl font-semibold leading-tight tracking-tight \"\r\n    >\r\n        {{'Detalle pago proveedores'}}\r\n    </div>\r\n\r\n    <div class=\"relative flex flex-0 flex-col border-b px-6 sm:flex-row md:px-8\">\r\n\r\n        <div class=\"mt-6 w-full shrink-0 sm:mt-0 sm:space-x-2 lg:w-full\">\r\n            <form class=\"mt-8\">\r\n                <div class=\"flex flex-col sm:flex-row gap-2.5\">\r\n                    <mat-form-field  class=\"w-full min-w-90\" floatLabel=\"always\">\r\n                        <mat-label>Empresa</mat-label>\r\n                        <input matInput placeholder=\"Empresa\" [value]=\"form.nombreSubempresa\" readonly>\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field  class=\"w-full min-w-90\" floatLabel=\"always\">\r\n                        <mat-label>Fecha de creaci贸n</mat-label>\r\n                        <input matInput placeholder=\"Empresa\" [value]=\"form.fechaCreacion\" readonly>\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field  class=\"w-full min-w-90\" floatLabel=\"always\">\r\n                        <mat-label>Total</mat-label>\r\n                        <input matInput placeholder=\"Empresa\" [value]=\"form.total\" readonly>\r\n                    </mat-form-field>\r\n\r\n                </div>\r\n\r\n                <div class=\"relative p-2 border border-gray-300 rounded-lg \">\r\n                    <div class=\"absolute -top-3 left-4 bg-white px-2 text-gray-500 font-semibold\">\r\n                        Opciones\r\n                    </div>\r\n                    <div class=\"flex flex-wrap justify-end gap-2.5 sm:mb-4 \">\r\n                        <button\r\n                            class=\"sm:w-auto w-full sm:mt-6 bg-credigray-100 rounded-lg transition duration-200 text-white font-semibold\"\r\n                            mat-flat-button\r\n                            [color]=\"'primary'\"\r\n                            (click)=\"closeDialog()\"\r\n                        >\r\n\r\n                            <span> Atras </span>\r\n                        </button>\r\n\r\n                        <button\r\n                            class=\"lg:w-auto w-full sm:mt-6 bg-green-600 transition duration-200 text-white font-semibold rounded-lg md:w-auto\"\r\n                            mat-flat-button\r\n                            [disabled]=\"data.length == 0\"\r\n                        >\r\n                            <span> Descargar </span>\r\n                        </button>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </form>\r\n\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <div class=\"flex flex-auto overflow-hidden \">\r\n        <!-- Products list -->\r\n        <div\r\n            class=\"flex flex-auto flex-col overflow-hidden sm:p-4 sm:mb-10 sm:overflow-y-auto\"\r\n        >\r\n            <app-custom-table\r\n                [columns]=\"columns\"\r\n                [displayedColumns]=\"columns\"\r\n                [columnPropertyMap]=\"columnPropertyMap\"\r\n                [data]=\"data\"\r\n            ></app-custom-table>\r\n        </div>\r\n\r\n    </div>\r\n\r\n\r\n</div>\r\n", "import { Routes } from '@angular/router';\r\nimport { GridAliadosComponent } from './grid-aliados/grid-aliados.component';\r\nimport { FormAliadosComponent } from './form-aliados/form-aliados.component';\r\nimport { FormViewAliadosComponent } from './form-view-aliados/form-view-aliados.component';\r\n\r\nexport default [\r\n    {\r\n        path: '',\r\n        component: GridAliadosComponent\r\n    },\r\n    {\r\n        path: 'aliado',\r\n        component: FormAliadosComponent\r\n    },\r\n    {\r\n        path: 'detalle/:id',\r\n        component: FormViewAliadosComponent\r\n    }\r\n]as Routes;;\r\n"],
  "mappings": "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",
  "names": ["maskConfig"]
}
