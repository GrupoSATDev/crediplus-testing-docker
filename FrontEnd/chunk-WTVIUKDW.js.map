{
  "version": 3,
  "sources": ["src/app/pages/gestion-cobros/pago-trabajador/dialog-estado/dialog-estado.component.ts", "src/app/pages/gestion-cobros/pago-trabajador/dialog-estado/dialog-estado.component.html", "src/app/pages/gestion-cobros/pago-trabajador/dialog-abono-individual/dialog-abono-individual.component.ts", "src/app/pages/gestion-cobros/pago-trabajador/dialog-abono-individual/dialog-abono-individual.component.html", "src/app/pages/gestion-cobros/pago-trabajador/grid-pago-trabajador/grid-pago-trabajador.component.ts", "src/app/pages/gestion-cobros/pago-trabajador/grid-pago-trabajador/grid-pago-trabajador.component.html", "src/app/pages/gestion-cobros/pago-trabajador/form-pago-trabajador/form-pago-trabajador.component.ts", "src/app/pages/gestion-cobros/pago-trabajador/form-pago-trabajador/form-pago-trabajador.component.html", "src/app/pages/gestion-cobros/pago-trabajador/form-view-pago-trabajador/form-view-pago-trabajador.component.ts", "src/app/pages/gestion-cobros/pago-trabajador/form-view-pago-trabajador/form-view-pago-trabajador.component.html", "src/app/pages/gestion-cobros/pago-trabajador/pago-trabajador.routes.ts"],
  "sourcesContent": ["import { Component, inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogClose, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatButton } from '@angular/material/button';\r\nimport { MatIcon } from '@angular/material/icon';\r\nimport { MatFormField, MatLabel } from '@angular/material/form-field';\r\nimport { MatInput } from '@angular/material/input';\r\nimport { FormBuilder, FormControl, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { IConfig, NgxMaskDirective, provideNgxMask } from 'ngx-mask';\r\nimport { DateAdapter, MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { DateAdapterService } from '../../../../core/services/date-adapter.service';\r\nimport { CurrencyPipe, DatePipe } from '@angular/common';\r\nimport { CodigoCobroTrabajador } from '../../../../core/enums/codigo-cobro-trabajador';\r\nimport { PagoTrabajadoresService } from '../../../../core/services/pago-trabajadores.service';\r\nimport { EstadosDatosService } from '../../../../core/services/estados-datos.service';\r\nimport { SwalService } from '../../../../core/services/swal.service';\r\n\r\nconst maskConfig: Partial<IConfig> = {\r\n    validation: false,\r\n};\r\n\r\n@Component({\r\n  selector: 'app-dialog-estado',\r\n  standalone: true,\r\n    imports: [\r\n        MatButton,\r\n        MatIcon,\r\n        MatDialogClose,\r\n        MatFormField,\r\n        MatInput,\r\n        MatLabel,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        NgxMaskDirective,\r\n    ],\r\n    providers: [\r\n        { provide: DateAdapter, useClass: DateAdapterService },\r\n        { provide: MAT_DATE_LOCALE, useValue: 'en-GB' },\r\n        DatePipe,\r\n        CurrencyPipe,\r\n        provideNgxMask(maskConfig)\r\n    ],\r\n  templateUrl: './dialog-estado.component.html',\r\n  styleUrl: './dialog-estado.component.scss'\r\n})\r\nexport class DialogEstadoComponent implements OnInit{\r\n    public dialogRef = inject(MatDialogRef<DialogEstadoComponent>);\r\n    public _matData = inject(MAT_DIALOG_DATA);\r\n    private fb = inject(FormBuilder);\r\n    public form: FormGroup;\r\n    private pagoTrabajadoresService = inject(PagoTrabajadoresService);\r\n    public estadosDatosService = inject(EstadosDatosService);\r\n    private swalService = inject(SwalService);\r\n\r\n    ngOnInit(): void {\r\n        this.createForm();\r\n        const data = this._matData.data;\r\n        console.log(data);\r\n        this.form.patchValue({\r\n            valorRecibido: parseFloat(data.total.replace(/[\\$,]/g, ''))\r\n        });\r\n    }\r\n\r\n    onCambioEstado() {\r\n        if(this.form.valid) {\r\n            const dataInput = this._matData.data;\r\n            const data = this.form.getRawValue();\r\n            const {valorRecibido, ...form} = data;\r\n\r\n            const createData = {\r\n                id: dataInput.id,\r\n                idEstadoCobroPago: CodigoCobroTrabajador.PAGADOS,\r\n                valorRecibido:  parseFloat(valorRecibido),\r\n                ...form\r\n            }\r\n\r\n            this.pagoTrabajadoresService.putPagoTrabajadorIndividual(createData).subscribe((response) => {\r\n                this.estadosDatosService.stateGrid.next(true);\r\n                this.swalService.ToastAler({\r\n                    icon: 'success',\r\n                    title: 'Registro Creado o Actualizado con Exito.',\r\n                    timer: 4000,\r\n                })\r\n                this.closeDialog();\r\n            }, error => {\r\n                this.swalService.ToastAler({\r\n                    icon: 'error',\r\n                    title: 'Ha ocurrido un error al crear el registro!',\r\n                    timer: 4000,\r\n                })\r\n            })\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    closeDialog() {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    private createForm() {\r\n        this.form = this.fb.group({\r\n            comprobante: ['', Validators.required],\r\n            valorRecibido: [''],\r\n            observacion: [''],\r\n        })\r\n\r\n    }\r\n\r\n}\r\n", "<div class=\"relative flex h-full w-full flex-col\">\r\n    <!-- Content -->\r\n    <div\r\n        class=\"flex flex-auto flex-col items-center pb-6 sm:flex-row sm:items-start sm:pb-8\"\r\n    >\r\n        <div class=\"flex h-10 w-10 flex-0 items-center justify-center rounded-full sm:mr-4 bg-blue-100 text-blue-600 dark:bg-blue-600 dark:text-blue-50\"\r\n        >\r\n            <mat-icon\r\n                [svgIcon]=\"'heroicons_solid:question-mark-circle'\"\r\n            >\r\n\r\n            </mat-icon>\r\n        </div>\r\n\r\n        <div class=\"flex flex-col items-center space-y-1 text-center sm:mt-0 sm:items-start sm:pr-8 sm:text-left\">\r\n            <div class=\"text-xl font-medium leading-6\">\r\n                Confirmacion\r\n            </div>\r\n\r\n            <div  class=\"text-secondary\">\r\n                ¿Está seguro de cambiar el estado?.\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <form class=\"mt-8\" [formGroup]=\"form\">\r\n\r\n        <div class=\"mt-4 flex flex-col items-center space-y-1 text-center sm:mt-0 sm:items-start sm:text-left\">\r\n            <mat-form-field  class=\"w-full min-w-90\" floatLabel=\"always\">\r\n                <mat-label>Número de comprobante</mat-label>\r\n                <input matInput placeholder=\"Comprobante\" [formControlName]=\"'comprobante'\">\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"mt-4 flex flex-col items-center space-y-1 text-center sm:mt-0 sm:items-start sm:text-left\">\r\n            <mat-form-field  class=\"w-full min-w-90\" floatLabel=\"always\">\r\n                <mat-label>Valor recibido</mat-label>\r\n                <input matInput placeholder=\"Valor recibido\" [formControlName]=\"'valorRecibido'\" mask=\"separator.2\" thousandSeparator=\",\" decimalMarker=\".\" >\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"mt-4 flex flex-col items-center space-y-1 text-center sm:mt-0 sm:items-start sm:text-left\">\r\n            <mat-form-field class=\"w-full\" floatLabel=\"always\">\r\n                <mat-label>Observaciones</mat-label>\r\n                <textarea matInput placeholder=\"Observaciones\" [formControlName]=\"'observacion'\" ></textarea>\r\n            </mat-form-field>\r\n        </div>\r\n    </form>\r\n\r\n    <div\r\n        class=\"flex items-center justify-center space-x-3 bg-gray-50  py-4 dark:bg-black dark:bg-opacity-10 sm:justify-end\"\r\n    >\r\n        <button mat-stroked-button [matDialogClose]=\"'cancelled'\"\r\n                class=\"sm:w-auto w-full bg-crediorange-100 rounded-lg transition duration-200 text-white font-semibold\">\r\n            Cancelar\r\n        </button>\r\n\r\n        <button\r\n            mat-flat-button\r\n            [color]=\"'primary'\"\r\n            [matDialogClose]=\"'confirmed'\"\r\n            class=\"sm:w-auto w-full bg-crediblue-50  hover:bg-crediblue-100 text-white font-semibold py-2 px-4 rounded-lg transition duration-200\"\r\n            (click)=\"onCambioEstado()\"\r\n        >\r\n            Confirmar\r\n        </button>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n", "import { Component, inject, OnInit } from '@angular/core';\r\nimport {\r\n    AbstractControl,\r\n    FormBuilder,\r\n    FormGroup,\r\n    FormsModule, ReactiveFormsModule,\r\n    ValidationErrors,\r\n    ValidatorFn,\r\n    Validators,\r\n} from '@angular/forms';\r\nimport { MatButton } from '@angular/material/button';\r\nimport { MatError, MatFormField, MatLabel } from '@angular/material/form-field';\r\nimport { MatIcon } from '@angular/material/icon';\r\nimport { MatInput } from '@angular/material/input';\r\nimport { CurrencyPipe, DatePipe, NgIf } from '@angular/common';\r\nimport { IConfig, NgxMaskDirective, provideNgxMask } from 'ngx-mask';\r\nimport { MAT_DIALOG_DATA, MatDialogClose, MatDialogRef } from '@angular/material/dialog';\r\nimport { DateAdapter, MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { DateAdapterService } from '../../../../core/services/date-adapter.service';\r\nimport { EstadosDatosService } from '../../../../core/services/estados-datos.service';\r\nimport { PagoTrabajadoresService } from '../../../../core/services/pago-trabajadores.service';\r\nimport { SwalService } from '../../../../core/services/swal.service';\r\n\r\nconst maskConfig: Partial<IConfig> = {\r\n    validation: false,\r\n};\r\n\r\n\r\n@Component({\r\n  selector: 'app-dialog-abono-individual',\r\n  standalone: true,\r\n    imports: [\r\n        FormsModule,\r\n        MatButton,\r\n        MatError,\r\n        MatFormField,\r\n        MatIcon,\r\n        MatInput,\r\n        MatLabel,\r\n        NgIf,\r\n        NgxMaskDirective,\r\n        MatDialogClose,\r\n        ReactiveFormsModule,\r\n    ],\r\n    providers: [\r\n        { provide: DateAdapter, useClass: DateAdapterService },\r\n        { provide: MAT_DATE_LOCALE, useValue: 'en-GB' },\r\n        DatePipe,\r\n        CurrencyPipe,\r\n        provideNgxMask(maskConfig)\r\n    ],\r\n  templateUrl: './dialog-abono-individual.component.html',\r\n  styleUrl: './dialog-abono-individual.component.scss'\r\n})\r\nexport class DialogAbonoIndividualComponent implements OnInit{\r\n    public dialogRef = inject(MatDialogRef<DialogAbonoIndividualComponent>);\r\n    public _matData = inject(MAT_DIALOG_DATA);\r\n    private fb = inject(FormBuilder);\r\n    public form: FormGroup;\r\n    public estadosDatosService = inject(EstadosDatosService);\r\n    private pagoTrabajadoresService = inject(PagoTrabajadoresService);\r\n    private swalService = inject(SwalService);\r\n\r\n    ngOnInit(): void {\r\n        this.createForm();\r\n        const data = this._matData.data;\r\n        const totalNumber  = typeof data.total  === 'string' ? parseFloat(data.total.replace(/[\\$,]/g, '')) : typeof data.total  === 'number' ? data.total : 0;\r\n        const totalAbonoNumber = typeof data.totalAbono  === 'string' ?  parseFloat(data.totalAbono.replace(/[\\$,]/g, '')) : typeof data.totalAbono  === 'number' ? data.totalAbono : 0;\r\n        this.form.get('valor').setValidators([maxAmountValidator(totalNumber, totalAbonoNumber) , Validators.required]);\r\n        this.form.updateValueAndValidity();\r\n    }\r\n\r\n    closeDialog() {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    private createForm() {\r\n        this.form = this.fb.group({\r\n            comprobante: ['', Validators.required],\r\n            valor: ['', Validators.required],\r\n            idPagoTrabajador: [''],\r\n        });\r\n    }\r\n\r\n    onAbono() {\r\n        if(this.form.valid) {\r\n            const dataInput = this._matData.data;\r\n            const data = this.form.getRawValue();\r\n\r\n            const {valor, comprobante} = data;\r\n\r\n            const createData = {\r\n                idPagoTrabajador: dataInput.id,\r\n                valor:  parseFloat(valor),\r\n                comprobante\r\n            }\r\n\r\n            this.pagoTrabajadoresService.pagoTrabajadoresAbono(createData).subscribe((response) => {\r\n                this.estadosDatosService.stateGrid.next(true);\r\n                this.swalService.ToastAler({\r\n                    icon: 'success',\r\n                    title: 'Registro Creado o Actualizado con Exito.',\r\n                    timer: 4000,\r\n                })\r\n                this.closeDialog();\r\n            }, error => {\r\n                this.swalService.ToastAler({\r\n                    icon: 'error',\r\n                    title: 'Ha ocurrido un error al crear el registro!',\r\n                    timer: 4000,\r\n                })\r\n            })\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport function maxAmountValidator(total: number, totalAbono: number): ValidatorFn {\r\n    return (control: AbstractControl): ValidationErrors | null => {\r\n        const value = control.value;\r\n        const maxValue = total - totalAbono;\r\n\r\n        return value >= maxValue ? { maxAmount: { maxValue, actual: value } } : null;\r\n    };\r\n}\r\n\r\n", "<div class=\"relative flex h-full w-full flex-col\">\r\n    <!-- Content -->\r\n    <div\r\n        class=\"flex flex-auto flex-col items-center pb-6 sm:flex-row sm:items-start sm:pb-8\"\r\n    >\r\n        <div class=\"flex h-10 w-10 flex-0 items-center justify-center rounded-full sm:mr-4 bg-blue-100 text-blue-600 dark:bg-blue-600 dark:text-blue-50\"\r\n        >\r\n            <mat-icon\r\n                [svgIcon]=\"'heroicons_solid:question-mark-circle'\"\r\n            >\r\n\r\n            </mat-icon>\r\n        </div>\r\n\r\n        <div class=\"flex flex-col items-center space-y-1 text-center sm:mt-0 sm:items-start sm:pr-8 sm:text-left\">\r\n            <div class=\"text-xl font-medium leading-6\">\r\n                Confirmacion\r\n            </div>\r\n\r\n            <div  class=\"text-secondary\">\r\n                ¿Está seguro de realizar abono?.\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <form class=\"mt-8\" [formGroup]=\"form\">\r\n\r\n        <div class=\"mt-4 flex flex-col items-center space-y-1 text-center sm:mt-0 sm:items-start sm:text-left\">\r\n            <mat-form-field  class=\"w-full min-w-90\" floatLabel=\"always\">\r\n                <mat-label>Número de comprobante</mat-label>\r\n                <input matInput placeholder=\"Comprobante\" [formControlName]=\"'comprobante'\">\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"mt-4 flex flex-col items-center space-y-1 text-center sm:mt-0 sm:items-start sm:text-left\">\r\n            <mat-form-field  class=\"w-full min-w-90\" floatLabel=\"always\">\r\n                <mat-label>Valor abono</mat-label>\r\n                <input matInput placeholder=\"Valor recibido\" [formControlName]=\"'valor'\" mask=\"separator.2\" thousandSeparator=\",\" decimalMarker=\".\" >\r\n                <mat-error *ngIf=\"form.get('valor').dirty || form.get('valor').touched\">\r\n                    <span *ngIf=\"form.get('valor').errors?.maxAmount\">Error el abono no puede ser mayor igual al total, favor realice el pago por cambio de estado.</span>\r\n                </mat-error>\r\n            </mat-form-field>\r\n        </div>\r\n    </form>\r\n\r\n    <div\r\n        class=\"flex items-center justify-center space-x-3 bg-gray-50  py-4 dark:bg-black dark:bg-opacity-10 sm:justify-end\"\r\n    >\r\n        <button mat-stroked-button [matDialogClose]=\"'cancelled'\"\r\n                class=\"sm:w-auto w-full bg-crediorange-100 rounded-lg transition duration-200 text-white font-semibold\">\r\n            Cancelar\r\n        </button>\r\n\r\n        <button\r\n            mat-flat-button\r\n            [color]=\"'primary'\"\r\n            [matDialogClose]=\"'confirmed'\"\r\n            class=\"sm:w-auto w-full bg-crediblue-50  hover:bg-crediblue-100 text-white font-semibold py-2 px-4 rounded-lg transition duration-200\"\r\n            (click)=\"onAbono()\"\r\n            [disabled]=\"form.invalid\"\r\n        >\r\n            Guardar\r\n        </button>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n", "import { Component, inject, OnDestroy, OnInit } from '@angular/core';\r\nimport { CustomTableComponent } from '../../../shared/custom-table/custom-table.component';\r\nimport { MatButton } from '@angular/material/button';\r\nimport { MatFormField } from '@angular/material/form-field';\r\nimport { MatIcon } from '@angular/material/icon';\r\nimport { MatInput } from '@angular/material/input';\r\nimport { CurrencyPipe, DatePipe, NgIf } from '@angular/common';\r\nimport { Subscription, tap } from 'rxjs';\r\nimport { PagoTrabajadoresService } from '../../../../core/services/pago-trabajadores.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { EstadosDatosService } from '../../../../core/services/estados-datos.service';\r\nimport { Router } from '@angular/router';\r\nimport { IButton } from '../../../shared/interfaces/buttonsInterfaces';\r\nimport { FuseAlertComponent } from '../../../../../@fuse/components/alert';\r\nimport { MatTab, MatTabChangeEvent, MatTabContent, MatTabGroup } from '@angular/material/tabs';\r\nimport { CodigoCobroTrabajador } from '../../../../core/enums/codigo-cobro-trabajador';\r\nimport { DialogEstadoComponent } from '../dialog-estado/dialog-estado.component';\r\nimport { DialogAbonoIndividualComponent } from '../dialog-abono-individual/dialog-abono-individual.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-grid-pago-trabajador',\r\n  standalone: true,\r\n    imports: [\r\n        CustomTableComponent,\r\n        MatButton,\r\n        MatFormField,\r\n        MatIcon,\r\n        MatInput,\r\n        FuseAlertComponent,\r\n        MatTab,\r\n        MatTabContent,\r\n        MatTabGroup,\r\n        NgIf,\r\n    ],\r\n    providers: [\r\n        DatePipe,\r\n        CurrencyPipe\r\n    ],\r\n  templateUrl: './grid-pago-trabajador.component.html',\r\n  styleUrl: './grid-pago-trabajador.component.scss'\r\n})\r\nexport class GridPagoTrabajadorComponent implements OnInit, OnDestroy {\r\n    private datePipe = inject(DatePipe);\r\n    public subcription$: Subscription;\r\n    public selectedData: any;\r\n    public searchTerm: string = '';\r\n    private currencyPipe = inject(CurrencyPipe);\r\n\r\n    private pagoTrabajadorService = inject(PagoTrabajadoresService);\r\n    private _matDialog = inject(MatDialog);\r\n    private estadoDatosService = inject(EstadosDatosService)\r\n    private router = inject(Router);\r\n    private selectedTab: any = CodigoCobroTrabajador.PENDIENTES;\r\n    public tabIndex ;\r\n\r\n    data = [];\r\n\r\n    columns = ['Número de pago', 'Identificación', 'Nombres Apellidos', 'Empresa', 'Total', 'Estado' ];\r\n    columnPropertyMap = {\r\n        'Número de pago': 'consecutivo',\r\n        'Identificación': 'numDocumento',\r\n        'Nombres Apellidos': 'nombreTrabajador',\r\n        'Empresa': 'nombreSubempresa',\r\n        'Total': 'total',\r\n        'Estado': 'nombreEstadoCobro',\r\n    };\r\n\r\n    buttons: IButton[] = [\r\n        {\r\n            label: 'Ver',\r\n            icon: 'visibility',\r\n            action: (element) => {\r\n                console.log('Editing', element);\r\n                this.router.navigate(['/pages/gestion-cobros/trabajador/individual/', element.id])\r\n            }\r\n        },\r\n        {\r\n            label: 'Cambiar estado',\r\n            icon: 'published_with_changes',\r\n            action: (element) => {\r\n                console.log('View', element);\r\n                this.selectedData = element;\r\n                this.onCambioEstado();\r\n            }\r\n        },\r\n        {\r\n            label: 'Abonos',\r\n            icon: 'request_quote',\r\n            action: (element) => {\r\n                console.log('View', element);\r\n                this.selectedData = element;\r\n                this.onAbono();\r\n            }\r\n        },\r\n    ];\r\n\r\n    buttonsPagados: IButton[] = [\r\n        {\r\n            label: 'Ver',\r\n            icon: 'visibility',\r\n            action: (element) => {\r\n                console.log('Editing', element);\r\n                this.router.navigate(['/pages/gestion-cobros/trabajador/individual/', element.id])\r\n            }\r\n        },\r\n    ]\r\n\r\n    onCambioEstado(): void {\r\n        this._matDialog.open(DialogEstadoComponent, {\r\n            autoFocus: false,\r\n            data: {\r\n                edit: true,\r\n                data: this.selectedData\r\n            },\r\n            width: '35%',\r\n            disableClose: true,\r\n            panelClass: 'custom-dialog-container'\r\n        })\r\n\r\n    }\r\n\r\n    onAbono(): void {\r\n        this._matDialog.open(DialogAbonoIndividualComponent, {\r\n            autoFocus: false,\r\n            data: {\r\n                edit: true,\r\n                data: this.selectedData\r\n            },\r\n            width: '35%',\r\n            disableClose: true,\r\n            panelClass: 'custom-dialog-container'\r\n        })\r\n    }\r\n\r\n\r\n\r\n    tabChanged = (tabChangeEvent: MatTabChangeEvent): void => {\r\n        this.tabIndex = tabChangeEvent.index;\r\n        this.selectedTab = tabChangeEvent.index == 0 ? CodigoCobroTrabajador.PENDIENTES : CodigoCobroTrabajador.PAGADOS;\r\n        this.getPagoTrabajadores(this.selectedTab);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.getPagoTrabajadores(this.selectedTab);\r\n        this.listenGrid();\r\n    }\r\n\r\n    onNew() {\r\n        this.router.navigate(['/pages/gestion-cobros/trabajador/individual'])\r\n    }\r\n\r\n    public getPagoTrabajadores(params) {\r\n        this.pagoTrabajadorService.getPagoTrabajadorIndividual(params).pipe(\r\n            tap((response) => {\r\n                response.data.forEach((items) => {\r\n                    items.fechaCreacion = this.datePipe.transform(items.fechaCreacion, 'dd/MM/yyyy');\r\n                    items.total = this.currencyPipe.transform(items.total, 'USD', 'symbol', '1.2-2');\r\n                    //items.nombreTrabajador = this.datePipe.transform(items.nombreTrabajador, 'titlecase');\r\n                })\r\n                return response;\r\n            })\r\n\r\n        ).subscribe((response) => {\r\n            if (response.data) {\r\n                this.data = response.data;\r\n            }\r\n\r\n\r\n        })\r\n    }\r\n\r\n    onSearch(event: Event) {\r\n        const target = event.target as HTMLInputElement;\r\n        this.searchTerm = target.value.trim().toLowerCase();\r\n    }\r\n\r\n\r\n\r\n    private listenGrid() {\r\n        const refreshData$ = this.estadoDatosService.stateGrid.asObservable();\r\n\r\n        refreshData$.subscribe((state) => {\r\n            if (state) {\r\n                this.getPagoTrabajadores(this.selectedTab);\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n}\r\n", "<div\r\n    class=\"bg-card flex min-w-0 flex-auto flex-col dark:bg-transparent sm:absolute sm:inset-0 sm:overflow-hidden\"\r\n>\r\n    <div\r\n        class=\"relative flex flex-0 flex-col border-b px-6 py-8 sm:flex-row sm:items-center sm:justify-between md:px-8\"\r\n    >\r\n        <!-- Title -->\r\n        <div class=\"text-3xl font-semibold tracking-tight\">Registro de Cobro Individual</div>\r\n\r\n        <!-- Actions -->\r\n        <div class=\"mt-6 flex w-full shrink-0 flex-col items-center sm:ml-4 sm:mt-0 sm:flex-row sm:space-x-2 sm:w-auto\">\r\n            <!-- Search -->\r\n            <mat-form-field\r\n                class=\"fuse-mat-dense rounded-lg w-full sm:w-auto min-w-64\"\r\n                [subscriptSizing]=\"'dynamic'\"\r\n            >\r\n                <mat-icon\r\n                    class=\"icon-size-5\"\r\n                    matPrefix\r\n                    [svgIcon]=\"'heroicons_solid:magnifying-glass'\"\r\n                ></mat-icon>\r\n                <input\r\n                    matInput\r\n                    [autocomplete]=\"'off'\"\r\n                    [placeholder]=\"'Buscar'\"\r\n                    (input)=\"onSearch($event)\"\r\n                />\r\n            </mat-form-field>\r\n            <!-- Add product button -->\r\n            <button\r\n                class=\"mt-2 w-full bg-crediblue-50 rounded-lg transition duration-200 text-white font-semibold sm:ml-4 sm:mt-0 sm:w-auto\"\r\n                mat-flat-button\r\n                [color]=\"'primary'\"\r\n                (click)=\"onNew()\"\r\n            >\r\n                <mat-icon [svgIcon]=\"'heroicons_outline:plus'\"></mat-icon>\r\n                <span class=\"ml-2 mr-1\">Registrar</span>\r\n            </button>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <!--Main-->\r\n    <div class=\"flex flex-auto overflow-hidden\">\r\n        <!-- Products list -->\r\n        <div\r\n            class=\"flex flex-auto flex-col overflow-hidden sm:mb-18 sm:overflow-y-auto\"\r\n        >\r\n            <mat-tab-group\r\n                class=\"sm:px-2\"\r\n                mat-stretch-tabs=\"false\"\r\n                [animationDuration]=\"'500'\"\r\n                [(selectedIndex)]=\"tabIndex\"\r\n                #tabGroup (selectedTabChange)=\"tabChanged($event)\"\r\n            >\r\n                <mat-tab label=\"Pendientes\">\r\n                    <ng-template matTabContent>\r\n                        <ng-container *ngIf=\"data.length; else noData\">\r\n                            <app-custom-table\r\n                                [columns]=\"columns\"\r\n                                [displayedColumns]=\"columns\"\r\n                                [columnPropertyMap]=\"columnPropertyMap\"\r\n                                [data]=\"data\"\r\n                                [buttons]=\"buttons\"\r\n                                [searchTerm]=\"searchTerm\"\r\n                            ></app-custom-table>\r\n                        </ng-container>\r\n                        <ng-template #noData>\r\n                            <div class=\"inset-0 min-w-0 overflow-auto print:overflow-visible\">\r\n\r\n                                <div class=\"inline-block p-4 sm:p-2 print:p-0 w-full\">\r\n                                    <fuse-alert\r\n                                        [type]=\"'info'\"\r\n                                        [appearance]=\"'outline'\">\r\n                                        <span fuseAlertTitle>Información</span>\r\n                                        No hay pagos pendientes hasta el momento.\r\n                                    </fuse-alert>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </ng-template>\r\n                    </ng-template>\r\n                </mat-tab>\r\n                <mat-tab label=\"Pagados\">\r\n                    <ng-template matTabContent>\r\n                        <ng-container *ngIf=\"data.length; else noData\">\r\n                            <app-custom-table\r\n                                [columns]=\"columns\"\r\n                                [displayedColumns]=\"columns\"\r\n                                [columnPropertyMap]=\"columnPropertyMap\"\r\n                                [data]=\"data\"\r\n                                [buttons]=\"buttonsPagados\"\r\n                                [searchTerm]=\"searchTerm\"\r\n                            ></app-custom-table>\r\n                        </ng-container>\r\n                        <ng-template #noData>\r\n                            <div class=\"inset-0 min-w-0 overflow-auto print:overflow-visible\">\r\n\r\n                                <div class=\"inline-block p-4 sm:p-2 print:p-0 w-full\">\r\n                                    <fuse-alert\r\n                                        [type]=\"'info'\"\r\n                                        [appearance]=\"'outline'\">\r\n                                        <span fuseAlertTitle>Información</span>\r\n                                        No hay pagos hasta el momento.\r\n                                    </fuse-alert>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </ng-template>\r\n                    </ng-template>\r\n                </mat-tab>\r\n            </mat-tab-group>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n", "import { Component, inject, OnInit } from '@angular/core';\r\nimport { AsyncPipe, CurrencyPipe, DatePipe, DecimalPipe, JsonPipe, NgClass, NgForOf, NgIf } from '@angular/common';\r\nimport { CustomTableComponent } from '../../../shared/custom-table/custom-table.component';\r\nimport { FuseAlertComponent } from '../../../../../@fuse/components/alert';\r\nimport { MatButton } from '@angular/material/button';\r\nimport { MatDatepicker, MatDatepickerInput, MatDatepickerToggle } from '@angular/material/datepicker';\r\nimport { MatError, MatFormField, MatLabel, MatSuffix } from '@angular/material/form-field';\r\nimport { MatInput } from '@angular/material/input';\r\nimport { DateAdapter, MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { MatOption, MatSelect, MatSelectChange } from '@angular/material/select';\r\nimport {\r\n    AbstractControl,\r\n    FormBuilder, FormControl,\r\n    FormGroup,\r\n    ReactiveFormsModule,\r\n    ValidationErrors,\r\n    Validators,\r\n} from '@angular/forms';\r\nimport { IConfig, NgxMaskDirective, provideNgxMask } from 'ngx-mask';\r\nimport { DateAdapterService } from '../../../../core/services/date-adapter.service';\r\nimport { EmpresasClientesService } from '../../../../core/services/empresas-clientes.service';\r\nimport { PagoTrabajadoresService } from '../../../../core/services/pago-trabajadores.service';\r\nimport { CobroTrabajadoresService } from '../../../../core/services/cobro-trabajadores.service';\r\nimport { SwalService } from '../../../../core/services/swal.service';\r\nimport { EstadosDatosService } from '../../../../core/services/estados-datos.service';\r\nimport { FuseConfirmationService } from '../../../../../@fuse/services/confirmation';\r\nimport { Router } from '@angular/router';\r\nimport { confirmarPago } from '../../../../core/constant/dialogs';\r\nimport { map, Observable, startWith, tap } from 'rxjs';\r\nimport { EmpleadosService } from '../../../../core/services/empleados.service';\r\nimport { CdkScrollable } from '@angular/cdk/scrolling';\r\nimport { MatAutocomplete, MatAutocompleteTrigger } from '@angular/material/autocomplete';\r\nimport { AesEncryptionService } from '../../../../core/services/aes-encryption.service';\r\nconst maskConfig: Partial<IConfig> = {\r\n    validation: false,\r\n};\r\n\r\n@Component({\r\n  selector: 'app-form-pago-trabajador',\r\n  standalone: true,\r\n    imports: [\r\n        AsyncPipe,\r\n        CurrencyPipe,\r\n        CustomTableComponent,\r\n        FuseAlertComponent,\r\n        MatButton,\r\n        MatDatepicker,\r\n        MatDatepickerInput,\r\n        MatDatepickerToggle,\r\n        MatFormField,\r\n        MatInput,\r\n        MatLabel,\r\n        MatOption,\r\n        MatSelect,\r\n        MatSuffix,\r\n        NgForOf,\r\n        NgIf,\r\n        ReactiveFormsModule,\r\n        NgClass,\r\n        NgxMaskDirective,\r\n        MatError,\r\n        JsonPipe,\r\n        CdkScrollable,\r\n        MatAutocomplete,\r\n        MatAutocompleteTrigger,\r\n    ],\r\n    providers: [\r\n        { provide: DateAdapter, useClass: DateAdapterService },\r\n        { provide: MAT_DATE_LOCALE, useValue: 'en-GB' },\r\n        DatePipe,\r\n        CurrencyPipe,\r\n        DecimalPipe,\r\n        provideNgxMask(maskConfig)\r\n    ],\r\n  templateUrl: './form-pago-trabajador.component.html',\r\n  styleUrl: './form-pago-trabajador.component.scss'\r\n})\r\nexport class FormPagoTrabajadorComponent  implements OnInit{\r\n    private fb = inject(FormBuilder);\r\n    public form: FormGroup;\r\n    private empresaClienteService = inject(EmpresasClientesService)\r\n    private pagoTrabajadorService = inject(PagoTrabajadoresService);\r\n    private cobroTrabajadorService = inject(CobroTrabajadoresService);\r\n    private datePipe = inject(DatePipe);\r\n    private swalService = inject(SwalService);\r\n    public estadosDatosService = inject(EstadosDatosService);\r\n    public fuseService = inject(FuseConfirmationService);\r\n    private currencyPipe = inject(CurrencyPipe);\r\n    private decimalPipe =  inject(DecimalPipe)\r\n    private router = inject(Router);\r\n    public message: string;\r\n    public selectOptionValue: any;\r\n    private empleadosService = inject(EmpleadosService);\r\n    filteredEmpleados$: Observable<any[]>;\r\n    empleadoControl = new FormControl('');\r\n    private aesEncriptService = inject(AesEncryptionService);\r\n\r\n    empresa$ = this.empresaClienteService.getEmpresasClientes().pipe(\r\n        tap((response) => {\r\n            const valorSelected = response.data;\r\n            if (valorSelected) {\r\n                this.form.get('idSubEmpresa').setValue(valorSelected[0].id)\r\n                this.getEmpleadosSubEmpresas(valorSelected[0].id)\r\n            }\r\n        })\r\n    )\r\n    tipoPago$ = this.pagoTrabajadorService.tipoPagoTrabajadores().pipe(\r\n        tap((response) => {\r\n            const valorSelected = response.data;\r\n            if (valorSelected) {\r\n                this.selectOptionValue = valorSelected\r\n            }\r\n        })\r\n    )\r\n    empleados = [];\r\n    data = [];\r\n    totalPagar: number;\r\n    totalComision: number;\r\n    subtotal: number;\r\n\r\n    columns = ['Empresa', 'N factura / Comprobante', 'Valor pendiente' ];\r\n    columnPropertyMap = {\r\n        'Empresa': 'nombreSubEmpresa',\r\n        'N factura / Comprobante': 'numeroFactura',\r\n        'Valor pendiente': 'valorPendiente',\r\n    };\r\n\r\n    displayFn(empleado: any): string {\r\n        return empleado ? `${empleado.primerNombre} ${empleado.primerApellido}` : '';\r\n    }\r\n\r\n    private _filter(value: string): any[] {\r\n        const filterValue = value.toLowerCase();\r\n        return this.empleados.filter(empleado =>\r\n            `${empleado.primerNombre} ${empleado.primerApellido}`\r\n                .toLowerCase()\r\n                .includes(filterValue)\r\n        );\r\n    }\r\n\r\n    onOptionSelected(event: any) {\r\n        // Aquí puedes emitir el id del trabajador al formulario padre\r\n        const selectedEmpleado = event.option.value;\r\n        this.empleadoControl.setValue(selectedEmpleado);\r\n        // Si estás usando reactive forms en el componente padre:\r\n        this.form.get('idTrabajador').setValue(selectedEmpleado.id);\r\n    }\r\n\r\n    private createForm() {\r\n        this.form = this.fb.group({\r\n            fechaFinal: ['', Validators.required],\r\n            idSubEmpresa: ['', Validators.required],\r\n            idTrabajador: ['', Validators.required],\r\n            observacion: [''],\r\n        })\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.createForm();\r\n\r\n        this.filteredEmpleados$ = this.empleadoControl.valueChanges.pipe(\r\n            startWith(''),\r\n            map((value: any) => {\r\n                const name = typeof value === 'string' ? value : value?.primerNombre || value?.primerApellido;\r\n                return name ? this._filter(name) : this.empleados.slice();\r\n            })\r\n        );\r\n    }\r\n\r\n    actualizaSelected(inputValue: number) {\r\n        if (inputValue === this.totalPagar) {\r\n            console.log('Si entra al actualizar')\r\n            this.form.get('idTipoPagoTrabajador').setValue(this.selectOptionValue[0].id)\r\n        }else if (inputValue < this.totalPagar) {\r\n            console.log('Si entra al actualizar 2')\r\n            this.form.get('idTipoPagoTrabajador').setValue(this.selectOptionValue[1].id)\r\n        }\r\n    }\r\n\r\n    get valorAbono() {\r\n        return this.form.get('valorAbono');\r\n    }\r\n\r\n    maxAmountValidator(control: AbstractControl): ValidationErrors | null {\r\n\r\n        if (control.value === null || control.value === undefined || control.value === '') {\r\n            return null; // Permite que Validators.required gestione los casos de campo vacío.\r\n        }\r\n\r\n        console.log(control.value)\r\n\r\n        const amount = parseFloat(control.value.toString().replace(/,/g, ''));\r\n        console.log(amount)\r\n\r\n        if (amount === 0) {\r\n            return {valueZero: true}\r\n        }\r\n\r\n        if (amount > this.totalPagar) {\r\n            console.log('Si entra')\r\n            return { exceedsBalance: true };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    closeDialog() {\r\n        this.router.navigate(['/pages/gestion-cobros/trabajador']);\r\n    }\r\n\r\n    getEmpleadosSubEmpresas(id) {\r\n         this.empleadosService.getEmpleadosSubempresas(id).subscribe((response) => {\r\n             if (response.data) {\r\n                 this.empleados = response.data;\r\n             }\r\n         })\r\n    }\r\n\r\n    selectedEmpleados(event: MatSelectChange) {\r\n        const id = event.value;\r\n         this.empleadosService.getEmpleadosSubempresas(id).subscribe((response) => {\r\n             if (response.data) {\r\n                 this.empleados = response.data;\r\n                 this.empleadoControl.reset('');\r\n             }\r\n         })\r\n    }\r\n\r\n    onGet() {\r\n        if (this.form.valid) {\r\n            const {fechaFinal, idSubEmpresa, idTrabajador } = this.form.getRawValue();\r\n\r\n\r\n            const fechaFinallData = this.datePipe.transform(fechaFinal, 'yyyy-MM-dd')\r\n\r\n            const consulta = {\r\n                fechaFinallData,\r\n                idSubEmpresa,\r\n                idTrabajador\r\n            }\r\n\r\n            console.log(consulta)\r\n\r\n            this.getAllPagoTrabajador(consulta);\r\n\r\n        }\r\n    }\r\n\r\n    onSave() {\r\n        const {fechaFinal, idSubEmpresa, idTrabajador, idTipoPagoTrabajador, ...form } = this.form.getRawValue();\r\n\r\n        const fechaFinallData = this.datePipe.transform(fechaFinal, 'yyyy-MM-dd');\r\n\r\n        const consulta = {\r\n            fechaFinal: fechaFinallData,\r\n            idSubEmpresa\r\n        }\r\n\r\n        let detallePagoTrabajador = []\r\n        detallePagoTrabajador = this.data.map((item) => {\r\n            return {\r\n                idCobroTrabajador: item.id\r\n            }\r\n        })\r\n\r\n        const createData = {\r\n            ...consulta,\r\n            detallePagoTrabajador,\r\n            idTrabajador,\r\n            ...form\r\n        }\r\n\r\n        console.log(createData)\r\n        const dialog = this.fuseService.open({\r\n            ...confirmarPago\r\n        });\r\n\r\n        dialog.afterClosed().subscribe((response) => {\r\n            if (response === 'confirmed') {\r\n                this.postSave(createData)\r\n            }\r\n        })\r\n    }\r\n\r\n    private getAllPagoTrabajador(data) {\r\n        this.cobroTrabajadorService.getCobroTrabajador(data).pipe(\r\n            map((response) => {\r\n                this.subtotal = 0;\r\n                this.totalComision = 0;\r\n                this.totalPagar = 0;\r\n                if (response && Array.isArray(response.data)) {\r\n                    response.data.forEach((items) => {\r\n                        if (items.montoCuota) {\r\n                            items.montoCuota = this.aesEncriptService.decrypt(items.montoCuota);\r\n                        }\r\n                        if (items.valorPendiente) {\r\n                            items.valorPendiente = this.aesEncriptService.decrypt(items.valorPendiente);\r\n                        }\r\n\r\n                        items.montoCuota = this.currencyPipe.transform(items.montoCuota, 'USD', 'symbol', '1.2-2');\r\n                        items.comision = this.currencyPipe.transform(items.comision, 'USD', 'symbol', '1.2-2');\r\n                        items.pagar = this.currencyPipe.transform(items.pagar, 'USD', 'symbol', '1.2-2');\r\n                        items.valorPendiente = this.currencyPipe.transform(items.valorPendiente, 'USD', 'symbol', '1.2-2');\r\n                        //items.porcentajeSubEmpresa = this.decimalPipe.transform(items.porcentajeSubEmpresa, '1.2-2') + '%';\r\n                        items.fechaCobro = this.datePipe.transform(items.fechaCobro, 'dd/MM/yyyy');\r\n\r\n                        //this.subtotal += parseFloat(items.montoConsumo.replace(/[^0-9.-]+/g, ''));\r\n                        //this.totalComision += parseFloat(items.comision.replace(/[^0-9.-]+/g, ''));\r\n                        this.totalPagar += parseFloat(items.valorPendiente.replace(/[^0-9.-]+/g, ''));\r\n                    });\r\n                }else {\r\n                    this.data = [];\r\n                }\r\n                return response\r\n            })\r\n\r\n        ).subscribe((response) => {\r\n            if (response && Array.isArray(response.data)) {\r\n                this.data = response.data;\r\n            }else {\r\n                this.data = [];\r\n                this.message = response.msg;\r\n            }\r\n        })\r\n    }\r\n\r\n    private postSave(data) {\r\n        this.pagoTrabajadorService.postPagoTrabajador(data).subscribe((response) => {\r\n            this.swalService.ToastAler({\r\n                icon: 'success',\r\n                title: 'Registro Creado o Actualizado con Exito.',\r\n                timer: 4000,\r\n            })\r\n            this.estadosDatosService.stateGrid.next(true);\r\n            this.closeDialog();\r\n        }, error => {\r\n            this.swalService.ToastAler({\r\n                icon: 'error',\r\n                title: 'Ha ocurrido un error al crear el registro!',\r\n                timer: 4000,\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n\r\n}\r\n", "<div class=\"bg-card flex min-w-0 flex-auto flex-col dark:bg-transparent sm:inset-0 sm:overflow-hidden\" cdkScrollable>\r\n\r\n    <div\r\n        class=\"mt-8 text-3xl font-semibold leading-tight tracking-tight pl-8 \"\r\n    >\r\n        Cobro Individual\r\n    </div>\r\n\r\n    <div class=\"relative flex flex-0 flex-col border-b px-6 sm:flex-row md:px-8\">\r\n\r\n        <div class=\"mt-6 w-full shrink-0 sm:mt-0 sm:space-x-2 lg:w-full\">\r\n\r\n            <form class=\"mt-8\" [formGroup]=\"form\">\r\n                <div class=\"flex flex-col sm:flex-row gap-2.5\">\r\n                    <mat-form-field  class=\"w-full min-w-90\" floatLabel=\"always\">\r\n                        <mat-label>Fecha de corte</mat-label>\r\n                        <input matInput [matDatepicker]=\"finalPicker\"  [formControlName]=\"'fechaFinal'\" placeholder=\"dd/mm/yyyy\">\r\n                        <mat-datepicker-toggle matIconSuffix [for]=\"finalPicker\"></mat-datepicker-toggle>\r\n                        <mat-datepicker #finalPicker></mat-datepicker>\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field  class=\"w-full min-w-90\" floatLabel=\"always\">\r\n                        <mat-label>Empresa</mat-label>\r\n                        <mat-select placeholder=\"Empresa\" [formControlName]=\"'idSubEmpresa'\"\r\n                                    (selectionChange)=\"selectedEmpleados($event)\"\r\n                        >\r\n                            <ng-container *ngIf=\"empresa$ | async as empresas\">\r\n                                <mat-option [value]=\"item.id\" *ngFor=\"let item of empresas.data\">{{item.razonSocial}}</mat-option>\r\n                            </ng-container>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n\r\n                </div>\r\n\r\n                <div class=\"flex flex-col sm:flex-row gap-2.5\">\r\n\r\n\r\n                    <mat-form-field class=\"w-full min-w-90\" floatLabel=\"always\">\r\n                        <mat-label>Trabajadores</mat-label>\r\n                        <input type=\"text\"\r\n                               placeholder=\"Trabajadores\"\r\n                               matInput\r\n                               [formControl]=\"empleadoControl\"\r\n                               [matAutocomplete]=\"auto\">\r\n                        <mat-autocomplete #auto=\"matAutocomplete\"\r\n                                          [displayWith]=\"displayFn\"\r\n                                          (optionSelected)=\"onOptionSelected($event)\">\r\n                            <mat-option *ngFor=\"let empleado of filteredEmpleados$ | async\"\r\n                                        [value]=\"empleado\">\r\n                                {{empleado.primerNombre}} {{empleado.primerApellido}}\r\n                            </mat-option>\r\n                        </mat-autocomplete>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"flex flex-col items-baseline sm:flex-row gap-2.5\" *ngIf=\"data.length\">\r\n\r\n                    <mat-form-field class=\"w-full\" floatLabel=\"always\">\r\n                        <mat-label>Observaciones</mat-label>\r\n                        <textarea matInput placeholder=\"Observaciones\" [formControlName]=\"'observacion'\"></textarea>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n\r\n                <div class=\"relative border border-gray-300 rounded-lg\">\r\n                    <div class=\"absolute -top-3 left-4 bg-white px-2 text-gray-500 font-semibold\">\r\n                        Opciones\r\n                    </div>\r\n                    <div class=\"flex flex-wrap justify-end gap-2.5 sm:mb-4 pr-2 \">\r\n                        <button\r\n                            class=\"sm:w-auto w-full sm:mt-6 bg-credigray-100 rounded-lg transition duration-200 text-white font-semibold\"\r\n                            mat-flat-button\r\n                            [color]=\"'primary'\"\r\n                            (click)=\"closeDialog()\"\r\n                        >\r\n\r\n                            <span> Atras </span>\r\n                        </button>\r\n\r\n                        <button\r\n                            class=\"sm:w-auto w-full sm:mt-6 bg-crediblue-50 rounded-lg transition duration-200 text-white font-semibold\"\r\n                            mat-flat-button\r\n                            [color]=\"'primary'\"\r\n                            (click)=\"onGet()\"\r\n                        >\r\n\r\n                            <span> Consultar </span>\r\n                        </button>\r\n\r\n                        <button\r\n                            class=\"lg:w-auto w-full sm:mt-6 transition duration-200 text-white font-semibold rounded-lg md:w-auto\"\r\n                            [ngClass]=\"{'bg-credigray-100' : data.length == 0,  'bg-green-600' : data.length > 0 }\"\r\n                            mat-flat-button\r\n                            (click)=\"onSave()\"\r\n                            [disabled]=\"data.length == 0 || form.invalid\"\r\n                        >\r\n                            <span> Registrar </span>\r\n                        </button>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    @if (data.length) {\r\n        <div class=\"flex flex-auto overflow-hidden \">\r\n            <!-- Products list -->\r\n            <div\r\n                class=\"flex flex-auto flex-col overflow-hidden sm:p-4 sm:mb-10 sm:overflow-y-auto\"\r\n            >\r\n                <p class=\"text-lg text-black font-semibold mb-4\">Movimientos</p>\r\n\r\n                <app-custom-table\r\n                    [columns]=\"columns\"\r\n                    [displayedColumns]=\"columns\"\r\n                    [columnPropertyMap]=\"columnPropertyMap\"\r\n                    [data]=\"data\"\r\n                ></app-custom-table>\r\n            </div>\r\n\r\n        </div>\r\n    } @else if (message) {\r\n        <div class=\"inset-0 min-w-0 overflow-auto print:overflow-visible\">\r\n\r\n            <div class=\"inline-block p-4 sm:p-8 print:p-0 w-full\">\r\n                <fuse-alert\r\n                    [type]=\"'info'\"\r\n                    [appearance]=\"'outline'\">\r\n                    <span fuseAlertTitle>Información</span>\r\n                    {{message}}\r\n                </fuse-alert>\r\n            </div>\r\n\r\n        </div>\r\n    }\r\n\r\n    <div class=\"flex flex-col gap-4 justify-end sm:flex-row\">\r\n        @if(subtotal) {\r\n            <span class=\"sm:pr-4 text-gray-600 font-bold text-right \" >Subtotal:\r\n               <span class=\"text-gray-800\">{{subtotal | currency}}</span>\r\n            </span>\r\n        }\r\n\r\n        @if(totalComision) {\r\n            <span class=\"sm:pr-4 text-gray-600 font-bold text-right \" >Comisiones:\r\n                <span class=\"text-gray-800\">{{totalComision | currency}}</span>\r\n            </span>\r\n        }\r\n\r\n        @if(totalPagar) {\r\n            <span class=\"sm:pr-4 text-gray-600 font-bold text-right \" >Total a pagar:\r\n                <span class=\"text-gray-800\">\r\n                    {{totalPagar | currency}}\r\n                </span>\r\n            </span>\r\n        }\r\n    </div>\r\n\r\n\r\n\r\n\r\n</div>\r\n", "import { Component, inject, OnDestroy, OnInit } from '@angular/core';\r\nimport { DateAdapter, MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { DateAdapterService } from '../../../../core/services/date-adapter.service';\r\nimport { CurrencyPipe, DatePipe, DecimalPipe, NgForOf } from '@angular/common';\r\nimport { IConfig, provideNgxMask } from 'ngx-mask';\r\nimport { FuseConfirmationService } from '../../../../../@fuse/services/confirmation';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { map, Subscription } from 'rxjs';\r\nimport { PagoTrabajadoresService } from '../../../../core/services/pago-trabajadores.service';\r\nimport { CdkScrollable } from '@angular/cdk/scrolling';\r\n\r\nconst maskConfig: Partial<IConfig> = {\r\n    validation: false,\r\n};\r\n\r\n@Component({\r\n  selector: 'app-form-view-pago-trabajador',\r\n  standalone: true,\r\n    imports: [\r\n        CdkScrollable,\r\n        CurrencyPipe,\r\n        DatePipe,\r\n        NgForOf,\r\n    ],\r\n  templateUrl: './form-view-pago-trabajador.component.html',\r\n  styleUrl: './form-view-pago-trabajador.component.scss',\r\n    providers: [\r\n        { provide: DateAdapter, useClass: DateAdapterService },\r\n        { provide: MAT_DATE_LOCALE, useValue: 'en-GB' },\r\n        DatePipe,\r\n        CurrencyPipe,\r\n        DecimalPipe,\r\n        provideNgxMask(maskConfig)\r\n    ],\r\n})\r\nexport class FormViewPagoTrabajadorComponent  implements OnInit, OnDestroy  {\r\n\r\n    public fuseService = inject(FuseConfirmationService);\r\n    private currencyPipe = inject(CurrencyPipe);\r\n    private decimalPipe =  inject(DecimalPipe)\r\n    private router = inject(Router);\r\n    private activatedRoute = inject(ActivatedRoute);\r\n    private datePipe = inject(DatePipe);\r\n    public subcription$: Subscription;\r\n    private pagoTrabajadorService = inject(PagoTrabajadoresService);\r\n    public detalleFactura: any;\r\n    public totalAbonos: number = 0;\r\n\r\n    ngOnDestroy(): void {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        const id = this.activatedRoute.snapshot.paramMap.get('id');\r\n        this.getPagoIndividual(id);\r\n    }\r\n\r\n    getPagoIndividual(id) {\r\n        this.subcription$ = this.pagoTrabajadorService.getPagosTrabajadorIndividual(id).pipe(\r\n            map((response) => {\r\n                if (response.data.abonosPagos) {\r\n                    response.data.abonosPagos.forEach((items) => {\r\n                        this.totalAbonos += items.valor;\r\n                    })\r\n                    return response;\r\n                }\r\n\r\n            })\r\n        ).subscribe((response) => {\r\n            if (response.data) {\r\n                this.detalleFactura = response.data;\r\n            }\r\n        })\r\n    }\r\n\r\n}\r\n", "@if(detalleFactura) {\r\n    <div class=\"absolute inset-0 min-w-0 overflow-auto text-center print:overflow-visible\" cdkScrollable>\r\n        <!-- Main -->\r\n        <div class=\"inline-block p-6 text-left sm:p-10 print:p-0\">\r\n            <!-- Invoice -->\r\n            <div class=\"bg-card w-240 rounded-2xl p-16 shadow print:w-auto print:rounded-none print:bg-transparent print:shadow-none\">\r\n                <div class=\"flex items-start justify-between\">\r\n                    <div class=\"grid grid-cols-2 gap-x-4 gap-y-1\">\r\n                        <div class=\"text-secondary text-2xl tracking-tight\">\r\n                            Número de pago\r\n                        </div>\r\n                        <div class=\"text-2xl\">{{detalleFactura.consecutivo}}</div>\r\n                        <div class=\"text-md mt-6\">\r\n                            <div class=\"text-xl font-medium\">Trabajador: {{detalleFactura.nombreTrabajador}}</div>\r\n                        </div>\r\n                        <div class=\"text-secondary font-medium tracking-tight col-span-2\"></div>\r\n                        <div class=\"text-secondary font-medium tracking-tight\">\r\n                            Periodo inicial\r\n                        </div>\r\n                        <div class=\"font-medium\">{{detalleFactura.fechaIncial | date: 'dd/MM/yyyy'}}</div>\r\n                        <div class=\"text-secondary font-medium tracking-tight\">\r\n                            Periodo final\r\n                        </div>\r\n                        <div class=\"font-medium\">{{detalleFactura.fechaFinal | date: 'dd/MM/yyyy'}}</div>\r\n                        <div class=\"text-secondary font-medium tracking-tight\">\r\n                            Total\r\n                        </div>\r\n                        <div class=\"font-medium\">{{detalleFactura.total | currency: 'USD'}}</div>\r\n                        <div class=\"text-secondary font-medium tracking-tight\">\r\n                            Estado\r\n                        </div>\r\n                        <div class=\"font-medium\">{{detalleFactura.nombreEstadoCobro}}</div>\r\n                    </div>\r\n                    <div class=\"dark -mr-16 grid auto-cols-max grid-flow-col gap-x-8 rounded-l-2xl bg-accent px-8 py-6\">\r\n                        <div class=\"w-24 place-self-center\">\r\n                            <img class=\"w-24\" src=\"images/logo/logo-blanco.svg\" />\r\n                        </div>\r\n                        <div class=\"border-l pl-10 text-md\">\r\n                            <div>Calle 70B Cra 41 # 187</div>\r\n                            <div>Barranquilla - Atlantico</div>\r\n                            <div>+57 301 2523319</div>\r\n                            <div>info&#64;crediplus.com.co</div>\r\n                            <a target=\"_blank\" href=\"https://crediplus.com.co\">crediplus.com.co</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"mt-12 grid grid-cols-12 gap-x-1\">\r\n                    <!-- Sección de Detalles de Pago -->\r\n                    <div class=\"col-span-12 text-xl font-bold mb-4\">\r\n                        Detalles de Pago\r\n                    </div>\r\n                    <div class=\"text-secondary col-span-4 text-lg font-medium\">\r\n                        Nombre completo\r\n                    </div>\r\n                    <div class=\"text-secondary col-span-4 text-lg font-medium\">\r\n                        Factura No\r\n                    </div>\r\n                    <div class=\"text-secondary col-span-4 text-right text-lg font-medium\">\r\n                        Valor\r\n                    </div>\r\n                    <div class=\"col-span-12 my-4 border-b\"></div>\r\n                    <ng-container *ngFor=\"let item of detalleFactura.detallePagoTrabajador\">\r\n                        <div class=\"col-span-4 text-md tracking-tight\">\r\n                            {{ item.nombreCompleto }}\r\n                        </div>\r\n                        <div class=\"col-span-4 text-md tracking-tight\">\r\n                            {{ item.numeroFactura }}\r\n                        </div>\r\n                        <div class=\"col-span-4 self-center text-right\">\r\n                            {{ item.valorPago | currency: 'USD' }}\r\n                        </div>\r\n                        <div class=\"col-span-12 my-4 border-b\"></div>\r\n                    </ng-container>\r\n\r\n                    <!-- Sección de Abonos -->\r\n                    @if (detalleFactura.abonosPagos.length > 0) {\r\n                        <div class=\"col-span-12 text-xl font-bold mt-8 mb-4\">\r\n                            Abonos Realizados\r\n                        </div>\r\n                        <div class=\"text-secondary col-span-4 text-lg font-medium\">\r\n                            Fecha de abono\r\n                        </div>\r\n                        <div class=\"text-secondary col-span-4  text-lg font-medium\">\r\n                            Factura No\r\n                        </div>\r\n                        <div class=\"text-secondary col-span-4 text-right text-lg  font-medium\">\r\n                            Valor abonado\r\n                        </div>\r\n                        <div class=\"col-span-12 my-4 border-b\"></div>\r\n\r\n                        <ng-container *ngFor=\"let abono of detalleFactura.abonosPagos\">\r\n                            <div class=\"col-span-4 text-md tracking-tight\">\r\n                                {{ abono.fechaCreacion | date: 'dd/MM/yyyy' }}\r\n                            </div>\r\n                            <div class=\"col-span-4 self-center tracking-tight\">\r\n                                {{ abono.comprobante }}\r\n                            </div>\r\n                            <div class=\"col-span-4 text-md text-right \">\r\n                                {{ abono.valor | currency: 'USD' }}\r\n                            </div>\r\n                            <div class=\"col-span-12 my-4 border-b\"></div>\r\n                        </ng-container>\r\n                    }\r\n\r\n                    <!-- Spacer -->\r\n                    <div class=\"col-span-12 mt-16\"></div>\r\n\r\n                    <!-- Subtotal -->\r\n                    <div class=\"text-secondary col-span-2 self-center font-medium tracking-tight\">\r\n                        Observaciones\r\n                    </div>\r\n                    <div class=\"col-span-10 text-right text-lg\">{{detalleFactura.observacion}}</div>\r\n                   <!-- <div class=\"text-secondary col-span-10 self-center font-medium tracking-tight\">\r\n                        Subtotal\r\n                    </div>\r\n                    <div class=\"col-span-2 text-right text-lg\">{{detalleFactura.total | currency: 'USD'}}</div>-->\r\n\r\n                    <!-- Divider -->\r\n                    <div class=\"col-span-12 my-3 border-b\"></div>\r\n\r\n                    <!-- Total -->\r\n                    <div class=\"text-secondary col-span-10 self-center text-2xl font-medium tracking-tight\">\r\n                        Total a cobrar\r\n                    </div>\r\n                    <div class=\"col-span-2 text-right text-2xl font-medium\">\r\n                        {{(detalleFactura.total - totalAbonos) | currency: 'USD'}}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n", "import { Routes } from '@angular/router';\r\nimport { GridPagoTrabajadorComponent } from './grid-pago-trabajador/grid-pago-trabajador.component';\r\nimport { FormPagoTrabajadorComponent } from './form-pago-trabajador/form-pago-trabajador.component';\r\nimport { FormViewPagoTrabajadorComponent } from './form-view-pago-trabajador/form-view-pago-trabajador.component';\r\n\r\nexport default [\r\n    {\r\n        path: '',\r\n        component: GridPagoTrabajadorComponent\r\n    },\r\n    {\r\n        path: 'individual',\r\n        component: FormPagoTrabajadorComponent\r\n    },\r\n    {\r\n        path: 'individual/:id',\r\n        component: FormViewPagoTrabajadorComponent\r\n    },\r\n\r\n\r\n] as Routes;\r\n"],
  "mappings": "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",
  "names": ["maskConfig", "maskConfig", "maskConfig"]
}
