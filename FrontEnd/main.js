import {
  UsuariosService
} from "./chunk-4U6YC6GB.js";
import {
  MAT_AUTOCOMPLETE_SCROLL_STRATEGY,
  MatAutocomplete,
  MatAutocompleteModule,
  MatAutocompleteTrigger
} from "./chunk-HUPCGCVI.js";
import {
  MatDivider,
  MatDividerModule
} from "./chunk-LPU4EPA2.js";
import {
  MatSlideToggle,
  MatSlideToggleModule
} from "./chunk-ITBHXC67.js";
import {
  SwalService
} from "./chunk-WCR4YL2S.js";
import {
  MatTooltip,
  MatTooltipModule
} from "./chunk-NACP6IOB.js";
import {
  FuseConfirmationService,
  assign_default,
  cloneDeep_default,
  compact_default,
  fromPairs_default,
  guardar,
  merge_default,
  omit_default
} from "./chunk-HUKVMAZY.js";
import {
  CdkTextareaAutosize,
  DefaultValueAccessor,
  FormBuilder,
  FormControlDirective,
  FormControlName,
  FormGroupDirective,
  FormsModule,
  MAT_FORM_FIELD_DEFAULT_OPTIONS,
  MatError,
  MatFormField,
  MatFormFieldModule,
  MatInput,
  MatInputModule,
  MatLabel,
  MatPrefix,
  NgControlStatus,
  NgControlStatusGroup,
  ReactiveFormsModule,
  RequiredValidator,
  TextFieldModule,
  UntypedFormBuilder,
  UntypedFormControl,
  Validators,
  ɵNgNoValidate
} from "./chunk-IZMZQUCC.js";
import {
  AuthService,
  AuthUtils,
  UserService
} from "./chunk-F2FVRPPM.js";
import {
  require_core,
  require_enc_base64,
  require_hmac,
  require_sha256
} from "./chunk-4LX6KC25.js";
import {
  ActivatedRoute,
  NavigationEnd,
  PreloadAllModules,
  Router,
  RouterLink,
  RouterLinkActive,
  RouterOutlet,
  provideRouter,
  withInMemoryScrolling,
  withPreloading
} from "./chunk-L2WXMDPA.js";
import {
  MatDialog,
  MatDialogClose,
  MatDialogModule,
  MatDialogRef
} from "./chunk-GRFMDZQD.js";
import {
  DateTime,
  Info,
  MatMenu,
  MatMenuItem,
  MatMenuModule,
  MatMenuTrigger
} from "./chunk-RG7FFAHP.js";
import {
  Overlay,
  ScrollStrategyOptions,
  TemplatePortal
} from "./chunk-74CJHXHU.js";
import {
  FuseUtilsService,
  fuseAnimations
} from "./chunk-G7E77ZCS.js";
import {
  environment
} from "./chunk-ROMZC4L4.js";
import {
  ANIMATION_MODULE_TYPE,
  APP_INITIALIZER,
  AUTO_STYLE,
  AnimationBuilder,
  AnimationGroupPlayer,
  AnimationMetadataType,
  ApplicationRef,
  BehaviorSubject,
  BreakpointObserver,
  BrowserModule,
  ChangeDetectionStrategy,
  ChangeDetectorRef,
  CommonModule,
  Component,
  DOCUMENT,
  DateAdapter,
  DatePipe,
  Directive,
  DomRendererFactory2,
  DomSanitizer,
  EMPTY,
  ENVIRONMENT_INITIALIZER,
  ElementRef,
  EventEmitter,
  HttpClient,
  HttpErrorResponse,
  HttpResponse,
  Inject,
  Injectable,
  InjectionToken,
  Injector,
  Input,
  MATERIAL_SANITY_CHECKS,
  MAT_DATE_FORMATS,
  MAT_DATE_LOCALE,
  MatButton,
  MatButtonModule,
  MatCommonModule,
  MatIcon,
  MatIconButton,
  MatIconModule,
  MatIconRegistry,
  MatOptgroup,
  MatOption,
  MatOptionModule,
  NEVER,
  NgClass,
  NgModule,
  NgTemplateOutlet,
  NgZone,
  NoopAnimationPlayer,
  Observable,
  Optional,
  Output,
  PLATFORM_ID,
  Pipe,
  Platform,
  Renderer2,
  RendererFactory2,
  ReplaySubject,
  RuntimeError,
  Subject,
  TemplateRef,
  ViewContainerRef,
  ViewEncapsulation$1,
  animate,
  bootstrapApplication,
  catchError,
  coerceBooleanProperty,
  combineLatest,
  concat,
  debounceTime,
  defer,
  delay,
  filter,
  finalize,
  firstValueFrom,
  forkJoin,
  from,
  fromEvent,
  importProvidersFrom,
  inject,
  isDevMode,
  isPlatformBrowser,
  makeEnvironmentProviders,
  map,
  merge,
  numberAttribute,
  of,
  performanceMarkFeature,
  provideHttpClient,
  publish,
  retry,
  sequence,
  setClassMetadata,
  shareReplay,
  style,
  switchMap,
  take,
  takeUntil,
  tap,
  throwError,
  withInterceptors,
  ɵPRE_STYLE,
  ɵsetClassDebugInfo,
  ɵɵInputTransformsFeature,
  ɵɵNgOnChangesFeature,
  ɵɵProvidersFeature,
  ɵɵStandaloneFeature,
  ɵɵadvance,
  ɵɵattribute,
  ɵɵclassMap,
  ɵɵclassProp,
  ɵɵcomponentInstance,
  ɵɵconditional,
  ɵɵdefineComponent,
  ɵɵdefineDirective,
  ɵɵdefineInjectable,
  ɵɵdefineInjector,
  ɵɵdefineNgModule,
  ɵɵdefinePipe,
  ɵɵdirectiveInject,
  ɵɵelement,
  ɵɵelementContainer,
  ɵɵelementContainerEnd,
  ɵɵelementContainerStart,
  ɵɵelementEnd,
  ɵɵelementStart,
  ɵɵgetCurrentView,
  ɵɵgetInheritedFactory,
  ɵɵinject,
  ɵɵlistener,
  ɵɵloadQuery,
  ɵɵnamespaceHTML,
  ɵɵnamespaceSVG,
  ɵɵnextContext,
  ɵɵpipe,
  ɵɵpipeBind2,
  ɵɵprojection,
  ɵɵprojectionDef,
  ɵɵproperty,
  ɵɵpureFunction0,
  ɵɵpureFunction1,
  ɵɵpureFunction2,
  ɵɵpureFunction3,
  ɵɵpureFunction4,
  ɵɵpureFunction5,
  ɵɵqueryRefresh,
  ɵɵreference,
  ɵɵrepeater,
  ɵɵrepeaterCreate,
  ɵɵrepeaterTrackByIdentity,
  ɵɵresetView,
  ɵɵrestoreView,
  ɵɵsanitizeHtml,
  ɵɵsanitizeUrl,
  ɵɵstyleMap,
  ɵɵstyleProp,
  ɵɵtemplate,
  ɵɵtemplateRefExtractor,
  ɵɵtext,
  ɵɵtextInterpolate,
  ɵɵtextInterpolate1,
  ɵɵviewQuery
} from "./chunk-WGDVSMOG.js";
import {
  __commonJS,
  __objRest,
  __spreadProps,
  __spreadValues,
  __toESM
} from "./chunk-AYDYM6RQ.js";

// node_modules/crypto-js/enc-utf8.js
var require_enc_utf8 = __commonJS({
  "node_modules/crypto-js/enc-utf8.js"(exports, module) {
    (function(root, factory) {
      if (typeof exports === "object") {
        module.exports = exports = factory(require_core());
      } else if (typeof define === "function" && define.amd) {
        define(["./core"], factory);
      } else {
        factory(root.CryptoJS);
      }
    })(exports, function(CryptoJS) {
      return CryptoJS.enc.Utf8;
    });
  }
});

// node_modules/crypto-js/hmac-sha256.js
var require_hmac_sha256 = __commonJS({
  "node_modules/crypto-js/hmac-sha256.js"(exports, module) {
    (function(root, factory, undef) {
      if (typeof exports === "object") {
        module.exports = exports = factory(require_core(), require_sha256(), require_hmac());
      } else if (typeof define === "function" && define.amd) {
        define(["./core", "./sha256", "./hmac"], factory);
      } else {
        factory(root.CryptoJS);
      }
    })(exports, function(CryptoJS) {
      return CryptoJS.HmacSHA256;
    });
  }
});

// src/app/app.component.ts
var _AppComponent = class _AppComponent {
  /**
   * Constructor
   */
  constructor() {
  }
};
_AppComponent.\u0275fac = function AppComponent_Factory(t) {
  return new (t || _AppComponent)();
};
_AppComponent.\u0275cmp = /* @__PURE__ */ \u0275\u0275defineComponent({ type: _AppComponent, selectors: [["app-root"]], standalone: true, features: [\u0275\u0275StandaloneFeature], decls: 1, vars: 0, template: function AppComponent_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "router-outlet");
  }
}, dependencies: [RouterOutlet, CommonModule], styles: ["\n\n[_nghost-%COMP%] {\n  display: flex;\n  flex: 1 1 auto;\n  width: 100%;\n  height: 100%;\n}\n/*# sourceMappingURL=app.component.css.map */"] });
var AppComponent = _AppComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && \u0275setClassDebugInfo(AppComponent, { className: "AppComponent", filePath: "src\\app\\app.component.ts", lineNumber: 12 });
})();

// node_modules/@angular/material-luxon-adapter/fesm2022/material-luxon-adapter.mjs
var MAT_LUXON_DATE_ADAPTER_OPTIONS = new InjectionToken("MAT_LUXON_DATE_ADAPTER_OPTIONS", {
  providedIn: "root",
  factory: MAT_LUXON_DATE_ADAPTER_OPTIONS_FACTORY
});
function MAT_LUXON_DATE_ADAPTER_OPTIONS_FACTORY() {
  return {
    useUtc: false,
    firstDayOfWeek: 0,
    defaultOutputCalendar: "gregory"
  };
}
function range(length, valueFunction) {
  const valuesArray = Array(length);
  for (let i = 0; i < length; i++) {
    valuesArray[i] = valueFunction(i);
  }
  return valuesArray;
}
var _LuxonDateAdapter = class _LuxonDateAdapter extends DateAdapter {
  constructor(dateLocale, options) {
    super();
    this._useUTC = !!options?.useUtc;
    this._firstDayOfWeek = options?.firstDayOfWeek || 0;
    this._defaultOutputCalendar = options?.defaultOutputCalendar || "gregory";
    this.setLocale(dateLocale || DateTime.local().locale);
  }
  getYear(date) {
    return date.year;
  }
  getMonth(date) {
    return date.month - 1;
  }
  getDate(date) {
    return date.day;
  }
  getDayOfWeek(date) {
    return date.weekday;
  }
  getMonthNames(style2) {
    return Info.months(style2, {
      locale: this.locale,
      outputCalendar: this._defaultOutputCalendar
    });
  }
  getDateNames() {
    const dtf = new Intl.DateTimeFormat(this.locale, {
      day: "numeric",
      timeZone: "utc"
    });
    return range(31, (i) => dtf.format(DateTime.utc(2017, 1, i + 1).toJSDate()));
  }
  getDayOfWeekNames(style2) {
    const days = Info.weekdays(style2, {
      locale: this.locale
    });
    days.unshift(days.pop());
    return days;
  }
  getYearName(date) {
    return date.toFormat("yyyy", this._getOptions());
  }
  getFirstDayOfWeek() {
    return this._firstDayOfWeek;
  }
  getNumDaysInMonth(date) {
    return date.daysInMonth;
  }
  clone(date) {
    return DateTime.fromObject(date.toObject(), this._getOptions());
  }
  createDate(year, month, date) {
    const options = this._getOptions();
    if (month < 0 || month > 11) {
      throw Error(`Invalid month index "${month}". Month index has to be between 0 and 11.`);
    }
    if (date < 1) {
      throw Error(`Invalid date "${date}". Date has to be greater than 0.`);
    }
    const result = this._useUTC ? DateTime.utc(year, month + 1, date, options) : DateTime.local(year, month + 1, date, options);
    if (!this.isValid(result)) {
      throw Error(`Invalid date "${date}". Reason: "${result.invalidReason}".`);
    }
    return result;
  }
  today() {
    const options = this._getOptions();
    return this._useUTC ? DateTime.utc(options) : DateTime.local(options);
  }
  parse(value, parseFormat) {
    const options = this._getOptions();
    if (typeof value == "string" && value.length > 0) {
      const iso8601Date = DateTime.fromISO(value, options);
      if (this.isValid(iso8601Date)) {
        return iso8601Date;
      }
      const formats = Array.isArray(parseFormat) ? parseFormat : [parseFormat];
      if (!parseFormat.length) {
        throw Error("Formats array must not be empty.");
      }
      for (const format of formats) {
        const fromFormat = DateTime.fromFormat(value, format, options);
        if (this.isValid(fromFormat)) {
          return fromFormat;
        }
      }
      return this.invalid();
    } else if (typeof value === "number") {
      return DateTime.fromMillis(value, options);
    } else if (value instanceof Date) {
      return DateTime.fromJSDate(value, options);
    } else if (value instanceof DateTime) {
      return DateTime.fromMillis(value.toMillis(), options);
    }
    return null;
  }
  format(date, displayFormat) {
    if (!this.isValid(date)) {
      throw Error("LuxonDateAdapter: Cannot format invalid date.");
    }
    if (this._useUTC) {
      return date.setLocale(this.locale).setZone("utc").toFormat(displayFormat);
    } else {
      return date.setLocale(this.locale).toFormat(displayFormat);
    }
  }
  addCalendarYears(date, years) {
    return date.reconfigure(this._getOptions()).plus({
      years
    });
  }
  addCalendarMonths(date, months) {
    return date.reconfigure(this._getOptions()).plus({
      months
    });
  }
  addCalendarDays(date, days) {
    return date.reconfigure(this._getOptions()).plus({
      days
    });
  }
  toIso8601(date) {
    return date.toISO();
  }
  /**
   * Returns the given value if given a valid Luxon or null. Deserializes valid ISO 8601 strings
   * (https://www.ietf.org/rfc/rfc3339.txt) and valid Date objects into valid DateTime and empty
   * string into null. Returns an invalid date for all other values.
   */
  deserialize(value) {
    const options = this._getOptions();
    let date;
    if (value instanceof Date) {
      date = DateTime.fromJSDate(value, options);
    }
    if (typeof value === "string") {
      if (!value) {
        return null;
      }
      date = DateTime.fromISO(value, options);
    }
    if (date && this.isValid(date)) {
      return date;
    }
    return super.deserialize(value);
  }
  isDateInstance(obj) {
    return obj instanceof DateTime;
  }
  isValid(date) {
    return date.isValid;
  }
  invalid() {
    return DateTime.invalid("Invalid Luxon DateTime object.");
  }
  /** Gets the options that should be used when constructing a new `DateTime` object. */
  _getOptions() {
    return {
      zone: this._useUTC ? "utc" : void 0,
      locale: this.locale,
      outputCalendar: this._defaultOutputCalendar
    };
  }
};
_LuxonDateAdapter.\u0275fac = function LuxonDateAdapter_Factory(t) {
  return new (t || _LuxonDateAdapter)(\u0275\u0275inject(MAT_DATE_LOCALE, 8), \u0275\u0275inject(MAT_LUXON_DATE_ADAPTER_OPTIONS, 8));
};
_LuxonDateAdapter.\u0275prov = /* @__PURE__ */ \u0275\u0275defineInjectable({
  token: _LuxonDateAdapter,
  factory: _LuxonDateAdapter.\u0275fac
});
var LuxonDateAdapter = _LuxonDateAdapter;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && setClassMetadata(LuxonDateAdapter, [{
    type: Injectable
  }], () => [{
    type: void 0,
    decorators: [{
      type: Optional
    }, {
      type: Inject,
      args: [MAT_DATE_LOCALE]
    }]
  }, {
    type: void 0,
    decorators: [{
      type: Optional
    }, {
      type: Inject,
      args: [MAT_LUXON_DATE_ADAPTER_OPTIONS]
    }]
  }], null);
})();
var MAT_LUXON_DATE_FORMATS = {
  parse: {
    dateInput: "D"
  },
  display: {
    dateInput: "D",
    monthYearLabel: "LLL yyyy",
    dateA11yLabel: "DD",
    monthYearA11yLabel: "LLLL yyyy"
  }
};
var _LuxonDateModule = class _LuxonDateModule {
};
_LuxonDateModule.\u0275fac = function LuxonDateModule_Factory(t) {
  return new (t || _LuxonDateModule)();
};
_LuxonDateModule.\u0275mod = /* @__PURE__ */ \u0275\u0275defineNgModule({
  type: _LuxonDateModule
});
_LuxonDateModule.\u0275inj = /* @__PURE__ */ \u0275\u0275defineInjector({
  providers: [{
    provide: DateAdapter,
    useClass: LuxonDateAdapter,
    deps: [MAT_DATE_LOCALE, MAT_LUXON_DATE_ADAPTER_OPTIONS]
  }]
});
var LuxonDateModule = _LuxonDateModule;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && setClassMetadata(LuxonDateModule, [{
    type: NgModule,
    args: [{
      providers: [{
        provide: DateAdapter,
        useClass: LuxonDateAdapter,
        deps: [MAT_DATE_LOCALE, MAT_LUXON_DATE_ADAPTER_OPTIONS]
      }]
    }]
  }], null, null);
})();
var _MatLuxonDateModule = class _MatLuxonDateModule {
};
_MatLuxonDateModule.\u0275fac = function MatLuxonDateModule_Factory(t) {
  return new (t || _MatLuxonDateModule)();
};
_MatLuxonDateModule.\u0275mod = /* @__PURE__ */ \u0275\u0275defineNgModule({
  type: _MatLuxonDateModule
});
_MatLuxonDateModule.\u0275inj = /* @__PURE__ */ \u0275\u0275defineInjector({
  providers: [provideLuxonDateAdapter()]
});
var MatLuxonDateModule = _MatLuxonDateModule;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && setClassMetadata(MatLuxonDateModule, [{
    type: NgModule,
    args: [{
      providers: [provideLuxonDateAdapter()]
    }]
  }], null, null);
})();
function provideLuxonDateAdapter(formats = MAT_LUXON_DATE_FORMATS) {
  return [{
    provide: DateAdapter,
    useClass: LuxonDateAdapter,
    deps: [MAT_DATE_LOCALE, MAT_LUXON_DATE_ADAPTER_OPTIONS]
  }, {
    provide: MAT_DATE_FORMATS,
    useValue: formats
  }];
}

// node_modules/@angular/animations/fesm2022/browser.mjs
var LINE_START = "\n - ";
function invalidTimingValue(exp) {
  return new RuntimeError(3e3, ngDevMode && `The provided timing value "${exp}" is invalid.`);
}
function negativeStepValue() {
  return new RuntimeError(3100, ngDevMode && "Duration values below 0 are not allowed for this animation step.");
}
function negativeDelayValue() {
  return new RuntimeError(3101, ngDevMode && "Delay values below 0 are not allowed for this animation step.");
}
function invalidStyleParams(varName) {
  return new RuntimeError(3001, ngDevMode && `Unable to resolve the local animation param ${varName} in the given list of values`);
}
function invalidParamValue(varName) {
  return new RuntimeError(3003, ngDevMode && `Please provide a value for the animation param ${varName}`);
}
function invalidNodeType(nodeType) {
  return new RuntimeError(3004, ngDevMode && `Unable to resolve animation metadata node #${nodeType}`);
}
function invalidCssUnitValue(userProvidedProperty, value) {
  return new RuntimeError(3005, ngDevMode && `Please provide a CSS unit value for ${userProvidedProperty}:${value}`);
}
function invalidTrigger() {
  return new RuntimeError(3006, ngDevMode && "animation triggers cannot be prefixed with an `@` sign (e.g. trigger('@foo', [...]))");
}
function invalidDefinition() {
  return new RuntimeError(3007, ngDevMode && "only state() and transition() definitions can sit inside of a trigger()");
}
function invalidState(metadataName, missingSubs) {
  return new RuntimeError(3008, ngDevMode && `state("${metadataName}", ...) must define default values for all the following style substitutions: ${missingSubs.join(", ")}`);
}
function invalidStyleValue(value) {
  return new RuntimeError(3002, ngDevMode && `The provided style string value ${value} is not allowed.`);
}
function invalidParallelAnimation(prop, firstStart, firstEnd, secondStart, secondEnd) {
  return new RuntimeError(3010, ngDevMode && `The CSS property "${prop}" that exists between the times of "${firstStart}ms" and "${firstEnd}ms" is also being animated in a parallel animation between the times of "${secondStart}ms" and "${secondEnd}ms"`);
}
function invalidKeyframes() {
  return new RuntimeError(3011, ngDevMode && `keyframes() must be placed inside of a call to animate()`);
}
function invalidOffset() {
  return new RuntimeError(3012, ngDevMode && `Please ensure that all keyframe offsets are between 0 and 1`);
}
function keyframeOffsetsOutOfOrder() {
  return new RuntimeError(3200, ngDevMode && `Please ensure that all keyframe offsets are in order`);
}
function keyframesMissingOffsets() {
  return new RuntimeError(3202, ngDevMode && `Not all style() steps within the declared keyframes() contain offsets`);
}
function invalidStagger() {
  return new RuntimeError(3013, ngDevMode && `stagger() can only be used inside of query()`);
}
function invalidQuery(selector) {
  return new RuntimeError(3014, ngDevMode && `\`query("${selector}")\` returned zero elements. (Use \`query("${selector}", { optional: true })\` if you wish to allow this.)`);
}
function invalidExpression(expr) {
  return new RuntimeError(3015, ngDevMode && `The provided transition expression "${expr}" is not supported`);
}
function invalidTransitionAlias(alias) {
  return new RuntimeError(3016, ngDevMode && `The transition alias value "${alias}" is not supported`);
}
function triggerBuildFailed(name, errors) {
  return new RuntimeError(3404, ngDevMode && `The animation trigger "${name}" has failed to build due to the following errors:
 - ${errors.map((err) => err.message).join("\n - ")}`);
}
function animationFailed(errors) {
  return new RuntimeError(3502, ngDevMode && `Unable to animate due to the following errors:${LINE_START}${errors.map((err) => err.message).join(LINE_START)}`);
}
function registerFailed(errors) {
  return new RuntimeError(3503, ngDevMode && `Unable to build the animation due to the following errors: ${errors.map((err) => err.message).join("\n")}`);
}
function missingOrDestroyedAnimation() {
  return new RuntimeError(3300, ngDevMode && "The requested animation doesn't exist or has already been destroyed");
}
function createAnimationFailed(errors) {
  return new RuntimeError(3504, ngDevMode && `Unable to create the animation due to the following errors:${errors.map((err) => err.message).join("\n")}`);
}
function missingPlayer(id) {
  return new RuntimeError(3301, ngDevMode && `Unable to find the timeline player referenced by ${id}`);
}
function missingTrigger(phase, name) {
  return new RuntimeError(3302, ngDevMode && `Unable to listen on the animation trigger event "${phase}" because the animation trigger "${name}" doesn't exist!`);
}
function missingEvent(name) {
  return new RuntimeError(3303, ngDevMode && `Unable to listen on the animation trigger "${name}" because the provided event is undefined!`);
}
function unsupportedTriggerEvent(phase, name) {
  return new RuntimeError(3400, ngDevMode && `The provided animation trigger event "${phase}" for the animation trigger "${name}" is not supported!`);
}
function unregisteredTrigger(name) {
  return new RuntimeError(3401, ngDevMode && `The provided animation trigger "${name}" has not been registered!`);
}
function triggerTransitionsFailed(errors) {
  return new RuntimeError(3402, ngDevMode && `Unable to process animations due to the following failed trigger transitions
 ${errors.map((err) => err.message).join("\n")}`);
}
function transitionFailed(name, errors) {
  return new RuntimeError(3505, ngDevMode && `@${name} has failed due to:
 ${errors.map((err) => err.message).join("\n- ")}`);
}
var ANIMATABLE_PROP_SET = /* @__PURE__ */ new Set(["-moz-outline-radius", "-moz-outline-radius-bottomleft", "-moz-outline-radius-bottomright", "-moz-outline-radius-topleft", "-moz-outline-radius-topright", "-ms-grid-columns", "-ms-grid-rows", "-webkit-line-clamp", "-webkit-text-fill-color", "-webkit-text-stroke", "-webkit-text-stroke-color", "accent-color", "all", "backdrop-filter", "background", "background-color", "background-position", "background-size", "block-size", "border", "border-block-end", "border-block-end-color", "border-block-end-width", "border-block-start", "border-block-start-color", "border-block-start-width", "border-bottom", "border-bottom-color", "border-bottom-left-radius", "border-bottom-right-radius", "border-bottom-width", "border-color", "border-end-end-radius", "border-end-start-radius", "border-image-outset", "border-image-slice", "border-image-width", "border-inline-end", "border-inline-end-color", "border-inline-end-width", "border-inline-start", "border-inline-start-color", "border-inline-start-width", "border-left", "border-left-color", "border-left-width", "border-radius", "border-right", "border-right-color", "border-right-width", "border-start-end-radius", "border-start-start-radius", "border-top", "border-top-color", "border-top-left-radius", "border-top-right-radius", "border-top-width", "border-width", "bottom", "box-shadow", "caret-color", "clip", "clip-path", "color", "column-count", "column-gap", "column-rule", "column-rule-color", "column-rule-width", "column-width", "columns", "filter", "flex", "flex-basis", "flex-grow", "flex-shrink", "font", "font-size", "font-size-adjust", "font-stretch", "font-variation-settings", "font-weight", "gap", "grid-column-gap", "grid-gap", "grid-row-gap", "grid-template-columns", "grid-template-rows", "height", "inline-size", "input-security", "inset", "inset-block", "inset-block-end", "inset-block-start", "inset-inline", "inset-inline-end", "inset-inline-start", "left", "letter-spacing", "line-clamp", "line-height", "margin", "margin-block-end", "margin-block-start", "margin-bottom", "margin-inline-end", "margin-inline-start", "margin-left", "margin-right", "margin-top", "mask", "mask-border", "mask-position", "mask-size", "max-block-size", "max-height", "max-inline-size", "max-lines", "max-width", "min-block-size", "min-height", "min-inline-size", "min-width", "object-position", "offset", "offset-anchor", "offset-distance", "offset-path", "offset-position", "offset-rotate", "opacity", "order", "outline", "outline-color", "outline-offset", "outline-width", "padding", "padding-block-end", "padding-block-start", "padding-bottom", "padding-inline-end", "padding-inline-start", "padding-left", "padding-right", "padding-top", "perspective", "perspective-origin", "right", "rotate", "row-gap", "scale", "scroll-margin", "scroll-margin-block", "scroll-margin-block-end", "scroll-margin-block-start", "scroll-margin-bottom", "scroll-margin-inline", "scroll-margin-inline-end", "scroll-margin-inline-start", "scroll-margin-left", "scroll-margin-right", "scroll-margin-top", "scroll-padding", "scroll-padding-block", "scroll-padding-block-end", "scroll-padding-block-start", "scroll-padding-bottom", "scroll-padding-inline", "scroll-padding-inline-end", "scroll-padding-inline-start", "scroll-padding-left", "scroll-padding-right", "scroll-padding-top", "scroll-snap-coordinate", "scroll-snap-destination", "scrollbar-color", "shape-image-threshold", "shape-margin", "shape-outside", "tab-size", "text-decoration", "text-decoration-color", "text-decoration-thickness", "text-emphasis", "text-emphasis-color", "text-indent", "text-shadow", "text-underline-offset", "top", "transform", "transform-origin", "translate", "vertical-align", "visibility", "width", "word-spacing", "z-index", "zoom"]);
function optimizeGroupPlayer(players) {
  switch (players.length) {
    case 0:
      return new NoopAnimationPlayer();
    case 1:
      return players[0];
    default:
      return new AnimationGroupPlayer(players);
  }
}
function normalizeKeyframes$1(normalizer, keyframes, preStyles = /* @__PURE__ */ new Map(), postStyles = /* @__PURE__ */ new Map()) {
  const errors = [];
  const normalizedKeyframes = [];
  let previousOffset = -1;
  let previousKeyframe = null;
  keyframes.forEach((kf) => {
    const offset = kf.get("offset");
    const isSameOffset = offset == previousOffset;
    const normalizedKeyframe = isSameOffset && previousKeyframe || /* @__PURE__ */ new Map();
    kf.forEach((val, prop) => {
      let normalizedProp = prop;
      let normalizedValue = val;
      if (prop !== "offset") {
        normalizedProp = normalizer.normalizePropertyName(normalizedProp, errors);
        switch (normalizedValue) {
          case \u0275PRE_STYLE:
            normalizedValue = preStyles.get(prop);
            break;
          case AUTO_STYLE:
            normalizedValue = postStyles.get(prop);
            break;
          default:
            normalizedValue = normalizer.normalizeStyleValue(prop, normalizedProp, normalizedValue, errors);
            break;
        }
      }
      normalizedKeyframe.set(normalizedProp, normalizedValue);
    });
    if (!isSameOffset) {
      normalizedKeyframes.push(normalizedKeyframe);
    }
    previousKeyframe = normalizedKeyframe;
    previousOffset = offset;
  });
  if (errors.length) {
    throw animationFailed(errors);
  }
  return normalizedKeyframes;
}
function listenOnPlayer(player, eventName, event, callback) {
  switch (eventName) {
    case "start":
      player.onStart(() => callback(event && copyAnimationEvent(event, "start", player)));
      break;
    case "done":
      player.onDone(() => callback(event && copyAnimationEvent(event, "done", player)));
      break;
    case "destroy":
      player.onDestroy(() => callback(event && copyAnimationEvent(event, "destroy", player)));
      break;
  }
}
function copyAnimationEvent(e, phaseName, player) {
  const totalTime = player.totalTime;
  const disabled = player.disabled ? true : false;
  const event = makeAnimationEvent(e.element, e.triggerName, e.fromState, e.toState, phaseName || e.phaseName, totalTime == void 0 ? e.totalTime : totalTime, disabled);
  const data = e["_data"];
  if (data != null) {
    event["_data"] = data;
  }
  return event;
}
function makeAnimationEvent(element, triggerName, fromState, toState, phaseName = "", totalTime = 0, disabled) {
  return {
    element,
    triggerName,
    fromState,
    toState,
    phaseName,
    totalTime,
    disabled: !!disabled
  };
}
function getOrSetDefaultValue(map2, key, defaultValue) {
  let value = map2.get(key);
  if (!value) {
    map2.set(key, value = defaultValue);
  }
  return value;
}
function parseTimelineCommand(command) {
  const separatorPos = command.indexOf(":");
  const id = command.substring(1, separatorPos);
  const action = command.slice(separatorPos + 1);
  return [id, action];
}
var documentElement = /* @__PURE__ */ (() => typeof document === "undefined" ? null : document.documentElement)();
function getParentElement(element) {
  const parent = element.parentNode || element.host || null;
  if (parent === documentElement) {
    return null;
  }
  return parent;
}
function containsVendorPrefix(prop) {
  return prop.substring(1, 6) == "ebkit";
}
var _CACHED_BODY = null;
var _IS_WEBKIT = false;
function validateStyleProperty(prop) {
  if (!_CACHED_BODY) {
    _CACHED_BODY = getBodyNode() || {};
    _IS_WEBKIT = _CACHED_BODY.style ? "WebkitAppearance" in _CACHED_BODY.style : false;
  }
  let result = true;
  if (_CACHED_BODY.style && !containsVendorPrefix(prop)) {
    result = prop in _CACHED_BODY.style;
    if (!result && _IS_WEBKIT) {
      const camelProp = "Webkit" + prop.charAt(0).toUpperCase() + prop.slice(1);
      result = camelProp in _CACHED_BODY.style;
    }
  }
  return result;
}
function validateWebAnimatableStyleProperty(prop) {
  return ANIMATABLE_PROP_SET.has(prop);
}
function getBodyNode() {
  if (typeof document != "undefined") {
    return document.body;
  }
  return null;
}
function containsElement(elm1, elm2) {
  while (elm2) {
    if (elm2 === elm1) {
      return true;
    }
    elm2 = getParentElement(elm2);
  }
  return false;
}
function invokeQuery(element, selector, multi) {
  if (multi) {
    return Array.from(element.querySelectorAll(selector));
  }
  const elem = element.querySelector(selector);
  return elem ? [elem] : [];
}
var _NoopAnimationDriver = class _NoopAnimationDriver {
  /**
   * @returns Whether `prop` is a valid CSS property
   */
  validateStyleProperty(prop) {
    return validateStyleProperty(prop);
  }
  /**
   *
   * @returns Whether elm1 contains elm2.
   */
  containsElement(elm1, elm2) {
    return containsElement(elm1, elm2);
  }
  /**
   * @returns Rhe parent of the given element or `null` if the element is the `document`
   */
  getParentElement(element) {
    return getParentElement(element);
  }
  /**
   * @returns The result of the query selector on the element. The array will contain up to 1 item
   *     if `multi` is  `false`.
   */
  query(element, selector, multi) {
    return invokeQuery(element, selector, multi);
  }
  /**
   * @returns The `defaultValue` or empty string
   */
  computeStyle(element, prop, defaultValue) {
    return defaultValue || "";
  }
  /**
   * @returns An `NoopAnimationPlayer`
   */
  animate(element, keyframes, duration, delay2, easing, previousPlayers = [], scrubberAccessRequested) {
    return new NoopAnimationPlayer(duration, delay2);
  }
};
_NoopAnimationDriver.\u0275fac = function NoopAnimationDriver_Factory(t) {
  return new (t || _NoopAnimationDriver)();
};
_NoopAnimationDriver.\u0275prov = /* @__PURE__ */ \u0275\u0275defineInjectable({
  token: _NoopAnimationDriver,
  factory: _NoopAnimationDriver.\u0275fac
});
var NoopAnimationDriver = _NoopAnimationDriver;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && setClassMetadata(NoopAnimationDriver, [{
    type: Injectable
  }], null, null);
})();
var _AnimationDriver = class _AnimationDriver {
};
_AnimationDriver.NOOP = new NoopAnimationDriver();
var AnimationDriver = _AnimationDriver;
var AnimationStyleNormalizer = class {
};
var ONE_SECOND = 1e3;
var SUBSTITUTION_EXPR_START = "{{";
var SUBSTITUTION_EXPR_END = "}}";
var ENTER_CLASSNAME = "ng-enter";
var LEAVE_CLASSNAME = "ng-leave";
var NG_TRIGGER_CLASSNAME = "ng-trigger";
var NG_TRIGGER_SELECTOR = ".ng-trigger";
var NG_ANIMATING_CLASSNAME = "ng-animating";
var NG_ANIMATING_SELECTOR = ".ng-animating";
function resolveTimingValue(value) {
  if (typeof value == "number") return value;
  const matches2 = value.match(/^(-?[\.\d]+)(m?s)/);
  if (!matches2 || matches2.length < 2) return 0;
  return _convertTimeValueToMS(parseFloat(matches2[1]), matches2[2]);
}
function _convertTimeValueToMS(value, unit) {
  switch (unit) {
    case "s":
      return value * ONE_SECOND;
    default:
      return value;
  }
}
function resolveTiming(timings, errors, allowNegativeValues) {
  return timings.hasOwnProperty("duration") ? timings : parseTimeExpression(timings, errors, allowNegativeValues);
}
function parseTimeExpression(exp, errors, allowNegativeValues) {
  const regex = /^(-?[\.\d]+)(m?s)(?:\s+(-?[\.\d]+)(m?s))?(?:\s+([-a-z]+(?:\(.+?\))?))?$/i;
  let duration;
  let delay2 = 0;
  let easing = "";
  if (typeof exp === "string") {
    const matches2 = exp.match(regex);
    if (matches2 === null) {
      errors.push(invalidTimingValue(exp));
      return {
        duration: 0,
        delay: 0,
        easing: ""
      };
    }
    duration = _convertTimeValueToMS(parseFloat(matches2[1]), matches2[2]);
    const delayMatch = matches2[3];
    if (delayMatch != null) {
      delay2 = _convertTimeValueToMS(parseFloat(delayMatch), matches2[4]);
    }
    const easingVal = matches2[5];
    if (easingVal) {
      easing = easingVal;
    }
  } else {
    duration = exp;
  }
  if (!allowNegativeValues) {
    let containsErrors = false;
    let startIndex = errors.length;
    if (duration < 0) {
      errors.push(negativeStepValue());
      containsErrors = true;
    }
    if (delay2 < 0) {
      errors.push(negativeDelayValue());
      containsErrors = true;
    }
    if (containsErrors) {
      errors.splice(startIndex, 0, invalidTimingValue(exp));
    }
  }
  return {
    duration,
    delay: delay2,
    easing
  };
}
function normalizeKeyframes(keyframes) {
  if (!keyframes.length) {
    return [];
  }
  if (keyframes[0] instanceof Map) {
    return keyframes;
  }
  return keyframes.map((kf) => new Map(Object.entries(kf)));
}
function setStyles(element, styles, formerStyles) {
  styles.forEach((val, prop) => {
    const camelProp = dashCaseToCamelCase(prop);
    if (formerStyles && !formerStyles.has(prop)) {
      formerStyles.set(prop, element.style[camelProp]);
    }
    element.style[camelProp] = val;
  });
}
function eraseStyles(element, styles) {
  styles.forEach((_, prop) => {
    const camelProp = dashCaseToCamelCase(prop);
    element.style[camelProp] = "";
  });
}
function normalizeAnimationEntry(steps) {
  if (Array.isArray(steps)) {
    if (steps.length == 1) return steps[0];
    return sequence(steps);
  }
  return steps;
}
function validateStyleParams(value, options, errors) {
  const params = options.params || {};
  const matches2 = extractStyleParams(value);
  if (matches2.length) {
    matches2.forEach((varName) => {
      if (!params.hasOwnProperty(varName)) {
        errors.push(invalidStyleParams(varName));
      }
    });
  }
}
var PARAM_REGEX = new RegExp(`${SUBSTITUTION_EXPR_START}\\s*(.+?)\\s*${SUBSTITUTION_EXPR_END}`, "g");
function extractStyleParams(value) {
  let params = [];
  if (typeof value === "string") {
    let match;
    while (match = PARAM_REGEX.exec(value)) {
      params.push(match[1]);
    }
    PARAM_REGEX.lastIndex = 0;
  }
  return params;
}
function interpolateParams(value, params, errors) {
  const original = `${value}`;
  const str = original.replace(PARAM_REGEX, (_, varName) => {
    let localVal = params[varName];
    if (localVal == null) {
      errors.push(invalidParamValue(varName));
      localVal = "";
    }
    return localVal.toString();
  });
  return str == original ? value : str;
}
var DASH_CASE_REGEXP = /-+([a-z0-9])/g;
function dashCaseToCamelCase(input) {
  return input.replace(DASH_CASE_REGEXP, (...m) => m[1].toUpperCase());
}
function camelCaseToDashCase(input) {
  return input.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase();
}
function allowPreviousPlayerStylesMerge(duration, delay2) {
  return duration === 0 || delay2 === 0;
}
function balancePreviousStylesIntoKeyframes(element, keyframes, previousStyles) {
  if (previousStyles.size && keyframes.length) {
    let startingKeyframe = keyframes[0];
    let missingStyleProps = [];
    previousStyles.forEach((val, prop) => {
      if (!startingKeyframe.has(prop)) {
        missingStyleProps.push(prop);
      }
      startingKeyframe.set(prop, val);
    });
    if (missingStyleProps.length) {
      for (let i = 1; i < keyframes.length; i++) {
        let kf = keyframes[i];
        missingStyleProps.forEach((prop) => kf.set(prop, computeStyle(element, prop)));
      }
    }
  }
  return keyframes;
}
function visitDslNode(visitor, node, context) {
  switch (node.type) {
    case AnimationMetadataType.Trigger:
      return visitor.visitTrigger(node, context);
    case AnimationMetadataType.State:
      return visitor.visitState(node, context);
    case AnimationMetadataType.Transition:
      return visitor.visitTransition(node, context);
    case AnimationMetadataType.Sequence:
      return visitor.visitSequence(node, context);
    case AnimationMetadataType.Group:
      return visitor.visitGroup(node, context);
    case AnimationMetadataType.Animate:
      return visitor.visitAnimate(node, context);
    case AnimationMetadataType.Keyframes:
      return visitor.visitKeyframes(node, context);
    case AnimationMetadataType.Style:
      return visitor.visitStyle(node, context);
    case AnimationMetadataType.Reference:
      return visitor.visitReference(node, context);
    case AnimationMetadataType.AnimateChild:
      return visitor.visitAnimateChild(node, context);
    case AnimationMetadataType.AnimateRef:
      return visitor.visitAnimateRef(node, context);
    case AnimationMetadataType.Query:
      return visitor.visitQuery(node, context);
    case AnimationMetadataType.Stagger:
      return visitor.visitStagger(node, context);
    default:
      throw invalidNodeType(node.type);
  }
}
function computeStyle(element, prop) {
  return window.getComputedStyle(element)[prop];
}
var DIMENSIONAL_PROP_SET = /* @__PURE__ */ new Set(["width", "height", "minWidth", "minHeight", "maxWidth", "maxHeight", "left", "top", "bottom", "right", "fontSize", "outlineWidth", "outlineOffset", "paddingTop", "paddingLeft", "paddingBottom", "paddingRight", "marginTop", "marginLeft", "marginBottom", "marginRight", "borderRadius", "borderWidth", "borderTopWidth", "borderLeftWidth", "borderRightWidth", "borderBottomWidth", "textIndent", "perspective"]);
var WebAnimationsStyleNormalizer = class extends AnimationStyleNormalizer {
  normalizePropertyName(propertyName, errors) {
    return dashCaseToCamelCase(propertyName);
  }
  normalizeStyleValue(userProvidedProperty, normalizedProperty, value, errors) {
    let unit = "";
    const strVal = value.toString().trim();
    if (DIMENSIONAL_PROP_SET.has(normalizedProperty) && value !== 0 && value !== "0") {
      if (typeof value === "number") {
        unit = "px";
      } else {
        const valAndSuffixMatch = value.match(/^[+-]?[\d\.]+([a-z]*)$/);
        if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {
          errors.push(invalidCssUnitValue(userProvidedProperty, value));
        }
      }
    }
    return strVal + unit;
  }
};
function createListOfWarnings(warnings) {
  const LINE_START2 = "\n - ";
  return `${LINE_START2}${warnings.filter(Boolean).map((warning) => warning).join(LINE_START2)}`;
}
function warnTriggerBuild(name, warnings) {
  (typeof ngDevMode === "undefined" || ngDevMode) && console.warn(`The animation trigger "${name}" has built with the following warnings:${createListOfWarnings(warnings)}`);
}
function warnRegister(warnings) {
  (typeof ngDevMode === "undefined" || ngDevMode) && console.warn(`Animation built with the following warnings:${createListOfWarnings(warnings)}`);
}
function pushUnrecognizedPropertiesWarning(warnings, props) {
  if (props.length) {
    warnings.push(`The following provided properties are not recognized: ${props.join(", ")}`);
  }
}
var ANY_STATE = "*";
function parseTransitionExpr(transitionValue, errors) {
  const expressions = [];
  if (typeof transitionValue == "string") {
    transitionValue.split(/\s*,\s*/).forEach((str) => parseInnerTransitionStr(str, expressions, errors));
  } else {
    expressions.push(transitionValue);
  }
  return expressions;
}
function parseInnerTransitionStr(eventStr, expressions, errors) {
  if (eventStr[0] == ":") {
    const result = parseAnimationAlias(eventStr, errors);
    if (typeof result == "function") {
      expressions.push(result);
      return;
    }
    eventStr = result;
  }
  const match = eventStr.match(/^(\*|[-\w]+)\s*(<?[=-]>)\s*(\*|[-\w]+)$/);
  if (match == null || match.length < 4) {
    errors.push(invalidExpression(eventStr));
    return expressions;
  }
  const fromState = match[1];
  const separator = match[2];
  const toState = match[3];
  expressions.push(makeLambdaFromStates(fromState, toState));
  const isFullAnyStateExpr = fromState == ANY_STATE && toState == ANY_STATE;
  if (separator[0] == "<" && !isFullAnyStateExpr) {
    expressions.push(makeLambdaFromStates(toState, fromState));
  }
  return;
}
function parseAnimationAlias(alias, errors) {
  switch (alias) {
    case ":enter":
      return "void => *";
    case ":leave":
      return "* => void";
    case ":increment":
      return (fromState, toState) => parseFloat(toState) > parseFloat(fromState);
    case ":decrement":
      return (fromState, toState) => parseFloat(toState) < parseFloat(fromState);
    default:
      errors.push(invalidTransitionAlias(alias));
      return "* => *";
  }
}
var TRUE_BOOLEAN_VALUES = /* @__PURE__ */ new Set(["true", "1"]);
var FALSE_BOOLEAN_VALUES = /* @__PURE__ */ new Set(["false", "0"]);
function makeLambdaFromStates(lhs, rhs) {
  const LHS_MATCH_BOOLEAN = TRUE_BOOLEAN_VALUES.has(lhs) || FALSE_BOOLEAN_VALUES.has(lhs);
  const RHS_MATCH_BOOLEAN = TRUE_BOOLEAN_VALUES.has(rhs) || FALSE_BOOLEAN_VALUES.has(rhs);
  return (fromState, toState) => {
    let lhsMatch = lhs == ANY_STATE || lhs == fromState;
    let rhsMatch = rhs == ANY_STATE || rhs == toState;
    if (!lhsMatch && LHS_MATCH_BOOLEAN && typeof fromState === "boolean") {
      lhsMatch = fromState ? TRUE_BOOLEAN_VALUES.has(lhs) : FALSE_BOOLEAN_VALUES.has(lhs);
    }
    if (!rhsMatch && RHS_MATCH_BOOLEAN && typeof toState === "boolean") {
      rhsMatch = toState ? TRUE_BOOLEAN_VALUES.has(rhs) : FALSE_BOOLEAN_VALUES.has(rhs);
    }
    return lhsMatch && rhsMatch;
  };
}
var SELF_TOKEN = ":self";
var SELF_TOKEN_REGEX = new RegExp(`s*${SELF_TOKEN}s*,?`, "g");
function buildAnimationAst(driver, metadata, errors, warnings) {
  return new AnimationAstBuilderVisitor(driver).build(metadata, errors, warnings);
}
var ROOT_SELECTOR = "";
var AnimationAstBuilderVisitor = class {
  constructor(_driver) {
    this._driver = _driver;
  }
  build(metadata, errors, warnings) {
    const context = new AnimationAstBuilderContext(errors);
    this._resetContextStyleTimingState(context);
    const ast = visitDslNode(this, normalizeAnimationEntry(metadata), context);
    if (typeof ngDevMode === "undefined" || ngDevMode) {
      if (context.unsupportedCSSPropertiesFound.size) {
        pushUnrecognizedPropertiesWarning(warnings, [...context.unsupportedCSSPropertiesFound.keys()]);
      }
    }
    return ast;
  }
  _resetContextStyleTimingState(context) {
    context.currentQuerySelector = ROOT_SELECTOR;
    context.collectedStyles = /* @__PURE__ */ new Map();
    context.collectedStyles.set(ROOT_SELECTOR, /* @__PURE__ */ new Map());
    context.currentTime = 0;
  }
  visitTrigger(metadata, context) {
    let queryCount = context.queryCount = 0;
    let depCount = context.depCount = 0;
    const states = [];
    const transitions = [];
    if (metadata.name.charAt(0) == "@") {
      context.errors.push(invalidTrigger());
    }
    metadata.definitions.forEach((def) => {
      this._resetContextStyleTimingState(context);
      if (def.type == AnimationMetadataType.State) {
        const stateDef = def;
        const name = stateDef.name;
        name.toString().split(/\s*,\s*/).forEach((n) => {
          stateDef.name = n;
          states.push(this.visitState(stateDef, context));
        });
        stateDef.name = name;
      } else if (def.type == AnimationMetadataType.Transition) {
        const transition = this.visitTransition(def, context);
        queryCount += transition.queryCount;
        depCount += transition.depCount;
        transitions.push(transition);
      } else {
        context.errors.push(invalidDefinition());
      }
    });
    return {
      type: AnimationMetadataType.Trigger,
      name: metadata.name,
      states,
      transitions,
      queryCount,
      depCount,
      options: null
    };
  }
  visitState(metadata, context) {
    const styleAst = this.visitStyle(metadata.styles, context);
    const astParams = metadata.options && metadata.options.params || null;
    if (styleAst.containsDynamicStyles) {
      const missingSubs = /* @__PURE__ */ new Set();
      const params = astParams || {};
      styleAst.styles.forEach((style2) => {
        if (style2 instanceof Map) {
          style2.forEach((value) => {
            extractStyleParams(value).forEach((sub) => {
              if (!params.hasOwnProperty(sub)) {
                missingSubs.add(sub);
              }
            });
          });
        }
      });
      if (missingSubs.size) {
        context.errors.push(invalidState(metadata.name, [...missingSubs.values()]));
      }
    }
    return {
      type: AnimationMetadataType.State,
      name: metadata.name,
      style: styleAst,
      options: astParams ? {
        params: astParams
      } : null
    };
  }
  visitTransition(metadata, context) {
    context.queryCount = 0;
    context.depCount = 0;
    const animation = visitDslNode(this, normalizeAnimationEntry(metadata.animation), context);
    const matchers = parseTransitionExpr(metadata.expr, context.errors);
    return {
      type: AnimationMetadataType.Transition,
      matchers,
      animation,
      queryCount: context.queryCount,
      depCount: context.depCount,
      options: normalizeAnimationOptions(metadata.options)
    };
  }
  visitSequence(metadata, context) {
    return {
      type: AnimationMetadataType.Sequence,
      steps: metadata.steps.map((s) => visitDslNode(this, s, context)),
      options: normalizeAnimationOptions(metadata.options)
    };
  }
  visitGroup(metadata, context) {
    const currentTime = context.currentTime;
    let furthestTime = 0;
    const steps = metadata.steps.map((step) => {
      context.currentTime = currentTime;
      const innerAst = visitDslNode(this, step, context);
      furthestTime = Math.max(furthestTime, context.currentTime);
      return innerAst;
    });
    context.currentTime = furthestTime;
    return {
      type: AnimationMetadataType.Group,
      steps,
      options: normalizeAnimationOptions(metadata.options)
    };
  }
  visitAnimate(metadata, context) {
    const timingAst = constructTimingAst(metadata.timings, context.errors);
    context.currentAnimateTimings = timingAst;
    let styleAst;
    let styleMetadata = metadata.styles ? metadata.styles : style({});
    if (styleMetadata.type == AnimationMetadataType.Keyframes) {
      styleAst = this.visitKeyframes(styleMetadata, context);
    } else {
      let styleMetadata2 = metadata.styles;
      let isEmpty2 = false;
      if (!styleMetadata2) {
        isEmpty2 = true;
        const newStyleData = {};
        if (timingAst.easing) {
          newStyleData["easing"] = timingAst.easing;
        }
        styleMetadata2 = style(newStyleData);
      }
      context.currentTime += timingAst.duration + timingAst.delay;
      const _styleAst = this.visitStyle(styleMetadata2, context);
      _styleAst.isEmptyStep = isEmpty2;
      styleAst = _styleAst;
    }
    context.currentAnimateTimings = null;
    return {
      type: AnimationMetadataType.Animate,
      timings: timingAst,
      style: styleAst,
      options: null
    };
  }
  visitStyle(metadata, context) {
    const ast = this._makeStyleAst(metadata, context);
    this._validateStyleAst(ast, context);
    return ast;
  }
  _makeStyleAst(metadata, context) {
    const styles = [];
    const metadataStyles = Array.isArray(metadata.styles) ? metadata.styles : [metadata.styles];
    for (let styleTuple of metadataStyles) {
      if (typeof styleTuple === "string") {
        if (styleTuple === AUTO_STYLE) {
          styles.push(styleTuple);
        } else {
          context.errors.push(invalidStyleValue(styleTuple));
        }
      } else {
        styles.push(new Map(Object.entries(styleTuple)));
      }
    }
    let containsDynamicStyles = false;
    let collectedEasing = null;
    styles.forEach((styleData) => {
      if (styleData instanceof Map) {
        if (styleData.has("easing")) {
          collectedEasing = styleData.get("easing");
          styleData.delete("easing");
        }
        if (!containsDynamicStyles) {
          for (let value of styleData.values()) {
            if (value.toString().indexOf(SUBSTITUTION_EXPR_START) >= 0) {
              containsDynamicStyles = true;
              break;
            }
          }
        }
      }
    });
    return {
      type: AnimationMetadataType.Style,
      styles,
      easing: collectedEasing,
      offset: metadata.offset,
      containsDynamicStyles,
      options: null
    };
  }
  _validateStyleAst(ast, context) {
    const timings = context.currentAnimateTimings;
    let endTime = context.currentTime;
    let startTime = context.currentTime;
    if (timings && startTime > 0) {
      startTime -= timings.duration + timings.delay;
    }
    ast.styles.forEach((tuple) => {
      if (typeof tuple === "string") return;
      tuple.forEach((value, prop) => {
        if (typeof ngDevMode === "undefined" || ngDevMode) {
          if (!this._driver.validateStyleProperty(prop)) {
            tuple.delete(prop);
            context.unsupportedCSSPropertiesFound.add(prop);
            return;
          }
        }
        const collectedStyles = context.collectedStyles.get(context.currentQuerySelector);
        const collectedEntry = collectedStyles.get(prop);
        let updateCollectedStyle = true;
        if (collectedEntry) {
          if (startTime != endTime && startTime >= collectedEntry.startTime && endTime <= collectedEntry.endTime) {
            context.errors.push(invalidParallelAnimation(prop, collectedEntry.startTime, collectedEntry.endTime, startTime, endTime));
            updateCollectedStyle = false;
          }
          startTime = collectedEntry.startTime;
        }
        if (updateCollectedStyle) {
          collectedStyles.set(prop, {
            startTime,
            endTime
          });
        }
        if (context.options) {
          validateStyleParams(value, context.options, context.errors);
        }
      });
    });
  }
  visitKeyframes(metadata, context) {
    const ast = {
      type: AnimationMetadataType.Keyframes,
      styles: [],
      options: null
    };
    if (!context.currentAnimateTimings) {
      context.errors.push(invalidKeyframes());
      return ast;
    }
    const MAX_KEYFRAME_OFFSET = 1;
    let totalKeyframesWithOffsets = 0;
    const offsets = [];
    let offsetsOutOfOrder = false;
    let keyframesOutOfRange = false;
    let previousOffset = 0;
    const keyframes = metadata.steps.map((styles) => {
      const style2 = this._makeStyleAst(styles, context);
      let offsetVal = style2.offset != null ? style2.offset : consumeOffset(style2.styles);
      let offset = 0;
      if (offsetVal != null) {
        totalKeyframesWithOffsets++;
        offset = style2.offset = offsetVal;
      }
      keyframesOutOfRange = keyframesOutOfRange || offset < 0 || offset > 1;
      offsetsOutOfOrder = offsetsOutOfOrder || offset < previousOffset;
      previousOffset = offset;
      offsets.push(offset);
      return style2;
    });
    if (keyframesOutOfRange) {
      context.errors.push(invalidOffset());
    }
    if (offsetsOutOfOrder) {
      context.errors.push(keyframeOffsetsOutOfOrder());
    }
    const length = metadata.steps.length;
    let generatedOffset = 0;
    if (totalKeyframesWithOffsets > 0 && totalKeyframesWithOffsets < length) {
      context.errors.push(keyframesMissingOffsets());
    } else if (totalKeyframesWithOffsets == 0) {
      generatedOffset = MAX_KEYFRAME_OFFSET / (length - 1);
    }
    const limit = length - 1;
    const currentTime = context.currentTime;
    const currentAnimateTimings = context.currentAnimateTimings;
    const animateDuration = currentAnimateTimings.duration;
    keyframes.forEach((kf, i) => {
      const offset = generatedOffset > 0 ? i == limit ? 1 : generatedOffset * i : offsets[i];
      const durationUpToThisFrame = offset * animateDuration;
      context.currentTime = currentTime + currentAnimateTimings.delay + durationUpToThisFrame;
      currentAnimateTimings.duration = durationUpToThisFrame;
      this._validateStyleAst(kf, context);
      kf.offset = offset;
      ast.styles.push(kf);
    });
    return ast;
  }
  visitReference(metadata, context) {
    return {
      type: AnimationMetadataType.Reference,
      animation: visitDslNode(this, normalizeAnimationEntry(metadata.animation), context),
      options: normalizeAnimationOptions(metadata.options)
    };
  }
  visitAnimateChild(metadata, context) {
    context.depCount++;
    return {
      type: AnimationMetadataType.AnimateChild,
      options: normalizeAnimationOptions(metadata.options)
    };
  }
  visitAnimateRef(metadata, context) {
    return {
      type: AnimationMetadataType.AnimateRef,
      animation: this.visitReference(metadata.animation, context),
      options: normalizeAnimationOptions(metadata.options)
    };
  }
  visitQuery(metadata, context) {
    const parentSelector = context.currentQuerySelector;
    const options = metadata.options || {};
    context.queryCount++;
    context.currentQuery = metadata;
    const [selector, includeSelf] = normalizeSelector(metadata.selector);
    context.currentQuerySelector = parentSelector.length ? parentSelector + " " + selector : selector;
    getOrSetDefaultValue(context.collectedStyles, context.currentQuerySelector, /* @__PURE__ */ new Map());
    const animation = visitDslNode(this, normalizeAnimationEntry(metadata.animation), context);
    context.currentQuery = null;
    context.currentQuerySelector = parentSelector;
    return {
      type: AnimationMetadataType.Query,
      selector,
      limit: options.limit || 0,
      optional: !!options.optional,
      includeSelf,
      animation,
      originalSelector: metadata.selector,
      options: normalizeAnimationOptions(metadata.options)
    };
  }
  visitStagger(metadata, context) {
    if (!context.currentQuery) {
      context.errors.push(invalidStagger());
    }
    const timings = metadata.timings === "full" ? {
      duration: 0,
      delay: 0,
      easing: "full"
    } : resolveTiming(metadata.timings, context.errors, true);
    return {
      type: AnimationMetadataType.Stagger,
      animation: visitDslNode(this, normalizeAnimationEntry(metadata.animation), context),
      timings,
      options: null
    };
  }
};
function normalizeSelector(selector) {
  const hasAmpersand = selector.split(/\s*,\s*/).find((token) => token == SELF_TOKEN) ? true : false;
  if (hasAmpersand) {
    selector = selector.replace(SELF_TOKEN_REGEX, "");
  }
  selector = selector.replace(/@\*/g, NG_TRIGGER_SELECTOR).replace(/@\w+/g, (match) => NG_TRIGGER_SELECTOR + "-" + match.slice(1)).replace(/:animating/g, NG_ANIMATING_SELECTOR);
  return [selector, hasAmpersand];
}
function normalizeParams(obj) {
  return obj ? __spreadValues({}, obj) : null;
}
var AnimationAstBuilderContext = class {
  constructor(errors) {
    this.errors = errors;
    this.queryCount = 0;
    this.depCount = 0;
    this.currentTransition = null;
    this.currentQuery = null;
    this.currentQuerySelector = null;
    this.currentAnimateTimings = null;
    this.currentTime = 0;
    this.collectedStyles = /* @__PURE__ */ new Map();
    this.options = null;
    this.unsupportedCSSPropertiesFound = /* @__PURE__ */ new Set();
  }
};
function consumeOffset(styles) {
  if (typeof styles == "string") return null;
  let offset = null;
  if (Array.isArray(styles)) {
    styles.forEach((styleTuple) => {
      if (styleTuple instanceof Map && styleTuple.has("offset")) {
        const obj = styleTuple;
        offset = parseFloat(obj.get("offset"));
        obj.delete("offset");
      }
    });
  } else if (styles instanceof Map && styles.has("offset")) {
    const obj = styles;
    offset = parseFloat(obj.get("offset"));
    obj.delete("offset");
  }
  return offset;
}
function constructTimingAst(value, errors) {
  if (value.hasOwnProperty("duration")) {
    return value;
  }
  if (typeof value == "number") {
    const duration = resolveTiming(value, errors).duration;
    return makeTimingAst(duration, 0, "");
  }
  const strValue = value;
  const isDynamic = strValue.split(/\s+/).some((v) => v.charAt(0) == "{" && v.charAt(1) == "{");
  if (isDynamic) {
    const ast = makeTimingAst(0, 0, "");
    ast.dynamic = true;
    ast.strValue = strValue;
    return ast;
  }
  const timings = resolveTiming(strValue, errors);
  return makeTimingAst(timings.duration, timings.delay, timings.easing);
}
function normalizeAnimationOptions(options) {
  if (options) {
    options = __spreadValues({}, options);
    if (options["params"]) {
      options["params"] = normalizeParams(options["params"]);
    }
  } else {
    options = {};
  }
  return options;
}
function makeTimingAst(duration, delay2, easing) {
  return {
    duration,
    delay: delay2,
    easing
  };
}
function createTimelineInstruction(element, keyframes, preStyleProps, postStyleProps, duration, delay2, easing = null, subTimeline = false) {
  return {
    type: 1,
    element,
    keyframes,
    preStyleProps,
    postStyleProps,
    duration,
    delay: delay2,
    totalTime: duration + delay2,
    easing,
    subTimeline
  };
}
var ElementInstructionMap = class {
  constructor() {
    this._map = /* @__PURE__ */ new Map();
  }
  get(element) {
    return this._map.get(element) || [];
  }
  append(element, instructions) {
    let existingInstructions = this._map.get(element);
    if (!existingInstructions) {
      this._map.set(element, existingInstructions = []);
    }
    existingInstructions.push(...instructions);
  }
  has(element) {
    return this._map.has(element);
  }
  clear() {
    this._map.clear();
  }
};
var ONE_FRAME_IN_MILLISECONDS = 1;
var ENTER_TOKEN = ":enter";
var ENTER_TOKEN_REGEX = new RegExp(ENTER_TOKEN, "g");
var LEAVE_TOKEN = ":leave";
var LEAVE_TOKEN_REGEX = new RegExp(LEAVE_TOKEN, "g");
function buildAnimationTimelines(driver, rootElement, ast, enterClassName, leaveClassName, startingStyles = /* @__PURE__ */ new Map(), finalStyles = /* @__PURE__ */ new Map(), options, subInstructions, errors = []) {
  return new AnimationTimelineBuilderVisitor().buildKeyframes(driver, rootElement, ast, enterClassName, leaveClassName, startingStyles, finalStyles, options, subInstructions, errors);
}
var AnimationTimelineBuilderVisitor = class {
  buildKeyframes(driver, rootElement, ast, enterClassName, leaveClassName, startingStyles, finalStyles, options, subInstructions, errors = []) {
    subInstructions = subInstructions || new ElementInstructionMap();
    const context = new AnimationTimelineContext(driver, rootElement, subInstructions, enterClassName, leaveClassName, errors, []);
    context.options = options;
    const delay2 = options.delay ? resolveTimingValue(options.delay) : 0;
    context.currentTimeline.delayNextStep(delay2);
    context.currentTimeline.setStyles([startingStyles], null, context.errors, options);
    visitDslNode(this, ast, context);
    const timelines = context.timelines.filter((timeline) => timeline.containsAnimation());
    if (timelines.length && finalStyles.size) {
      let lastRootTimeline;
      for (let i = timelines.length - 1; i >= 0; i--) {
        const timeline = timelines[i];
        if (timeline.element === rootElement) {
          lastRootTimeline = timeline;
          break;
        }
      }
      if (lastRootTimeline && !lastRootTimeline.allowOnlyTimelineStyles()) {
        lastRootTimeline.setStyles([finalStyles], null, context.errors, options);
      }
    }
    return timelines.length ? timelines.map((timeline) => timeline.buildKeyframes()) : [createTimelineInstruction(rootElement, [], [], [], 0, delay2, "", false)];
  }
  visitTrigger(ast, context) {
  }
  visitState(ast, context) {
  }
  visitTransition(ast, context) {
  }
  visitAnimateChild(ast, context) {
    const elementInstructions = context.subInstructions.get(context.element);
    if (elementInstructions) {
      const innerContext = context.createSubContext(ast.options);
      const startTime = context.currentTimeline.currentTime;
      const endTime = this._visitSubInstructions(elementInstructions, innerContext, innerContext.options);
      if (startTime != endTime) {
        context.transformIntoNewTimeline(endTime);
      }
    }
    context.previousNode = ast;
  }
  visitAnimateRef(ast, context) {
    const innerContext = context.createSubContext(ast.options);
    innerContext.transformIntoNewTimeline();
    this._applyAnimationRefDelays([ast.options, ast.animation.options], context, innerContext);
    this.visitReference(ast.animation, innerContext);
    context.transformIntoNewTimeline(innerContext.currentTimeline.currentTime);
    context.previousNode = ast;
  }
  _applyAnimationRefDelays(animationsRefsOptions, context, innerContext) {
    for (const animationRefOptions of animationsRefsOptions) {
      const animationDelay = animationRefOptions?.delay;
      if (animationDelay) {
        const animationDelayValue = typeof animationDelay === "number" ? animationDelay : resolveTimingValue(interpolateParams(animationDelay, animationRefOptions?.params ?? {}, context.errors));
        innerContext.delayNextStep(animationDelayValue);
      }
    }
  }
  _visitSubInstructions(instructions, context, options) {
    const startTime = context.currentTimeline.currentTime;
    let furthestTime = startTime;
    const duration = options.duration != null ? resolveTimingValue(options.duration) : null;
    const delay2 = options.delay != null ? resolveTimingValue(options.delay) : null;
    if (duration !== 0) {
      instructions.forEach((instruction) => {
        const instructionTimings = context.appendInstructionToTimeline(instruction, duration, delay2);
        furthestTime = Math.max(furthestTime, instructionTimings.duration + instructionTimings.delay);
      });
    }
    return furthestTime;
  }
  visitReference(ast, context) {
    context.updateOptions(ast.options, true);
    visitDslNode(this, ast.animation, context);
    context.previousNode = ast;
  }
  visitSequence(ast, context) {
    const subContextCount = context.subContextCount;
    let ctx = context;
    const options = ast.options;
    if (options && (options.params || options.delay)) {
      ctx = context.createSubContext(options);
      ctx.transformIntoNewTimeline();
      if (options.delay != null) {
        if (ctx.previousNode.type == AnimationMetadataType.Style) {
          ctx.currentTimeline.snapshotCurrentStyles();
          ctx.previousNode = DEFAULT_NOOP_PREVIOUS_NODE;
        }
        const delay2 = resolveTimingValue(options.delay);
        ctx.delayNextStep(delay2);
      }
    }
    if (ast.steps.length) {
      ast.steps.forEach((s) => visitDslNode(this, s, ctx));
      ctx.currentTimeline.applyStylesToKeyframe();
      if (ctx.subContextCount > subContextCount) {
        ctx.transformIntoNewTimeline();
      }
    }
    context.previousNode = ast;
  }
  visitGroup(ast, context) {
    const innerTimelines = [];
    let furthestTime = context.currentTimeline.currentTime;
    const delay2 = ast.options && ast.options.delay ? resolveTimingValue(ast.options.delay) : 0;
    ast.steps.forEach((s) => {
      const innerContext = context.createSubContext(ast.options);
      if (delay2) {
        innerContext.delayNextStep(delay2);
      }
      visitDslNode(this, s, innerContext);
      furthestTime = Math.max(furthestTime, innerContext.currentTimeline.currentTime);
      innerTimelines.push(innerContext.currentTimeline);
    });
    innerTimelines.forEach((timeline) => context.currentTimeline.mergeTimelineCollectedStyles(timeline));
    context.transformIntoNewTimeline(furthestTime);
    context.previousNode = ast;
  }
  _visitTiming(ast, context) {
    if (ast.dynamic) {
      const strValue = ast.strValue;
      const timingValue = context.params ? interpolateParams(strValue, context.params, context.errors) : strValue;
      return resolveTiming(timingValue, context.errors);
    } else {
      return {
        duration: ast.duration,
        delay: ast.delay,
        easing: ast.easing
      };
    }
  }
  visitAnimate(ast, context) {
    const timings = context.currentAnimateTimings = this._visitTiming(ast.timings, context);
    const timeline = context.currentTimeline;
    if (timings.delay) {
      context.incrementTime(timings.delay);
      timeline.snapshotCurrentStyles();
    }
    const style2 = ast.style;
    if (style2.type == AnimationMetadataType.Keyframes) {
      this.visitKeyframes(style2, context);
    } else {
      context.incrementTime(timings.duration);
      this.visitStyle(style2, context);
      timeline.applyStylesToKeyframe();
    }
    context.currentAnimateTimings = null;
    context.previousNode = ast;
  }
  visitStyle(ast, context) {
    const timeline = context.currentTimeline;
    const timings = context.currentAnimateTimings;
    if (!timings && timeline.hasCurrentStyleProperties()) {
      timeline.forwardFrame();
    }
    const easing = timings && timings.easing || ast.easing;
    if (ast.isEmptyStep) {
      timeline.applyEmptyStep(easing);
    } else {
      timeline.setStyles(ast.styles, easing, context.errors, context.options);
    }
    context.previousNode = ast;
  }
  visitKeyframes(ast, context) {
    const currentAnimateTimings = context.currentAnimateTimings;
    const startTime = context.currentTimeline.duration;
    const duration = currentAnimateTimings.duration;
    const innerContext = context.createSubContext();
    const innerTimeline = innerContext.currentTimeline;
    innerTimeline.easing = currentAnimateTimings.easing;
    ast.styles.forEach((step) => {
      const offset = step.offset || 0;
      innerTimeline.forwardTime(offset * duration);
      innerTimeline.setStyles(step.styles, step.easing, context.errors, context.options);
      innerTimeline.applyStylesToKeyframe();
    });
    context.currentTimeline.mergeTimelineCollectedStyles(innerTimeline);
    context.transformIntoNewTimeline(startTime + duration);
    context.previousNode = ast;
  }
  visitQuery(ast, context) {
    const startTime = context.currentTimeline.currentTime;
    const options = ast.options || {};
    const delay2 = options.delay ? resolveTimingValue(options.delay) : 0;
    if (delay2 && (context.previousNode.type === AnimationMetadataType.Style || startTime == 0 && context.currentTimeline.hasCurrentStyleProperties())) {
      context.currentTimeline.snapshotCurrentStyles();
      context.previousNode = DEFAULT_NOOP_PREVIOUS_NODE;
    }
    let furthestTime = startTime;
    const elms = context.invokeQuery(ast.selector, ast.originalSelector, ast.limit, ast.includeSelf, options.optional ? true : false, context.errors);
    context.currentQueryTotal = elms.length;
    let sameElementTimeline = null;
    elms.forEach((element, i) => {
      context.currentQueryIndex = i;
      const innerContext = context.createSubContext(ast.options, element);
      if (delay2) {
        innerContext.delayNextStep(delay2);
      }
      if (element === context.element) {
        sameElementTimeline = innerContext.currentTimeline;
      }
      visitDslNode(this, ast.animation, innerContext);
      innerContext.currentTimeline.applyStylesToKeyframe();
      const endTime = innerContext.currentTimeline.currentTime;
      furthestTime = Math.max(furthestTime, endTime);
    });
    context.currentQueryIndex = 0;
    context.currentQueryTotal = 0;
    context.transformIntoNewTimeline(furthestTime);
    if (sameElementTimeline) {
      context.currentTimeline.mergeTimelineCollectedStyles(sameElementTimeline);
      context.currentTimeline.snapshotCurrentStyles();
    }
    context.previousNode = ast;
  }
  visitStagger(ast, context) {
    const parentContext = context.parentContext;
    const tl = context.currentTimeline;
    const timings = ast.timings;
    const duration = Math.abs(timings.duration);
    const maxTime = duration * (context.currentQueryTotal - 1);
    let delay2 = duration * context.currentQueryIndex;
    let staggerTransformer = timings.duration < 0 ? "reverse" : timings.easing;
    switch (staggerTransformer) {
      case "reverse":
        delay2 = maxTime - delay2;
        break;
      case "full":
        delay2 = parentContext.currentStaggerTime;
        break;
    }
    const timeline = context.currentTimeline;
    if (delay2) {
      timeline.delayNextStep(delay2);
    }
    const startingTime = timeline.currentTime;
    visitDslNode(this, ast.animation, context);
    context.previousNode = ast;
    parentContext.currentStaggerTime = tl.currentTime - startingTime + (tl.startTime - parentContext.currentTimeline.startTime);
  }
};
var DEFAULT_NOOP_PREVIOUS_NODE = {};
var AnimationTimelineContext = class _AnimationTimelineContext {
  constructor(_driver, element, subInstructions, _enterClassName, _leaveClassName, errors, timelines, initialTimeline) {
    this._driver = _driver;
    this.element = element;
    this.subInstructions = subInstructions;
    this._enterClassName = _enterClassName;
    this._leaveClassName = _leaveClassName;
    this.errors = errors;
    this.timelines = timelines;
    this.parentContext = null;
    this.currentAnimateTimings = null;
    this.previousNode = DEFAULT_NOOP_PREVIOUS_NODE;
    this.subContextCount = 0;
    this.options = {};
    this.currentQueryIndex = 0;
    this.currentQueryTotal = 0;
    this.currentStaggerTime = 0;
    this.currentTimeline = initialTimeline || new TimelineBuilder(this._driver, element, 0);
    timelines.push(this.currentTimeline);
  }
  get params() {
    return this.options.params;
  }
  updateOptions(options, skipIfExists) {
    if (!options) return;
    const newOptions = options;
    let optionsToUpdate = this.options;
    if (newOptions.duration != null) {
      optionsToUpdate.duration = resolveTimingValue(newOptions.duration);
    }
    if (newOptions.delay != null) {
      optionsToUpdate.delay = resolveTimingValue(newOptions.delay);
    }
    const newParams = newOptions.params;
    if (newParams) {
      let paramsToUpdate = optionsToUpdate.params;
      if (!paramsToUpdate) {
        paramsToUpdate = this.options.params = {};
      }
      Object.keys(newParams).forEach((name) => {
        if (!skipIfExists || !paramsToUpdate.hasOwnProperty(name)) {
          paramsToUpdate[name] = interpolateParams(newParams[name], paramsToUpdate, this.errors);
        }
      });
    }
  }
  _copyOptions() {
    const options = {};
    if (this.options) {
      const oldParams = this.options.params;
      if (oldParams) {
        const params = options["params"] = {};
        Object.keys(oldParams).forEach((name) => {
          params[name] = oldParams[name];
        });
      }
    }
    return options;
  }
  createSubContext(options = null, element, newTime) {
    const target = element || this.element;
    const context = new _AnimationTimelineContext(this._driver, target, this.subInstructions, this._enterClassName, this._leaveClassName, this.errors, this.timelines, this.currentTimeline.fork(target, newTime || 0));
    context.previousNode = this.previousNode;
    context.currentAnimateTimings = this.currentAnimateTimings;
    context.options = this._copyOptions();
    context.updateOptions(options);
    context.currentQueryIndex = this.currentQueryIndex;
    context.currentQueryTotal = this.currentQueryTotal;
    context.parentContext = this;
    this.subContextCount++;
    return context;
  }
  transformIntoNewTimeline(newTime) {
    this.previousNode = DEFAULT_NOOP_PREVIOUS_NODE;
    this.currentTimeline = this.currentTimeline.fork(this.element, newTime);
    this.timelines.push(this.currentTimeline);
    return this.currentTimeline;
  }
  appendInstructionToTimeline(instruction, duration, delay2) {
    const updatedTimings = {
      duration: duration != null ? duration : instruction.duration,
      delay: this.currentTimeline.currentTime + (delay2 != null ? delay2 : 0) + instruction.delay,
      easing: ""
    };
    const builder = new SubTimelineBuilder(this._driver, instruction.element, instruction.keyframes, instruction.preStyleProps, instruction.postStyleProps, updatedTimings, instruction.stretchStartingKeyframe);
    this.timelines.push(builder);
    return updatedTimings;
  }
  incrementTime(time) {
    this.currentTimeline.forwardTime(this.currentTimeline.duration + time);
  }
  delayNextStep(delay2) {
    if (delay2 > 0) {
      this.currentTimeline.delayNextStep(delay2);
    }
  }
  invokeQuery(selector, originalSelector, limit, includeSelf, optional, errors) {
    let results = [];
    if (includeSelf) {
      results.push(this.element);
    }
    if (selector.length > 0) {
      selector = selector.replace(ENTER_TOKEN_REGEX, "." + this._enterClassName);
      selector = selector.replace(LEAVE_TOKEN_REGEX, "." + this._leaveClassName);
      const multi = limit != 1;
      let elements = this._driver.query(this.element, selector, multi);
      if (limit !== 0) {
        elements = limit < 0 ? elements.slice(elements.length + limit, elements.length) : elements.slice(0, limit);
      }
      results.push(...elements);
    }
    if (!optional && results.length == 0) {
      errors.push(invalidQuery(originalSelector));
    }
    return results;
  }
};
var TimelineBuilder = class _TimelineBuilder {
  constructor(_driver, element, startTime, _elementTimelineStylesLookup) {
    this._driver = _driver;
    this.element = element;
    this.startTime = startTime;
    this._elementTimelineStylesLookup = _elementTimelineStylesLookup;
    this.duration = 0;
    this.easing = null;
    this._previousKeyframe = /* @__PURE__ */ new Map();
    this._currentKeyframe = /* @__PURE__ */ new Map();
    this._keyframes = /* @__PURE__ */ new Map();
    this._styleSummary = /* @__PURE__ */ new Map();
    this._localTimelineStyles = /* @__PURE__ */ new Map();
    this._pendingStyles = /* @__PURE__ */ new Map();
    this._backFill = /* @__PURE__ */ new Map();
    this._currentEmptyStepKeyframe = null;
    if (!this._elementTimelineStylesLookup) {
      this._elementTimelineStylesLookup = /* @__PURE__ */ new Map();
    }
    this._globalTimelineStyles = this._elementTimelineStylesLookup.get(element);
    if (!this._globalTimelineStyles) {
      this._globalTimelineStyles = this._localTimelineStyles;
      this._elementTimelineStylesLookup.set(element, this._localTimelineStyles);
    }
    this._loadKeyframe();
  }
  containsAnimation() {
    switch (this._keyframes.size) {
      case 0:
        return false;
      case 1:
        return this.hasCurrentStyleProperties();
      default:
        return true;
    }
  }
  hasCurrentStyleProperties() {
    return this._currentKeyframe.size > 0;
  }
  get currentTime() {
    return this.startTime + this.duration;
  }
  delayNextStep(delay2) {
    const hasPreStyleStep = this._keyframes.size === 1 && this._pendingStyles.size;
    if (this.duration || hasPreStyleStep) {
      this.forwardTime(this.currentTime + delay2);
      if (hasPreStyleStep) {
        this.snapshotCurrentStyles();
      }
    } else {
      this.startTime += delay2;
    }
  }
  fork(element, currentTime) {
    this.applyStylesToKeyframe();
    return new _TimelineBuilder(this._driver, element, currentTime || this.currentTime, this._elementTimelineStylesLookup);
  }
  _loadKeyframe() {
    if (this._currentKeyframe) {
      this._previousKeyframe = this._currentKeyframe;
    }
    this._currentKeyframe = this._keyframes.get(this.duration);
    if (!this._currentKeyframe) {
      this._currentKeyframe = /* @__PURE__ */ new Map();
      this._keyframes.set(this.duration, this._currentKeyframe);
    }
  }
  forwardFrame() {
    this.duration += ONE_FRAME_IN_MILLISECONDS;
    this._loadKeyframe();
  }
  forwardTime(time) {
    this.applyStylesToKeyframe();
    this.duration = time;
    this._loadKeyframe();
  }
  _updateStyle(prop, value) {
    this._localTimelineStyles.set(prop, value);
    this._globalTimelineStyles.set(prop, value);
    this._styleSummary.set(prop, {
      time: this.currentTime,
      value
    });
  }
  allowOnlyTimelineStyles() {
    return this._currentEmptyStepKeyframe !== this._currentKeyframe;
  }
  applyEmptyStep(easing) {
    if (easing) {
      this._previousKeyframe.set("easing", easing);
    }
    for (let [prop, value] of this._globalTimelineStyles) {
      this._backFill.set(prop, value || AUTO_STYLE);
      this._currentKeyframe.set(prop, AUTO_STYLE);
    }
    this._currentEmptyStepKeyframe = this._currentKeyframe;
  }
  setStyles(input, easing, errors, options) {
    if (easing) {
      this._previousKeyframe.set("easing", easing);
    }
    const params = options && options.params || {};
    const styles = flattenStyles(input, this._globalTimelineStyles);
    for (let [prop, value] of styles) {
      const val = interpolateParams(value, params, errors);
      this._pendingStyles.set(prop, val);
      if (!this._localTimelineStyles.has(prop)) {
        this._backFill.set(prop, this._globalTimelineStyles.get(prop) ?? AUTO_STYLE);
      }
      this._updateStyle(prop, val);
    }
  }
  applyStylesToKeyframe() {
    if (this._pendingStyles.size == 0) return;
    this._pendingStyles.forEach((val, prop) => {
      this._currentKeyframe.set(prop, val);
    });
    this._pendingStyles.clear();
    this._localTimelineStyles.forEach((val, prop) => {
      if (!this._currentKeyframe.has(prop)) {
        this._currentKeyframe.set(prop, val);
      }
    });
  }
  snapshotCurrentStyles() {
    for (let [prop, val] of this._localTimelineStyles) {
      this._pendingStyles.set(prop, val);
      this._updateStyle(prop, val);
    }
  }
  getFinalKeyframe() {
    return this._keyframes.get(this.duration);
  }
  get properties() {
    const properties = [];
    for (let prop in this._currentKeyframe) {
      properties.push(prop);
    }
    return properties;
  }
  mergeTimelineCollectedStyles(timeline) {
    timeline._styleSummary.forEach((details1, prop) => {
      const details0 = this._styleSummary.get(prop);
      if (!details0 || details1.time > details0.time) {
        this._updateStyle(prop, details1.value);
      }
    });
  }
  buildKeyframes() {
    this.applyStylesToKeyframe();
    const preStyleProps = /* @__PURE__ */ new Set();
    const postStyleProps = /* @__PURE__ */ new Set();
    const isEmpty2 = this._keyframes.size === 1 && this.duration === 0;
    let finalKeyframes = [];
    this._keyframes.forEach((keyframe, time) => {
      const finalKeyframe = new Map([...this._backFill, ...keyframe]);
      finalKeyframe.forEach((value, prop) => {
        if (value === \u0275PRE_STYLE) {
          preStyleProps.add(prop);
        } else if (value === AUTO_STYLE) {
          postStyleProps.add(prop);
        }
      });
      if (!isEmpty2) {
        finalKeyframe.set("offset", time / this.duration);
      }
      finalKeyframes.push(finalKeyframe);
    });
    const preProps = [...preStyleProps.values()];
    const postProps = [...postStyleProps.values()];
    if (isEmpty2) {
      const kf0 = finalKeyframes[0];
      const kf1 = new Map(kf0);
      kf0.set("offset", 0);
      kf1.set("offset", 1);
      finalKeyframes = [kf0, kf1];
    }
    return createTimelineInstruction(this.element, finalKeyframes, preProps, postProps, this.duration, this.startTime, this.easing, false);
  }
};
var SubTimelineBuilder = class extends TimelineBuilder {
  constructor(driver, element, keyframes, preStyleProps, postStyleProps, timings, _stretchStartingKeyframe = false) {
    super(driver, element, timings.delay);
    this.keyframes = keyframes;
    this.preStyleProps = preStyleProps;
    this.postStyleProps = postStyleProps;
    this._stretchStartingKeyframe = _stretchStartingKeyframe;
    this.timings = {
      duration: timings.duration,
      delay: timings.delay,
      easing: timings.easing
    };
  }
  containsAnimation() {
    return this.keyframes.length > 1;
  }
  buildKeyframes() {
    let keyframes = this.keyframes;
    let {
      delay: delay2,
      duration,
      easing
    } = this.timings;
    if (this._stretchStartingKeyframe && delay2) {
      const newKeyframes = [];
      const totalTime = duration + delay2;
      const startingGap = delay2 / totalTime;
      const newFirstKeyframe = new Map(keyframes[0]);
      newFirstKeyframe.set("offset", 0);
      newKeyframes.push(newFirstKeyframe);
      const oldFirstKeyframe = new Map(keyframes[0]);
      oldFirstKeyframe.set("offset", roundOffset(startingGap));
      newKeyframes.push(oldFirstKeyframe);
      const limit = keyframes.length - 1;
      for (let i = 1; i <= limit; i++) {
        let kf = new Map(keyframes[i]);
        const oldOffset = kf.get("offset");
        const timeAtKeyframe = delay2 + oldOffset * duration;
        kf.set("offset", roundOffset(timeAtKeyframe / totalTime));
        newKeyframes.push(kf);
      }
      duration = totalTime;
      delay2 = 0;
      easing = "";
      keyframes = newKeyframes;
    }
    return createTimelineInstruction(this.element, keyframes, this.preStyleProps, this.postStyleProps, duration, delay2, easing, true);
  }
};
function roundOffset(offset, decimalPoints = 3) {
  const mult = Math.pow(10, decimalPoints - 1);
  return Math.round(offset * mult) / mult;
}
function flattenStyles(input, allStyles) {
  const styles = /* @__PURE__ */ new Map();
  let allProperties;
  input.forEach((token) => {
    if (token === "*") {
      allProperties ??= allStyles.keys();
      for (let prop of allProperties) {
        styles.set(prop, AUTO_STYLE);
      }
    } else {
      for (let [prop, val] of token) {
        styles.set(prop, val);
      }
    }
  });
  return styles;
}
function createTransitionInstruction(element, triggerName, fromState, toState, isRemovalTransition, fromStyles, toStyles, timelines, queriedElements, preStyleProps, postStyleProps, totalTime, errors) {
  return {
    type: 0,
    element,
    triggerName,
    isRemovalTransition,
    fromState,
    fromStyles,
    toState,
    toStyles,
    timelines,
    queriedElements,
    preStyleProps,
    postStyleProps,
    totalTime,
    errors
  };
}
var EMPTY_OBJECT = {};
var AnimationTransitionFactory = class {
  constructor(_triggerName, ast, _stateStyles) {
    this._triggerName = _triggerName;
    this.ast = ast;
    this._stateStyles = _stateStyles;
  }
  match(currentState, nextState, element, params) {
    return oneOrMoreTransitionsMatch(this.ast.matchers, currentState, nextState, element, params);
  }
  buildStyles(stateName, params, errors) {
    let styler = this._stateStyles.get("*");
    if (stateName !== void 0) {
      styler = this._stateStyles.get(stateName?.toString()) || styler;
    }
    return styler ? styler.buildStyles(params, errors) : /* @__PURE__ */ new Map();
  }
  build(driver, element, currentState, nextState, enterClassName, leaveClassName, currentOptions, nextOptions, subInstructions, skipAstBuild) {
    const errors = [];
    const transitionAnimationParams = this.ast.options && this.ast.options.params || EMPTY_OBJECT;
    const currentAnimationParams = currentOptions && currentOptions.params || EMPTY_OBJECT;
    const currentStateStyles = this.buildStyles(currentState, currentAnimationParams, errors);
    const nextAnimationParams = nextOptions && nextOptions.params || EMPTY_OBJECT;
    const nextStateStyles = this.buildStyles(nextState, nextAnimationParams, errors);
    const queriedElements = /* @__PURE__ */ new Set();
    const preStyleMap = /* @__PURE__ */ new Map();
    const postStyleMap = /* @__PURE__ */ new Map();
    const isRemoval = nextState === "void";
    const animationOptions = {
      params: applyParamDefaults(nextAnimationParams, transitionAnimationParams),
      delay: this.ast.options?.delay
    };
    const timelines = skipAstBuild ? [] : buildAnimationTimelines(driver, element, this.ast.animation, enterClassName, leaveClassName, currentStateStyles, nextStateStyles, animationOptions, subInstructions, errors);
    let totalTime = 0;
    timelines.forEach((tl) => {
      totalTime = Math.max(tl.duration + tl.delay, totalTime);
    });
    if (errors.length) {
      return createTransitionInstruction(element, this._triggerName, currentState, nextState, isRemoval, currentStateStyles, nextStateStyles, [], [], preStyleMap, postStyleMap, totalTime, errors);
    }
    timelines.forEach((tl) => {
      const elm = tl.element;
      const preProps = getOrSetDefaultValue(preStyleMap, elm, /* @__PURE__ */ new Set());
      tl.preStyleProps.forEach((prop) => preProps.add(prop));
      const postProps = getOrSetDefaultValue(postStyleMap, elm, /* @__PURE__ */ new Set());
      tl.postStyleProps.forEach((prop) => postProps.add(prop));
      if (elm !== element) {
        queriedElements.add(elm);
      }
    });
    if (typeof ngDevMode === "undefined" || ngDevMode) {
      checkNonAnimatableInTimelines(timelines, this._triggerName, driver);
    }
    return createTransitionInstruction(element, this._triggerName, currentState, nextState, isRemoval, currentStateStyles, nextStateStyles, timelines, [...queriedElements.values()], preStyleMap, postStyleMap, totalTime);
  }
};
function checkNonAnimatableInTimelines(timelines, triggerName, driver) {
  if (!driver.validateAnimatableStyleProperty) {
    return;
  }
  const allowedNonAnimatableProps = /* @__PURE__ */ new Set([
    // 'easing' is a utility/synthetic prop we use to represent
    // easing functions, it represents a property of the animation
    // which is not animatable but different values can be used
    // in different steps
    "easing"
  ]);
  const invalidNonAnimatableProps = /* @__PURE__ */ new Set();
  timelines.forEach(({
    keyframes
  }) => {
    const nonAnimatablePropsInitialValues = /* @__PURE__ */ new Map();
    keyframes.forEach((keyframe) => {
      const entriesToCheck = Array.from(keyframe.entries()).filter(([prop]) => !allowedNonAnimatableProps.has(prop));
      for (const [prop, value] of entriesToCheck) {
        if (!driver.validateAnimatableStyleProperty(prop)) {
          if (nonAnimatablePropsInitialValues.has(prop) && !invalidNonAnimatableProps.has(prop)) {
            const propInitialValue = nonAnimatablePropsInitialValues.get(prop);
            if (propInitialValue !== value) {
              invalidNonAnimatableProps.add(prop);
            }
          } else {
            nonAnimatablePropsInitialValues.set(prop, value);
          }
        }
      }
    });
  });
  if (invalidNonAnimatableProps.size > 0) {
    console.warn(`Warning: The animation trigger "${triggerName}" is attempting to animate the following not animatable properties: ` + Array.from(invalidNonAnimatableProps).join(", ") + "\n(to check the list of all animatable properties visit https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_animated_properties)");
  }
}
function oneOrMoreTransitionsMatch(matchFns, currentState, nextState, element, params) {
  return matchFns.some((fn) => fn(currentState, nextState, element, params));
}
function applyParamDefaults(userParams, defaults) {
  const result = __spreadValues({}, defaults);
  Object.entries(userParams).forEach(([key, value]) => {
    if (value != null) {
      result[key] = value;
    }
  });
  return result;
}
var AnimationStateStyles = class {
  constructor(styles, defaultParams, normalizer) {
    this.styles = styles;
    this.defaultParams = defaultParams;
    this.normalizer = normalizer;
  }
  buildStyles(params, errors) {
    const finalStyles = /* @__PURE__ */ new Map();
    const combinedParams = applyParamDefaults(params, this.defaultParams);
    this.styles.styles.forEach((value) => {
      if (typeof value !== "string") {
        value.forEach((val, prop) => {
          if (val) {
            val = interpolateParams(val, combinedParams, errors);
          }
          const normalizedProp = this.normalizer.normalizePropertyName(prop, errors);
          val = this.normalizer.normalizeStyleValue(prop, normalizedProp, val, errors);
          finalStyles.set(prop, val);
        });
      }
    });
    return finalStyles;
  }
};
function buildTrigger(name, ast, normalizer) {
  return new AnimationTrigger(name, ast, normalizer);
}
var AnimationTrigger = class {
  constructor(name, ast, _normalizer) {
    this.name = name;
    this.ast = ast;
    this._normalizer = _normalizer;
    this.transitionFactories = [];
    this.states = /* @__PURE__ */ new Map();
    ast.states.forEach((ast2) => {
      const defaultParams = ast2.options && ast2.options.params || {};
      this.states.set(ast2.name, new AnimationStateStyles(ast2.style, defaultParams, _normalizer));
    });
    balanceProperties(this.states, "true", "1");
    balanceProperties(this.states, "false", "0");
    ast.transitions.forEach((ast2) => {
      this.transitionFactories.push(new AnimationTransitionFactory(name, ast2, this.states));
    });
    this.fallbackTransition = createFallbackTransition(name, this.states, this._normalizer);
  }
  get containsQueries() {
    return this.ast.queryCount > 0;
  }
  matchTransition(currentState, nextState, element, params) {
    const entry = this.transitionFactories.find((f) => f.match(currentState, nextState, element, params));
    return entry || null;
  }
  matchStyles(currentState, params, errors) {
    return this.fallbackTransition.buildStyles(currentState, params, errors);
  }
};
function createFallbackTransition(triggerName, states, normalizer) {
  const matchers = [(fromState, toState) => true];
  const animation = {
    type: AnimationMetadataType.Sequence,
    steps: [],
    options: null
  };
  const transition = {
    type: AnimationMetadataType.Transition,
    animation,
    matchers,
    options: null,
    queryCount: 0,
    depCount: 0
  };
  return new AnimationTransitionFactory(triggerName, transition, states);
}
function balanceProperties(stateMap, key1, key2) {
  if (stateMap.has(key1)) {
    if (!stateMap.has(key2)) {
      stateMap.set(key2, stateMap.get(key1));
    }
  } else if (stateMap.has(key2)) {
    stateMap.set(key1, stateMap.get(key2));
  }
}
var EMPTY_INSTRUCTION_MAP = new ElementInstructionMap();
var TimelineAnimationEngine = class {
  constructor(bodyNode, _driver, _normalizer) {
    this.bodyNode = bodyNode;
    this._driver = _driver;
    this._normalizer = _normalizer;
    this._animations = /* @__PURE__ */ new Map();
    this._playersById = /* @__PURE__ */ new Map();
    this.players = [];
  }
  register(id, metadata) {
    const errors = [];
    const warnings = [];
    const ast = buildAnimationAst(this._driver, metadata, errors, warnings);
    if (errors.length) {
      throw registerFailed(errors);
    } else {
      if (warnings.length) {
        warnRegister(warnings);
      }
      this._animations.set(id, ast);
    }
  }
  _buildPlayer(i, preStyles, postStyles) {
    const element = i.element;
    const keyframes = normalizeKeyframes$1(this._normalizer, i.keyframes, preStyles, postStyles);
    return this._driver.animate(element, keyframes, i.duration, i.delay, i.easing, [], true);
  }
  create(id, element, options = {}) {
    const errors = [];
    const ast = this._animations.get(id);
    let instructions;
    const autoStylesMap = /* @__PURE__ */ new Map();
    if (ast) {
      instructions = buildAnimationTimelines(this._driver, element, ast, ENTER_CLASSNAME, LEAVE_CLASSNAME, /* @__PURE__ */ new Map(), /* @__PURE__ */ new Map(), options, EMPTY_INSTRUCTION_MAP, errors);
      instructions.forEach((inst) => {
        const styles = getOrSetDefaultValue(autoStylesMap, inst.element, /* @__PURE__ */ new Map());
        inst.postStyleProps.forEach((prop) => styles.set(prop, null));
      });
    } else {
      errors.push(missingOrDestroyedAnimation());
      instructions = [];
    }
    if (errors.length) {
      throw createAnimationFailed(errors);
    }
    autoStylesMap.forEach((styles, element2) => {
      styles.forEach((_, prop) => {
        styles.set(prop, this._driver.computeStyle(element2, prop, AUTO_STYLE));
      });
    });
    const players = instructions.map((i) => {
      const styles = autoStylesMap.get(i.element);
      return this._buildPlayer(i, /* @__PURE__ */ new Map(), styles);
    });
    const player = optimizeGroupPlayer(players);
    this._playersById.set(id, player);
    player.onDestroy(() => this.destroy(id));
    this.players.push(player);
    return player;
  }
  destroy(id) {
    const player = this._getPlayer(id);
    player.destroy();
    this._playersById.delete(id);
    const index = this.players.indexOf(player);
    if (index >= 0) {
      this.players.splice(index, 1);
    }
  }
  _getPlayer(id) {
    const player = this._playersById.get(id);
    if (!player) {
      throw missingPlayer(id);
    }
    return player;
  }
  listen(id, element, eventName, callback) {
    const baseEvent = makeAnimationEvent(element, "", "", "");
    listenOnPlayer(this._getPlayer(id), eventName, baseEvent, callback);
    return () => {
    };
  }
  command(id, element, command, args) {
    if (command == "register") {
      this.register(id, args[0]);
      return;
    }
    if (command == "create") {
      const options = args[0] || {};
      this.create(id, element, options);
      return;
    }
    const player = this._getPlayer(id);
    switch (command) {
      case "play":
        player.play();
        break;
      case "pause":
        player.pause();
        break;
      case "reset":
        player.reset();
        break;
      case "restart":
        player.restart();
        break;
      case "finish":
        player.finish();
        break;
      case "init":
        player.init();
        break;
      case "setPosition":
        player.setPosition(parseFloat(args[0]));
        break;
      case "destroy":
        this.destroy(id);
        break;
    }
  }
};
var QUEUED_CLASSNAME = "ng-animate-queued";
var QUEUED_SELECTOR = ".ng-animate-queued";
var DISABLED_CLASSNAME = "ng-animate-disabled";
var DISABLED_SELECTOR = ".ng-animate-disabled";
var STAR_CLASSNAME = "ng-star-inserted";
var STAR_SELECTOR = ".ng-star-inserted";
var EMPTY_PLAYER_ARRAY = [];
var NULL_REMOVAL_STATE = {
  namespaceId: "",
  setForRemoval: false,
  setForMove: false,
  hasAnimation: false,
  removedBeforeQueried: false
};
var NULL_REMOVED_QUERIED_STATE = {
  namespaceId: "",
  setForMove: false,
  setForRemoval: false,
  hasAnimation: false,
  removedBeforeQueried: true
};
var REMOVAL_FLAG = "__ng_removed";
var StateValue = class {
  get params() {
    return this.options.params;
  }
  constructor(input, namespaceId = "") {
    this.namespaceId = namespaceId;
    const isObj = input && input.hasOwnProperty("value");
    const value = isObj ? input["value"] : input;
    this.value = normalizeTriggerValue(value);
    if (isObj) {
      const _a = input, {
        value: value2
      } = _a, options = __objRest(_a, [
        "value"
      ]);
      this.options = options;
    } else {
      this.options = {};
    }
    if (!this.options.params) {
      this.options.params = {};
    }
  }
  absorbOptions(options) {
    const newParams = options.params;
    if (newParams) {
      const oldParams = this.options.params;
      Object.keys(newParams).forEach((prop) => {
        if (oldParams[prop] == null) {
          oldParams[prop] = newParams[prop];
        }
      });
    }
  }
};
var VOID_VALUE = "void";
var DEFAULT_STATE_VALUE = new StateValue(VOID_VALUE);
var AnimationTransitionNamespace = class {
  constructor(id, hostElement, _engine) {
    this.id = id;
    this.hostElement = hostElement;
    this._engine = _engine;
    this.players = [];
    this._triggers = /* @__PURE__ */ new Map();
    this._queue = [];
    this._elementListeners = /* @__PURE__ */ new Map();
    this._hostClassName = "ng-tns-" + id;
    addClass(hostElement, this._hostClassName);
  }
  listen(element, name, phase, callback) {
    if (!this._triggers.has(name)) {
      throw missingTrigger(phase, name);
    }
    if (phase == null || phase.length == 0) {
      throw missingEvent(name);
    }
    if (!isTriggerEventValid(phase)) {
      throw unsupportedTriggerEvent(phase, name);
    }
    const listeners = getOrSetDefaultValue(this._elementListeners, element, []);
    const data = {
      name,
      phase,
      callback
    };
    listeners.push(data);
    const triggersWithStates = getOrSetDefaultValue(this._engine.statesByElement, element, /* @__PURE__ */ new Map());
    if (!triggersWithStates.has(name)) {
      addClass(element, NG_TRIGGER_CLASSNAME);
      addClass(element, NG_TRIGGER_CLASSNAME + "-" + name);
      triggersWithStates.set(name, DEFAULT_STATE_VALUE);
    }
    return () => {
      this._engine.afterFlush(() => {
        const index = listeners.indexOf(data);
        if (index >= 0) {
          listeners.splice(index, 1);
        }
        if (!this._triggers.has(name)) {
          triggersWithStates.delete(name);
        }
      });
    };
  }
  register(name, ast) {
    if (this._triggers.has(name)) {
      return false;
    } else {
      this._triggers.set(name, ast);
      return true;
    }
  }
  _getTrigger(name) {
    const trigger = this._triggers.get(name);
    if (!trigger) {
      throw unregisteredTrigger(name);
    }
    return trigger;
  }
  trigger(element, triggerName, value, defaultToFallback = true) {
    const trigger = this._getTrigger(triggerName);
    const player = new TransitionAnimationPlayer(this.id, triggerName, element);
    let triggersWithStates = this._engine.statesByElement.get(element);
    if (!triggersWithStates) {
      addClass(element, NG_TRIGGER_CLASSNAME);
      addClass(element, NG_TRIGGER_CLASSNAME + "-" + triggerName);
      this._engine.statesByElement.set(element, triggersWithStates = /* @__PURE__ */ new Map());
    }
    let fromState = triggersWithStates.get(triggerName);
    const toState = new StateValue(value, this.id);
    const isObj = value && value.hasOwnProperty("value");
    if (!isObj && fromState) {
      toState.absorbOptions(fromState.options);
    }
    triggersWithStates.set(triggerName, toState);
    if (!fromState) {
      fromState = DEFAULT_STATE_VALUE;
    }
    const isRemoval = toState.value === VOID_VALUE;
    if (!isRemoval && fromState.value === toState.value) {
      if (!objEquals(fromState.params, toState.params)) {
        const errors = [];
        const fromStyles = trigger.matchStyles(fromState.value, fromState.params, errors);
        const toStyles = trigger.matchStyles(toState.value, toState.params, errors);
        if (errors.length) {
          this._engine.reportError(errors);
        } else {
          this._engine.afterFlush(() => {
            eraseStyles(element, fromStyles);
            setStyles(element, toStyles);
          });
        }
      }
      return;
    }
    const playersOnElement = getOrSetDefaultValue(this._engine.playersByElement, element, []);
    playersOnElement.forEach((player2) => {
      if (player2.namespaceId == this.id && player2.triggerName == triggerName && player2.queued) {
        player2.destroy();
      }
    });
    let transition = trigger.matchTransition(fromState.value, toState.value, element, toState.params);
    let isFallbackTransition = false;
    if (!transition) {
      if (!defaultToFallback) return;
      transition = trigger.fallbackTransition;
      isFallbackTransition = true;
    }
    this._engine.totalQueuedPlayers++;
    this._queue.push({
      element,
      triggerName,
      transition,
      fromState,
      toState,
      player,
      isFallbackTransition
    });
    if (!isFallbackTransition) {
      addClass(element, QUEUED_CLASSNAME);
      player.onStart(() => {
        removeClass(element, QUEUED_CLASSNAME);
      });
    }
    player.onDone(() => {
      let index = this.players.indexOf(player);
      if (index >= 0) {
        this.players.splice(index, 1);
      }
      const players = this._engine.playersByElement.get(element);
      if (players) {
        let index2 = players.indexOf(player);
        if (index2 >= 0) {
          players.splice(index2, 1);
        }
      }
    });
    this.players.push(player);
    playersOnElement.push(player);
    return player;
  }
  deregister(name) {
    this._triggers.delete(name);
    this._engine.statesByElement.forEach((stateMap) => stateMap.delete(name));
    this._elementListeners.forEach((listeners, element) => {
      this._elementListeners.set(element, listeners.filter((entry) => {
        return entry.name != name;
      }));
    });
  }
  clearElementCache(element) {
    this._engine.statesByElement.delete(element);
    this._elementListeners.delete(element);
    const elementPlayers = this._engine.playersByElement.get(element);
    if (elementPlayers) {
      elementPlayers.forEach((player) => player.destroy());
      this._engine.playersByElement.delete(element);
    }
  }
  _signalRemovalForInnerTriggers(rootElement, context) {
    const elements = this._engine.driver.query(rootElement, NG_TRIGGER_SELECTOR, true);
    elements.forEach((elm) => {
      if (elm[REMOVAL_FLAG]) return;
      const namespaces = this._engine.fetchNamespacesByElement(elm);
      if (namespaces.size) {
        namespaces.forEach((ns) => ns.triggerLeaveAnimation(elm, context, false, true));
      } else {
        this.clearElementCache(elm);
      }
    });
    this._engine.afterFlushAnimationsDone(() => elements.forEach((elm) => this.clearElementCache(elm)));
  }
  triggerLeaveAnimation(element, context, destroyAfterComplete, defaultToFallback) {
    const triggerStates = this._engine.statesByElement.get(element);
    const previousTriggersValues = /* @__PURE__ */ new Map();
    if (triggerStates) {
      const players = [];
      triggerStates.forEach((state, triggerName) => {
        previousTriggersValues.set(triggerName, state.value);
        if (this._triggers.has(triggerName)) {
          const player = this.trigger(element, triggerName, VOID_VALUE, defaultToFallback);
          if (player) {
            players.push(player);
          }
        }
      });
      if (players.length) {
        this._engine.markElementAsRemoved(this.id, element, true, context, previousTriggersValues);
        if (destroyAfterComplete) {
          optimizeGroupPlayer(players).onDone(() => this._engine.processLeaveNode(element));
        }
        return true;
      }
    }
    return false;
  }
  prepareLeaveAnimationListeners(element) {
    const listeners = this._elementListeners.get(element);
    const elementStates = this._engine.statesByElement.get(element);
    if (listeners && elementStates) {
      const visitedTriggers = /* @__PURE__ */ new Set();
      listeners.forEach((listener) => {
        const triggerName = listener.name;
        if (visitedTriggers.has(triggerName)) return;
        visitedTriggers.add(triggerName);
        const trigger = this._triggers.get(triggerName);
        const transition = trigger.fallbackTransition;
        const fromState = elementStates.get(triggerName) || DEFAULT_STATE_VALUE;
        const toState = new StateValue(VOID_VALUE);
        const player = new TransitionAnimationPlayer(this.id, triggerName, element);
        this._engine.totalQueuedPlayers++;
        this._queue.push({
          element,
          triggerName,
          transition,
          fromState,
          toState,
          player,
          isFallbackTransition: true
        });
      });
    }
  }
  removeNode(element, context) {
    const engine = this._engine;
    if (element.childElementCount) {
      this._signalRemovalForInnerTriggers(element, context);
    }
    if (this.triggerLeaveAnimation(element, context, true)) return;
    let containsPotentialParentTransition = false;
    if (engine.totalAnimations) {
      const currentPlayers = engine.players.length ? engine.playersByQueriedElement.get(element) : [];
      if (currentPlayers && currentPlayers.length) {
        containsPotentialParentTransition = true;
      } else {
        let parent = element;
        while (parent = parent.parentNode) {
          const triggers = engine.statesByElement.get(parent);
          if (triggers) {
            containsPotentialParentTransition = true;
            break;
          }
        }
      }
    }
    this.prepareLeaveAnimationListeners(element);
    if (containsPotentialParentTransition) {
      engine.markElementAsRemoved(this.id, element, false, context);
    } else {
      const removalFlag = element[REMOVAL_FLAG];
      if (!removalFlag || removalFlag === NULL_REMOVAL_STATE) {
        engine.afterFlush(() => this.clearElementCache(element));
        engine.destroyInnerAnimations(element);
        engine._onRemovalComplete(element, context);
      }
    }
  }
  insertNode(element, parent) {
    addClass(element, this._hostClassName);
  }
  drainQueuedTransitions(microtaskId) {
    const instructions = [];
    this._queue.forEach((entry) => {
      const player = entry.player;
      if (player.destroyed) return;
      const element = entry.element;
      const listeners = this._elementListeners.get(element);
      if (listeners) {
        listeners.forEach((listener) => {
          if (listener.name == entry.triggerName) {
            const baseEvent = makeAnimationEvent(element, entry.triggerName, entry.fromState.value, entry.toState.value);
            baseEvent["_data"] = microtaskId;
            listenOnPlayer(entry.player, listener.phase, baseEvent, listener.callback);
          }
        });
      }
      if (player.markedForDestroy) {
        this._engine.afterFlush(() => {
          player.destroy();
        });
      } else {
        instructions.push(entry);
      }
    });
    this._queue = [];
    return instructions.sort((a, b) => {
      const d0 = a.transition.ast.depCount;
      const d1 = b.transition.ast.depCount;
      if (d0 == 0 || d1 == 0) {
        return d0 - d1;
      }
      return this._engine.driver.containsElement(a.element, b.element) ? 1 : -1;
    });
  }
  destroy(context) {
    this.players.forEach((p) => p.destroy());
    this._signalRemovalForInnerTriggers(this.hostElement, context);
  }
};
var TransitionAnimationEngine = class {
  /** @internal */
  _onRemovalComplete(element, context) {
    this.onRemovalComplete(element, context);
  }
  constructor(bodyNode, driver, _normalizer) {
    this.bodyNode = bodyNode;
    this.driver = driver;
    this._normalizer = _normalizer;
    this.players = [];
    this.newHostElements = /* @__PURE__ */ new Map();
    this.playersByElement = /* @__PURE__ */ new Map();
    this.playersByQueriedElement = /* @__PURE__ */ new Map();
    this.statesByElement = /* @__PURE__ */ new Map();
    this.disabledNodes = /* @__PURE__ */ new Set();
    this.totalAnimations = 0;
    this.totalQueuedPlayers = 0;
    this._namespaceLookup = {};
    this._namespaceList = [];
    this._flushFns = [];
    this._whenQuietFns = [];
    this.namespacesByHostElement = /* @__PURE__ */ new Map();
    this.collectedEnterElements = [];
    this.collectedLeaveElements = [];
    this.onRemovalComplete = (element, context) => {
    };
  }
  get queuedPlayers() {
    const players = [];
    this._namespaceList.forEach((ns) => {
      ns.players.forEach((player) => {
        if (player.queued) {
          players.push(player);
        }
      });
    });
    return players;
  }
  createNamespace(namespaceId, hostElement) {
    const ns = new AnimationTransitionNamespace(namespaceId, hostElement, this);
    if (this.bodyNode && this.driver.containsElement(this.bodyNode, hostElement)) {
      this._balanceNamespaceList(ns, hostElement);
    } else {
      this.newHostElements.set(hostElement, ns);
      this.collectEnterElement(hostElement);
    }
    return this._namespaceLookup[namespaceId] = ns;
  }
  _balanceNamespaceList(ns, hostElement) {
    const namespaceList = this._namespaceList;
    const namespacesByHostElement = this.namespacesByHostElement;
    const limit = namespaceList.length - 1;
    if (limit >= 0) {
      let found = false;
      let ancestor = this.driver.getParentElement(hostElement);
      while (ancestor) {
        const ancestorNs = namespacesByHostElement.get(ancestor);
        if (ancestorNs) {
          const index = namespaceList.indexOf(ancestorNs);
          namespaceList.splice(index + 1, 0, ns);
          found = true;
          break;
        }
        ancestor = this.driver.getParentElement(ancestor);
      }
      if (!found) {
        namespaceList.unshift(ns);
      }
    } else {
      namespaceList.push(ns);
    }
    namespacesByHostElement.set(hostElement, ns);
    return ns;
  }
  register(namespaceId, hostElement) {
    let ns = this._namespaceLookup[namespaceId];
    if (!ns) {
      ns = this.createNamespace(namespaceId, hostElement);
    }
    return ns;
  }
  registerTrigger(namespaceId, name, trigger) {
    let ns = this._namespaceLookup[namespaceId];
    if (ns && ns.register(name, trigger)) {
      this.totalAnimations++;
    }
  }
  destroy(namespaceId, context) {
    if (!namespaceId) return;
    this.afterFlush(() => {
    });
    this.afterFlushAnimationsDone(() => {
      const ns = this._fetchNamespace(namespaceId);
      this.namespacesByHostElement.delete(ns.hostElement);
      const index = this._namespaceList.indexOf(ns);
      if (index >= 0) {
        this._namespaceList.splice(index, 1);
      }
      ns.destroy(context);
      delete this._namespaceLookup[namespaceId];
    });
  }
  _fetchNamespace(id) {
    return this._namespaceLookup[id];
  }
  fetchNamespacesByElement(element) {
    const namespaces = /* @__PURE__ */ new Set();
    const elementStates = this.statesByElement.get(element);
    if (elementStates) {
      for (let stateValue of elementStates.values()) {
        if (stateValue.namespaceId) {
          const ns = this._fetchNamespace(stateValue.namespaceId);
          if (ns) {
            namespaces.add(ns);
          }
        }
      }
    }
    return namespaces;
  }
  trigger(namespaceId, element, name, value) {
    if (isElementNode(element)) {
      const ns = this._fetchNamespace(namespaceId);
      if (ns) {
        ns.trigger(element, name, value);
        return true;
      }
    }
    return false;
  }
  insertNode(namespaceId, element, parent, insertBefore) {
    if (!isElementNode(element)) return;
    const details = element[REMOVAL_FLAG];
    if (details && details.setForRemoval) {
      details.setForRemoval = false;
      details.setForMove = true;
      const index = this.collectedLeaveElements.indexOf(element);
      if (index >= 0) {
        this.collectedLeaveElements.splice(index, 1);
      }
    }
    if (namespaceId) {
      const ns = this._fetchNamespace(namespaceId);
      if (ns) {
        ns.insertNode(element, parent);
      }
    }
    if (insertBefore) {
      this.collectEnterElement(element);
    }
  }
  collectEnterElement(element) {
    this.collectedEnterElements.push(element);
  }
  markElementAsDisabled(element, value) {
    if (value) {
      if (!this.disabledNodes.has(element)) {
        this.disabledNodes.add(element);
        addClass(element, DISABLED_CLASSNAME);
      }
    } else if (this.disabledNodes.has(element)) {
      this.disabledNodes.delete(element);
      removeClass(element, DISABLED_CLASSNAME);
    }
  }
  removeNode(namespaceId, element, context) {
    if (isElementNode(element)) {
      const ns = namespaceId ? this._fetchNamespace(namespaceId) : null;
      if (ns) {
        ns.removeNode(element, context);
      } else {
        this.markElementAsRemoved(namespaceId, element, false, context);
      }
      const hostNS = this.namespacesByHostElement.get(element);
      if (hostNS && hostNS.id !== namespaceId) {
        hostNS.removeNode(element, context);
      }
    } else {
      this._onRemovalComplete(element, context);
    }
  }
  markElementAsRemoved(namespaceId, element, hasAnimation, context, previousTriggersValues) {
    this.collectedLeaveElements.push(element);
    element[REMOVAL_FLAG] = {
      namespaceId,
      setForRemoval: context,
      hasAnimation,
      removedBeforeQueried: false,
      previousTriggersValues
    };
  }
  listen(namespaceId, element, name, phase, callback) {
    if (isElementNode(element)) {
      return this._fetchNamespace(namespaceId).listen(element, name, phase, callback);
    }
    return () => {
    };
  }
  _buildInstruction(entry, subTimelines, enterClassName, leaveClassName, skipBuildAst) {
    return entry.transition.build(this.driver, entry.element, entry.fromState.value, entry.toState.value, enterClassName, leaveClassName, entry.fromState.options, entry.toState.options, subTimelines, skipBuildAst);
  }
  destroyInnerAnimations(containerElement) {
    let elements = this.driver.query(containerElement, NG_TRIGGER_SELECTOR, true);
    elements.forEach((element) => this.destroyActiveAnimationsForElement(element));
    if (this.playersByQueriedElement.size == 0) return;
    elements = this.driver.query(containerElement, NG_ANIMATING_SELECTOR, true);
    elements.forEach((element) => this.finishActiveQueriedAnimationOnElement(element));
  }
  destroyActiveAnimationsForElement(element) {
    const players = this.playersByElement.get(element);
    if (players) {
      players.forEach((player) => {
        if (player.queued) {
          player.markedForDestroy = true;
        } else {
          player.destroy();
        }
      });
    }
  }
  finishActiveQueriedAnimationOnElement(element) {
    const players = this.playersByQueriedElement.get(element);
    if (players) {
      players.forEach((player) => player.finish());
    }
  }
  whenRenderingDone() {
    return new Promise((resolve) => {
      if (this.players.length) {
        return optimizeGroupPlayer(this.players).onDone(() => resolve());
      } else {
        resolve();
      }
    });
  }
  processLeaveNode(element) {
    const details = element[REMOVAL_FLAG];
    if (details && details.setForRemoval) {
      element[REMOVAL_FLAG] = NULL_REMOVAL_STATE;
      if (details.namespaceId) {
        this.destroyInnerAnimations(element);
        const ns = this._fetchNamespace(details.namespaceId);
        if (ns) {
          ns.clearElementCache(element);
        }
      }
      this._onRemovalComplete(element, details.setForRemoval);
    }
    if (element.classList?.contains(DISABLED_CLASSNAME)) {
      this.markElementAsDisabled(element, false);
    }
    this.driver.query(element, DISABLED_SELECTOR, true).forEach((node) => {
      this.markElementAsDisabled(node, false);
    });
  }
  flush(microtaskId = -1) {
    let players = [];
    if (this.newHostElements.size) {
      this.newHostElements.forEach((ns, element) => this._balanceNamespaceList(ns, element));
      this.newHostElements.clear();
    }
    if (this.totalAnimations && this.collectedEnterElements.length) {
      for (let i = 0; i < this.collectedEnterElements.length; i++) {
        const elm = this.collectedEnterElements[i];
        addClass(elm, STAR_CLASSNAME);
      }
    }
    if (this._namespaceList.length && (this.totalQueuedPlayers || this.collectedLeaveElements.length)) {
      const cleanupFns = [];
      try {
        players = this._flushAnimations(cleanupFns, microtaskId);
      } finally {
        for (let i = 0; i < cleanupFns.length; i++) {
          cleanupFns[i]();
        }
      }
    } else {
      for (let i = 0; i < this.collectedLeaveElements.length; i++) {
        const element = this.collectedLeaveElements[i];
        this.processLeaveNode(element);
      }
    }
    this.totalQueuedPlayers = 0;
    this.collectedEnterElements.length = 0;
    this.collectedLeaveElements.length = 0;
    this._flushFns.forEach((fn) => fn());
    this._flushFns = [];
    if (this._whenQuietFns.length) {
      const quietFns = this._whenQuietFns;
      this._whenQuietFns = [];
      if (players.length) {
        optimizeGroupPlayer(players).onDone(() => {
          quietFns.forEach((fn) => fn());
        });
      } else {
        quietFns.forEach((fn) => fn());
      }
    }
  }
  reportError(errors) {
    throw triggerTransitionsFailed(errors);
  }
  _flushAnimations(cleanupFns, microtaskId) {
    const subTimelines = new ElementInstructionMap();
    const skippedPlayers = [];
    const skippedPlayersMap = /* @__PURE__ */ new Map();
    const queuedInstructions = [];
    const queriedElements = /* @__PURE__ */ new Map();
    const allPreStyleElements = /* @__PURE__ */ new Map();
    const allPostStyleElements = /* @__PURE__ */ new Map();
    const disabledElementsSet = /* @__PURE__ */ new Set();
    this.disabledNodes.forEach((node) => {
      disabledElementsSet.add(node);
      const nodesThatAreDisabled = this.driver.query(node, QUEUED_SELECTOR, true);
      for (let i2 = 0; i2 < nodesThatAreDisabled.length; i2++) {
        disabledElementsSet.add(nodesThatAreDisabled[i2]);
      }
    });
    const bodyNode = this.bodyNode;
    const allTriggerElements = Array.from(this.statesByElement.keys());
    const enterNodeMap = buildRootMap(allTriggerElements, this.collectedEnterElements);
    const enterNodeMapIds = /* @__PURE__ */ new Map();
    let i = 0;
    enterNodeMap.forEach((nodes, root) => {
      const className = ENTER_CLASSNAME + i++;
      enterNodeMapIds.set(root, className);
      nodes.forEach((node) => addClass(node, className));
    });
    const allLeaveNodes = [];
    const mergedLeaveNodes = /* @__PURE__ */ new Set();
    const leaveNodesWithoutAnimations = /* @__PURE__ */ new Set();
    for (let i2 = 0; i2 < this.collectedLeaveElements.length; i2++) {
      const element = this.collectedLeaveElements[i2];
      const details = element[REMOVAL_FLAG];
      if (details && details.setForRemoval) {
        allLeaveNodes.push(element);
        mergedLeaveNodes.add(element);
        if (details.hasAnimation) {
          this.driver.query(element, STAR_SELECTOR, true).forEach((elm) => mergedLeaveNodes.add(elm));
        } else {
          leaveNodesWithoutAnimations.add(element);
        }
      }
    }
    const leaveNodeMapIds = /* @__PURE__ */ new Map();
    const leaveNodeMap = buildRootMap(allTriggerElements, Array.from(mergedLeaveNodes));
    leaveNodeMap.forEach((nodes, root) => {
      const className = LEAVE_CLASSNAME + i++;
      leaveNodeMapIds.set(root, className);
      nodes.forEach((node) => addClass(node, className));
    });
    cleanupFns.push(() => {
      enterNodeMap.forEach((nodes, root) => {
        const className = enterNodeMapIds.get(root);
        nodes.forEach((node) => removeClass(node, className));
      });
      leaveNodeMap.forEach((nodes, root) => {
        const className = leaveNodeMapIds.get(root);
        nodes.forEach((node) => removeClass(node, className));
      });
      allLeaveNodes.forEach((element) => {
        this.processLeaveNode(element);
      });
    });
    const allPlayers = [];
    const erroneousTransitions = [];
    for (let i2 = this._namespaceList.length - 1; i2 >= 0; i2--) {
      const ns = this._namespaceList[i2];
      ns.drainQueuedTransitions(microtaskId).forEach((entry) => {
        const player = entry.player;
        const element = entry.element;
        allPlayers.push(player);
        if (this.collectedEnterElements.length) {
          const details = element[REMOVAL_FLAG];
          if (details && details.setForMove) {
            if (details.previousTriggersValues && details.previousTriggersValues.has(entry.triggerName)) {
              const previousValue = details.previousTriggersValues.get(entry.triggerName);
              const triggersWithStates = this.statesByElement.get(entry.element);
              if (triggersWithStates && triggersWithStates.has(entry.triggerName)) {
                const state = triggersWithStates.get(entry.triggerName);
                state.value = previousValue;
                triggersWithStates.set(entry.triggerName, state);
              }
            }
            player.destroy();
            return;
          }
        }
        const nodeIsOrphaned = !bodyNode || !this.driver.containsElement(bodyNode, element);
        const leaveClassName = leaveNodeMapIds.get(element);
        const enterClassName = enterNodeMapIds.get(element);
        const instruction = this._buildInstruction(entry, subTimelines, enterClassName, leaveClassName, nodeIsOrphaned);
        if (instruction.errors && instruction.errors.length) {
          erroneousTransitions.push(instruction);
          return;
        }
        if (nodeIsOrphaned) {
          player.onStart(() => eraseStyles(element, instruction.fromStyles));
          player.onDestroy(() => setStyles(element, instruction.toStyles));
          skippedPlayers.push(player);
          return;
        }
        if (entry.isFallbackTransition) {
          player.onStart(() => eraseStyles(element, instruction.fromStyles));
          player.onDestroy(() => setStyles(element, instruction.toStyles));
          skippedPlayers.push(player);
          return;
        }
        const timelines = [];
        instruction.timelines.forEach((tl) => {
          tl.stretchStartingKeyframe = true;
          if (!this.disabledNodes.has(tl.element)) {
            timelines.push(tl);
          }
        });
        instruction.timelines = timelines;
        subTimelines.append(element, instruction.timelines);
        const tuple = {
          instruction,
          player,
          element
        };
        queuedInstructions.push(tuple);
        instruction.queriedElements.forEach((element2) => getOrSetDefaultValue(queriedElements, element2, []).push(player));
        instruction.preStyleProps.forEach((stringMap, element2) => {
          if (stringMap.size) {
            let setVal = allPreStyleElements.get(element2);
            if (!setVal) {
              allPreStyleElements.set(element2, setVal = /* @__PURE__ */ new Set());
            }
            stringMap.forEach((_, prop) => setVal.add(prop));
          }
        });
        instruction.postStyleProps.forEach((stringMap, element2) => {
          let setVal = allPostStyleElements.get(element2);
          if (!setVal) {
            allPostStyleElements.set(element2, setVal = /* @__PURE__ */ new Set());
          }
          stringMap.forEach((_, prop) => setVal.add(prop));
        });
      });
    }
    if (erroneousTransitions.length) {
      const errors = [];
      erroneousTransitions.forEach((instruction) => {
        errors.push(transitionFailed(instruction.triggerName, instruction.errors));
      });
      allPlayers.forEach((player) => player.destroy());
      this.reportError(errors);
    }
    const allPreviousPlayersMap = /* @__PURE__ */ new Map();
    const animationElementMap = /* @__PURE__ */ new Map();
    queuedInstructions.forEach((entry) => {
      const element = entry.element;
      if (subTimelines.has(element)) {
        animationElementMap.set(element, element);
        this._beforeAnimationBuild(entry.player.namespaceId, entry.instruction, allPreviousPlayersMap);
      }
    });
    skippedPlayers.forEach((player) => {
      const element = player.element;
      const previousPlayers = this._getPreviousPlayers(element, false, player.namespaceId, player.triggerName, null);
      previousPlayers.forEach((prevPlayer) => {
        getOrSetDefaultValue(allPreviousPlayersMap, element, []).push(prevPlayer);
        prevPlayer.destroy();
      });
    });
    const replaceNodes = allLeaveNodes.filter((node) => {
      return replacePostStylesAsPre(node, allPreStyleElements, allPostStyleElements);
    });
    const postStylesMap = /* @__PURE__ */ new Map();
    const allLeaveQueriedNodes = cloakAndComputeStyles(postStylesMap, this.driver, leaveNodesWithoutAnimations, allPostStyleElements, AUTO_STYLE);
    allLeaveQueriedNodes.forEach((node) => {
      if (replacePostStylesAsPre(node, allPreStyleElements, allPostStyleElements)) {
        replaceNodes.push(node);
      }
    });
    const preStylesMap = /* @__PURE__ */ new Map();
    enterNodeMap.forEach((nodes, root) => {
      cloakAndComputeStyles(preStylesMap, this.driver, new Set(nodes), allPreStyleElements, \u0275PRE_STYLE);
    });
    replaceNodes.forEach((node) => {
      const post = postStylesMap.get(node);
      const pre = preStylesMap.get(node);
      postStylesMap.set(node, new Map([...post?.entries() ?? [], ...pre?.entries() ?? []]));
    });
    const rootPlayers = [];
    const subPlayers = [];
    const NO_PARENT_ANIMATION_ELEMENT_DETECTED = {};
    queuedInstructions.forEach((entry) => {
      const {
        element,
        player,
        instruction
      } = entry;
      if (subTimelines.has(element)) {
        if (disabledElementsSet.has(element)) {
          player.onDestroy(() => setStyles(element, instruction.toStyles));
          player.disabled = true;
          player.overrideTotalTime(instruction.totalTime);
          skippedPlayers.push(player);
          return;
        }
        let parentWithAnimation = NO_PARENT_ANIMATION_ELEMENT_DETECTED;
        if (animationElementMap.size > 1) {
          let elm = element;
          const parentsToAdd = [];
          while (elm = elm.parentNode) {
            const detectedParent = animationElementMap.get(elm);
            if (detectedParent) {
              parentWithAnimation = detectedParent;
              break;
            }
            parentsToAdd.push(elm);
          }
          parentsToAdd.forEach((parent) => animationElementMap.set(parent, parentWithAnimation));
        }
        const innerPlayer = this._buildAnimation(player.namespaceId, instruction, allPreviousPlayersMap, skippedPlayersMap, preStylesMap, postStylesMap);
        player.setRealPlayer(innerPlayer);
        if (parentWithAnimation === NO_PARENT_ANIMATION_ELEMENT_DETECTED) {
          rootPlayers.push(player);
        } else {
          const parentPlayers = this.playersByElement.get(parentWithAnimation);
          if (parentPlayers && parentPlayers.length) {
            player.parentPlayer = optimizeGroupPlayer(parentPlayers);
          }
          skippedPlayers.push(player);
        }
      } else {
        eraseStyles(element, instruction.fromStyles);
        player.onDestroy(() => setStyles(element, instruction.toStyles));
        subPlayers.push(player);
        if (disabledElementsSet.has(element)) {
          skippedPlayers.push(player);
        }
      }
    });
    subPlayers.forEach((player) => {
      const playersForElement = skippedPlayersMap.get(player.element);
      if (playersForElement && playersForElement.length) {
        const innerPlayer = optimizeGroupPlayer(playersForElement);
        player.setRealPlayer(innerPlayer);
      }
    });
    skippedPlayers.forEach((player) => {
      if (player.parentPlayer) {
        player.syncPlayerEvents(player.parentPlayer);
      } else {
        player.destroy();
      }
    });
    for (let i2 = 0; i2 < allLeaveNodes.length; i2++) {
      const element = allLeaveNodes[i2];
      const details = element[REMOVAL_FLAG];
      removeClass(element, LEAVE_CLASSNAME);
      if (details && details.hasAnimation) continue;
      let players = [];
      if (queriedElements.size) {
        let queriedPlayerResults = queriedElements.get(element);
        if (queriedPlayerResults && queriedPlayerResults.length) {
          players.push(...queriedPlayerResults);
        }
        let queriedInnerElements = this.driver.query(element, NG_ANIMATING_SELECTOR, true);
        for (let j = 0; j < queriedInnerElements.length; j++) {
          let queriedPlayers = queriedElements.get(queriedInnerElements[j]);
          if (queriedPlayers && queriedPlayers.length) {
            players.push(...queriedPlayers);
          }
        }
      }
      const activePlayers = players.filter((p) => !p.destroyed);
      if (activePlayers.length) {
        removeNodesAfterAnimationDone(this, element, activePlayers);
      } else {
        this.processLeaveNode(element);
      }
    }
    allLeaveNodes.length = 0;
    rootPlayers.forEach((player) => {
      this.players.push(player);
      player.onDone(() => {
        player.destroy();
        const index = this.players.indexOf(player);
        this.players.splice(index, 1);
      });
      player.play();
    });
    return rootPlayers;
  }
  afterFlush(callback) {
    this._flushFns.push(callback);
  }
  afterFlushAnimationsDone(callback) {
    this._whenQuietFns.push(callback);
  }
  _getPreviousPlayers(element, isQueriedElement, namespaceId, triggerName, toStateValue) {
    let players = [];
    if (isQueriedElement) {
      const queriedElementPlayers = this.playersByQueriedElement.get(element);
      if (queriedElementPlayers) {
        players = queriedElementPlayers;
      }
    } else {
      const elementPlayers = this.playersByElement.get(element);
      if (elementPlayers) {
        const isRemovalAnimation = !toStateValue || toStateValue == VOID_VALUE;
        elementPlayers.forEach((player) => {
          if (player.queued) return;
          if (!isRemovalAnimation && player.triggerName != triggerName) return;
          players.push(player);
        });
      }
    }
    if (namespaceId || triggerName) {
      players = players.filter((player) => {
        if (namespaceId && namespaceId != player.namespaceId) return false;
        if (triggerName && triggerName != player.triggerName) return false;
        return true;
      });
    }
    return players;
  }
  _beforeAnimationBuild(namespaceId, instruction, allPreviousPlayersMap) {
    const triggerName = instruction.triggerName;
    const rootElement = instruction.element;
    const targetNameSpaceId = instruction.isRemovalTransition ? void 0 : namespaceId;
    const targetTriggerName = instruction.isRemovalTransition ? void 0 : triggerName;
    for (const timelineInstruction of instruction.timelines) {
      const element = timelineInstruction.element;
      const isQueriedElement = element !== rootElement;
      const players = getOrSetDefaultValue(allPreviousPlayersMap, element, []);
      const previousPlayers = this._getPreviousPlayers(element, isQueriedElement, targetNameSpaceId, targetTriggerName, instruction.toState);
      previousPlayers.forEach((player) => {
        const realPlayer = player.getRealPlayer();
        if (realPlayer.beforeDestroy) {
          realPlayer.beforeDestroy();
        }
        player.destroy();
        players.push(player);
      });
    }
    eraseStyles(rootElement, instruction.fromStyles);
  }
  _buildAnimation(namespaceId, instruction, allPreviousPlayersMap, skippedPlayersMap, preStylesMap, postStylesMap) {
    const triggerName = instruction.triggerName;
    const rootElement = instruction.element;
    const allQueriedPlayers = [];
    const allConsumedElements = /* @__PURE__ */ new Set();
    const allSubElements = /* @__PURE__ */ new Set();
    const allNewPlayers = instruction.timelines.map((timelineInstruction) => {
      const element = timelineInstruction.element;
      allConsumedElements.add(element);
      const details = element[REMOVAL_FLAG];
      if (details && details.removedBeforeQueried) return new NoopAnimationPlayer(timelineInstruction.duration, timelineInstruction.delay);
      const isQueriedElement = element !== rootElement;
      const previousPlayers = flattenGroupPlayers((allPreviousPlayersMap.get(element) || EMPTY_PLAYER_ARRAY).map((p) => p.getRealPlayer())).filter((p) => {
        const pp = p;
        return pp.element ? pp.element === element : false;
      });
      const preStyles = preStylesMap.get(element);
      const postStyles = postStylesMap.get(element);
      const keyframes = normalizeKeyframes$1(this._normalizer, timelineInstruction.keyframes, preStyles, postStyles);
      const player2 = this._buildPlayer(timelineInstruction, keyframes, previousPlayers);
      if (timelineInstruction.subTimeline && skippedPlayersMap) {
        allSubElements.add(element);
      }
      if (isQueriedElement) {
        const wrappedPlayer = new TransitionAnimationPlayer(namespaceId, triggerName, element);
        wrappedPlayer.setRealPlayer(player2);
        allQueriedPlayers.push(wrappedPlayer);
      }
      return player2;
    });
    allQueriedPlayers.forEach((player2) => {
      getOrSetDefaultValue(this.playersByQueriedElement, player2.element, []).push(player2);
      player2.onDone(() => deleteOrUnsetInMap(this.playersByQueriedElement, player2.element, player2));
    });
    allConsumedElements.forEach((element) => addClass(element, NG_ANIMATING_CLASSNAME));
    const player = optimizeGroupPlayer(allNewPlayers);
    player.onDestroy(() => {
      allConsumedElements.forEach((element) => removeClass(element, NG_ANIMATING_CLASSNAME));
      setStyles(rootElement, instruction.toStyles);
    });
    allSubElements.forEach((element) => {
      getOrSetDefaultValue(skippedPlayersMap, element, []).push(player);
    });
    return player;
  }
  _buildPlayer(instruction, keyframes, previousPlayers) {
    if (keyframes.length > 0) {
      return this.driver.animate(instruction.element, keyframes, instruction.duration, instruction.delay, instruction.easing, previousPlayers);
    }
    return new NoopAnimationPlayer(instruction.duration, instruction.delay);
  }
};
var TransitionAnimationPlayer = class {
  constructor(namespaceId, triggerName, element) {
    this.namespaceId = namespaceId;
    this.triggerName = triggerName;
    this.element = element;
    this._player = new NoopAnimationPlayer();
    this._containsRealPlayer = false;
    this._queuedCallbacks = /* @__PURE__ */ new Map();
    this.destroyed = false;
    this.parentPlayer = null;
    this.markedForDestroy = false;
    this.disabled = false;
    this.queued = true;
    this.totalTime = 0;
  }
  setRealPlayer(player) {
    if (this._containsRealPlayer) return;
    this._player = player;
    this._queuedCallbacks.forEach((callbacks, phase) => {
      callbacks.forEach((callback) => listenOnPlayer(player, phase, void 0, callback));
    });
    this._queuedCallbacks.clear();
    this._containsRealPlayer = true;
    this.overrideTotalTime(player.totalTime);
    this.queued = false;
  }
  getRealPlayer() {
    return this._player;
  }
  overrideTotalTime(totalTime) {
    this.totalTime = totalTime;
  }
  syncPlayerEvents(player) {
    const p = this._player;
    if (p.triggerCallback) {
      player.onStart(() => p.triggerCallback("start"));
    }
    player.onDone(() => this.finish());
    player.onDestroy(() => this.destroy());
  }
  _queueEvent(name, callback) {
    getOrSetDefaultValue(this._queuedCallbacks, name, []).push(callback);
  }
  onDone(fn) {
    if (this.queued) {
      this._queueEvent("done", fn);
    }
    this._player.onDone(fn);
  }
  onStart(fn) {
    if (this.queued) {
      this._queueEvent("start", fn);
    }
    this._player.onStart(fn);
  }
  onDestroy(fn) {
    if (this.queued) {
      this._queueEvent("destroy", fn);
    }
    this._player.onDestroy(fn);
  }
  init() {
    this._player.init();
  }
  hasStarted() {
    return this.queued ? false : this._player.hasStarted();
  }
  play() {
    !this.queued && this._player.play();
  }
  pause() {
    !this.queued && this._player.pause();
  }
  restart() {
    !this.queued && this._player.restart();
  }
  finish() {
    this._player.finish();
  }
  destroy() {
    this.destroyed = true;
    this._player.destroy();
  }
  reset() {
    !this.queued && this._player.reset();
  }
  setPosition(p) {
    if (!this.queued) {
      this._player.setPosition(p);
    }
  }
  getPosition() {
    return this.queued ? 0 : this._player.getPosition();
  }
  /** @internal */
  triggerCallback(phaseName) {
    const p = this._player;
    if (p.triggerCallback) {
      p.triggerCallback(phaseName);
    }
  }
};
function deleteOrUnsetInMap(map2, key, value) {
  let currentValues = map2.get(key);
  if (currentValues) {
    if (currentValues.length) {
      const index = currentValues.indexOf(value);
      currentValues.splice(index, 1);
    }
    if (currentValues.length == 0) {
      map2.delete(key);
    }
  }
  return currentValues;
}
function normalizeTriggerValue(value) {
  return value != null ? value : null;
}
function isElementNode(node) {
  return node && node["nodeType"] === 1;
}
function isTriggerEventValid(eventName) {
  return eventName == "start" || eventName == "done";
}
function cloakElement(element, value) {
  const oldValue = element.style.display;
  element.style.display = value != null ? value : "none";
  return oldValue;
}
function cloakAndComputeStyles(valuesMap, driver, elements, elementPropsMap, defaultStyle) {
  const cloakVals = [];
  elements.forEach((element) => cloakVals.push(cloakElement(element)));
  const failedElements = [];
  elementPropsMap.forEach((props, element) => {
    const styles = /* @__PURE__ */ new Map();
    props.forEach((prop) => {
      const value = driver.computeStyle(element, prop, defaultStyle);
      styles.set(prop, value);
      if (!value || value.length == 0) {
        element[REMOVAL_FLAG] = NULL_REMOVED_QUERIED_STATE;
        failedElements.push(element);
      }
    });
    valuesMap.set(element, styles);
  });
  let i = 0;
  elements.forEach((element) => cloakElement(element, cloakVals[i++]));
  return failedElements;
}
function buildRootMap(roots, nodes) {
  const rootMap = /* @__PURE__ */ new Map();
  roots.forEach((root) => rootMap.set(root, []));
  if (nodes.length == 0) return rootMap;
  const NULL_NODE = 1;
  const nodeSet = new Set(nodes);
  const localRootMap = /* @__PURE__ */ new Map();
  function getRoot(node) {
    if (!node) return NULL_NODE;
    let root = localRootMap.get(node);
    if (root) return root;
    const parent = node.parentNode;
    if (rootMap.has(parent)) {
      root = parent;
    } else if (nodeSet.has(parent)) {
      root = NULL_NODE;
    } else {
      root = getRoot(parent);
    }
    localRootMap.set(node, root);
    return root;
  }
  nodes.forEach((node) => {
    const root = getRoot(node);
    if (root !== NULL_NODE) {
      rootMap.get(root).push(node);
    }
  });
  return rootMap;
}
function addClass(element, className) {
  element.classList?.add(className);
}
function removeClass(element, className) {
  element.classList?.remove(className);
}
function removeNodesAfterAnimationDone(engine, element, players) {
  optimizeGroupPlayer(players).onDone(() => engine.processLeaveNode(element));
}
function flattenGroupPlayers(players) {
  const finalPlayers = [];
  _flattenGroupPlayersRecur(players, finalPlayers);
  return finalPlayers;
}
function _flattenGroupPlayersRecur(players, finalPlayers) {
  for (let i = 0; i < players.length; i++) {
    const player = players[i];
    if (player instanceof AnimationGroupPlayer) {
      _flattenGroupPlayersRecur(player.players, finalPlayers);
    } else {
      finalPlayers.push(player);
    }
  }
}
function objEquals(a, b) {
  const k1 = Object.keys(a);
  const k2 = Object.keys(b);
  if (k1.length != k2.length) return false;
  for (let i = 0; i < k1.length; i++) {
    const prop = k1[i];
    if (!b.hasOwnProperty(prop) || a[prop] !== b[prop]) return false;
  }
  return true;
}
function replacePostStylesAsPre(element, allPreStyleElements, allPostStyleElements) {
  const postEntry = allPostStyleElements.get(element);
  if (!postEntry) return false;
  let preEntry = allPreStyleElements.get(element);
  if (preEntry) {
    postEntry.forEach((data) => preEntry.add(data));
  } else {
    allPreStyleElements.set(element, postEntry);
  }
  allPostStyleElements.delete(element);
  return true;
}
var AnimationEngine = class {
  constructor(doc, _driver, _normalizer) {
    this._driver = _driver;
    this._normalizer = _normalizer;
    this._triggerCache = {};
    this.onRemovalComplete = (element, context) => {
    };
    this._transitionEngine = new TransitionAnimationEngine(doc.body, _driver, _normalizer);
    this._timelineEngine = new TimelineAnimationEngine(doc.body, _driver, _normalizer);
    this._transitionEngine.onRemovalComplete = (element, context) => this.onRemovalComplete(element, context);
  }
  registerTrigger(componentId, namespaceId, hostElement, name, metadata) {
    const cacheKey = componentId + "-" + name;
    let trigger = this._triggerCache[cacheKey];
    if (!trigger) {
      const errors = [];
      const warnings = [];
      const ast = buildAnimationAst(this._driver, metadata, errors, warnings);
      if (errors.length) {
        throw triggerBuildFailed(name, errors);
      }
      if (warnings.length) {
        warnTriggerBuild(name, warnings);
      }
      trigger = buildTrigger(name, ast, this._normalizer);
      this._triggerCache[cacheKey] = trigger;
    }
    this._transitionEngine.registerTrigger(namespaceId, name, trigger);
  }
  register(namespaceId, hostElement) {
    this._transitionEngine.register(namespaceId, hostElement);
  }
  destroy(namespaceId, context) {
    this._transitionEngine.destroy(namespaceId, context);
  }
  onInsert(namespaceId, element, parent, insertBefore) {
    this._transitionEngine.insertNode(namespaceId, element, parent, insertBefore);
  }
  onRemove(namespaceId, element, context) {
    this._transitionEngine.removeNode(namespaceId, element, context);
  }
  disableAnimations(element, disable) {
    this._transitionEngine.markElementAsDisabled(element, disable);
  }
  process(namespaceId, element, property, value) {
    if (property.charAt(0) == "@") {
      const [id, action] = parseTimelineCommand(property);
      const args = value;
      this._timelineEngine.command(id, element, action, args);
    } else {
      this._transitionEngine.trigger(namespaceId, element, property, value);
    }
  }
  listen(namespaceId, element, eventName, eventPhase, callback) {
    if (eventName.charAt(0) == "@") {
      const [id, action] = parseTimelineCommand(eventName);
      return this._timelineEngine.listen(id, element, action, callback);
    }
    return this._transitionEngine.listen(namespaceId, element, eventName, eventPhase, callback);
  }
  flush(microtaskId = -1) {
    this._transitionEngine.flush(microtaskId);
  }
  get players() {
    return [...this._transitionEngine.players, ...this._timelineEngine.players];
  }
  whenRenderingDone() {
    return this._transitionEngine.whenRenderingDone();
  }
  afterFlushAnimationsDone(cb) {
    this._transitionEngine.afterFlushAnimationsDone(cb);
  }
};
function packageNonAnimatableStyles(element, styles) {
  let startStyles = null;
  let endStyles = null;
  if (Array.isArray(styles) && styles.length) {
    startStyles = filterNonAnimatableStyles(styles[0]);
    if (styles.length > 1) {
      endStyles = filterNonAnimatableStyles(styles[styles.length - 1]);
    }
  } else if (styles instanceof Map) {
    startStyles = filterNonAnimatableStyles(styles);
  }
  return startStyles || endStyles ? new SpecialCasedStyles(element, startStyles, endStyles) : null;
}
var _SpecialCasedStyles = class _SpecialCasedStyles {
  constructor(_element, _startStyles, _endStyles) {
    this._element = _element;
    this._startStyles = _startStyles;
    this._endStyles = _endStyles;
    this._state = 0;
    let initialStyles = _SpecialCasedStyles.initialStylesByElement.get(_element);
    if (!initialStyles) {
      _SpecialCasedStyles.initialStylesByElement.set(_element, initialStyles = /* @__PURE__ */ new Map());
    }
    this._initialStyles = initialStyles;
  }
  start() {
    if (this._state < 1) {
      if (this._startStyles) {
        setStyles(this._element, this._startStyles, this._initialStyles);
      }
      this._state = 1;
    }
  }
  finish() {
    this.start();
    if (this._state < 2) {
      setStyles(this._element, this._initialStyles);
      if (this._endStyles) {
        setStyles(this._element, this._endStyles);
        this._endStyles = null;
      }
      this._state = 1;
    }
  }
  destroy() {
    this.finish();
    if (this._state < 3) {
      _SpecialCasedStyles.initialStylesByElement.delete(this._element);
      if (this._startStyles) {
        eraseStyles(this._element, this._startStyles);
        this._endStyles = null;
      }
      if (this._endStyles) {
        eraseStyles(this._element, this._endStyles);
        this._endStyles = null;
      }
      setStyles(this._element, this._initialStyles);
      this._state = 3;
    }
  }
};
_SpecialCasedStyles.initialStylesByElement = /* @__PURE__ */ new WeakMap();
var SpecialCasedStyles = _SpecialCasedStyles;
function filterNonAnimatableStyles(styles) {
  let result = null;
  styles.forEach((val, prop) => {
    if (isNonAnimatableStyle(prop)) {
      result = result || /* @__PURE__ */ new Map();
      result.set(prop, val);
    }
  });
  return result;
}
function isNonAnimatableStyle(prop) {
  return prop === "display" || prop === "position";
}
var WebAnimationsPlayer = class {
  constructor(element, keyframes, options, _specialStyles) {
    this.element = element;
    this.keyframes = keyframes;
    this.options = options;
    this._specialStyles = _specialStyles;
    this._onDoneFns = [];
    this._onStartFns = [];
    this._onDestroyFns = [];
    this._initialized = false;
    this._finished = false;
    this._started = false;
    this._destroyed = false;
    this._originalOnDoneFns = [];
    this._originalOnStartFns = [];
    this.time = 0;
    this.parentPlayer = null;
    this.currentSnapshot = /* @__PURE__ */ new Map();
    this._duration = options["duration"];
    this._delay = options["delay"] || 0;
    this.time = this._duration + this._delay;
  }
  _onFinish() {
    if (!this._finished) {
      this._finished = true;
      this._onDoneFns.forEach((fn) => fn());
      this._onDoneFns = [];
    }
  }
  init() {
    this._buildPlayer();
    this._preparePlayerBeforeStart();
  }
  _buildPlayer() {
    if (this._initialized) return;
    this._initialized = true;
    const keyframes = this.keyframes;
    this.domPlayer = this._triggerWebAnimation(this.element, keyframes, this.options);
    this._finalKeyframe = keyframes.length ? keyframes[keyframes.length - 1] : /* @__PURE__ */ new Map();
    const onFinish = () => this._onFinish();
    this.domPlayer.addEventListener("finish", onFinish);
    this.onDestroy(() => {
      this.domPlayer.removeEventListener("finish", onFinish);
    });
  }
  _preparePlayerBeforeStart() {
    if (this._delay) {
      this._resetDomPlayerState();
    } else {
      this.domPlayer.pause();
    }
  }
  _convertKeyframesToObject(keyframes) {
    const kfs = [];
    keyframes.forEach((frame) => {
      kfs.push(Object.fromEntries(frame));
    });
    return kfs;
  }
  /** @internal */
  _triggerWebAnimation(element, keyframes, options) {
    return element.animate(this._convertKeyframesToObject(keyframes), options);
  }
  onStart(fn) {
    this._originalOnStartFns.push(fn);
    this._onStartFns.push(fn);
  }
  onDone(fn) {
    this._originalOnDoneFns.push(fn);
    this._onDoneFns.push(fn);
  }
  onDestroy(fn) {
    this._onDestroyFns.push(fn);
  }
  play() {
    this._buildPlayer();
    if (!this.hasStarted()) {
      this._onStartFns.forEach((fn) => fn());
      this._onStartFns = [];
      this._started = true;
      if (this._specialStyles) {
        this._specialStyles.start();
      }
    }
    this.domPlayer.play();
  }
  pause() {
    this.init();
    this.domPlayer.pause();
  }
  finish() {
    this.init();
    if (this._specialStyles) {
      this._specialStyles.finish();
    }
    this._onFinish();
    this.domPlayer.finish();
  }
  reset() {
    this._resetDomPlayerState();
    this._destroyed = false;
    this._finished = false;
    this._started = false;
    this._onStartFns = this._originalOnStartFns;
    this._onDoneFns = this._originalOnDoneFns;
  }
  _resetDomPlayerState() {
    if (this.domPlayer) {
      this.domPlayer.cancel();
    }
  }
  restart() {
    this.reset();
    this.play();
  }
  hasStarted() {
    return this._started;
  }
  destroy() {
    if (!this._destroyed) {
      this._destroyed = true;
      this._resetDomPlayerState();
      this._onFinish();
      if (this._specialStyles) {
        this._specialStyles.destroy();
      }
      this._onDestroyFns.forEach((fn) => fn());
      this._onDestroyFns = [];
    }
  }
  setPosition(p) {
    if (this.domPlayer === void 0) {
      this.init();
    }
    this.domPlayer.currentTime = p * this.time;
  }
  getPosition() {
    return +(this.domPlayer.currentTime ?? 0) / this.time;
  }
  get totalTime() {
    return this._delay + this._duration;
  }
  beforeDestroy() {
    const styles = /* @__PURE__ */ new Map();
    if (this.hasStarted()) {
      const finalKeyframe = this._finalKeyframe;
      finalKeyframe.forEach((val, prop) => {
        if (prop !== "offset") {
          styles.set(prop, this._finished ? val : computeStyle(this.element, prop));
        }
      });
    }
    this.currentSnapshot = styles;
  }
  /** @internal */
  triggerCallback(phaseName) {
    const methods = phaseName === "start" ? this._onStartFns : this._onDoneFns;
    methods.forEach((fn) => fn());
    methods.length = 0;
  }
};
var WebAnimationsDriver = class {
  validateStyleProperty(prop) {
    if (typeof ngDevMode === "undefined" || ngDevMode) {
      return validateStyleProperty(prop);
    }
    return true;
  }
  validateAnimatableStyleProperty(prop) {
    if (typeof ngDevMode === "undefined" || ngDevMode) {
      const cssProp = camelCaseToDashCase(prop);
      return validateWebAnimatableStyleProperty(cssProp);
    }
    return true;
  }
  containsElement(elm1, elm2) {
    return containsElement(elm1, elm2);
  }
  getParentElement(element) {
    return getParentElement(element);
  }
  query(element, selector, multi) {
    return invokeQuery(element, selector, multi);
  }
  computeStyle(element, prop, defaultValue) {
    return computeStyle(element, prop);
  }
  animate(element, keyframes, duration, delay2, easing, previousPlayers = []) {
    const fill = delay2 == 0 ? "both" : "forwards";
    const playerOptions = {
      duration,
      delay: delay2,
      fill
    };
    if (easing) {
      playerOptions["easing"] = easing;
    }
    const previousStyles = /* @__PURE__ */ new Map();
    const previousWebAnimationPlayers = previousPlayers.filter((player) => player instanceof WebAnimationsPlayer);
    if (allowPreviousPlayerStylesMerge(duration, delay2)) {
      previousWebAnimationPlayers.forEach((player) => {
        player.currentSnapshot.forEach((val, prop) => previousStyles.set(prop, val));
      });
    }
    let _keyframes = normalizeKeyframes(keyframes).map((styles) => new Map(styles));
    _keyframes = balancePreviousStylesIntoKeyframes(element, _keyframes, previousStyles);
    const specialStyles = packageNonAnimatableStyles(element, _keyframes);
    return new WebAnimationsPlayer(element, _keyframes, playerOptions, specialStyles);
  }
};
var ANIMATION_PREFIX = "@";
var DISABLE_ANIMATIONS_FLAG = "@.disabled";
var BaseAnimationRenderer = class {
  constructor(namespaceId, delegate, engine, _onDestroy) {
    this.namespaceId = namespaceId;
    this.delegate = delegate;
    this.engine = engine;
    this._onDestroy = _onDestroy;
    this.\u0275type = 0;
  }
  get data() {
    return this.delegate.data;
  }
  destroyNode(node) {
    this.delegate.destroyNode?.(node);
  }
  destroy() {
    this.engine.destroy(this.namespaceId, this.delegate);
    this.engine.afterFlushAnimationsDone(() => {
      queueMicrotask(() => {
        this.delegate.destroy();
      });
    });
    this._onDestroy?.();
  }
  createElement(name, namespace) {
    return this.delegate.createElement(name, namespace);
  }
  createComment(value) {
    return this.delegate.createComment(value);
  }
  createText(value) {
    return this.delegate.createText(value);
  }
  appendChild(parent, newChild) {
    this.delegate.appendChild(parent, newChild);
    this.engine.onInsert(this.namespaceId, newChild, parent, false);
  }
  insertBefore(parent, newChild, refChild, isMove = true) {
    this.delegate.insertBefore(parent, newChild, refChild);
    this.engine.onInsert(this.namespaceId, newChild, parent, isMove);
  }
  removeChild(parent, oldChild, isHostElement) {
    this.engine.onRemove(this.namespaceId, oldChild, this.delegate);
  }
  selectRootElement(selectorOrNode, preserveContent) {
    return this.delegate.selectRootElement(selectorOrNode, preserveContent);
  }
  parentNode(node) {
    return this.delegate.parentNode(node);
  }
  nextSibling(node) {
    return this.delegate.nextSibling(node);
  }
  setAttribute(el, name, value, namespace) {
    this.delegate.setAttribute(el, name, value, namespace);
  }
  removeAttribute(el, name, namespace) {
    this.delegate.removeAttribute(el, name, namespace);
  }
  addClass(el, name) {
    this.delegate.addClass(el, name);
  }
  removeClass(el, name) {
    this.delegate.removeClass(el, name);
  }
  setStyle(el, style2, value, flags) {
    this.delegate.setStyle(el, style2, value, flags);
  }
  removeStyle(el, style2, flags) {
    this.delegate.removeStyle(el, style2, flags);
  }
  setProperty(el, name, value) {
    if (name.charAt(0) == ANIMATION_PREFIX && name == DISABLE_ANIMATIONS_FLAG) {
      this.disableAnimations(el, !!value);
    } else {
      this.delegate.setProperty(el, name, value);
    }
  }
  setValue(node, value) {
    this.delegate.setValue(node, value);
  }
  listen(target, eventName, callback) {
    return this.delegate.listen(target, eventName, callback);
  }
  disableAnimations(element, value) {
    this.engine.disableAnimations(element, value);
  }
};
var AnimationRenderer = class extends BaseAnimationRenderer {
  constructor(factory, namespaceId, delegate, engine, onDestroy) {
    super(namespaceId, delegate, engine, onDestroy);
    this.factory = factory;
    this.namespaceId = namespaceId;
  }
  setProperty(el, name, value) {
    if (name.charAt(0) == ANIMATION_PREFIX) {
      if (name.charAt(1) == "." && name == DISABLE_ANIMATIONS_FLAG) {
        value = value === void 0 ? true : !!value;
        this.disableAnimations(el, value);
      } else {
        this.engine.process(this.namespaceId, el, name.slice(1), value);
      }
    } else {
      this.delegate.setProperty(el, name, value);
    }
  }
  listen(target, eventName, callback) {
    if (eventName.charAt(0) == ANIMATION_PREFIX) {
      const element = resolveElementFromTarget(target);
      let name = eventName.slice(1);
      let phase = "";
      if (name.charAt(0) != ANIMATION_PREFIX) {
        [name, phase] = parseTriggerCallbackName(name);
      }
      return this.engine.listen(this.namespaceId, element, name, phase, (event) => {
        const countId = event["_data"] || -1;
        this.factory.scheduleListenerCallback(countId, callback, event);
      });
    }
    return this.delegate.listen(target, eventName, callback);
  }
};
function resolveElementFromTarget(target) {
  switch (target) {
    case "body":
      return document.body;
    case "document":
      return document;
    case "window":
      return window;
    default:
      return target;
  }
}
function parseTriggerCallbackName(triggerName) {
  const dotIndex = triggerName.indexOf(".");
  const trigger = triggerName.substring(0, dotIndex);
  const phase = triggerName.slice(dotIndex + 1);
  return [trigger, phase];
}
var AnimationRendererFactory = class {
  constructor(delegate, engine, _zone) {
    this.delegate = delegate;
    this.engine = engine;
    this._zone = _zone;
    this._currentId = 0;
    this._microtaskId = 1;
    this._animationCallbacksBuffer = [];
    this._rendererCache = /* @__PURE__ */ new Map();
    this._cdRecurDepth = 0;
    engine.onRemovalComplete = (element, delegate2) => {
      const parentNode = delegate2?.parentNode(element);
      if (parentNode) {
        delegate2.removeChild(parentNode, element);
      }
    };
  }
  createRenderer(hostElement, type) {
    const EMPTY_NAMESPACE_ID = "";
    const delegate = this.delegate.createRenderer(hostElement, type);
    if (!hostElement || !type?.data?.["animation"]) {
      const cache = this._rendererCache;
      let renderer = cache.get(delegate);
      if (!renderer) {
        const onRendererDestroy = () => cache.delete(delegate);
        renderer = new BaseAnimationRenderer(EMPTY_NAMESPACE_ID, delegate, this.engine, onRendererDestroy);
        cache.set(delegate, renderer);
      }
      return renderer;
    }
    const componentId = type.id;
    const namespaceId = type.id + "-" + this._currentId;
    this._currentId++;
    this.engine.register(namespaceId, hostElement);
    const registerTrigger = (trigger) => {
      if (Array.isArray(trigger)) {
        trigger.forEach(registerTrigger);
      } else {
        this.engine.registerTrigger(componentId, namespaceId, hostElement, trigger.name, trigger);
      }
    };
    const animationTriggers = type.data["animation"];
    animationTriggers.forEach(registerTrigger);
    return new AnimationRenderer(this, namespaceId, delegate, this.engine);
  }
  begin() {
    this._cdRecurDepth++;
    if (this.delegate.begin) {
      this.delegate.begin();
    }
  }
  _scheduleCountTask() {
    queueMicrotask(() => {
      this._microtaskId++;
    });
  }
  /** @internal */
  scheduleListenerCallback(count, fn, data) {
    if (count >= 0 && count < this._microtaskId) {
      this._zone.run(() => fn(data));
      return;
    }
    const animationCallbacksBuffer = this._animationCallbacksBuffer;
    if (animationCallbacksBuffer.length == 0) {
      queueMicrotask(() => {
        this._zone.run(() => {
          animationCallbacksBuffer.forEach((tuple) => {
            const [fn2, data2] = tuple;
            fn2(data2);
          });
          this._animationCallbacksBuffer = [];
        });
      });
    }
    animationCallbacksBuffer.push([fn, data]);
  }
  end() {
    this._cdRecurDepth--;
    if (this._cdRecurDepth == 0) {
      this._zone.runOutsideAngular(() => {
        this._scheduleCountTask();
        this.engine.flush(this._microtaskId);
      });
    }
    if (this.delegate.end) {
      this.delegate.end();
    }
  }
  whenRenderingDone() {
    return this.engine.whenRenderingDone();
  }
};

// node_modules/@angular/platform-browser/fesm2022/animations.mjs
var _InjectableAnimationEngine = class _InjectableAnimationEngine extends AnimationEngine {
  // The `ApplicationRef` is injected here explicitly to force the dependency ordering.
  // Since the `ApplicationRef` should be created earlier before the `AnimationEngine`, they
  // both have `ngOnDestroy` hooks and `flush()` must be called after all views are destroyed.
  constructor(doc, driver, normalizer) {
    super(doc, driver, normalizer);
  }
  ngOnDestroy() {
    this.flush();
  }
};
_InjectableAnimationEngine.\u0275fac = function InjectableAnimationEngine_Factory(t) {
  return new (t || _InjectableAnimationEngine)(\u0275\u0275inject(DOCUMENT), \u0275\u0275inject(AnimationDriver), \u0275\u0275inject(AnimationStyleNormalizer));
};
_InjectableAnimationEngine.\u0275prov = /* @__PURE__ */ \u0275\u0275defineInjectable({
  token: _InjectableAnimationEngine,
  factory: _InjectableAnimationEngine.\u0275fac
});
var InjectableAnimationEngine = _InjectableAnimationEngine;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && setClassMetadata(InjectableAnimationEngine, [{
    type: Injectable
  }], () => [{
    type: Document,
    decorators: [{
      type: Inject,
      args: [DOCUMENT]
    }]
  }, {
    type: AnimationDriver
  }, {
    type: AnimationStyleNormalizer
  }], null);
})();
function instantiateDefaultStyleNormalizer() {
  return new WebAnimationsStyleNormalizer();
}
function instantiateRendererFactory(renderer, engine, zone) {
  return new AnimationRendererFactory(renderer, engine, zone);
}
var SHARED_ANIMATION_PROVIDERS = [{
  provide: AnimationStyleNormalizer,
  useFactory: instantiateDefaultStyleNormalizer
}, {
  provide: AnimationEngine,
  useClass: InjectableAnimationEngine
}, {
  provide: RendererFactory2,
  useFactory: instantiateRendererFactory,
  deps: [DomRendererFactory2, AnimationEngine, NgZone]
}];
var BROWSER_ANIMATIONS_PROVIDERS = [{
  provide: AnimationDriver,
  useFactory: () => new WebAnimationsDriver()
}, {
  provide: ANIMATION_MODULE_TYPE,
  useValue: "BrowserAnimations"
}, ...SHARED_ANIMATION_PROVIDERS];
var BROWSER_NOOP_ANIMATIONS_PROVIDERS = [{
  provide: AnimationDriver,
  useClass: NoopAnimationDriver
}, {
  provide: ANIMATION_MODULE_TYPE,
  useValue: "NoopAnimations"
}, ...SHARED_ANIMATION_PROVIDERS];
var _BrowserAnimationsModule = class _BrowserAnimationsModule {
  /**
   * Configures the module based on the specified object.
   *
   * @param config Object used to configure the behavior of the `BrowserAnimationsModule`.
   * @see {@link BrowserAnimationsModuleConfig}
   *
   * @usageNotes
   * When registering the `BrowserAnimationsModule`, you can use the `withConfig`
   * function as follows:
   * ```
   * @NgModule({
   *   imports: [BrowserAnimationsModule.withConfig(config)]
   * })
   * class MyNgModule {}
   * ```
   */
  static withConfig(config) {
    return {
      ngModule: _BrowserAnimationsModule,
      providers: config.disableAnimations ? BROWSER_NOOP_ANIMATIONS_PROVIDERS : BROWSER_ANIMATIONS_PROVIDERS
    };
  }
};
_BrowserAnimationsModule.\u0275fac = function BrowserAnimationsModule_Factory(t) {
  return new (t || _BrowserAnimationsModule)();
};
_BrowserAnimationsModule.\u0275mod = /* @__PURE__ */ \u0275\u0275defineNgModule({
  type: _BrowserAnimationsModule
});
_BrowserAnimationsModule.\u0275inj = /* @__PURE__ */ \u0275\u0275defineInjector({
  providers: BROWSER_ANIMATIONS_PROVIDERS,
  imports: [BrowserModule]
});
var BrowserAnimationsModule = _BrowserAnimationsModule;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && setClassMetadata(BrowserAnimationsModule, [{
    type: NgModule,
    args: [{
      exports: [BrowserModule],
      providers: BROWSER_ANIMATIONS_PROVIDERS
    }]
  }], null, null);
})();
function provideAnimations() {
  performanceMarkFeature("NgEagerAnimations");
  return [...BROWSER_ANIMATIONS_PROVIDERS];
}
var _NoopAnimationsModule = class _NoopAnimationsModule {
};
_NoopAnimationsModule.\u0275fac = function NoopAnimationsModule_Factory(t) {
  return new (t || _NoopAnimationsModule)();
};
_NoopAnimationsModule.\u0275mod = /* @__PURE__ */ \u0275\u0275defineNgModule({
  type: _NoopAnimationsModule
});
_NoopAnimationsModule.\u0275inj = /* @__PURE__ */ \u0275\u0275defineInjector({
  providers: BROWSER_NOOP_ANIMATIONS_PROVIDERS,
  imports: [BrowserModule]
});
var NoopAnimationsModule = _NoopAnimationsModule;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && setClassMetadata(NoopAnimationsModule, [{
    type: NgModule,
    args: [{
      exports: [BrowserModule],
      providers: BROWSER_NOOP_ANIMATIONS_PROVIDERS
    }]
  }], null, null);
})();

// src/@fuse/lib/mock-api/mock-api.constants.ts
var FUSE_MOCK_API_DEFAULT_DELAY = new InjectionToken("FUSE_MOCK_API_DEFAULT_DELAY");

// src/@fuse/lib/mock-api/mock-api.request-handler.ts
var FuseMockApiHandler = class {
  /**
   * Constructor
   */
  constructor(url, delay2) {
    this.url = url;
    this.delay = delay2;
    this._reply = void 0;
    this._replyCount = 0;
    this._replied = 0;
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Accessors
  // -----------------------------------------------------------------------------------------------------
  /**
   * Getter for response callback
   */
  get response() {
    if (this._replyCount > 0 && this._replyCount <= this._replied) {
      return throwError("Execution limit has been reached!");
    }
    if (!this._reply) {
      return throwError("Response callback function does not exist!");
    }
    if (!this.request) {
      return throwError("Request does not exist!");
    }
    this._replied++;
    const replyResult = this._reply({
      request: this.request,
      urlParams: this.urlParams
    });
    if (replyResult instanceof Observable) {
      return replyResult.pipe(take(1));
    }
    return of(replyResult).pipe(take(1));
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Reply
   *
   * @param callback
   */
  reply(callback) {
    this._reply = callback;
  }
  /**
   * Reply count
   *
   * @param count
   */
  replyCount(count) {
    this._replyCount = count;
  }
};

// src/@fuse/lib/mock-api/mock-api.service.ts
var _FuseMockApiService = class _FuseMockApiService {
  constructor() {
    this._handlers = {
      get: /* @__PURE__ */ new Map(),
      post: /* @__PURE__ */ new Map(),
      patch: /* @__PURE__ */ new Map(),
      delete: /* @__PURE__ */ new Map(),
      put: /* @__PURE__ */ new Map(),
      head: /* @__PURE__ */ new Map(),
      jsonp: /* @__PURE__ */ new Map(),
      options: /* @__PURE__ */ new Map()
    };
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Find the handler from the service
   * with the given method and url
   *
   * @param method
   * @param url
   */
  findHandler(method, url) {
    const matchingHandler = {
      handler: void 0,
      urlParams: {}
    };
    const urlParts = url.split("/");
    const handlers2 = this._handlers[method.toLowerCase()];
    handlers2.forEach((handler, handlerUrl) => {
      if (matchingHandler.handler) {
        return;
      }
      const handlerUrlParts = handlerUrl.split("/");
      if (urlParts.length !== handlerUrlParts.length) {
        return;
      }
      const matches2 = handlerUrlParts.every((handlerUrlPart, index) => handlerUrlPart === urlParts[index] || handlerUrlPart.startsWith(":"));
      if (matches2) {
        matchingHandler.handler = handler;
        matchingHandler.urlParams = fromPairs_default(compact_default(handlerUrlParts.map((handlerUrlPart, index) => handlerUrlPart.startsWith(":") ? [handlerUrlPart.substring(1), urlParts[index]] : void 0)));
      }
    });
    return matchingHandler;
  }
  /**
   * Register GET request handler
   *
   * @param url - URL address of the mocked API endpoint
   * @param delay - Delay of the response in milliseconds
   */
  onGet(url, delay2) {
    return this._registerHandler("get", url, delay2);
  }
  /**
   * Register POST request handler
   *
   * @param url - URL address of the mocked API endpoint
   * @param delay - Delay of the response in milliseconds
   */
  onPost(url, delay2) {
    return this._registerHandler("post", url, delay2);
  }
  /**
   * Register PATCH request handler
   *
   * @param url - URL address of the mocked API endpoint
   * @param delay - Delay of the response in milliseconds
   */
  onPatch(url, delay2) {
    return this._registerHandler("patch", url, delay2);
  }
  /**
   * Register DELETE request handler
   *
   * @param url - URL address of the mocked API endpoint
   * @param delay - Delay of the response in milliseconds
   */
  onDelete(url, delay2) {
    return this._registerHandler("delete", url, delay2);
  }
  /**
   * Register PUT request handler
   *
   * @param url - URL address of the mocked API endpoint
   * @param delay - Delay of the response in milliseconds
   */
  onPut(url, delay2) {
    return this._registerHandler("put", url, delay2);
  }
  /**
   * Register HEAD request handler
   *
   * @param url - URL address of the mocked API endpoint
   * @param delay - Delay of the response in milliseconds
   */
  onHead(url, delay2) {
    return this._registerHandler("head", url, delay2);
  }
  /**
   * Register JSONP request handler
   *
   * @param url - URL address of the mocked API endpoint
   * @param delay - Delay of the response in milliseconds
   */
  onJsonp(url, delay2) {
    return this._registerHandler("jsonp", url, delay2);
  }
  /**
   * Register OPTIONS request handler
   *
   * @param url - URL address of the mocked API endpoint
   * @param delay - Delay of the response in milliseconds
   */
  onOptions(url, delay2) {
    return this._registerHandler("options", url, delay2);
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Private methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Register and return a new instance of the handler
   *
   * @param method
   * @param url
   * @param delay
   * @private
   */
  _registerHandler(method, url, delay2) {
    const fuseMockHttp = new FuseMockApiHandler(url, delay2);
    this._handlers[method].set(url, fuseMockHttp);
    return fuseMockHttp;
  }
};
_FuseMockApiService.\u0275fac = function FuseMockApiService_Factory(t) {
  return new (t || _FuseMockApiService)();
};
_FuseMockApiService.\u0275prov = /* @__PURE__ */ \u0275\u0275defineInjectable({ token: _FuseMockApiService, factory: _FuseMockApiService.\u0275fac, providedIn: "root" });
var FuseMockApiService = _FuseMockApiService;

// src/@fuse/lib/mock-api/mock-api.interceptor.ts
var mockApiInterceptor = (request, next) => {
  const defaultDelay = inject(FUSE_MOCK_API_DEFAULT_DELAY);
  const fuseMockApiService = inject(FuseMockApiService);
  const { handler, urlParams } = fuseMockApiService.findHandler(request.method.toUpperCase(), request.url);
  if (!handler) {
    return next(request);
  }
  handler.request = request;
  handler.urlParams = urlParams;
  return handler.response.pipe(delay(handler.delay ?? defaultDelay ?? 0), switchMap((response) => {
    if (!response) {
      response = new HttpErrorResponse({
        error: "NOT FOUND",
        status: 404,
        statusText: "NOT FOUND"
      });
      return throwError(response);
    }
    const data = {
      status: response[0],
      body: response[1]
    };
    if (data.status >= 200 && data.status < 300) {
      response = new HttpResponse({
        body: data.body,
        status: data.status,
        statusText: "OK"
      });
      return of(response);
    }
    response = new HttpErrorResponse({
      error: data.body.error,
      status: data.status,
      statusText: "ERROR"
    });
    return throwError(response);
  }));
};

// src/@fuse/lib/mock-api/mock-api.utils.ts
var FuseMockApiUtils = class {
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Generate a globally unique id
   */
  static guid() {
    let d = (/* @__PURE__ */ new Date()).getTime();
    if (typeof performance !== "undefined" && typeof performance.now === "function") {
      d += performance.now();
    }
    return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, (c) => {
      const r = (d + Math.random() * 16) % 16 | 0;
      d = Math.floor(d / 16);
      return (c === "x" ? r : r & 3 | 8).toString(16);
    });
  }
};

// src/@fuse/services/config/config.constants.ts
var FUSE_CONFIG = new InjectionToken("FUSE_APP_CONFIG");

// src/@fuse/services/loading/loading.service.ts
var _FuseLoadingService = class _FuseLoadingService {
  constructor() {
    this._auto$ = new BehaviorSubject(true);
    this._mode$ = new BehaviorSubject("indeterminate");
    this._progress$ = new BehaviorSubject(0);
    this._show$ = new BehaviorSubject(false);
    this._urlMap = /* @__PURE__ */ new Map();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Accessors
  // -----------------------------------------------------------------------------------------------------
  /**
   * Getter for auto mode
   */
  get auto$() {
    return this._auto$.asObservable();
  }
  /**
   * Getter for mode
   */
  get mode$() {
    return this._mode$.asObservable();
  }
  /**
   * Getter for progress
   */
  get progress$() {
    return this._progress$.asObservable();
  }
  /**
   * Getter for show
   */
  get show$() {
    return this._show$.asObservable();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Show the loading bar
   */
  show() {
    this._show$.next(true);
  }
  /**
   * Hide the loading bar
   */
  hide() {
    this._show$.next(false);
  }
  /**
   * Set the auto mode
   *
   * @param value
   */
  setAutoMode(value) {
    this._auto$.next(value);
  }
  /**
   * Set the mode
   *
   * @param value
   */
  setMode(value) {
    this._mode$.next(value);
  }
  /**
   * Set the progress of the bar manually
   *
   * @param value
   */
  setProgress(value) {
    if (value < 0 || value > 100) {
      console.error("Progress value must be between 0 and 100!");
      return;
    }
    this._progress$.next(value);
  }
  /**
   * Sets the loading status on the given url
   *
   * @param status
   * @param url
   */
  _setLoadingStatus(status, url) {
    if (!url) {
      console.error("The request URL must be provided!");
      return;
    }
    if (status === true) {
      this._urlMap.set(url, status);
      this._show$.next(true);
    } else if (status === false && this._urlMap.has(url)) {
      this._urlMap.delete(url);
    }
    if (this._urlMap.size === 0) {
      this._show$.next(false);
    }
  }
};
_FuseLoadingService.\u0275fac = function FuseLoadingService_Factory(t) {
  return new (t || _FuseLoadingService)();
};
_FuseLoadingService.\u0275prov = /* @__PURE__ */ \u0275\u0275defineInjectable({ token: _FuseLoadingService, factory: _FuseLoadingService.\u0275fac, providedIn: "root" });
var FuseLoadingService = _FuseLoadingService;

// src/@fuse/services/loading/loading.interceptor.ts
var fuseLoadingInterceptor = (req, next) => {
  const fuseLoadingService = inject(FuseLoadingService);
  let handleRequestsAutomatically = false;
  fuseLoadingService.auto$.pipe(take(1)).subscribe((value) => {
    handleRequestsAutomatically = value;
  });
  if (!handleRequestsAutomatically) {
    return next(req);
  }
  fuseLoadingService._setLoadingStatus(true, req.url);
  return next(req).pipe(finalize(() => {
    fuseLoadingService._setLoadingStatus(false, req.url);
  }));
};

// src/@fuse/services/config/config.service.ts
var _FuseConfigService = class _FuseConfigService {
  constructor() {
    this._config = new BehaviorSubject(inject(FUSE_CONFIG));
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Accessors
  // -----------------------------------------------------------------------------------------------------
  /**
   * Setter & getter for config
   */
  set config(value) {
    const config = merge_default({}, this._config.getValue(), value);
    this._config.next(config);
  }
  // eslint-disable-next-line @typescript-eslint/member-ordering
  get config$() {
    return this._config.asObservable();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Resets the config to the default
   */
  reset() {
    this._config.next(this.config);
  }
};
_FuseConfigService.\u0275fac = function FuseConfigService_Factory(t) {
  return new (t || _FuseConfigService)();
};
_FuseConfigService.\u0275prov = /* @__PURE__ */ \u0275\u0275defineInjectable({ token: _FuseConfigService, factory: _FuseConfigService.\u0275fac, providedIn: "root" });
var FuseConfigService = _FuseConfigService;

// src/@fuse/services/media-watcher/media-watcher.service.ts
var _FuseMediaWatcherService = class _FuseMediaWatcherService {
  /**
   * Constructor
   */
  constructor() {
    this._breakpointObserver = inject(BreakpointObserver);
    this._fuseConfigService = inject(FuseConfigService);
    this._onMediaChange = new ReplaySubject(1);
    this._fuseConfigService.config$.pipe(map((config) => fromPairs_default(Object.entries(config.screens).map(([alias, screen]) => [
      alias,
      `(min-width: ${screen})`
    ]))), switchMap((screens) => this._breakpointObserver.observe(Object.values(screens)).pipe(map((state) => {
      const matchingAliases = [];
      const matchingQueries = {};
      const matchingBreakpoints = Object.entries(state.breakpoints).filter(([query, matches2]) => matches2) ?? [];
      for (const [query] of matchingBreakpoints) {
        const matchingAlias = Object.entries(screens).find(([alias, q]) => q === query)[0];
        if (matchingAlias) {
          matchingAliases.push(matchingAlias);
          matchingQueries[matchingAlias] = query;
        }
      }
      this._onMediaChange.next({
        matchingAliases,
        matchingQueries
      });
    })))).subscribe();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Accessors
  // -----------------------------------------------------------------------------------------------------
  /**
   * Getter for _onMediaChange
   */
  get onMediaChange$() {
    return this._onMediaChange.asObservable();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * On media query change
   *
   * @param query
   */
  onMediaQueryChange$(query) {
    return this._breakpointObserver.observe(query);
  }
};
_FuseMediaWatcherService.\u0275fac = function FuseMediaWatcherService_Factory(t) {
  return new (t || _FuseMediaWatcherService)();
};
_FuseMediaWatcherService.\u0275prov = /* @__PURE__ */ \u0275\u0275defineInjectable({ token: _FuseMediaWatcherService, factory: _FuseMediaWatcherService.\u0275fac, providedIn: "root" });
var FuseMediaWatcherService = _FuseMediaWatcherService;

// src/@fuse/services/platform/platform.service.ts
var _FusePlatformService = class _FusePlatformService {
  /**
   * Constructor
   */
  constructor() {
    this._platform = inject(Platform);
    this.osName = "os-unknown";
    if (!this._platform.isBrowser) {
      return;
    }
    if (navigator.userAgent.includes("Win")) {
      this.osName = "os-windows";
    }
    if (navigator.userAgent.includes("Mac")) {
      this.osName = "os-mac";
    }
    if (navigator.userAgent.includes("X11")) {
      this.osName = "os-unix";
    }
    if (navigator.userAgent.includes("Linux")) {
      this.osName = "os-linux";
    }
    if (this._platform.IOS) {
      this.osName = "os-ios";
    }
    if (this._platform.ANDROID) {
      this.osName = "os-android";
    }
  }
};
_FusePlatformService.\u0275fac = function FusePlatformService_Factory(t) {
  return new (t || _FusePlatformService)();
};
_FusePlatformService.\u0275prov = /* @__PURE__ */ \u0275\u0275defineInjectable({ token: _FusePlatformService, factory: _FusePlatformService.\u0275fac, providedIn: "root" });
var FusePlatformService = _FusePlatformService;

// src/@fuse/services/splash-screen/splash-screen.service.ts
var _FuseSplashScreenService = class _FuseSplashScreenService {
  /**
   * Constructor
   */
  constructor() {
    this._document = inject(DOCUMENT);
    this._router = inject(Router);
    this._router.events.pipe(filter((event) => event instanceof NavigationEnd), take(1)).subscribe(() => {
      this.hide();
    });
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Show the splash screen
   */
  show() {
    this._document.body.classList.remove("fuse-splash-screen-hidden");
  }
  /**
   * Hide the splash screen
   */
  hide() {
    this._document.body.classList.add("fuse-splash-screen-hidden");
  }
};
_FuseSplashScreenService.\u0275fac = function FuseSplashScreenService_Factory(t) {
  return new (t || _FuseSplashScreenService)();
};
_FuseSplashScreenService.\u0275prov = /* @__PURE__ */ \u0275\u0275defineInjectable({ token: _FuseSplashScreenService, factory: _FuseSplashScreenService.\u0275fac, providedIn: "root" });
var FuseSplashScreenService = _FuseSplashScreenService;

// src/@fuse/fuse.provider.ts
var provideFuse = (config) => {
  const providers = [
    {
      // Disable 'theme' sanity check
      provide: MATERIAL_SANITY_CHECKS,
      useValue: {
        doctype: true,
        theme: false,
        version: true
      }
    },
    {
      // Use the 'fill' appearance on Angular Material form fields by default
      provide: MAT_FORM_FIELD_DEFAULT_OPTIONS,
      useValue: {
        appearance: "fill"
      }
    },
    {
      provide: FUSE_MOCK_API_DEFAULT_DELAY,
      useValue: config?.mockApi?.delay ?? 0
    },
    {
      provide: FUSE_CONFIG,
      useValue: config?.fuse ?? {}
    },
    importProvidersFrom(MatDialogModule),
    {
      provide: ENVIRONMENT_INITIALIZER,
      useValue: () => inject(FuseConfirmationService),
      multi: true
    },
    provideHttpClient(withInterceptors([fuseLoadingInterceptor])),
    {
      provide: ENVIRONMENT_INITIALIZER,
      useValue: () => inject(FuseLoadingService),
      multi: true
    },
    {
      provide: ENVIRONMENT_INITIALIZER,
      useValue: () => inject(FuseMediaWatcherService),
      multi: true
    },
    {
      provide: ENVIRONMENT_INITIALIZER,
      useValue: () => inject(FusePlatformService),
      multi: true
    },
    {
      provide: ENVIRONMENT_INITIALIZER,
      useValue: () => inject(FuseSplashScreenService),
      multi: true
    },
    {
      provide: ENVIRONMENT_INITIALIZER,
      useValue: () => inject(FuseUtilsService),
      multi: true
    }
  ];
  if (config?.mockApi?.services) {
    providers.push(provideHttpClient(withInterceptors([mockApiInterceptor])), {
      provide: APP_INITIALIZER,
      deps: [...config.mockApi.services],
      useFactory: () => () => null,
      multi: true
    });
  }
  return providers;
};

// node_modules/flat/index.js
function isBuffer(obj) {
  return obj && obj.constructor && typeof obj.constructor.isBuffer === "function" && obj.constructor.isBuffer(obj);
}
function keyIdentity(key) {
  return key;
}
function flatten(target, opts) {
  opts = opts || {};
  const delimiter = opts.delimiter || ".";
  const maxDepth = opts.maxDepth;
  const transformKey = opts.transformKey || keyIdentity;
  const output = {};
  function step(object, prev, currentDepth) {
    currentDepth = currentDepth || 1;
    Object.keys(object).forEach(function(key) {
      const value = object[key];
      const isarray = opts.safe && Array.isArray(value);
      const type = Object.prototype.toString.call(value);
      const isbuffer = isBuffer(value);
      const isobject = type === "[object Object]" || type === "[object Array]";
      const newKey = prev ? prev + delimiter + transformKey(key) : transformKey(key);
      if (!isarray && !isbuffer && isobject && Object.keys(value).length && (!opts.maxDepth || currentDepth < maxDepth)) {
        return step(value, newKey, currentDepth + 1);
      }
      output[newKey] = value;
    });
  }
  step(target);
  return output;
}
function unflatten(target, opts) {
  opts = opts || {};
  const delimiter = opts.delimiter || ".";
  const overwrite = opts.overwrite || false;
  const transformKey = opts.transformKey || keyIdentity;
  const result = {};
  const isbuffer = isBuffer(target);
  if (isbuffer || Object.prototype.toString.call(target) !== "[object Object]") {
    return target;
  }
  function getkey(key) {
    const parsedKey = Number(key);
    return isNaN(parsedKey) || key.indexOf(".") !== -1 || opts.object ? key : parsedKey;
  }
  function addKeys(keyPrefix, recipient, target2) {
    return Object.keys(target2).reduce(function(result2, key) {
      result2[keyPrefix + delimiter + key] = target2[key];
      return result2;
    }, recipient);
  }
  function isEmpty2(val) {
    const type = Object.prototype.toString.call(val);
    const isArray = type === "[object Array]";
    const isObject2 = type === "[object Object]";
    if (!val) {
      return true;
    } else if (isArray) {
      return !val.length;
    } else if (isObject2) {
      return !Object.keys(val).length;
    }
  }
  target = Object.keys(target).reduce(function(result2, key) {
    const type = Object.prototype.toString.call(target[key]);
    const isObject2 = type === "[object Object]" || type === "[object Array]";
    if (!isObject2 || isEmpty2(target[key])) {
      result2[key] = target[key];
      return result2;
    } else {
      return addKeys(
        key,
        result2,
        flatten(target[key], opts)
      );
    }
  }, {});
  Object.keys(target).forEach(function(key) {
    const split = key.split(delimiter).map(transformKey);
    let key1 = getkey(split.shift());
    let key2 = getkey(split[0]);
    let recipient = result;
    while (key2 !== void 0) {
      if (key1 === "__proto__") {
        return;
      }
      const type = Object.prototype.toString.call(recipient[key1]);
      const isobject = type === "[object Object]" || type === "[object Array]";
      if (!overwrite && !isobject && typeof recipient[key1] !== "undefined") {
        return;
      }
      if (overwrite && !isobject || !overwrite && recipient[key1] == null) {
        recipient[key1] = typeof key2 === "number" && !opts.object ? [] : {};
      }
      recipient = recipient[key1];
      if (split.length > 0) {
        key1 = getkey(split.shift());
        key2 = getkey(split[0]);
      }
    }
    recipient[key1] = unflatten(target[key], opts);
  });
  return result;
}

// node_modules/@ngneat/transloco/fesm2022/ngneat-transloco.mjs
var DefaultLoader = class {
  translations;
  constructor(translations) {
    this.translations = translations;
  }
  getTranslation(lang) {
    return of(this.translations.get(lang) || {});
  }
};
var TRANSLOCO_LOADER = new InjectionToken("TRANSLOCO_LOADER");
function getValue(obj, path) {
  if (!obj) {
    return obj;
  }
  if (Object.prototype.hasOwnProperty.call(obj, path)) {
    return obj[path];
  }
  return path.split(".").reduce((p, c) => p?.[c], obj);
}
function setValue(obj, prop, val) {
  obj = __spreadValues({}, obj);
  const split = prop.split(".");
  const lastIndex = split.length - 1;
  split.reduce((acc, part, index) => {
    if (index === lastIndex) {
      acc[part] = val;
    } else {
      acc[part] = Array.isArray(acc[part]) ? acc[part].slice() : __spreadValues({}, acc[part]);
    }
    return acc && acc[part];
  }, obj);
  return obj;
}
function size(collection) {
  if (!collection) {
    return 0;
  }
  if (Array.isArray(collection)) {
    return collection.length;
  }
  if (isObject(collection)) {
    return Object.keys(collection).length;
  }
  return collection ? collection.length : 0;
}
function isEmpty(collection) {
  return size(collection) === 0;
}
function isFunction(val) {
  return typeof val === "function";
}
function isString(val) {
  return typeof val === "string";
}
function isObject(item) {
  return !!item && typeof item === "object" && !Array.isArray(item);
}
function toCamelCase(str) {
  return str.replace(/(?:^\w|[A-Z]|\b\w)/g, (word, index) => index == 0 ? word.toLowerCase() : word.toUpperCase()).replace(/\s+|_|-|\//g, "");
}
function isNil(value) {
  return value === null || value === void 0;
}
function isDefined(value) {
  return isNil(value) === false;
}
function isScopeObject(item) {
  return item && typeof item.scope === "string";
}
function isScopeArray(item) {
  return Array.isArray(item) && item.every(isScopeObject);
}
function hasInlineLoader(item) {
  return item && isObject(item.loader);
}
function unflatten2(obj) {
  return unflatten(obj);
}
function flatten2(obj) {
  return flatten(obj, {
    safe: true
  });
}
var TRANSLOCO_CONFIG = new InjectionToken("TRANSLOCO_CONFIG", {
  providedIn: "root",
  factory: () => defaultConfig
});
var defaultConfig = {
  defaultLang: "en",
  reRenderOnLangChange: false,
  prodMode: false,
  failedRetries: 2,
  fallbackLang: [],
  availableLangs: [],
  missingHandler: {
    logMissingKey: true,
    useFallbackTranslation: false,
    allowEmpty: false
  },
  flatten: {
    aot: false
  },
  interpolation: ["{{", "}}"]
};
function translocoConfig(config = {}) {
  return __spreadProps(__spreadValues(__spreadValues({}, defaultConfig), config), {
    missingHandler: __spreadValues(__spreadValues({}, defaultConfig.missingHandler), config.missingHandler),
    flatten: __spreadValues(__spreadValues({}, defaultConfig.flatten), config.flatten)
  });
}
var TRANSLOCO_TRANSPILER = new InjectionToken("TRANSLOCO_TRANSPILER");
var DefaultTranspiler = class _DefaultTranspiler {
  interpolationMatcher;
  // TODO use inject in Transloco v7
  constructor(config) {
    this.interpolationMatcher = resolveMatcher(config ?? defaultConfig);
  }
  transpile(value, params = {}, translation, key) {
    if (isString(value)) {
      return value.replace(this.interpolationMatcher, (_, match) => {
        match = match.trim();
        if (isDefined(params[match])) {
          return params[match];
        }
        return isDefined(translation[match]) ? this.transpile(translation[match], params, translation, key) : "";
      });
    } else if (params) {
      if (isObject(value)) {
        value = this.handleObject(value, params, translation, key);
      } else if (Array.isArray(value)) {
        value = this.handleArray(value, params, translation, key);
      }
    }
    return value;
  }
  /**
   *
   * @example
   *
   * const en = {
   *  a: {
   *    b: {
   *      c: "Hello {{ value }}"
   *    }
   *  }
   * }
   *
   * const params =  {
   *  "b.c": { value: "Transloco "}
   * }
   *
   * service.selectTranslate('a', params);
   *
   * // the first param will be the result of `en.a`.
   * // the second param will be `params`.
   * parser.transpile(value, params, {});
   *
   *
   */
  handleObject(value, params = {}, translation, key) {
    let result = value;
    Object.keys(params).forEach((p) => {
      const v = getValue(result, p);
      const getParams = getValue(params, p);
      const transpiled = this.transpile(v, getParams, translation, key);
      result = setValue(result, p, transpiled);
    });
    return result;
  }
  handleArray(value, params = {}, translation, key) {
    return value.map((v) => this.transpile(v, params, translation, key));
  }
  static \u0275fac = function DefaultTranspiler_Factory(t) {
    return new (t || _DefaultTranspiler)(\u0275\u0275inject(TRANSLOCO_CONFIG, 8));
  };
  static \u0275prov = /* @__PURE__ */ \u0275\u0275defineInjectable({
    token: _DefaultTranspiler,
    factory: _DefaultTranspiler.\u0275fac
  });
};
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && setClassMetadata(DefaultTranspiler, [{
    type: Injectable
  }], function() {
    return [{
      type: void 0,
      decorators: [{
        type: Optional
      }, {
        type: Inject,
        args: [TRANSLOCO_CONFIG]
      }]
    }];
  }, null);
})();
function resolveMatcher(config) {
  const [start, end] = config.interpolation;
  return new RegExp(`${start}(.*?)${end}`, "g");
}
function getFunctionArgs(argsString) {
  const splitted = argsString ? argsString.split(",") : [];
  const args = [];
  for (let i = 0; i < splitted.length; i++) {
    let value = splitted[i].trim();
    while (value[value.length - 1] === "\\") {
      i++;
      value = value.replace("\\", ",") + splitted[i];
    }
    args.push(value);
  }
  return args;
}
var FunctionalTranspiler = class _FunctionalTranspiler extends DefaultTranspiler {
  injector = inject(Injector);
  transpile(value, params = {}, translation, key) {
    let transpiled = value;
    if (isString(value)) {
      transpiled = value.replace(/\[\[\s*(\w+)\((.*?)\)\s*]]/g, (match, functionName, args) => {
        try {
          const func = this.injector.get(functionName);
          return func.transpile(...getFunctionArgs(args));
        } catch (e) {
          let message = `There is an error in: '${value}'. 
                          Check that the you used the right syntax in your translation and that the implementation of ${functionName} is correct.`;
          if (e.message.includes("NullInjectorError")) {
            message = `You are using the '${functionName}' function in your translation but no provider was found!`;
          }
          throw new Error(message);
        }
      });
    }
    return super.transpile(transpiled, params, translation, key);
  }
  static \u0275fac = /* @__PURE__ */ (() => {
    let \u0275FunctionalTranspiler_BaseFactory;
    return function FunctionalTranspiler_Factory(t) {
      return (\u0275FunctionalTranspiler_BaseFactory || (\u0275FunctionalTranspiler_BaseFactory = \u0275\u0275getInheritedFactory(_FunctionalTranspiler)))(t || _FunctionalTranspiler);
    };
  })();
  static \u0275prov = /* @__PURE__ */ \u0275\u0275defineInjectable({
    token: _FunctionalTranspiler,
    factory: _FunctionalTranspiler.\u0275fac
  });
};
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && setClassMetadata(FunctionalTranspiler, [{
    type: Injectable
  }], null, null);
})();
var TRANSLOCO_MISSING_HANDLER = new InjectionToken("TRANSLOCO_MISSING_HANDLER");
var DefaultHandler = class _DefaultHandler {
  handle(key, config) {
    if (config.missingHandler.logMissingKey && !config.prodMode) {
      const msg = `Missing translation for '${key}'`;
      console.warn(`%c ${msg}`, "font-size: 12px; color: red");
    }
    return key;
  }
  static \u0275fac = function DefaultHandler_Factory(t) {
    return new (t || _DefaultHandler)();
  };
  static \u0275prov = /* @__PURE__ */ \u0275\u0275defineInjectable({
    token: _DefaultHandler,
    factory: _DefaultHandler.\u0275fac
  });
};
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && setClassMetadata(DefaultHandler, [{
    type: Injectable
  }], null, null);
})();
var TRANSLOCO_INTERCEPTOR = new InjectionToken("TRANSLOCO_INTERCEPTOR");
var DefaultInterceptor = class _DefaultInterceptor {
  preSaveTranslation(translation) {
    return translation;
  }
  preSaveTranslationKey(_, value) {
    return value;
  }
  static \u0275fac = function DefaultInterceptor_Factory(t) {
    return new (t || _DefaultInterceptor)();
  };
  static \u0275prov = /* @__PURE__ */ \u0275\u0275defineInjectable({
    token: _DefaultInterceptor,
    factory: _DefaultInterceptor.\u0275fac
  });
};
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && setClassMetadata(DefaultInterceptor, [{
    type: Injectable
  }], null, null);
})();
var TRANSLOCO_FALLBACK_STRATEGY = new InjectionToken("TRANSLOCO_FALLBACK_STRATEGY");
var DefaultFallbackStrategy = class _DefaultFallbackStrategy {
  userConfig;
  constructor(userConfig) {
    this.userConfig = userConfig;
  }
  getNextLangs() {
    const fallbackLang = this.userConfig.fallbackLang;
    if (!fallbackLang) {
      throw new Error("When using the default fallback, a fallback language must be provided in the config!");
    }
    return Array.isArray(fallbackLang) ? fallbackLang : [fallbackLang];
  }
  static \u0275fac = function DefaultFallbackStrategy_Factory(t) {
    return new (t || _DefaultFallbackStrategy)(\u0275\u0275inject(TRANSLOCO_CONFIG));
  };
  static \u0275prov = /* @__PURE__ */ \u0275\u0275defineInjectable({
    token: _DefaultFallbackStrategy,
    factory: _DefaultFallbackStrategy.\u0275fac
  });
};
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && setClassMetadata(DefaultFallbackStrategy, [{
    type: Injectable
  }], function() {
    return [{
      type: void 0,
      decorators: [{
        type: Inject,
        args: [TRANSLOCO_CONFIG]
      }]
    }];
  }, null);
})();
function getScopeFromLang(lang) {
  if (!lang) {
    return "";
  }
  const split = lang.split("/");
  split.pop();
  return split.join("/");
}
function getLangFromScope(lang) {
  if (!lang) {
    return "";
  }
  return lang.split("/").pop();
}
function getPipeValue(str, value, char = "|") {
  if (isString(str)) {
    const splitted = str.split(char);
    const lastItem = splitted.pop();
    return lastItem === value ? [true, splitted.toString()] : [false, lastItem];
  }
  return [false, ""];
}
function shouldListenToLangChanges(service2, lang) {
  const [hasStatic] = getPipeValue(lang, "static");
  if (!hasStatic) {
    return !!service2.config.reRenderOnLangChange;
  }
  return false;
}
function listenOrNotOperator(listenToLangChange) {
  return listenToLangChange ? (source) => source : take(1);
}
function prependScope(inlineLoader, scope) {
  return Object.keys(inlineLoader).reduce((acc, lang) => {
    acc[`${scope}/${lang}`] = inlineLoader[lang];
    return acc;
  }, {});
}
function resolveInlineLoader(providerScope, scope) {
  return hasInlineLoader(providerScope) ? prependScope(providerScope.loader, scope) : void 0;
}
function getEventPayload(lang) {
  return {
    scope: getScopeFromLang(lang) || null,
    langName: getLangFromScope(lang)
  };
}
function resolveLoader(options) {
  const {
    path,
    inlineLoader,
    mainLoader,
    data
  } = options;
  if (inlineLoader) {
    const pathLoader = inlineLoader[path];
    if (isFunction(pathLoader) === false) {
      throw `You're using an inline loader but didn't provide a loader for ${path}`;
    }
    return inlineLoader[path]().then((res) => res.default ? res.default : res);
  }
  return mainLoader.getTranslation(path, data);
}
function getFallbacksLoaders({
  mainLoader,
  path,
  data,
  fallbackPath,
  inlineLoader
}) {
  const paths = fallbackPath ? [path, fallbackPath] : [path];
  return paths.map((path2) => {
    const loader = resolveLoader({
      path: path2,
      mainLoader,
      inlineLoader,
      data
    });
    return from(loader).pipe(map((translation) => ({
      translation,
      lang: path2
    })));
  });
}
var service;
var TranslocoService = class _TranslocoService {
  loader;
  parser;
  missingHandler;
  interceptor;
  fallbackStrategy;
  langChanges$;
  subscription = null;
  translations = /* @__PURE__ */ new Map();
  cache = /* @__PURE__ */ new Map();
  firstFallbackLang;
  defaultLang = "";
  availableLangs = [];
  isResolvedMissingOnce = false;
  lang;
  failedLangs = /* @__PURE__ */ new Set();
  events = new Subject();
  events$ = this.events.asObservable();
  config;
  constructor(loader, parser, missingHandler, interceptor, userConfig, fallbackStrategy) {
    this.loader = loader;
    this.parser = parser;
    this.missingHandler = missingHandler;
    this.interceptor = interceptor;
    this.fallbackStrategy = fallbackStrategy;
    if (!this.loader) {
      this.loader = new DefaultLoader(this.translations);
    }
    service = this;
    this.config = JSON.parse(JSON.stringify(userConfig));
    this.setAvailableLangs(this.config.availableLangs || []);
    this.setFallbackLangForMissingTranslation(this.config);
    this.setDefaultLang(this.config.defaultLang);
    this.lang = new BehaviorSubject(this.getDefaultLang());
    this.langChanges$ = this.lang.asObservable();
    this.subscription = this.events$.subscribe((e) => {
      if (e.type === "translationLoadSuccess" && e.wasFailure) {
        this.setActiveLang(e.payload.langName);
      }
    });
  }
  getDefaultLang() {
    return this.defaultLang;
  }
  setDefaultLang(lang) {
    this.defaultLang = lang;
  }
  getActiveLang() {
    return this.lang.getValue();
  }
  setActiveLang(lang) {
    this.parser.onLangChanged?.(lang);
    this.lang.next(lang);
    this.events.next({
      type: "langChanged",
      payload: getEventPayload(lang)
    });
    return this;
  }
  setAvailableLangs(langs) {
    this.availableLangs = langs;
  }
  /**
   * Gets the available languages.
   *
   * @returns
   * An array of the available languages. Can be either a `string[]` or a `{ id: string; label: string }[]`
   * depending on how the available languages are set in your module.
   */
  getAvailableLangs() {
    return this.availableLangs;
  }
  load(path, options = {}) {
    const cached = this.cache.get(path);
    if (cached) {
      return cached;
    }
    let loadTranslation;
    const isScope = this._isLangScoped(path);
    let scope;
    if (isScope) {
      scope = getScopeFromLang(path);
    }
    const loadersOptions = {
      path,
      mainLoader: this.loader,
      inlineLoader: options.inlineLoader,
      data: isScope ? {
        scope
      } : void 0
    };
    if (this.useFallbackTranslation(path)) {
      const fallback = isScope ? `${scope}/${this.firstFallbackLang}` : this.firstFallbackLang;
      const loaders = getFallbacksLoaders(__spreadProps(__spreadValues({}, loadersOptions), {
        fallbackPath: fallback
      }));
      loadTranslation = forkJoin(loaders);
    } else {
      const loader = resolveLoader(loadersOptions);
      loadTranslation = from(loader);
    }
    const load$ = loadTranslation.pipe(retry(this.config.failedRetries), tap((translation) => {
      if (Array.isArray(translation)) {
        translation.forEach((t) => {
          this.handleSuccess(t.lang, t.translation);
          if (t.lang !== path) {
            this.cache.set(t.lang, of({}));
          }
        });
        return;
      }
      this.handleSuccess(path, translation);
    }), catchError((error) => {
      if (!this.config.prodMode) {
        console.error(`Error while trying to load "${path}"`, error);
      }
      return this.handleFailure(path, options);
    }), shareReplay(1));
    this.cache.set(path, load$);
    return load$;
  }
  /**
   * Gets the instant translated value of a key
   *
   * @example
   *
   * translate<string>('hello')
   * translate('hello', { value: 'value' })
   * translate<string[]>(['hello', 'key'])
   * translate('hello', { }, 'en')
   * translate('scope.someKey', { }, 'en')
   */
  translate(key, params = {}, lang = this.getActiveLang()) {
    if (!key) return key;
    const {
      scope,
      resolveLang
    } = this.resolveLangAndScope(lang);
    if (Array.isArray(key)) {
      return key.map((k) => this.translate(scope ? `${scope}.${k}` : k, params, resolveLang));
    }
    key = scope ? `${scope}.${key}` : key;
    const translation = this.getTranslation(resolveLang);
    const value = translation[key];
    if (!value) {
      return this._handleMissingKey(key, value, params);
    }
    return this.parser.transpile(value, params, translation, key);
  }
  /**
   * Gets the translated value of a key as observable
   *
   * @example
   *
   * selectTranslate<string>('hello').subscribe(value => ...)
   * selectTranslate<string>('hello', {}, 'es').subscribe(value => ...)
   * selectTranslate<string>('hello', {}, 'todos').subscribe(value => ...)
   * selectTranslate<string>('hello', {}, { scope: 'todos' }).subscribe(value => ...)
   *
   */
  selectTranslate(key, params, lang, _isObject = false) {
    let inlineLoader;
    const load = (lang2, options) => this.load(lang2, options).pipe(map(() => _isObject ? this.translateObject(key, params, lang2) : this.translate(key, params, lang2)));
    if (isNil(lang)) {
      return this.langChanges$.pipe(switchMap((lang2) => load(lang2)));
    }
    if (isScopeArray(lang) || isScopeObject(lang)) {
      const providerScope = Array.isArray(lang) ? lang[0] : lang;
      lang = providerScope.scope;
      inlineLoader = resolveInlineLoader(providerScope, providerScope.scope);
    }
    lang = lang;
    if (this.isLang(lang) || this.isScopeWithLang(lang)) {
      return load(lang);
    }
    const scope = lang;
    return this.langChanges$.pipe(switchMap((lang2) => load(`${scope}/${lang2}`, {
      inlineLoader
    })));
  }
  /**
   * Whether the scope with lang
   *
   * @example
   *
   * todos/en => true
   * todos => false
   */
  isScopeWithLang(lang) {
    return this.isLang(getLangFromScope(lang));
  }
  translateObject(key, params = {}, lang = this.getActiveLang()) {
    if (isString(key) || Array.isArray(key)) {
      const {
        resolveLang,
        scope
      } = this.resolveLangAndScope(lang);
      if (Array.isArray(key)) {
        return key.map((k) => this.translateObject(scope ? `${scope}.${k}` : k, params, resolveLang));
      }
      const translation = this.getTranslation(resolveLang);
      key = scope ? `${scope}.${key}` : key;
      const value = unflatten2(this.getObjectByKey(translation, key));
      return isEmpty(value) ? this.translate(key, params, lang) : this.parser.transpile(value, params, translation, key);
    }
    const translations = [];
    for (const [_key, _params] of this.getEntries(key)) {
      translations.push(this.translateObject(_key, _params, lang));
    }
    return translations;
  }
  selectTranslateObject(key, params, lang) {
    if (isString(key) || Array.isArray(key)) {
      return this.selectTranslate(key, params, lang, true);
    }
    const [[firstKey, firstParams], ...rest] = this.getEntries(key);
    return this.selectTranslateObject(firstKey, firstParams, lang).pipe(map((value) => {
      const translations = [value];
      for (const [_key, _params] of rest) {
        translations.push(this.translateObject(_key, _params, lang));
      }
      return translations;
    }));
  }
  getTranslation(langOrScope) {
    if (langOrScope) {
      if (this.isLang(langOrScope)) {
        return this.translations.get(langOrScope) || {};
      } else {
        const {
          scope,
          resolveLang
        } = this.resolveLangAndScope(langOrScope);
        const translation = this.translations.get(resolveLang) || {};
        return this.getObjectByKey(translation, scope);
      }
    }
    return this.translations;
  }
  /**
   * Gets an object of translations for a given language
   *
   * @example
   *
   * selectTranslation().subscribe() - will return the current lang translation
   * selectTranslation('es').subscribe()
   * selectTranslation('admin-page').subscribe() - will return the current lang scope translation
   * selectTranslation('admin-page/es').subscribe()
   */
  selectTranslation(lang) {
    let language$ = this.langChanges$;
    if (lang) {
      const scopeLangSpecified = getLangFromScope(lang) !== lang;
      if (this.isLang(lang) || scopeLangSpecified) {
        language$ = of(lang);
      } else {
        language$ = this.langChanges$.pipe(map((currentLang) => `${lang}/${currentLang}`));
      }
    }
    return language$.pipe(switchMap((language) => this.load(language).pipe(map(() => this.getTranslation(language)))));
  }
  /**
   * Sets or merge a given translation object to current lang
   *
   * @example
   *
   * setTranslation({ ... })
   * setTranslation({ ... }, 'en')
   * setTranslation({ ... }, 'es', { merge: false } )
   * setTranslation({ ... }, 'todos/en', { merge: false } )
   */
  setTranslation(translation, lang = this.getActiveLang(), options = {}) {
    const defaults = {
      merge: true,
      emitChange: true
    };
    const mergedOptions = __spreadValues(__spreadValues({}, defaults), options);
    const scope = getScopeFromLang(lang);
    let flattenScopeOrTranslation = translation;
    if (scope) {
      const key = this.getMappedScope(scope);
      flattenScopeOrTranslation = flatten2({
        [key]: translation
      });
    }
    const currentLang = scope ? getLangFromScope(lang) : lang;
    const mergedTranslation = __spreadValues(__spreadValues({}, mergedOptions.merge && this.getTranslation(currentLang)), flattenScopeOrTranslation);
    const flattenTranslation = this.config.flatten.aot ? mergedTranslation : flatten2(mergedTranslation);
    const withHook = this.interceptor.preSaveTranslation(flattenTranslation, currentLang);
    this.translations.set(currentLang, withHook);
    mergedOptions.emitChange && this.setActiveLang(this.getActiveLang());
  }
  /**
   * Sets translation key with given value
   *
   * @example
   *
   * setTranslationKey('key', 'value')
   * setTranslationKey('key.nested', 'value')
   * setTranslationKey('key.nested', 'value', 'en')
   * setTranslationKey('key.nested', 'value', 'en', { emitChange: false } )
   */
  setTranslationKey(key, value, lang = this.getActiveLang(), options = {}) {
    const withHook = this.interceptor.preSaveTranslationKey(key, value, lang);
    const newValue = {
      [key]: withHook
    };
    this.setTranslation(newValue, lang, __spreadProps(__spreadValues({}, options), {
      merge: true
    }));
  }
  /**
   * Sets the fallback lang for the currently active language
   * @param fallbackLang
   */
  setFallbackLangForMissingTranslation({
    fallbackLang
  }) {
    const lang = Array.isArray(fallbackLang) ? fallbackLang[0] : fallbackLang;
    if (fallbackLang && this.useFallbackTranslation(lang)) {
      this.firstFallbackLang = lang;
    }
  }
  /**
   * @internal
   */
  _handleMissingKey(key, value, params) {
    if (this.config.missingHandler.allowEmpty && value === "") {
      return "";
    }
    if (!this.isResolvedMissingOnce && this.useFallbackTranslation()) {
      this.isResolvedMissingOnce = true;
      const fallbackValue = this.translate(key, params, this.firstFallbackLang);
      this.isResolvedMissingOnce = false;
      return fallbackValue;
    }
    return this.missingHandler.handle(key, this.getMissingHandlerData(), params);
  }
  /**
   * @internal
   */
  _isLangScoped(lang) {
    return this.getAvailableLangsIds().indexOf(lang) === -1;
  }
  /**
   * Checks if a given string is one of the specified available languages.
   * @returns
   * True if the given string is an available language.
   * False if the given string is not an available language.
   */
  isLang(lang) {
    return this.getAvailableLangsIds().indexOf(lang) !== -1;
  }
  /**
   * @internal
   *
   * We always want to make sure the global lang is loaded
   * before loading the scope since you can access both via the pipe/directive.
   */
  _loadDependencies(path, inlineLoader) {
    const mainLang = getLangFromScope(path);
    if (this._isLangScoped(path) && !this.isLoadedTranslation(mainLang)) {
      return combineLatest([this.load(mainLang), this.load(path, {
        inlineLoader
      })]);
    }
    return this.load(path, {
      inlineLoader
    });
  }
  /**
   * @internal
   */
  _completeScopeWithLang(langOrScope) {
    if (this._isLangScoped(langOrScope) && !this.isLang(getLangFromScope(langOrScope))) {
      return `${langOrScope}/${this.getActiveLang()}`;
    }
    return langOrScope;
  }
  /**
   * @internal
   */
  _setScopeAlias(scope, alias) {
    if (!this.config.scopeMapping) {
      this.config.scopeMapping = {};
    }
    this.config.scopeMapping[scope] = alias;
  }
  ngOnDestroy() {
    if (this.subscription) {
      this.subscription.unsubscribe();
      this.subscription = null;
    }
    this.cache.clear();
  }
  isLoadedTranslation(lang) {
    return size(this.getTranslation(lang));
  }
  getAvailableLangsIds() {
    const first = this.getAvailableLangs()[0];
    if (isString(first)) {
      return this.getAvailableLangs();
    }
    return this.getAvailableLangs().map((l) => l.id);
  }
  getMissingHandlerData() {
    return __spreadProps(__spreadValues({}, this.config), {
      activeLang: this.getActiveLang(),
      availableLangs: this.availableLangs,
      defaultLang: this.defaultLang
    });
  }
  /**
   * Use a fallback translation set for missing keys of the primary language
   * This is unrelated to the fallback language (which changes the active language)
   */
  useFallbackTranslation(lang) {
    return this.config.missingHandler.useFallbackTranslation && lang !== this.firstFallbackLang;
  }
  handleSuccess(lang, translation) {
    this.setTranslation(translation, lang, {
      emitChange: false
    });
    this.events.next({
      wasFailure: !!this.failedLangs.size,
      type: "translationLoadSuccess",
      payload: getEventPayload(lang)
    });
    this.failedLangs.forEach((l) => this.cache.delete(l));
    this.failedLangs.clear();
  }
  handleFailure(lang, loadOptions) {
    if (isNil(loadOptions.failedCounter)) {
      loadOptions.failedCounter = 0;
      if (!loadOptions.fallbackLangs) {
        loadOptions.fallbackLangs = this.fallbackStrategy.getNextLangs(lang);
      }
    }
    const splitted = lang.split("/");
    const fallbacks = loadOptions.fallbackLangs;
    const nextLang = fallbacks[loadOptions.failedCounter];
    this.failedLangs.add(lang);
    if (this.cache.has(nextLang)) {
      this.handleSuccess(nextLang, this.getTranslation(nextLang));
      return EMPTY;
    }
    const isFallbackLang = nextLang === splitted[splitted.length - 1];
    if (!nextLang || isFallbackLang) {
      let msg = `Unable to load translation and all the fallback languages`;
      if (splitted.length > 1) {
        msg += `, did you misspelled the scope name?`;
      }
      throw new Error(msg);
    }
    let resolveLang = nextLang;
    if (splitted.length > 1) {
      splitted[splitted.length - 1] = nextLang;
      resolveLang = splitted.join("/");
    }
    loadOptions.failedCounter++;
    this.events.next({
      type: "translationLoadFailure",
      payload: getEventPayload(lang)
    });
    return this.load(resolveLang, loadOptions);
  }
  getMappedScope(scope) {
    const {
      scopeMapping = {}
    } = this.config;
    return scopeMapping[scope] || toCamelCase(scope);
  }
  /**
   * If lang is scope we need to check the following cases:
   * todos/es => in this case we should take `es` as lang
   * todos => in this case we should set the active lang as lang
   */
  resolveLangAndScope(lang) {
    let resolveLang = lang;
    let scope;
    if (this._isLangScoped(lang)) {
      const langFromScope = getLangFromScope(lang);
      const hasLang = this.isLang(langFromScope);
      resolveLang = hasLang ? langFromScope : this.getActiveLang();
      scope = this.getMappedScope(hasLang ? getScopeFromLang(lang) : lang);
    }
    return {
      scope,
      resolveLang
    };
  }
  getObjectByKey(translation, key) {
    const result = {};
    const prefix = `${key}.`;
    for (const currentKey in translation) {
      if (currentKey.startsWith(prefix)) {
        result[currentKey.replace(prefix, "")] = translation[currentKey];
      }
    }
    return result;
  }
  getEntries(key) {
    return key instanceof Map ? key.entries() : Object.entries(key);
  }
  static \u0275fac = function TranslocoService_Factory(t) {
    return new (t || _TranslocoService)(\u0275\u0275inject(TRANSLOCO_LOADER, 8), \u0275\u0275inject(TRANSLOCO_TRANSPILER), \u0275\u0275inject(TRANSLOCO_MISSING_HANDLER), \u0275\u0275inject(TRANSLOCO_INTERCEPTOR), \u0275\u0275inject(TRANSLOCO_CONFIG), \u0275\u0275inject(TRANSLOCO_FALLBACK_STRATEGY));
  };
  static \u0275prov = /* @__PURE__ */ \u0275\u0275defineInjectable({
    token: _TranslocoService,
    factory: _TranslocoService.\u0275fac,
    providedIn: "root"
  });
};
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && setClassMetadata(TranslocoService, [{
    type: Injectable,
    args: [{
      providedIn: "root"
    }]
  }], function() {
    return [{
      type: void 0,
      decorators: [{
        type: Optional
      }, {
        type: Inject,
        args: [TRANSLOCO_LOADER]
      }]
    }, {
      type: void 0,
      decorators: [{
        type: Inject,
        args: [TRANSLOCO_TRANSPILER]
      }]
    }, {
      type: void 0,
      decorators: [{
        type: Inject,
        args: [TRANSLOCO_MISSING_HANDLER]
      }]
    }, {
      type: void 0,
      decorators: [{
        type: Inject,
        args: [TRANSLOCO_INTERCEPTOR]
      }]
    }, {
      type: void 0,
      decorators: [{
        type: Inject,
        args: [TRANSLOCO_CONFIG]
      }]
    }, {
      type: void 0,
      decorators: [{
        type: Inject,
        args: [TRANSLOCO_FALLBACK_STRATEGY]
      }]
    }];
  }, null);
})();
var TranslocoLoaderComponent = class _TranslocoLoaderComponent {
  html;
  static \u0275fac = function TranslocoLoaderComponent_Factory(t) {
    return new (t || _TranslocoLoaderComponent)();
  };
  static \u0275cmp = /* @__PURE__ */ \u0275\u0275defineComponent({
    type: _TranslocoLoaderComponent,
    selectors: [["ng-component"]],
    inputs: {
      html: "html"
    },
    standalone: true,
    features: [\u0275\u0275StandaloneFeature],
    decls: 1,
    vars: 1,
    consts: [[1, "transloco-loader-template", 3, "innerHTML"]],
    template: function TranslocoLoaderComponent_Template(rf, ctx) {
      if (rf & 1) {
        \u0275\u0275element(0, "div", 0);
      }
      if (rf & 2) {
        \u0275\u0275property("innerHTML", ctx.html, \u0275\u0275sanitizeHtml);
      }
    },
    encapsulation: 2
  });
};
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && setClassMetadata(TranslocoLoaderComponent, [{
    type: Component,
    args: [{
      template: `
    <div class="transloco-loader-template" [innerHTML]="html"></div>
  `,
      standalone: true
    }]
  }], null, {
    html: [{
      type: Input
    }]
  });
})();
var TemplateHandler = class {
  view;
  vcr;
  constructor(view, vcr) {
    this.view = view;
    this.vcr = vcr;
  }
  attachView() {
    if (this.view instanceof TemplateRef) {
      this.vcr.createEmbeddedView(this.view);
    } else if (isString(this.view)) {
      const componentRef = this.vcr.createComponent(TranslocoLoaderComponent);
      componentRef.instance.html = this.view;
      componentRef.hostView.detectChanges();
    } else {
      this.vcr.createComponent(this.view);
    }
  }
  detachView() {
    this.vcr.clear();
  }
};
var TRANSLOCO_LANG = new InjectionToken("TRANSLOCO_LANG");
var TRANSLOCO_LOADING_TEMPLATE = new InjectionToken("TRANSLOCO_LOADING_TEMPLATE");
var TRANSLOCO_SCOPE = new InjectionToken("TRANSLOCO_SCOPE");
var LangResolver = class {
  initialized = false;
  // inline => provider => active
  resolve({
    inline,
    provider,
    active
  }) {
    let lang = active;
    if (this.initialized) {
      lang = active;
      return lang;
    }
    if (provider) {
      const [, extracted] = getPipeValue(provider, "static");
      lang = extracted;
    }
    if (inline) {
      const [, extracted] = getPipeValue(inline, "static");
      lang = extracted;
    }
    this.initialized = true;
    return lang;
  }
  /**
   *
   * Resolve the lang
   *
   * @example
   *
   * resolveLangBasedOnScope('todos/en') => en
   * resolveLangBasedOnScope('en') => en
   *
   */
  resolveLangBasedOnScope(lang) {
    const scope = getScopeFromLang(lang);
    return scope ? getLangFromScope(lang) : lang;
  }
  /**
   *
   * Resolve the lang path for loading
   *
   * @example
   *
   * resolveLangPath('todos', 'en') => todos/en
   * resolveLangPath('en') => en
   *
   */
  resolveLangPath(lang, scope) {
    return scope ? `${scope}/${lang}` : lang;
  }
};
var ScopeResolver = class {
  service;
  constructor(service2) {
    this.service = service2;
  }
  // inline => provider
  resolve(params) {
    const {
      inline,
      provider
    } = params;
    if (inline) {
      return inline;
    }
    if (provider) {
      if (isScopeObject(provider)) {
        const {
          scope,
          alias = toCamelCase(scope)
        } = provider;
        this.service._setScopeAlias(scope, alias);
        return scope;
      }
      return provider;
    }
    return void 0;
  }
};
var TranslocoDirective = class _TranslocoDirective {
  service = inject(TranslocoService);
  tpl = inject(TemplateRef, {
    optional: true
  });
  providerLang = inject(TRANSLOCO_LANG, {
    optional: true
  });
  providerScope = inject(TRANSLOCO_SCOPE, {
    optional: true
  });
  providedLoadingTpl = inject(TRANSLOCO_LOADING_TEMPLATE, {
    optional: true
  });
  cdr = inject(ChangeDetectorRef);
  host = inject(ElementRef);
  vcr = inject(ViewContainerRef);
  renderer = inject(Renderer2);
  subscription = null;
  view;
  translationMemo = {};
  key;
  params = {};
  inlineScope;
  inlineRead;
  inlineLang;
  inlineTpl;
  currentLang;
  loaderTplHandler;
  // Whether we already rendered the view once
  initialized = false;
  path;
  langResolver = new LangResolver();
  scopeResolver = new ScopeResolver(this.service);
  strategy = this.tpl === null ? "attribute" : "structural";
  static ngTemplateContextGuard(dir, ctx) {
    return true;
  }
  ngOnInit() {
    const listenToLangChange = shouldListenToLangChanges(this.service, this.providerLang || this.inlineLang);
    this.subscription = this.service.langChanges$.pipe(switchMap((activeLang) => {
      const lang = this.langResolver.resolve({
        inline: this.inlineLang,
        provider: this.providerLang,
        active: activeLang
      });
      return Array.isArray(this.providerScope) ? forkJoin(this.providerScope.map((providerScope) => this.resolveScope(lang, providerScope))) : this.resolveScope(lang, this.providerScope);
    }), listenOrNotOperator(listenToLangChange)).subscribe(() => {
      this.currentLang = this.langResolver.resolveLangBasedOnScope(this.path);
      this.strategy === "attribute" ? this.attributeStrategy() : this.structuralStrategy(this.currentLang, this.inlineRead);
      this.cdr.markForCheck();
      this.initialized = true;
    });
    if (!this.initialized) {
      const loadingContent = this.resolveLoadingContent();
      if (loadingContent) {
        this.loaderTplHandler = new TemplateHandler(loadingContent, this.vcr);
        this.loaderTplHandler.attachView();
      }
    }
  }
  ngOnChanges(changes) {
    if (this.strategy === "attribute") {
      const notInit = Object.keys(changes).some((v) => !changes[v].firstChange);
      notInit && this.attributeStrategy();
    }
  }
  attributeStrategy() {
    this.detachLoader();
    this.renderer.setProperty(this.host.nativeElement, "innerText", this.service.translate(this.key, this.params, this.currentLang));
  }
  structuralStrategy(lang, read) {
    this.translationMemo = {};
    if (this.view) {
      this.view.context["$implicit"] = this.getTranslateFn(lang, read);
      this.view.context["currentLang"] = this.currentLang;
    } else {
      this.detachLoader();
      this.view = this.vcr.createEmbeddedView(this.tpl, {
        $implicit: this.getTranslateFn(lang, read),
        currentLang: this.currentLang
      });
    }
  }
  getTranslateFn(lang, read) {
    return (key, params) => {
      const withRead = read ? `${read}.${key}` : key;
      const withParams = params ? `${withRead}${JSON.stringify(params)}` : withRead;
      if (Object.prototype.hasOwnProperty.call(this.translationMemo, withParams)) {
        return this.translationMemo[withParams].value;
      }
      this.translationMemo[withParams] = {
        params,
        value: this.service.translate(withRead, params, lang)
      };
      return this.translationMemo[withParams].value;
    };
  }
  resolveLoadingContent() {
    return this.inlineTpl || this.providedLoadingTpl;
  }
  ngOnDestroy() {
    if (this.subscription) {
      this.subscription.unsubscribe();
      this.subscription = null;
    }
  }
  detachLoader() {
    this.loaderTplHandler?.detachView();
  }
  resolveScope(lang, providerScope) {
    const resolvedScope = this.scopeResolver.resolve({
      inline: this.inlineScope,
      provider: providerScope
    });
    this.path = this.langResolver.resolveLangPath(lang, resolvedScope);
    const inlineLoader = resolveInlineLoader(providerScope, resolvedScope);
    return this.service._loadDependencies(this.path, inlineLoader);
  }
  static \u0275fac = function TranslocoDirective_Factory(t) {
    return new (t || _TranslocoDirective)();
  };
  static \u0275dir = /* @__PURE__ */ \u0275\u0275defineDirective({
    type: _TranslocoDirective,
    selectors: [["", "transloco", ""]],
    inputs: {
      key: [0, "transloco", "key"],
      params: [0, "translocoParams", "params"],
      inlineScope: [0, "translocoScope", "inlineScope"],
      inlineRead: [0, "translocoRead", "inlineRead"],
      inlineLang: [0, "translocoLang", "inlineLang"],
      inlineTpl: [0, "translocoLoadingTpl", "inlineTpl"]
    },
    standalone: true,
    features: [\u0275\u0275NgOnChangesFeature]
  });
};
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && setClassMetadata(TranslocoDirective, [{
    type: Directive,
    args: [{
      selector: "[transloco]",
      standalone: true
    }]
  }], null, {
    key: [{
      type: Input,
      args: ["transloco"]
    }],
    params: [{
      type: Input,
      args: ["translocoParams"]
    }],
    inlineScope: [{
      type: Input,
      args: ["translocoScope"]
    }],
    inlineRead: [{
      type: Input,
      args: ["translocoRead"]
    }],
    inlineLang: [{
      type: Input,
      args: ["translocoLang"]
    }],
    inlineTpl: [{
      type: Input,
      args: ["translocoLoadingTpl"]
    }]
  });
})();
var TranslocoPipe = class _TranslocoPipe {
  service;
  providerScope;
  providerLang;
  cdr;
  subscription = null;
  lastValue = "";
  lastKey;
  path;
  langResolver = new LangResolver();
  scopeResolver;
  constructor(service2, providerScope, providerLang, cdr) {
    this.service = service2;
    this.providerScope = providerScope;
    this.providerLang = providerLang;
    this.cdr = cdr;
    this.scopeResolver = new ScopeResolver(this.service);
  }
  // null is for handling strict mode + async pipe types https://github.com/ngneat/transloco/issues/311
  // null is for handling strict mode + optional chaining types https://github.com/ngneat/transloco/issues/488
  transform(key, params, inlineLang) {
    if (!key) {
      return key;
    }
    const keyName = params ? `${key}${JSON.stringify(params)}` : key;
    if (keyName === this.lastKey) {
      return this.lastValue;
    }
    this.lastKey = keyName;
    this.subscription?.unsubscribe();
    const listenToLangChange = shouldListenToLangChanges(this.service, this.providerLang || inlineLang);
    this.subscription = this.service.langChanges$.pipe(switchMap((activeLang) => {
      const lang = this.langResolver.resolve({
        inline: inlineLang,
        provider: this.providerLang,
        active: activeLang
      });
      return Array.isArray(this.providerScope) ? forkJoin(this.providerScope.map((providerScope) => this.resolveScope(lang, providerScope))) : this.resolveScope(lang, this.providerScope);
    }), listenOrNotOperator(listenToLangChange)).subscribe(() => this.updateValue(key, params));
    return this.lastValue;
  }
  ngOnDestroy() {
    this.subscription?.unsubscribe();
    this.subscription = null;
  }
  updateValue(key, params) {
    const lang = this.langResolver.resolveLangBasedOnScope(this.path);
    this.lastValue = this.service.translate(key, params, lang);
    this.cdr.markForCheck();
  }
  resolveScope(lang, providerScope) {
    const resolvedScope = this.scopeResolver.resolve({
      inline: void 0,
      provider: providerScope
    });
    this.path = this.langResolver.resolveLangPath(lang, resolvedScope);
    const inlineLoader = resolveInlineLoader(providerScope, resolvedScope);
    return this.service._loadDependencies(this.path, inlineLoader);
  }
  static \u0275fac = function TranslocoPipe_Factory(t) {
    return new (t || _TranslocoPipe)(\u0275\u0275directiveInject(TranslocoService, 16), \u0275\u0275directiveInject(TRANSLOCO_SCOPE, 24), \u0275\u0275directiveInject(TRANSLOCO_LANG, 24), \u0275\u0275directiveInject(ChangeDetectorRef, 16));
  };
  static \u0275pipe = /* @__PURE__ */ \u0275\u0275definePipe({
    name: "transloco",
    type: _TranslocoPipe,
    pure: false,
    standalone: true
  });
};
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && setClassMetadata(TranslocoPipe, [{
    type: Pipe,
    args: [{
      name: "transloco",
      pure: false,
      standalone: true
    }]
  }], function() {
    return [{
      type: TranslocoService
    }, {
      type: void 0,
      decorators: [{
        type: Optional
      }, {
        type: Inject,
        args: [TRANSLOCO_SCOPE]
      }]
    }, {
      type: void 0,
      decorators: [{
        type: Optional
      }, {
        type: Inject,
        args: [TRANSLOCO_LANG]
      }]
    }, {
      type: ChangeDetectorRef
    }];
  }, null);
})();
var decl = [TranslocoDirective, TranslocoPipe];
var TranslocoModule = class _TranslocoModule {
  static \u0275fac = function TranslocoModule_Factory(t) {
    return new (t || _TranslocoModule)();
  };
  static \u0275mod = /* @__PURE__ */ \u0275\u0275defineNgModule({
    type: _TranslocoModule
  });
  static \u0275inj = /* @__PURE__ */ \u0275\u0275defineInjector({});
};
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && setClassMetadata(TranslocoModule, [{
    type: NgModule,
    args: [{
      imports: decl,
      exports: decl
    }]
  }], null, null);
})();
function provideTransloco(options) {
  const providers = [provideTranslocoTranspiler(DefaultTranspiler), provideTranslocoMissingHandler(DefaultHandler), provideTranslocoInterceptor(DefaultInterceptor), provideTranslocoFallbackStrategy(DefaultFallbackStrategy)];
  if (options.config) {
    providers.push(provideTranslocoConfig(options.config));
  }
  if (options.loader) {
    providers.push(provideTranslocoLoader(options.loader));
  }
  return providers;
}
function provideTranslocoConfig(config) {
  return makeEnvironmentProviders([{
    provide: TRANSLOCO_CONFIG,
    useValue: translocoConfig(config)
  }]);
}
function provideTranslocoLoader(loader) {
  return makeEnvironmentProviders([{
    provide: TRANSLOCO_LOADER,
    useClass: loader
  }]);
}
function provideTranslocoTranspiler(transpiler) {
  return makeEnvironmentProviders([{
    provide: TRANSLOCO_TRANSPILER,
    useClass: transpiler,
    deps: [TRANSLOCO_CONFIG]
  }]);
}
function provideTranslocoFallbackStrategy(strategy) {
  return makeEnvironmentProviders([{
    provide: TRANSLOCO_FALLBACK_STRATEGY,
    useClass: strategy,
    deps: [TRANSLOCO_CONFIG]
  }]);
}
function provideTranslocoMissingHandler(handler) {
  return makeEnvironmentProviders([{
    provide: TRANSLOCO_MISSING_HANDLER,
    useClass: handler
  }]);
}
function provideTranslocoInterceptor(interceptor) {
  return makeEnvironmentProviders([{
    provide: TRANSLOCO_INTERCEPTOR,
    useClass: interceptor
  }]);
}
var TRANSLOCO_TEST_LANGS = new InjectionToken("TRANSLOCO_TEST_LANGS - Available testing languages");
var TRANSLOCO_TEST_OPTIONS = new InjectionToken("TRANSLOCO_TEST_OPTIONS - Testing options");
var TestingLoader = class _TestingLoader {
  langs;
  constructor(langs) {
    this.langs = langs;
  }
  getTranslation(lang) {
    return of(this.langs[lang]);
  }
  static \u0275fac = function TestingLoader_Factory(t) {
    return new (t || _TestingLoader)(\u0275\u0275inject(TRANSLOCO_TEST_LANGS));
  };
  static \u0275prov = /* @__PURE__ */ \u0275\u0275defineInjectable({
    token: _TestingLoader,
    factory: _TestingLoader.\u0275fac
  });
};
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && setClassMetadata(TestingLoader, [{
    type: Injectable
  }], function() {
    return [{
      type: void 0,
      decorators: [{
        type: Inject,
        args: [TRANSLOCO_TEST_LANGS]
      }]
    }];
  }, null);
})();
function initTranslocoService(service2, langs = {}, options) {
  const preloadAllLangs = () => options.preloadLangs ? Promise.all(Object.keys(langs).map((lang) => service2.load(lang).toPromise())) : Promise.resolve();
  return preloadAllLangs;
}
var TranslocoTestingModule = class _TranslocoTestingModule {
  static forRoot(options) {
    return {
      ngModule: _TranslocoTestingModule,
      providers: [provideTransloco({
        loader: TestingLoader,
        config: __spreadValues({
          prodMode: true,
          missingHandler: {
            logMissingKey: false
          }
        }, options.translocoConfig)
      }), {
        provide: TRANSLOCO_TEST_LANGS,
        useValue: options.langs
      }, {
        provide: TRANSLOCO_TEST_OPTIONS,
        useValue: options
      }, {
        provide: APP_INITIALIZER,
        useFactory: initTranslocoService,
        deps: [TranslocoService, TRANSLOCO_TEST_LANGS, TRANSLOCO_TEST_OPTIONS],
        multi: true
      }]
    };
  }
  static \u0275fac = function TranslocoTestingModule_Factory(t) {
    return new (t || _TranslocoTestingModule)();
  };
  static \u0275mod = /* @__PURE__ */ \u0275\u0275defineNgModule({
    type: _TranslocoTestingModule
  });
  static \u0275inj = /* @__PURE__ */ \u0275\u0275defineInjector({
    imports: [TranslocoModule]
  });
};
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && setClassMetadata(TranslocoTestingModule, [{
    type: NgModule,
    args: [{
      exports: [TranslocoModule]
    }]
  }], null, null);
})();

// src/app/core/navigation/navigation.service.ts
var _NavigationService = class _NavigationService {
  constructor() {
    this._httpClient = inject(HttpClient);
    this._navigation = new ReplaySubject(1);
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Accessors
  // -----------------------------------------------------------------------------------------------------
  /**
   * Getter for navigation
   */
  get navigation$() {
    return this._navigation.asObservable();
  }
  updateNavigation(newNavigation) {
    this._navigation.next(newNavigation);
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Get all navigation data
   */
  get() {
    return this._httpClient.get("api/common/navigation").pipe(tap((navigation) => {
      this._navigation.next(navigation);
    }));
  }
};
_NavigationService.\u0275fac = function NavigationService_Factory(t) {
  return new (t || _NavigationService)();
};
_NavigationService.\u0275prov = /* @__PURE__ */ \u0275\u0275defineInjectable({ token: _NavigationService, factory: _NavigationService.\u0275fac, providedIn: "root" });
var NavigationService = _NavigationService;

// src/app/layout/common/messages/messages.service.ts
var _MessagesService = class _MessagesService {
  /**
   * Constructor
   */
  constructor(_httpClient) {
    this._httpClient = _httpClient;
    this._messages = new ReplaySubject(1);
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Accessors
  // -----------------------------------------------------------------------------------------------------
  /**
   * Getter for messages
   */
  get messages$() {
    return this._messages.asObservable();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Get all messages
   */
  getAll() {
    return this._httpClient.get("api/common/messages").pipe(tap((messages3) => {
      this._messages.next(messages3);
    }));
  }
  /**
   * Create a message
   *
   * @param message
   */
  create(message) {
    return this.messages$.pipe(take(1), switchMap((messages3) => this._httpClient.post("api/common/messages", { message }).pipe(map((newMessage) => {
      this._messages.next([...messages3, newMessage]);
      return newMessage;
    }))));
  }
  /**
   * Update the message
   *
   * @param id
   * @param message
   */
  update(id, message) {
    return this.messages$.pipe(take(1), switchMap((messages3) => this._httpClient.patch("api/common/messages", {
      id,
      message
    }).pipe(map((updatedMessage) => {
      const index = messages3.findIndex((item) => item.id === id);
      messages3[index] = updatedMessage;
      this._messages.next(messages3);
      return updatedMessage;
    }))));
  }
  /**
   * Delete the message
   *
   * @param id
   */
  delete(id) {
    return this.messages$.pipe(take(1), switchMap((messages3) => this._httpClient.delete("api/common/messages", { params: { id } }).pipe(map((isDeleted) => {
      const index = messages3.findIndex((item) => item.id === id);
      messages3.splice(index, 1);
      this._messages.next(messages3);
      return isDeleted;
    }))));
  }
  /**
   * Mark all messages as read
   */
  markAllAsRead() {
    return this.messages$.pipe(take(1), switchMap((messages3) => this._httpClient.get("api/common/messages/mark-all-as-read").pipe(map((isUpdated) => {
      messages3.forEach((message, index) => {
        messages3[index].read = true;
      });
      this._messages.next(messages3);
      return isUpdated;
    }))));
  }
};
_MessagesService.\u0275fac = function MessagesService_Factory(t) {
  return new (t || _MessagesService)(\u0275\u0275inject(HttpClient));
};
_MessagesService.\u0275prov = /* @__PURE__ */ \u0275\u0275defineInjectable({ token: _MessagesService, factory: _MessagesService.\u0275fac, providedIn: "root" });
var MessagesService = _MessagesService;

// src/app/layout/common/notifications/notifications.service.ts
var _NotificationsService = class _NotificationsService {
  /**
   * Constructor
   */
  constructor(_httpClient) {
    this._httpClient = _httpClient;
    this._notifications = new ReplaySubject(1);
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Accessors
  // -----------------------------------------------------------------------------------------------------
  /**
   * Getter for notifications
   */
  get notifications$() {
    return this._notifications.asObservable();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Get all notifications
   */
  getAll() {
    return this._httpClient.get("api/common/notifications").pipe(tap((notifications2) => {
      this._notifications.next(notifications2);
    }));
  }
  /**
   * Create a notification
   *
   * @param notification
   */
  create(notification) {
    return this.notifications$.pipe(take(1), switchMap((notifications2) => this._httpClient.post("api/common/notifications", {
      notification
    }).pipe(map((newNotification) => {
      this._notifications.next([
        ...notifications2,
        newNotification
      ]);
      return newNotification;
    }))));
  }
  /**
   * Update the notification
   *
   * @param id
   * @param notification
   */
  update(id, notification) {
    return this.notifications$.pipe(take(1), switchMap((notifications2) => this._httpClient.patch("api/common/notifications", {
      id,
      notification
    }).pipe(map((updatedNotification) => {
      const index = notifications2.findIndex((item) => item.id === id);
      notifications2[index] = updatedNotification;
      this._notifications.next(notifications2);
      return updatedNotification;
    }))));
  }
  /**
   * Delete the notification
   *
   * @param id
   */
  delete(id) {
    return this.notifications$.pipe(take(1), switchMap((notifications2) => this._httpClient.delete("api/common/notifications", {
      params: { id }
    }).pipe(map((isDeleted) => {
      const index = notifications2.findIndex((item) => item.id === id);
      notifications2.splice(index, 1);
      this._notifications.next(notifications2);
      return isDeleted;
    }))));
  }
  /**
   * Mark all notifications as read
   */
  markAllAsRead() {
    return this.notifications$.pipe(take(1), switchMap((notifications2) => this._httpClient.get("api/common/notifications/mark-all-as-read").pipe(map((isUpdated) => {
      notifications2.forEach((notification, index) => {
        notifications2[index].read = true;
      });
      this._notifications.next(notifications2);
      return isUpdated;
    }))));
  }
};
_NotificationsService.\u0275fac = function NotificationsService_Factory(t) {
  return new (t || _NotificationsService)(\u0275\u0275inject(HttpClient));
};
_NotificationsService.\u0275prov = /* @__PURE__ */ \u0275\u0275defineInjectable({ token: _NotificationsService, factory: _NotificationsService.\u0275fac, providedIn: "root" });
var NotificationsService = _NotificationsService;

// src/app/layout/common/quick-chat/quick-chat.service.ts
var _QuickChatService = class _QuickChatService {
  /**
   * Constructor
   */
  constructor(_httpClient) {
    this._httpClient = _httpClient;
    this._chat = new BehaviorSubject(null);
    this._chats = new BehaviorSubject(null);
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Accessors
  // -----------------------------------------------------------------------------------------------------
  /**
   * Getter for chat
   */
  get chat$() {
    return this._chat.asObservable();
  }
  /**
   * Getter for chat
   */
  get chats$() {
    return this._chats.asObservable();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Get chats
   */
  getChats() {
    return this._httpClient.get("api/apps/chat/chats").pipe(tap((response) => {
      this._chats.next(response);
    }));
  }
  /**
   * Get chat
   *
   * @param id
   */
  getChatById(id) {
    return this._httpClient.get("api/apps/chat/chat", { params: { id } }).pipe(map((chat) => {
      this._chat.next(chat);
      return chat;
    }), switchMap((chat) => {
      if (!chat) {
        return throwError("Could not found chat with id of " + id + "!");
      }
      return of(chat);
    }));
  }
};
_QuickChatService.\u0275fac = function QuickChatService_Factory(t) {
  return new (t || _QuickChatService)(\u0275\u0275inject(HttpClient));
};
_QuickChatService.\u0275prov = /* @__PURE__ */ \u0275\u0275defineInjectable({ token: _QuickChatService, factory: _QuickChatService.\u0275fac, providedIn: "root" });
var QuickChatService = _QuickChatService;

// src/app/layout/common/shortcuts/shortcuts.service.ts
var _ShortcutsService = class _ShortcutsService {
  /**
   * Constructor
   */
  constructor(_httpClient) {
    this._httpClient = _httpClient;
    this._shortcuts = new ReplaySubject(1);
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Accessors
  // -----------------------------------------------------------------------------------------------------
  /**
   * Getter for shortcuts
   */
  get shortcuts$() {
    return this._shortcuts.asObservable();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Get all messages
   */
  getAll() {
    return this._httpClient.get("api/common/shortcuts").pipe(tap((shortcuts2) => {
      this._shortcuts.next(shortcuts2);
    }));
  }
  /**
   * Create a shortcut
   *
   * @param shortcut
   */
  create(shortcut) {
    return this.shortcuts$.pipe(take(1), switchMap((shortcuts2) => this._httpClient.post("api/common/shortcuts", { shortcut }).pipe(map((newShortcut) => {
      this._shortcuts.next([...shortcuts2, newShortcut]);
      return newShortcut;
    }))));
  }
  /**
   * Update the shortcut
   *
   * @param id
   * @param shortcut
   */
  update(id, shortcut) {
    return this.shortcuts$.pipe(take(1), switchMap((shortcuts2) => this._httpClient.patch("api/common/shortcuts", {
      id,
      shortcut
    }).pipe(map((updatedShortcut) => {
      const index = shortcuts2.findIndex((item) => item.id === id);
      shortcuts2[index] = updatedShortcut;
      this._shortcuts.next(shortcuts2);
      return updatedShortcut;
    }))));
  }
  /**
   * Delete the shortcut
   *
   * @param id
   */
  delete(id) {
    return this.shortcuts$.pipe(take(1), switchMap((shortcuts2) => this._httpClient.delete("api/common/shortcuts", { params: { id } }).pipe(map((isDeleted) => {
      const index = shortcuts2.findIndex((item) => item.id === id);
      shortcuts2.splice(index, 1);
      this._shortcuts.next(shortcuts2);
      return isDeleted;
    }))));
  }
};
_ShortcutsService.\u0275fac = function ShortcutsService_Factory(t) {
  return new (t || _ShortcutsService)(\u0275\u0275inject(HttpClient));
};
_ShortcutsService.\u0275prov = /* @__PURE__ */ \u0275\u0275defineInjectable({ token: _ShortcutsService, factory: _ShortcutsService.\u0275fac, providedIn: "root" });
var ShortcutsService = _ShortcutsService;

// src/app/app.resolvers.ts
var initialDataResolver = () => {
  const messagesService = inject(MessagesService);
  const navigationService = inject(NavigationService);
  const notificationsService = inject(NotificationsService);
  const quickChatService = inject(QuickChatService);
  const shortcutsService = inject(ShortcutsService);
  return forkJoin([
    navigationService.get(),
    messagesService.getAll(),
    notificationsService.getAll(),
    quickChatService.getChats(),
    shortcutsService.getAll()
  ]);
};

// src/app/core/auth/guards/auth.guard.ts
var AuthGuard = (route, state) => {
  const router = inject(Router);
  return inject(AuthService).check().pipe(switchMap((authenticated) => {
    if (!authenticated) {
      const redirectURL = state.url === "/sign-out" ? "" : `redirectURL=${state.url}`;
      const urlTree = router.parseUrl(`sign-in?${redirectURL}`);
      return of(urlTree);
    }
    return of(true);
  }));
};

// src/app/core/auth/guards/role.guard.ts
var RoleGuard = (route, state) => {
  const authService = inject(AuthService);
  const router = inject(Router);
  const requiredRole = route.data["roles"] || [];
  const requiredTipoUsuario = route.data["tipoUsuario"] || [];
  const userRole = authService.getRole();
  if (requiredRole.length && !requiredRole.includes(userRole)) {
    router.navigate(["/not-authorized"]);
    return false;
  }
  const userTipo = authService.getTipoUsuario();
  if (requiredTipoUsuario.length && !requiredTipoUsuario.includes(userTipo)) {
    router.navigate(["/not-authorized"]);
    return false;
  }
  return true;
};

// src/app/core/auth/guards/noAuth.guard.ts
var NoAuthGuard = (route, state) => {
  const router = inject(Router);
  return inject(AuthService).check().pipe(switchMap((authenticated) => {
    if (authenticated) {
      return of(router.parseUrl(""));
    }
    return of(true);
  }));
};

// src/@fuse/version/version.ts
var Version = class {
  /**
   * Constructor
   */
  constructor(version) {
    this.version = version;
    this.full = version;
    this.major = version.split(".")[0];
    this.minor = version.split(".")[1];
    this.patch = version.split(".").slice(2).join(".");
  }
};

// src/@fuse/version/fuse-version.ts
var FUSE_VERSION = new Version("20.0.0").full;

// src/@fuse/components/drawer/drawer.service.ts
var _FuseDrawerService = class _FuseDrawerService {
  constructor() {
    this._componentRegistry = /* @__PURE__ */ new Map();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Register drawer component
   *
   * @param name
   * @param component
   */
  registerComponent(name, component) {
    this._componentRegistry.set(name, component);
  }
  /**
   * Deregister drawer component
   *
   * @param name
   */
  deregisterComponent(name) {
    this._componentRegistry.delete(name);
  }
  /**
   * Get drawer component from the registry
   *
   * @param name
   */
  getComponent(name) {
    return this._componentRegistry.get(name);
  }
};
_FuseDrawerService.\u0275fac = function FuseDrawerService_Factory(t) {
  return new (t || _FuseDrawerService)();
};
_FuseDrawerService.\u0275prov = /* @__PURE__ */ \u0275\u0275defineInjectable({ token: _FuseDrawerService, factory: _FuseDrawerService.\u0275fac, providedIn: "root" });
var FuseDrawerService = _FuseDrawerService;

// src/@fuse/components/drawer/drawer.component.ts
var _c0 = ["*"];
var _FuseDrawerComponent = class _FuseDrawerComponent {
  constructor() {
    this._animationBuilder = inject(AnimationBuilder);
    this._elementRef = inject(ElementRef);
    this._renderer2 = inject(Renderer2);
    this._fuseDrawerService = inject(FuseDrawerService);
    this._fuseUtilsService = inject(FuseUtilsService);
    this.fixed = false;
    this.mode = "side";
    this.name = this._fuseUtilsService.randomId();
    this.opened = false;
    this.position = "left";
    this.transparentOverlay = false;
    this.fixedChanged = new EventEmitter();
    this.modeChanged = new EventEmitter();
    this.openedChanged = new EventEmitter();
    this.positionChanged = new EventEmitter();
    this._animationsEnabled = false;
    this._handleOverlayClick = () => this.close();
    this._hovered = false;
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Accessors
  // -----------------------------------------------------------------------------------------------------
  /**
   * Host binding for component classes
   */
  get classList() {
    return {
      "fuse-drawer-animations-enabled": this._animationsEnabled,
      "fuse-drawer-fixed": this.fixed,
      "fuse-drawer-hover": this._hovered,
      [`fuse-drawer-mode-${this.mode}`]: true,
      "fuse-drawer-opened": this.opened,
      [`fuse-drawer-position-${this.position}`]: true
    };
  }
  /**
   * Host binding for component inline styles
   */
  get styleList() {
    return {
      visibility: this.opened ? "visible" : "hidden"
    };
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Decorated methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * On mouseenter
   *
   * @private
   */
  _onMouseenter() {
    this._enableAnimations();
    this._hovered = true;
  }
  /**
   * On mouseleave
   *
   * @private
   */
  _onMouseleave() {
    this._enableAnimations();
    this._hovered = false;
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Lifecycle hooks
  // -----------------------------------------------------------------------------------------------------
  /**
   * On changes
   *
   * @param changes
   */
  ngOnChanges(changes) {
    if ("fixed" in changes) {
      this.fixed = coerceBooleanProperty(changes.fixed.currentValue);
      this.fixedChanged.next(this.fixed);
    }
    if ("mode" in changes) {
      const previousMode = changes.mode.previousValue;
      const currentMode = changes.mode.currentValue;
      this._disableAnimations();
      if (previousMode === "over" && currentMode === "side") {
        this._hideOverlay();
      }
      if (previousMode === "side" && currentMode === "over") {
        if (this.opened) {
          this._showOverlay();
        }
      }
      this.modeChanged.next(currentMode);
      setTimeout(() => {
        this._enableAnimations();
      }, 500);
    }
    if ("opened" in changes) {
      const open = coerceBooleanProperty(changes.opened.currentValue);
      this._toggleOpened(open);
    }
    if ("position" in changes) {
      this.positionChanged.next(this.position);
    }
    if ("transparentOverlay" in changes) {
      this.transparentOverlay = coerceBooleanProperty(changes.transparentOverlay.currentValue);
    }
  }
  /**
   * On init
   */
  ngOnInit() {
    this._fuseDrawerService.registerComponent(this.name, this);
  }
  /**
   * On destroy
   */
  ngOnDestroy() {
    if (this._player) {
      this._player.finish();
    }
    this._fuseDrawerService.deregisterComponent(this.name);
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Open the drawer
   */
  open() {
    if (this.opened) {
      return;
    }
    this._toggleOpened(true);
  }
  /**
   * Close the drawer
   */
  close() {
    if (!this.opened) {
      return;
    }
    this._toggleOpened(false);
  }
  /**
   * Toggle the drawer
   */
  toggle() {
    if (this.opened) {
      this.close();
    } else {
      this.open();
    }
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Private methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Enable the animations
   *
   * @private
   */
  _enableAnimations() {
    if (this._animationsEnabled) {
      return;
    }
    this._animationsEnabled = true;
  }
  /**
   * Disable the animations
   *
   * @private
   */
  _disableAnimations() {
    if (!this._animationsEnabled) {
      return;
    }
    this._animationsEnabled = false;
  }
  /**
   * Show the backdrop
   *
   * @private
   */
  _showOverlay() {
    this._overlay = this._renderer2.createElement("div");
    this._overlay.classList.add("fuse-drawer-overlay");
    if (this.fixed) {
      this._overlay.classList.add("fuse-drawer-overlay-fixed");
    }
    if (this.transparentOverlay) {
      this._overlay.classList.add("fuse-drawer-overlay-transparent");
    }
    this._renderer2.appendChild(this._elementRef.nativeElement.parentElement, this._overlay);
    this._player = this._animationBuilder.build([
      style({ opacity: 0 }),
      animate("300ms cubic-bezier(0.25, 0.8, 0.25, 1)", style({ opacity: 1 }))
    ]).create(this._overlay);
    this._player.play();
    this._overlay.addEventListener("click", this._handleOverlayClick);
  }
  /**
   * Hide the backdrop
   *
   * @private
   */
  _hideOverlay() {
    if (!this._overlay) {
      return;
    }
    this._player = this._animationBuilder.build([
      animate("300ms cubic-bezier(0.25, 0.8, 0.25, 1)", style({ opacity: 0 }))
    ]).create(this._overlay);
    this._player.play();
    this._player.onDone(() => {
      if (this._overlay) {
        this._overlay.removeEventListener("click", this._handleOverlayClick);
        this._overlay.parentNode.removeChild(this._overlay);
        this._overlay = null;
      }
    });
  }
  /**
   * Open/close the drawer
   *
   * @param open
   * @private
   */
  _toggleOpened(open) {
    this.opened = open;
    this._enableAnimations();
    if (this.mode === "over") {
      if (open) {
        this._showOverlay();
      } else {
        this._hideOverlay();
      }
    }
    this.openedChanged.next(open);
  }
};
_FuseDrawerComponent.\u0275fac = function FuseDrawerComponent_Factory(t) {
  return new (t || _FuseDrawerComponent)();
};
_FuseDrawerComponent.\u0275cmp = /* @__PURE__ */ \u0275\u0275defineComponent({ type: _FuseDrawerComponent, selectors: [["fuse-drawer"]], hostVars: 4, hostBindings: function FuseDrawerComponent_HostBindings(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275listener("mouseenter", function FuseDrawerComponent_mouseenter_HostBindingHandler() {
      return ctx._onMouseenter();
    })("mouseleave", function FuseDrawerComponent_mouseleave_HostBindingHandler() {
      return ctx._onMouseleave();
    });
  }
  if (rf & 2) {
    \u0275\u0275styleMap(ctx.styleList);
    \u0275\u0275classMap(ctx.classList);
  }
}, inputs: { fixed: "fixed", mode: "mode", name: "name", opened: "opened", position: "position", transparentOverlay: "transparentOverlay" }, outputs: { fixedChanged: "fixedChanged", modeChanged: "modeChanged", openedChanged: "openedChanged", positionChanged: "positionChanged" }, exportAs: ["fuseDrawer"], standalone: true, features: [\u0275\u0275NgOnChangesFeature, \u0275\u0275StandaloneFeature], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, "fuse-drawer-content"]], template: function FuseDrawerComponent_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275projectionDef();
    \u0275\u0275elementStart(0, "div", 0);
    \u0275\u0275projection(1);
    \u0275\u0275elementEnd();
  }
}, styles: ["/* src/@fuse/components/drawer/drawer.component.scss */\n:root {\n  --fuse-drawer-width: 320px;\n}\nfuse-drawer {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  flex: 1 1 auto;\n  width: var(--fuse-drawer-width);\n  min-width: var(--fuse-drawer-width);\n  max-width: var(--fuse-drawer-width);\n  z-index: 300;\n  box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.35);\n  --tw-bg-opacity: 1;\n  background-color: rgba(var(--fuse-bg-card-rgb), var(--tw-bg-opacity));\n}\nfuse-drawer.fuse-drawer-animations-enabled {\n  transition-duration: 400ms;\n  transition-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1);\n  transition-property:\n    visibility,\n    margin-left,\n    margin-right,\n    transform,\n    width,\n    max-width,\n    min-width;\n}\nfuse-drawer.fuse-drawer-animations-enabled .fuse-drawer-content {\n  transition-duration: 400ms;\n  transition-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1);\n  transition-property:\n    width,\n    max-width,\n    min-width;\n}\nfuse-drawer.fuse-drawer-mode-over {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n}\nfuse-drawer.fuse-drawer-mode-over.fuse-drawer-fixed {\n  position: fixed;\n}\nfuse-drawer.fuse-drawer-position-left {\n}\nfuse-drawer.fuse-drawer-position-left.fuse-drawer-mode-side {\n  margin-left: calc(var(--fuse-drawer-width) * -1);\n}\nfuse-drawer.fuse-drawer-position-left.fuse-drawer-mode-side.fuse-drawer-opened {\n  margin-left: 0;\n}\nfuse-drawer.fuse-drawer-position-left.fuse-drawer-mode-over {\n  left: 0;\n  transform: translate3d(-100%, 0, 0);\n}\nfuse-drawer.fuse-drawer-position-left.fuse-drawer-mode-over.fuse-drawer-opened {\n  transform: translate3d(0, 0, 0);\n}\nfuse-drawer.fuse-drawer-position-left .fuse-drawer-content {\n  left: 0;\n}\nfuse-drawer.fuse-drawer-position-right {\n}\nfuse-drawer.fuse-drawer-position-right.fuse-drawer-mode-side {\n  margin-right: calc(var(--fuse-drawer-width) * -1);\n}\nfuse-drawer.fuse-drawer-position-right.fuse-drawer-mode-side.fuse-drawer-opened {\n  margin-right: 0;\n}\nfuse-drawer.fuse-drawer-position-right.fuse-drawer-mode-over {\n  right: 0;\n  transform: translate3d(100%, 0, 0);\n}\nfuse-drawer.fuse-drawer-position-right.fuse-drawer-mode-over.fuse-drawer-opened {\n  transform: translate3d(0, 0, 0);\n}\nfuse-drawer.fuse-drawer-position-right .fuse-drawer-content {\n  right: 0;\n}\nfuse-drawer .fuse-drawer-content {\n  position: absolute;\n  display: flex;\n  flex: 1 1 auto;\n  top: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  --tw-bg-opacity: 1;\n  background-color: rgba(var(--fuse-bg-card-rgb), var(--tw-bg-opacity));\n}\n.fuse-drawer-overlay {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  z-index: 299;\n  opacity: 1;\n  background-color: rgba(0, 0, 0, 0.6);\n}\n.fuse-drawer-overlay.fuse-drawer-overlay-fixed {\n  position: fixed;\n}\n.fuse-drawer-overlay.fuse-drawer-overlay-transparent {\n  background-color: transparent;\n}\n/*# sourceMappingURL=drawer.component.css.map */\n"], encapsulation: 2 });
var FuseDrawerComponent = _FuseDrawerComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && \u0275setClassDebugInfo(FuseDrawerComponent, { className: "FuseDrawerComponent", filePath: "src\\@fuse\\components\\drawer\\drawer.component.ts", lineNumber: 39 });
})();

// src/app/layout/common/settings/settings.component.ts
function SettingsComponent_For_16_Template(rf, ctx) {
  if (rf & 1) {
    const _r3 = \u0275\u0275getCurrentView();
    \u0275\u0275elementStart(0, "div", 72);
    \u0275\u0275listener("click", function SettingsComponent_For_16_Template_div_click_0_listener() {
      const theme_r4 = \u0275\u0275restoreView(_r3).$implicit;
      const ctx_r4 = \u0275\u0275nextContext();
      return \u0275\u0275resetView(ctx_r4.setTheme(theme_r4.id));
    });
    \u0275\u0275element(1, "div", 73);
    \u0275\u0275elementStart(2, "div", 74);
    \u0275\u0275text(3);
    \u0275\u0275elementEnd()();
  }
  if (rf & 2) {
    const theme_r4 = ctx.$implicit;
    const ctx_r4 = \u0275\u0275nextContext();
    \u0275\u0275classProp("ring-2", ctx_r4.config.theme === theme_r4.id);
    \u0275\u0275property("ngClass", theme_r4.id);
    \u0275\u0275advance(2);
    \u0275\u0275classProp("text-secondary", ctx_r4.config.theme !== theme_r4.id);
    \u0275\u0275advance();
    \u0275\u0275textInterpolate1(" ", theme_r4.name, " ");
  }
}
var _SettingsComponent = class _SettingsComponent {
  /**
   * Constructor
   */
  constructor(_router, _fuseConfigService) {
    this._router = _router;
    this._fuseConfigService = _fuseConfigService;
    this._unsubscribeAll = new Subject();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Lifecycle hooks
  // -----------------------------------------------------------------------------------------------------
  /**
   * On init
   */
  ngOnInit() {
    this._fuseConfigService.config$.pipe(takeUntil(this._unsubscribeAll)).subscribe((config) => {
      this.config = config;
    });
  }
  /**
   * On destroy
   */
  ngOnDestroy() {
    this._unsubscribeAll.next(null);
    this._unsubscribeAll.complete();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Set the layout on the config
   *
   * @param layout
   */
  setLayout(layout) {
    this._router.navigate([], {
      queryParams: {
        layout: null
      },
      queryParamsHandling: "merge"
    }).then(() => {
      this._fuseConfigService.config = { layout };
    });
  }
  /**
   * Set the scheme on the config
   *
   * @param scheme
   */
  setScheme(scheme) {
    this._fuseConfigService.config = { scheme };
  }
  /**
   * Set the theme on the config
   *
   * @param theme
   */
  setTheme(theme) {
    this._fuseConfigService.config = { theme };
  }
};
_SettingsComponent.\u0275fac = function SettingsComponent_Factory(t) {
  return new (t || _SettingsComponent)(\u0275\u0275directiveInject(Router), \u0275\u0275directiveInject(FuseConfigService));
};
_SettingsComponent.\u0275cmp = /* @__PURE__ */ \u0275\u0275defineComponent({ type: _SettingsComponent, selectors: [["settings"]], standalone: true, features: [\u0275\u0275StandaloneFeature], decls: 219, vars: 69, consts: [["settingsDrawer", ""], [1, "settings-cog", "fixed", "right-0", "z-90", "flex", "h-10", "w-10", "cursor-pointer", "items-center", "justify-center", "rounded-l-lg", "bg-red-600", "bg-opacity-90", "shadow-lg", "print:hidden", 2, "top", "275px", 3, "click"], [1, "animate-spin-slow", "text-white", "icon-size-5", 3, "svgIcon"], ["fixed", "", 1, "z-999", "w-screen", "min-w-screen", "sm:w-100", "sm:min-w-100", 3, "mode", "name", "position"], [1, "bg-card", "flex", "w-full", "flex-col", "overflow-auto"], [1, "flex", "h-20", "min-h-20", "flex-row", "items-center", "bg-primary", "px-6", "text-white"], [1, "text-current", "icon-size-7", 3, "svgIcon"], [1, "ml-3", "text-2xl", "font-semibold", "tracking-tight"], ["mat-icon-button", "", 1, "ml-auto", 3, "click"], [1, "text-current", 3, "svgIcon"], [1, "flex", "flex-col", "p-6"], [1, "text-secondary", "text-md", "font-semibold"], [1, "mt-6", "grid", "grid-cols-2", "gap-3", "sm:grid-cols-3"], [1, "bg-hover", "flex", "cursor-pointer", "items-center", "justify-center", "rounded-full", "px-4", "py-3", "ring-inset", "ring-primary", 3, "ring-2", "ngClass"], [1, "my-8"], [1, "mt-6", "grid", "grid-cols-3", "justify-items-start", "gap-3"], ["matTooltip", "Automatically sets the scheme based on user's operating system's color scheme preference using 'prefer-color-scheme' media query.", 1, "bg-hover", "flex", "cursor-pointer", "items-center", "rounded-full", "py-3", "pl-5", "pr-6", "ring-inset", "ring-primary", 3, "click"], [1, "flex", "items-center", "overflow-hidden", "rounded-full"], [1, "icon-size-5", 3, "svgIcon"], [1, "ml-2", "flex", "items-center", "font-medium", "leading-5"], [1, "bg-hover", "flex", "cursor-pointer", "items-center", "rounded-full", "py-3", "pl-5", "pr-6", "ring-inset", "ring-primary", 3, "click"], [1, "mt-6", "grid", "grid-cols-3", "gap-3"], [1, "flex", "cursor-pointer", "flex-col", 3, "click"], [1, "flex", "h-20", "flex-col", "overflow-hidden", "rounded-md", "border-2", "hover:opacity-80"], [1, "flex", "flex-auto", "flex-col", "bg-gray-50", "dark:bg-gray-900"], [1, "text-secondary", "mt-2", "text-center", "text-md", "font-medium"], [1, "flex", "h-20", "overflow-hidden", "rounded-md", "border-2", "hover:opacity-80"], [1, "w-8", "bg-gray-100", "dark:bg-gray-800"], [1, "mx-1.5", "mt-3", "space-y-1"], [1, "h-1", "rounded-sm", "bg-gray-300", "dark:bg-gray-700"], [1, "flex", "flex-auto", "flex-col", "border-l"], [1, "h-3", "bg-gray-100", "dark:bg-gray-800"], [1, "mr-1.5", "flex", "h-full", "items-center", "justify-end"], [1, "ml-1", "h-1", "w-1", "rounded-full", "bg-gray-300", "dark:bg-gray-700"], [1, "flex", "flex-auto", "border-t", "bg-gray-50", "dark:bg-gray-900"], [1, "mx-1", "mt-1", "flex", "items-center"], [1, "h-1", "w-1", "rounded-full", "bg-gray-300", "dark:bg-gray-700"], [1, "ml-auto", "h-1", "w-1", "rounded-full", "bg-gray-300", "dark:bg-gray-700"], [1, "ml-0.5", "h-1", "w-1", "rounded-full", "bg-gray-300", "dark:bg-gray-700"], [1, "mx-auto", "mt-2.5", "h-4", "w-4", "rounded-full", "bg-gray-300", "dark:bg-gray-700"], [1, "mx-1", "mt-2", "space-y-1"], [1, "mr-2", "flex", "h-full", "items-center", "justify-end"], [1, "w-5", "bg-gray-100", "dark:bg-gray-800"], [1, "mx-auto", "mt-2", "h-3", "w-3", "rounded-sm", "bg-gray-300", "dark:bg-gray-700"], [1, "mt-2", "flex", "w-full", "flex-col", "items-center", "space-y-1"], [1, "h-2.5", "w-3", "rounded-sm", "bg-gray-300", "dark:bg-gray-700"], [1, "w-4", "bg-gray-100", "dark:bg-gray-800"], [1, "mx-auto", "mt-2", "h-2", "w-2", "rounded-sm", "bg-gray-300", "dark:bg-gray-700"], [1, "h-2", "w-2", "rounded-sm", "bg-gray-300", "dark:bg-gray-700"], [1, "flex", "h-full", "flex-auto", "flex-col", "space-y-1", "px-1.5", "py-3"], [1, "flex-auto"], [1, "w-3", "bg-gray-100", "dark:bg-gray-800"], [1, "mx-auto", "mt-2", "h-1.5", "w-1.5", "rounded-sm", "bg-gray-300", "dark:bg-gray-700"], [1, "h-1.5", "w-1.5", "rounded-full", "bg-gray-300", "dark:bg-gray-700"], [1, "col-span-2"], [1, "mx-2", "my-1", "flex", "flex-auto", "flex-col", "overflow-hidden", "rounded-md", "border"], [1, "flex", "h-3", "items-center", "bg-gray-100", "dark:bg-gray-800"], [1, "ml-1.5", "flex"], [1, "ml-1", "h-1", "w-3", "rounded-full", "bg-gray-300", "dark:bg-gray-700"], [1, "ml-auto", "mr-1.5", "flex", "items-center", "justify-end"], [1, "flex", "h-3", "items-center", "bg-gray-100", "px-2", "dark:bg-gray-800"], [1, "h-2", "w-2", "rounded-full", "bg-gray-300", "dark:bg-gray-700"], [1, "ml-auto", "flex", "items-center", "justify-end", "space-x-1"], [1, "flex", "h-3", "items-center", "space-x-1", "border-b", "border-t", "bg-gray-100", "px-2", "dark:bg-gray-800"], [1, "h-1", "w-3", "rounded-full", "bg-gray-300", "dark:bg-gray-700"], [1, "mx-2", "my-1", "flex", "flex-auto", "flex-col", "overflow-hidden", "rounded", "border"], [1, "flex", "flex-auto", "bg-gray-50", "dark:bg-gray-900"], [1, "flex", "h-4", "items-center", "bg-gray-100", "px-2", "dark:bg-gray-800"], [1, "flex", "h-2", "items-center", "space-x-1", "bg-gray-100", "px-2", "dark:bg-gray-800"], [1, "flex", "h-4", "items-center", "border-b", "bg-gray-100", "px-2", "dark:bg-gray-800"], [1, "ml-2", "flex", "h-3", "items-center", "space-x-1"], [1, "flex", "flex-auto", "flex-col"], [1, "bg-hover", "flex", "cursor-pointer", "items-center", "justify-center", "rounded-full", "px-4", "py-3", "ring-inset", "ring-primary", 3, "click", "ngClass"], [1, "h-3", "w-3", "flex-0", "rounded-full", "bg-primary"], [1, "ml-2.5", "truncate", "font-medium", "leading-5"]], template: function SettingsComponent_Template(rf, ctx) {
  if (rf & 1) {
    const _r1 = \u0275\u0275getCurrentView();
    \u0275\u0275elementStart(0, "div", 1);
    \u0275\u0275listener("click", function SettingsComponent_Template_div_click_0_listener() {
      \u0275\u0275restoreView(_r1);
      const settingsDrawer_r2 = \u0275\u0275reference(3);
      return \u0275\u0275resetView(settingsDrawer_r2.toggle());
    });
    \u0275\u0275element(1, "mat-icon", 2);
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(2, "fuse-drawer", 3, 0)(4, "div", 4)(5, "div", 5);
    \u0275\u0275element(6, "mat-icon", 6);
    \u0275\u0275elementStart(7, "div", 7);
    \u0275\u0275text(8, " Settings ");
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(9, "button", 8);
    \u0275\u0275listener("click", function SettingsComponent_Template_button_click_9_listener() {
      \u0275\u0275restoreView(_r1);
      const settingsDrawer_r2 = \u0275\u0275reference(3);
      return \u0275\u0275resetView(settingsDrawer_r2.close());
    });
    \u0275\u0275element(10, "mat-icon", 9);
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(11, "div", 10)(12, "div", 11);
    \u0275\u0275text(13, "THEME");
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(14, "div", 12);
    \u0275\u0275repeaterCreate(15, SettingsComponent_For_16_Template, 4, 6, "div", 13, \u0275\u0275repeaterTrackByIdentity);
    \u0275\u0275elementEnd();
    \u0275\u0275element(17, "hr", 14);
    \u0275\u0275elementStart(18, "div", 11);
    \u0275\u0275text(19, "SCHEME");
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(20, "div", 15)(21, "div", 16);
    \u0275\u0275listener("click", function SettingsComponent_Template_div_click_21_listener() {
      \u0275\u0275restoreView(_r1);
      return \u0275\u0275resetView(ctx.setScheme("auto"));
    });
    \u0275\u0275elementStart(22, "div", 17);
    \u0275\u0275element(23, "mat-icon", 18);
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(24, "div", 19);
    \u0275\u0275text(25, " Auto ");
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(26, "div", 20);
    \u0275\u0275listener("click", function SettingsComponent_Template_div_click_26_listener() {
      \u0275\u0275restoreView(_r1);
      return \u0275\u0275resetView(ctx.setScheme("dark"));
    });
    \u0275\u0275elementStart(27, "div", 17);
    \u0275\u0275element(28, "mat-icon", 18);
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(29, "div", 19);
    \u0275\u0275text(30, " Dark ");
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(31, "div", 20);
    \u0275\u0275listener("click", function SettingsComponent_Template_div_click_31_listener() {
      \u0275\u0275restoreView(_r1);
      return \u0275\u0275resetView(ctx.setScheme("light"));
    });
    \u0275\u0275elementStart(32, "div", 17);
    \u0275\u0275element(33, "mat-icon", 18);
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(34, "div", 19);
    \u0275\u0275text(35, " Light ");
    \u0275\u0275elementEnd()()();
    \u0275\u0275element(36, "hr", 14);
    \u0275\u0275elementStart(37, "div", 11);
    \u0275\u0275text(38, "LAYOUT");
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(39, "div", 21)(40, "div", 22);
    \u0275\u0275listener("click", function SettingsComponent_Template_div_click_40_listener() {
      \u0275\u0275restoreView(_r1);
      return \u0275\u0275resetView(ctx.setLayout("empty"));
    });
    \u0275\u0275elementStart(41, "div", 23);
    \u0275\u0275element(42, "div", 24);
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(43, "div", 25);
    \u0275\u0275text(44, " Empty ");
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(45, "div", 22);
    \u0275\u0275listener("click", function SettingsComponent_Template_div_click_45_listener() {
      \u0275\u0275restoreView(_r1);
      return \u0275\u0275resetView(ctx.setLayout("classic"));
    });
    \u0275\u0275elementStart(46, "div", 26)(47, "div", 27)(48, "div", 28);
    \u0275\u0275element(49, "div", 29)(50, "div", 29)(51, "div", 29)(52, "div", 29)(53, "div", 29);
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(54, "div", 30)(55, "div", 31)(56, "div", 32);
    \u0275\u0275element(57, "div", 33)(58, "div", 33)(59, "div", 33);
    \u0275\u0275elementEnd()();
    \u0275\u0275element(60, "div", 34);
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(61, "div", 25);
    \u0275\u0275text(62, " Classic ");
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(63, "div", 22);
    \u0275\u0275listener("click", function SettingsComponent_Template_div_click_63_listener() {
      \u0275\u0275restoreView(_r1);
      return \u0275\u0275resetView(ctx.setLayout("classy"));
    });
    \u0275\u0275elementStart(64, "div", 26)(65, "div", 27)(66, "div", 35);
    \u0275\u0275element(67, "div", 36)(68, "div", 37)(69, "div", 38);
    \u0275\u0275elementEnd();
    \u0275\u0275element(70, "div", 39);
    \u0275\u0275elementStart(71, "div", 40);
    \u0275\u0275element(72, "div", 29)(73, "div", 29)(74, "div", 29)(75, "div", 29);
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(76, "div", 30)(77, "div", 31)(78, "div", 41);
    \u0275\u0275element(79, "div", 36);
    \u0275\u0275elementEnd()();
    \u0275\u0275element(80, "div", 34);
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(81, "div", 25);
    \u0275\u0275text(82, " Classy ");
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(83, "div", 22);
    \u0275\u0275listener("click", function SettingsComponent_Template_div_click_83_listener() {
      \u0275\u0275restoreView(_r1);
      return \u0275\u0275resetView(ctx.setLayout("compact"));
    });
    \u0275\u0275elementStart(84, "div", 26)(85, "div", 42);
    \u0275\u0275element(86, "div", 43);
    \u0275\u0275elementStart(87, "div", 44);
    \u0275\u0275element(88, "div", 45)(89, "div", 45)(90, "div", 45);
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(91, "div", 30)(92, "div", 31)(93, "div", 32);
    \u0275\u0275element(94, "div", 33)(95, "div", 33)(96, "div", 33);
    \u0275\u0275elementEnd()();
    \u0275\u0275element(97, "div", 34);
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(98, "div", 25);
    \u0275\u0275text(99, " Compact ");
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(100, "div", 22);
    \u0275\u0275listener("click", function SettingsComponent_Template_div_click_100_listener() {
      \u0275\u0275restoreView(_r1);
      return \u0275\u0275resetView(ctx.setLayout("dense"));
    });
    \u0275\u0275elementStart(101, "div", 26)(102, "div", 46);
    \u0275\u0275element(103, "div", 47);
    \u0275\u0275elementStart(104, "div", 44);
    \u0275\u0275element(105, "div", 48)(106, "div", 48)(107, "div", 48);
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(108, "div", 30)(109, "div", 31)(110, "div", 32);
    \u0275\u0275element(111, "div", 33)(112, "div", 33)(113, "div", 33);
    \u0275\u0275elementEnd()();
    \u0275\u0275element(114, "div", 34);
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(115, "div", 25);
    \u0275\u0275text(116, " Dense ");
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(117, "div", 22);
    \u0275\u0275listener("click", function SettingsComponent_Template_div_click_117_listener() {
      \u0275\u0275restoreView(_r1);
      return \u0275\u0275resetView(ctx.setLayout("futuristic"));
    });
    \u0275\u0275elementStart(118, "div", 26)(119, "div", 27)(120, "div", 49);
    \u0275\u0275element(121, "div", 29)(122, "div", 29)(123, "div", 29)(124, "div", 50)(125, "div", 29);
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(126, "div", 30)(127, "div", 31)(128, "div", 32);
    \u0275\u0275element(129, "div", 33)(130, "div", 33)(131, "div", 33);
    \u0275\u0275elementEnd()();
    \u0275\u0275element(132, "div", 34);
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(133, "div", 25);
    \u0275\u0275text(134, " Futuristic ");
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(135, "div", 22);
    \u0275\u0275listener("click", function SettingsComponent_Template_div_click_135_listener() {
      \u0275\u0275restoreView(_r1);
      return \u0275\u0275resetView(ctx.setLayout("thin"));
    });
    \u0275\u0275elementStart(136, "div", 26)(137, "div", 51);
    \u0275\u0275element(138, "div", 52);
    \u0275\u0275elementStart(139, "div", 44);
    \u0275\u0275element(140, "div", 53)(141, "div", 53)(142, "div", 53)(143, "div", 53)(144, "div", 53);
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(145, "div", 30)(146, "div", 31)(147, "div", 32);
    \u0275\u0275element(148, "div", 33)(149, "div", 33)(150, "div", 33);
    \u0275\u0275elementEnd()();
    \u0275\u0275element(151, "div", 34);
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(152, "div", 25);
    \u0275\u0275text(153, " Thin ");
    \u0275\u0275elementEnd()();
    \u0275\u0275element(154, "div", 54);
    \u0275\u0275elementStart(155, "div", 22);
    \u0275\u0275listener("click", function SettingsComponent_Template_div_click_155_listener() {
      \u0275\u0275restoreView(_r1);
      return \u0275\u0275resetView(ctx.setLayout("centered"));
    });
    \u0275\u0275elementStart(156, "div", 26)(157, "div", 55)(158, "div", 56)(159, "div", 57);
    \u0275\u0275element(160, "div", 36)(161, "div", 58)(162, "div", 58)(163, "div", 58);
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(164, "div", 59);
    \u0275\u0275element(165, "div", 33)(166, "div", 33);
    \u0275\u0275elementEnd()();
    \u0275\u0275element(167, "div", 34);
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(168, "div", 25);
    \u0275\u0275text(169, " Centered ");
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(170, "div", 22);
    \u0275\u0275listener("click", function SettingsComponent_Template_div_click_170_listener() {
      \u0275\u0275restoreView(_r1);
      return \u0275\u0275resetView(ctx.setLayout("enterprise"));
    });
    \u0275\u0275elementStart(171, "div", 23)(172, "div", 60);
    \u0275\u0275element(173, "div", 61);
    \u0275\u0275elementStart(174, "div", 62);
    \u0275\u0275element(175, "div", 36)(176, "div", 36)(177, "div", 36);
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(178, "div", 63);
    \u0275\u0275element(179, "div", 64)(180, "div", 64)(181, "div", 64)(182, "div", 64);
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(183, "div", 65);
    \u0275\u0275element(184, "div", 66);
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(185, "div", 25);
    \u0275\u0275text(186, " Enterprise ");
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(187, "div", 22);
    \u0275\u0275listener("click", function SettingsComponent_Template_div_click_187_listener() {
      \u0275\u0275restoreView(_r1);
      return \u0275\u0275resetView(ctx.setLayout("material"));
    });
    \u0275\u0275elementStart(188, "div", 23)(189, "div", 65)(190, "div", 67);
    \u0275\u0275element(191, "div", 61);
    \u0275\u0275elementStart(192, "div", 62);
    \u0275\u0275element(193, "div", 36)(194, "div", 36)(195, "div", 36);
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(196, "div", 68);
    \u0275\u0275element(197, "div", 64)(198, "div", 64)(199, "div", 64)(200, "div", 64);
    \u0275\u0275elementEnd();
    \u0275\u0275element(201, "div", 34);
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(202, "div", 25);
    \u0275\u0275text(203, " Material ");
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(204, "div", 22);
    \u0275\u0275listener("click", function SettingsComponent_Template_div_click_204_listener() {
      \u0275\u0275restoreView(_r1);
      return \u0275\u0275resetView(ctx.setLayout("modern"));
    });
    \u0275\u0275elementStart(205, "div", 23)(206, "div", 69);
    \u0275\u0275element(207, "div", 61);
    \u0275\u0275elementStart(208, "div", 70);
    \u0275\u0275element(209, "div", 64)(210, "div", 64)(211, "div", 64);
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(212, "div", 62);
    \u0275\u0275element(213, "div", 36)(214, "div", 36);
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(215, "div", 71);
    \u0275\u0275element(216, "div", 66);
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(217, "div", 25);
    \u0275\u0275text(218, " Modern ");
    \u0275\u0275elementEnd()()()()()();
  }
  if (rf & 2) {
    \u0275\u0275classProp("lg:right-0", ctx.config.layout === "centered" || ctx.config.layout === "material")("lg:right-16", ctx.config.layout !== "centered" && ctx.config.layout !== "material");
    \u0275\u0275advance();
    \u0275\u0275property("svgIcon", "heroicons_solid:cog-8-tooth");
    \u0275\u0275advance();
    \u0275\u0275property("mode", "over")("name", "settingsDrawer")("position", "right");
    \u0275\u0275advance(4);
    \u0275\u0275property("svgIcon", "heroicons_solid:cog-8-tooth");
    \u0275\u0275advance(4);
    \u0275\u0275property("svgIcon", "heroicons_outline:x-mark");
    \u0275\u0275advance(5);
    \u0275\u0275repeater(ctx.config.themes);
    \u0275\u0275advance(6);
    \u0275\u0275classProp("ring-2", ctx.config.scheme === "auto");
    \u0275\u0275advance(2);
    \u0275\u0275property("svgIcon", "heroicons_solid:bolt");
    \u0275\u0275advance();
    \u0275\u0275classProp("text-secondary", ctx.config.scheme !== "auto");
    \u0275\u0275advance(2);
    \u0275\u0275classProp("ring-2", ctx.config.scheme === "dark");
    \u0275\u0275advance(2);
    \u0275\u0275property("svgIcon", "heroicons_solid:moon");
    \u0275\u0275advance();
    \u0275\u0275classProp("text-secondary", ctx.config.scheme !== "dark");
    \u0275\u0275advance(2);
    \u0275\u0275classProp("ring-2", ctx.config.scheme === "light");
    \u0275\u0275advance(2);
    \u0275\u0275property("svgIcon", "heroicons_solid:sun");
    \u0275\u0275advance();
    \u0275\u0275classProp("text-secondary", ctx.config.scheme !== "light");
    \u0275\u0275advance(7);
    \u0275\u0275classProp("border-primary", ctx.config.layout === "empty");
    \u0275\u0275advance(2);
    \u0275\u0275classProp("text-primary", ctx.config.layout === "empty");
    \u0275\u0275advance(3);
    \u0275\u0275classProp("border-primary", ctx.config.layout === "classic");
    \u0275\u0275advance(15);
    \u0275\u0275classProp("text-primary", ctx.config.layout === "classic");
    \u0275\u0275advance(3);
    \u0275\u0275classProp("border-primary", ctx.config.layout === "classy");
    \u0275\u0275advance(17);
    \u0275\u0275classProp("text-primary", ctx.config.layout === "classy");
    \u0275\u0275advance(3);
    \u0275\u0275classProp("border-primary", ctx.config.layout === "compact");
    \u0275\u0275advance(14);
    \u0275\u0275classProp("text-primary", ctx.config.layout === "compact");
    \u0275\u0275advance(3);
    \u0275\u0275classProp("border-primary", ctx.config.layout === "dense");
    \u0275\u0275advance(14);
    \u0275\u0275classProp("text-primary", ctx.config.layout === "dense");
    \u0275\u0275advance(3);
    \u0275\u0275classProp("border-primary", ctx.config.layout === "futuristic");
    \u0275\u0275advance(15);
    \u0275\u0275classProp("text-primary", ctx.config.layout === "futuristic");
    \u0275\u0275advance(3);
    \u0275\u0275classProp("border-primary", ctx.config.layout === "thin");
    \u0275\u0275advance(16);
    \u0275\u0275classProp("text-primary", ctx.config.layout === "thin");
    \u0275\u0275advance(4);
    \u0275\u0275classProp("border-primary", ctx.config.layout === "centered");
    \u0275\u0275advance(12);
    \u0275\u0275classProp("text-primary", ctx.config.layout === "centered");
    \u0275\u0275advance(3);
    \u0275\u0275classProp("border-primary", ctx.config.layout === "enterprise");
    \u0275\u0275advance(14);
    \u0275\u0275classProp("text-primary", ctx.config.layout === "enterprise");
    \u0275\u0275advance(3);
    \u0275\u0275classProp("border-primary", ctx.config.layout === "material");
    \u0275\u0275advance(14);
    \u0275\u0275classProp("text-primary", ctx.config.layout === "material");
    \u0275\u0275advance(3);
    \u0275\u0275classProp("border-primary", ctx.config.layout === "modern");
    \u0275\u0275advance(12);
    \u0275\u0275classProp("text-primary", ctx.config.layout === "modern");
  }
}, dependencies: [
  MatIconModule,
  MatIcon,
  FuseDrawerComponent,
  MatButtonModule,
  MatIconButton,
  NgClass,
  MatTooltipModule,
  MatTooltip
], styles: ["/* angular:styles/component:scss;f893972591a4c911d1238c4dbf4855f6e37f866bdab7d93a6f05b84ef57b4e4a;C:/GitHub/creditmanager_front/src/app/layout/common/settings/settings.component.ts */\nsettings {\n  position: static;\n  display: block;\n  flex: none;\n  width: auto;\n}\n@media (min-width: 1280px) {\n  empty-layout + settings .settings-cog {\n    right: 0 !important;\n  }\n}\n/*# sourceMappingURL=settings.component.css.map */\n"], encapsulation: 2 });
var SettingsComponent = _SettingsComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && \u0275setClassDebugInfo(SettingsComponent, { className: "SettingsComponent", filePath: "src\\app\\layout\\common\\settings\\settings.component.ts", lineNumber: 47 });
})();

// node_modules/@angular/material/fesm2022/progress-bar.mjs
function MatProgressBar_Conditional_2_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "div", 2);
  }
}
var MAT_PROGRESS_BAR_DEFAULT_OPTIONS = new InjectionToken("MAT_PROGRESS_BAR_DEFAULT_OPTIONS");
var MAT_PROGRESS_BAR_LOCATION = new InjectionToken("mat-progress-bar-location", {
  providedIn: "root",
  factory: MAT_PROGRESS_BAR_LOCATION_FACTORY
});
function MAT_PROGRESS_BAR_LOCATION_FACTORY() {
  const _document = inject(DOCUMENT);
  const _location = _document ? _document.location : null;
  return {
    // Note that this needs to be a function, rather than a property, because Angular
    // will only resolve it once, but we want the current path on each call.
    getPathname: () => _location ? _location.pathname + _location.search : ""
  };
}
var _MatProgressBar = class _MatProgressBar {
  constructor(_elementRef, _ngZone, _changeDetectorRef, _animationMode, defaults) {
    this._elementRef = _elementRef;
    this._ngZone = _ngZone;
    this._changeDetectorRef = _changeDetectorRef;
    this._animationMode = _animationMode;
    this._isNoopAnimation = false;
    this._defaultColor = "primary";
    this._value = 0;
    this._bufferValue = 0;
    this.animationEnd = new EventEmitter();
    this._mode = "determinate";
    this._transitionendHandler = (event) => {
      if (this.animationEnd.observers.length === 0 || !event.target || !event.target.classList.contains("mdc-linear-progress__primary-bar")) {
        return;
      }
      if (this.mode === "determinate" || this.mode === "buffer") {
        this._ngZone.run(() => this.animationEnd.next({
          value: this.value
        }));
      }
    };
    this._isNoopAnimation = _animationMode === "NoopAnimations";
    if (defaults) {
      if (defaults.color) {
        this.color = this._defaultColor = defaults.color;
      }
      this.mode = defaults.mode || this.mode;
    }
  }
  // TODO: should be typed as `ThemePalette` but internal apps pass in arbitrary strings.
  /** Theme palette color of the progress bar. */
  get color() {
    return this._color || this._defaultColor;
  }
  set color(value) {
    this._color = value;
  }
  /** Value of the progress bar. Defaults to zero. Mirrored to aria-valuenow. */
  get value() {
    return this._value;
  }
  set value(v) {
    this._value = clamp(v || 0);
    this._changeDetectorRef.markForCheck();
  }
  /** Buffer value of the progress bar. Defaults to zero. */
  get bufferValue() {
    return this._bufferValue || 0;
  }
  set bufferValue(v) {
    this._bufferValue = clamp(v || 0);
    this._changeDetectorRef.markForCheck();
  }
  /**
   * Mode of the progress bar.
   *
   * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to
   * 'determinate'.
   * Mirrored to mode attribute.
   */
  get mode() {
    return this._mode;
  }
  set mode(value) {
    this._mode = value;
    this._changeDetectorRef.markForCheck();
  }
  ngAfterViewInit() {
    this._ngZone.runOutsideAngular(() => {
      this._elementRef.nativeElement.addEventListener("transitionend", this._transitionendHandler);
    });
  }
  ngOnDestroy() {
    this._elementRef.nativeElement.removeEventListener("transitionend", this._transitionendHandler);
  }
  /** Gets the transform style that should be applied to the primary bar. */
  _getPrimaryBarTransform() {
    return `scaleX(${this._isIndeterminate() ? 1 : this.value / 100})`;
  }
  /** Gets the `flex-basis` value that should be applied to the buffer bar. */
  _getBufferBarFlexBasis() {
    return `${this.mode === "buffer" ? this.bufferValue : 100}%`;
  }
  /** Returns whether the progress bar is indeterminate. */
  _isIndeterminate() {
    return this.mode === "indeterminate" || this.mode === "query";
  }
};
_MatProgressBar.\u0275fac = function MatProgressBar_Factory(t) {
  return new (t || _MatProgressBar)(\u0275\u0275directiveInject(ElementRef), \u0275\u0275directiveInject(NgZone), \u0275\u0275directiveInject(ChangeDetectorRef), \u0275\u0275directiveInject(ANIMATION_MODULE_TYPE, 8), \u0275\u0275directiveInject(MAT_PROGRESS_BAR_DEFAULT_OPTIONS, 8));
};
_MatProgressBar.\u0275cmp = /* @__PURE__ */ \u0275\u0275defineComponent({
  type: _MatProgressBar,
  selectors: [["mat-progress-bar"]],
  hostAttrs: ["role", "progressbar", "aria-valuemin", "0", "aria-valuemax", "100", "tabindex", "-1", 1, "mat-mdc-progress-bar", "mdc-linear-progress"],
  hostVars: 10,
  hostBindings: function MatProgressBar_HostBindings(rf, ctx) {
    if (rf & 2) {
      \u0275\u0275attribute("aria-valuenow", ctx._isIndeterminate() ? null : ctx.value)("mode", ctx.mode);
      \u0275\u0275classMap("mat-" + ctx.color);
      \u0275\u0275classProp("_mat-animation-noopable", ctx._isNoopAnimation)("mdc-linear-progress--animation-ready", !ctx._isNoopAnimation)("mdc-linear-progress--indeterminate", ctx._isIndeterminate());
    }
  },
  inputs: {
    color: "color",
    value: [2, "value", "value", numberAttribute],
    bufferValue: [2, "bufferValue", "bufferValue", numberAttribute],
    mode: "mode"
  },
  outputs: {
    animationEnd: "animationEnd"
  },
  exportAs: ["matProgressBar"],
  standalone: true,
  features: [\u0275\u0275InputTransformsFeature, \u0275\u0275StandaloneFeature],
  decls: 7,
  vars: 5,
  consts: [["aria-hidden", "true", 1, "mdc-linear-progress__buffer"], [1, "mdc-linear-progress__buffer-bar"], [1, "mdc-linear-progress__buffer-dots"], ["aria-hidden", "true", 1, "mdc-linear-progress__bar", "mdc-linear-progress__primary-bar"], [1, "mdc-linear-progress__bar-inner"], ["aria-hidden", "true", 1, "mdc-linear-progress__bar", "mdc-linear-progress__secondary-bar"]],
  template: function MatProgressBar_Template(rf, ctx) {
    if (rf & 1) {
      \u0275\u0275elementStart(0, "div", 0);
      \u0275\u0275element(1, "div", 1);
      \u0275\u0275template(2, MatProgressBar_Conditional_2_Template, 1, 0, "div", 2);
      \u0275\u0275elementEnd();
      \u0275\u0275elementStart(3, "div", 3);
      \u0275\u0275element(4, "span", 4);
      \u0275\u0275elementEnd();
      \u0275\u0275elementStart(5, "div", 5);
      \u0275\u0275element(6, "span", 4);
      \u0275\u0275elementEnd();
    }
    if (rf & 2) {
      \u0275\u0275advance();
      \u0275\u0275styleProp("flex-basis", ctx._getBufferBarFlexBasis());
      \u0275\u0275advance();
      \u0275\u0275conditional(ctx.mode === "buffer" ? 2 : -1);
      \u0275\u0275advance();
      \u0275\u0275styleProp("transform", ctx._getPrimaryBarTransform());
    }
  },
  styles: [`@keyframes mdc-linear-progress-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(var(--mdc-linear-progress-primary-half))}100%{transform:translateX(var(--mdc-linear-progress-primary-full))}}@keyframes mdc-linear-progress-primary-indeterminate-scale{0%{transform:scaleX(0.08)}36.65%{animation-timing-function:cubic-bezier(0.334731, 0.12482, 0.785844, 1);transform:scaleX(0.08)}69.15%{animation-timing-function:cubic-bezier(0.06, 0.11, 0.6, 1);transform:scaleX(0.661479)}100%{transform:scaleX(0.08)}}@keyframes mdc-linear-progress-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:translateX(var(--mdc-linear-progress-secondary-quarter))}48.35%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:translateX(var(--mdc-linear-progress-secondary-half))}100%{transform:translateX(var(--mdc-linear-progress-secondary-full))}}@keyframes mdc-linear-progress-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(0.205028, 0.057051, 0.57661, 0.453971);transform:scaleX(0.08)}19.15%{animation-timing-function:cubic-bezier(0.152313, 0.196432, 0.648374, 1.004315);transform:scaleX(0.457104)}44.15%{animation-timing-function:cubic-bezier(0.257759, -0.003163, 0.211762, 1.38179);transform:scaleX(0.72796)}100%{transform:scaleX(0.08)}}@keyframes mdc-linear-progress-primary-indeterminate-translate-reverse{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(var(--mdc-linear-progress-primary-half-neg))}100%{transform:translateX(var(--mdc-linear-progress-primary-full-neg))}}@keyframes mdc-linear-progress-secondary-indeterminate-translate-reverse{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:translateX(var(--mdc-linear-progress-secondary-quarter-neg))}48.35%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:translateX(var(--mdc-linear-progress-secondary-half-neg))}100%{transform:translateX(var(--mdc-linear-progress-secondary-full-neg))}}@keyframes mdc-linear-progress-buffering-reverse{from{transform:translateX(-10px)}}.mdc-linear-progress{position:relative;width:100%;transform:translateZ(0);outline:1px solid rgba(0,0,0,0);overflow-x:hidden;transition:opacity 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}@media screen and (forced-colors: active){.mdc-linear-progress{outline-color:CanvasText}}.mdc-linear-progress__bar{position:absolute;top:0;bottom:0;margin:auto 0;width:100%;animation:none;transform-origin:top left;transition:transform 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-linear-progress__bar-inner{display:inline-block;position:absolute;width:100%;animation:none;border-top-style:solid}.mdc-linear-progress__buffer{display:flex;position:absolute;top:0;bottom:0;margin:auto 0;width:100%;overflow:hidden}.mdc-linear-progress__buffer-dots{background-repeat:repeat-x;flex:auto;transform:rotate(180deg);-webkit-mask-image:url("data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='xMinYMin slice'%3E%3Ccircle cx='1' cy='1' r='1'/%3E%3C/svg%3E");mask-image:url("data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='xMinYMin slice'%3E%3Ccircle cx='1' cy='1' r='1'/%3E%3C/svg%3E");animation:mdc-linear-progress-buffering 250ms infinite linear}.mdc-linear-progress__buffer-bar{flex:0 1 100%;transition:flex-basis 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-linear-progress__primary-bar{transform:scaleX(0)}.mdc-linear-progress__secondary-bar{display:none}.mdc-linear-progress--indeterminate .mdc-linear-progress__bar{transition:none}.mdc-linear-progress--indeterminate .mdc-linear-progress__primary-bar{left:-145.166611%}.mdc-linear-progress--indeterminate .mdc-linear-progress__secondary-bar{left:-54.888891%;display:block}.mdc-linear-progress--indeterminate.mdc-linear-progress--animation-ready .mdc-linear-progress__primary-bar{animation:mdc-linear-progress-primary-indeterminate-translate 2s infinite linear}.mdc-linear-progress--indeterminate.mdc-linear-progress--animation-ready .mdc-linear-progress__primary-bar>.mdc-linear-progress__bar-inner{animation:mdc-linear-progress-primary-indeterminate-scale 2s infinite linear}.mdc-linear-progress--indeterminate.mdc-linear-progress--animation-ready .mdc-linear-progress__secondary-bar{animation:mdc-linear-progress-secondary-indeterminate-translate 2s infinite linear}.mdc-linear-progress--indeterminate.mdc-linear-progress--animation-ready .mdc-linear-progress__secondary-bar>.mdc-linear-progress__bar-inner{animation:mdc-linear-progress-secondary-indeterminate-scale 2s infinite linear}[dir=rtl] .mdc-linear-progress:not([dir=ltr]) .mdc-linear-progress__bar,.mdc-linear-progress[dir=rtl]:not([dir=ltr]) .mdc-linear-progress__bar{right:0;-webkit-transform-origin:center right;transform-origin:center right}[dir=rtl] .mdc-linear-progress:not([dir=ltr]).mdc-linear-progress--animation-ready .mdc-linear-progress__primary-bar,.mdc-linear-progress[dir=rtl]:not([dir=ltr]).mdc-linear-progress--animation-ready .mdc-linear-progress__primary-bar{animation-name:mdc-linear-progress-primary-indeterminate-translate-reverse}[dir=rtl] .mdc-linear-progress:not([dir=ltr]).mdc-linear-progress--animation-ready .mdc-linear-progress__secondary-bar,.mdc-linear-progress[dir=rtl]:not([dir=ltr]).mdc-linear-progress--animation-ready .mdc-linear-progress__secondary-bar{animation-name:mdc-linear-progress-secondary-indeterminate-translate-reverse}[dir=rtl] .mdc-linear-progress:not([dir=ltr]) .mdc-linear-progress__buffer-dots,.mdc-linear-progress[dir=rtl]:not([dir=ltr]) .mdc-linear-progress__buffer-dots{animation:mdc-linear-progress-buffering-reverse 250ms infinite linear;transform:rotate(0)}[dir=rtl] .mdc-linear-progress:not([dir=ltr]).mdc-linear-progress--indeterminate .mdc-linear-progress__primary-bar,.mdc-linear-progress[dir=rtl]:not([dir=ltr]).mdc-linear-progress--indeterminate .mdc-linear-progress__primary-bar{right:-145.166611%;left:auto}[dir=rtl] .mdc-linear-progress:not([dir=ltr]).mdc-linear-progress--indeterminate .mdc-linear-progress__secondary-bar,.mdc-linear-progress[dir=rtl]:not([dir=ltr]).mdc-linear-progress--indeterminate .mdc-linear-progress__secondary-bar{right:-54.888891%;left:auto}.mdc-linear-progress--closed{opacity:0}.mdc-linear-progress--closed-animation-off .mdc-linear-progress__buffer-dots{animation:none}.mdc-linear-progress--closed-animation-off.mdc-linear-progress--indeterminate .mdc-linear-progress__bar,.mdc-linear-progress--closed-animation-off.mdc-linear-progress--indeterminate .mdc-linear-progress__bar .mdc-linear-progress__bar-inner{animation:none}@keyframes mdc-linear-progress-buffering{from{transform:rotate(180deg) translateX(calc(var(--mdc-linear-progress-track-height) * -2.5))}}.mdc-linear-progress__bar-inner{border-color:var(--mdc-linear-progress-active-indicator-color)}.mdc-linear-progress__buffer-dots{background-color:var(--mdc-linear-progress-track-color)}@media(forced-colors: active){.mdc-linear-progress__buffer-dots{background-color:ButtonBorder}}@media all and (-ms-high-contrast: none),(-ms-high-contrast: active){.mdc-linear-progress__buffer-dots{background-color:rgba(0,0,0,0);background-image:url("data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(244, 67, 54, 0.25)'/%3E%3C/svg%3E")}}.mdc-linear-progress__buffer-bar{background-color:var(--mdc-linear-progress-track-color)}.mdc-linear-progress{height:max(var(--mdc-linear-progress-track-height), var(--mdc-linear-progress-active-indicator-height))}@media all and (-ms-high-contrast: none),(-ms-high-contrast: active){.mdc-linear-progress{height:4px}}.mdc-linear-progress__bar{height:var(--mdc-linear-progress-active-indicator-height)}.mdc-linear-progress__bar-inner{border-top-width:var(--mdc-linear-progress-active-indicator-height)}.mdc-linear-progress__buffer{height:var(--mdc-linear-progress-track-height)}@media all and (-ms-high-contrast: none),(-ms-high-contrast: active){.mdc-linear-progress__buffer-dots{background-size:10px var(--mdc-linear-progress-track-height)}}.mdc-linear-progress__buffer{border-radius:var(--mdc-linear-progress-track-shape)}.mat-mdc-progress-bar{display:block;text-align:start;--mdc-linear-progress-primary-half: 83.67142%;--mdc-linear-progress-primary-full: 200.611057%;--mdc-linear-progress-secondary-quarter: 37.651913%;--mdc-linear-progress-secondary-half: 84.386165%;--mdc-linear-progress-secondary-full: 160.277782%;--mdc-linear-progress-primary-half-neg: -83.67142%;--mdc-linear-progress-primary-full-neg: -200.611057%;--mdc-linear-progress-secondary-quarter-neg: -37.651913%;--mdc-linear-progress-secondary-half-neg: -84.386165%;--mdc-linear-progress-secondary-full-neg: -160.277782%}.mat-mdc-progress-bar[mode=query]{transform:scaleX(-1)}.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__buffer-dots,.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__primary-bar,.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__secondary-bar,.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__bar-inner.mdc-linear-progress__bar-inner{animation:none}.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__primary-bar,.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__buffer-bar{transition:transform 1ms}`],
  encapsulation: 2,
  changeDetection: 0
});
var MatProgressBar = _MatProgressBar;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && setClassMetadata(MatProgressBar, [{
    type: Component,
    args: [{
      selector: "mat-progress-bar",
      exportAs: "matProgressBar",
      host: {
        "role": "progressbar",
        "aria-valuemin": "0",
        "aria-valuemax": "100",
        // set tab index to -1 so screen readers will read the aria-label
        // Note: there is a known issue with JAWS that does not read progressbar aria labels on FireFox
        "tabindex": "-1",
        "[attr.aria-valuenow]": "_isIndeterminate() ? null : value",
        "[attr.mode]": "mode",
        "class": "mat-mdc-progress-bar mdc-linear-progress",
        "[class]": '"mat-" + color',
        "[class._mat-animation-noopable]": "_isNoopAnimation",
        "[class.mdc-linear-progress--animation-ready]": "!_isNoopAnimation",
        "[class.mdc-linear-progress--indeterminate]": "_isIndeterminate()"
      },
      changeDetection: ChangeDetectionStrategy.OnPush,
      encapsulation: ViewEncapsulation$1.None,
      standalone: true,
      template: `<!--
  All children need to be hidden for screen readers in order to support ChromeVox.
  More context in the issue: https://github.com/angular/components/issues/22165.
-->
<div class="mdc-linear-progress__buffer" aria-hidden="true">
  <div
    class="mdc-linear-progress__buffer-bar"
    [style.flex-basis]="_getBufferBarFlexBasis()"></div>
  <!-- Remove the dots outside of buffer mode since they can cause CSP issues (see #28938) -->
  @if (mode === 'buffer') {
    <div class="mdc-linear-progress__buffer-dots"></div>
  }
</div>
<div
  class="mdc-linear-progress__bar mdc-linear-progress__primary-bar"
  aria-hidden="true"
  [style.transform]="_getPrimaryBarTransform()">
  <span class="mdc-linear-progress__bar-inner"></span>
</div>
<div class="mdc-linear-progress__bar mdc-linear-progress__secondary-bar" aria-hidden="true">
  <span class="mdc-linear-progress__bar-inner"></span>
</div>
`,
      styles: [`@keyframes mdc-linear-progress-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(var(--mdc-linear-progress-primary-half))}100%{transform:translateX(var(--mdc-linear-progress-primary-full))}}@keyframes mdc-linear-progress-primary-indeterminate-scale{0%{transform:scaleX(0.08)}36.65%{animation-timing-function:cubic-bezier(0.334731, 0.12482, 0.785844, 1);transform:scaleX(0.08)}69.15%{animation-timing-function:cubic-bezier(0.06, 0.11, 0.6, 1);transform:scaleX(0.661479)}100%{transform:scaleX(0.08)}}@keyframes mdc-linear-progress-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:translateX(var(--mdc-linear-progress-secondary-quarter))}48.35%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:translateX(var(--mdc-linear-progress-secondary-half))}100%{transform:translateX(var(--mdc-linear-progress-secondary-full))}}@keyframes mdc-linear-progress-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(0.205028, 0.057051, 0.57661, 0.453971);transform:scaleX(0.08)}19.15%{animation-timing-function:cubic-bezier(0.152313, 0.196432, 0.648374, 1.004315);transform:scaleX(0.457104)}44.15%{animation-timing-function:cubic-bezier(0.257759, -0.003163, 0.211762, 1.38179);transform:scaleX(0.72796)}100%{transform:scaleX(0.08)}}@keyframes mdc-linear-progress-primary-indeterminate-translate-reverse{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(var(--mdc-linear-progress-primary-half-neg))}100%{transform:translateX(var(--mdc-linear-progress-primary-full-neg))}}@keyframes mdc-linear-progress-secondary-indeterminate-translate-reverse{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:translateX(var(--mdc-linear-progress-secondary-quarter-neg))}48.35%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:translateX(var(--mdc-linear-progress-secondary-half-neg))}100%{transform:translateX(var(--mdc-linear-progress-secondary-full-neg))}}@keyframes mdc-linear-progress-buffering-reverse{from{transform:translateX(-10px)}}.mdc-linear-progress{position:relative;width:100%;transform:translateZ(0);outline:1px solid rgba(0,0,0,0);overflow-x:hidden;transition:opacity 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}@media screen and (forced-colors: active){.mdc-linear-progress{outline-color:CanvasText}}.mdc-linear-progress__bar{position:absolute;top:0;bottom:0;margin:auto 0;width:100%;animation:none;transform-origin:top left;transition:transform 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-linear-progress__bar-inner{display:inline-block;position:absolute;width:100%;animation:none;border-top-style:solid}.mdc-linear-progress__buffer{display:flex;position:absolute;top:0;bottom:0;margin:auto 0;width:100%;overflow:hidden}.mdc-linear-progress__buffer-dots{background-repeat:repeat-x;flex:auto;transform:rotate(180deg);-webkit-mask-image:url("data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='xMinYMin slice'%3E%3Ccircle cx='1' cy='1' r='1'/%3E%3C/svg%3E");mask-image:url("data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='xMinYMin slice'%3E%3Ccircle cx='1' cy='1' r='1'/%3E%3C/svg%3E");animation:mdc-linear-progress-buffering 250ms infinite linear}.mdc-linear-progress__buffer-bar{flex:0 1 100%;transition:flex-basis 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-linear-progress__primary-bar{transform:scaleX(0)}.mdc-linear-progress__secondary-bar{display:none}.mdc-linear-progress--indeterminate .mdc-linear-progress__bar{transition:none}.mdc-linear-progress--indeterminate .mdc-linear-progress__primary-bar{left:-145.166611%}.mdc-linear-progress--indeterminate .mdc-linear-progress__secondary-bar{left:-54.888891%;display:block}.mdc-linear-progress--indeterminate.mdc-linear-progress--animation-ready .mdc-linear-progress__primary-bar{animation:mdc-linear-progress-primary-indeterminate-translate 2s infinite linear}.mdc-linear-progress--indeterminate.mdc-linear-progress--animation-ready .mdc-linear-progress__primary-bar>.mdc-linear-progress__bar-inner{animation:mdc-linear-progress-primary-indeterminate-scale 2s infinite linear}.mdc-linear-progress--indeterminate.mdc-linear-progress--animation-ready .mdc-linear-progress__secondary-bar{animation:mdc-linear-progress-secondary-indeterminate-translate 2s infinite linear}.mdc-linear-progress--indeterminate.mdc-linear-progress--animation-ready .mdc-linear-progress__secondary-bar>.mdc-linear-progress__bar-inner{animation:mdc-linear-progress-secondary-indeterminate-scale 2s infinite linear}[dir=rtl] .mdc-linear-progress:not([dir=ltr]) .mdc-linear-progress__bar,.mdc-linear-progress[dir=rtl]:not([dir=ltr]) .mdc-linear-progress__bar{right:0;-webkit-transform-origin:center right;transform-origin:center right}[dir=rtl] .mdc-linear-progress:not([dir=ltr]).mdc-linear-progress--animation-ready .mdc-linear-progress__primary-bar,.mdc-linear-progress[dir=rtl]:not([dir=ltr]).mdc-linear-progress--animation-ready .mdc-linear-progress__primary-bar{animation-name:mdc-linear-progress-primary-indeterminate-translate-reverse}[dir=rtl] .mdc-linear-progress:not([dir=ltr]).mdc-linear-progress--animation-ready .mdc-linear-progress__secondary-bar,.mdc-linear-progress[dir=rtl]:not([dir=ltr]).mdc-linear-progress--animation-ready .mdc-linear-progress__secondary-bar{animation-name:mdc-linear-progress-secondary-indeterminate-translate-reverse}[dir=rtl] .mdc-linear-progress:not([dir=ltr]) .mdc-linear-progress__buffer-dots,.mdc-linear-progress[dir=rtl]:not([dir=ltr]) .mdc-linear-progress__buffer-dots{animation:mdc-linear-progress-buffering-reverse 250ms infinite linear;transform:rotate(0)}[dir=rtl] .mdc-linear-progress:not([dir=ltr]).mdc-linear-progress--indeterminate .mdc-linear-progress__primary-bar,.mdc-linear-progress[dir=rtl]:not([dir=ltr]).mdc-linear-progress--indeterminate .mdc-linear-progress__primary-bar{right:-145.166611%;left:auto}[dir=rtl] .mdc-linear-progress:not([dir=ltr]).mdc-linear-progress--indeterminate .mdc-linear-progress__secondary-bar,.mdc-linear-progress[dir=rtl]:not([dir=ltr]).mdc-linear-progress--indeterminate .mdc-linear-progress__secondary-bar{right:-54.888891%;left:auto}.mdc-linear-progress--closed{opacity:0}.mdc-linear-progress--closed-animation-off .mdc-linear-progress__buffer-dots{animation:none}.mdc-linear-progress--closed-animation-off.mdc-linear-progress--indeterminate .mdc-linear-progress__bar,.mdc-linear-progress--closed-animation-off.mdc-linear-progress--indeterminate .mdc-linear-progress__bar .mdc-linear-progress__bar-inner{animation:none}@keyframes mdc-linear-progress-buffering{from{transform:rotate(180deg) translateX(calc(var(--mdc-linear-progress-track-height) * -2.5))}}.mdc-linear-progress__bar-inner{border-color:var(--mdc-linear-progress-active-indicator-color)}.mdc-linear-progress__buffer-dots{background-color:var(--mdc-linear-progress-track-color)}@media(forced-colors: active){.mdc-linear-progress__buffer-dots{background-color:ButtonBorder}}@media all and (-ms-high-contrast: none),(-ms-high-contrast: active){.mdc-linear-progress__buffer-dots{background-color:rgba(0,0,0,0);background-image:url("data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(244, 67, 54, 0.25)'/%3E%3C/svg%3E")}}.mdc-linear-progress__buffer-bar{background-color:var(--mdc-linear-progress-track-color)}.mdc-linear-progress{height:max(var(--mdc-linear-progress-track-height), var(--mdc-linear-progress-active-indicator-height))}@media all and (-ms-high-contrast: none),(-ms-high-contrast: active){.mdc-linear-progress{height:4px}}.mdc-linear-progress__bar{height:var(--mdc-linear-progress-active-indicator-height)}.mdc-linear-progress__bar-inner{border-top-width:var(--mdc-linear-progress-active-indicator-height)}.mdc-linear-progress__buffer{height:var(--mdc-linear-progress-track-height)}@media all and (-ms-high-contrast: none),(-ms-high-contrast: active){.mdc-linear-progress__buffer-dots{background-size:10px var(--mdc-linear-progress-track-height)}}.mdc-linear-progress__buffer{border-radius:var(--mdc-linear-progress-track-shape)}.mat-mdc-progress-bar{display:block;text-align:start;--mdc-linear-progress-primary-half: 83.67142%;--mdc-linear-progress-primary-full: 200.611057%;--mdc-linear-progress-secondary-quarter: 37.651913%;--mdc-linear-progress-secondary-half: 84.386165%;--mdc-linear-progress-secondary-full: 160.277782%;--mdc-linear-progress-primary-half-neg: -83.67142%;--mdc-linear-progress-primary-full-neg: -200.611057%;--mdc-linear-progress-secondary-quarter-neg: -37.651913%;--mdc-linear-progress-secondary-half-neg: -84.386165%;--mdc-linear-progress-secondary-full-neg: -160.277782%}.mat-mdc-progress-bar[mode=query]{transform:scaleX(-1)}.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__buffer-dots,.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__primary-bar,.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__secondary-bar,.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__bar-inner.mdc-linear-progress__bar-inner{animation:none}.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__primary-bar,.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__buffer-bar{transition:transform 1ms}`]
    }]
  }], () => [{
    type: ElementRef
  }, {
    type: NgZone
  }, {
    type: ChangeDetectorRef
  }, {
    type: void 0,
    decorators: [{
      type: Optional
    }, {
      type: Inject,
      args: [ANIMATION_MODULE_TYPE]
    }]
  }, {
    type: void 0,
    decorators: [{
      type: Optional
    }, {
      type: Inject,
      args: [MAT_PROGRESS_BAR_DEFAULT_OPTIONS]
    }]
  }], {
    color: [{
      type: Input
    }],
    value: [{
      type: Input,
      args: [{
        transform: numberAttribute
      }]
    }],
    bufferValue: [{
      type: Input,
      args: [{
        transform: numberAttribute
      }]
    }],
    animationEnd: [{
      type: Output
    }],
    mode: [{
      type: Input
    }]
  });
})();
function clamp(v, min = 0, max = 100) {
  return Math.max(min, Math.min(max, v));
}
var _MatProgressBarModule = class _MatProgressBarModule {
};
_MatProgressBarModule.\u0275fac = function MatProgressBarModule_Factory(t) {
  return new (t || _MatProgressBarModule)();
};
_MatProgressBarModule.\u0275mod = /* @__PURE__ */ \u0275\u0275defineNgModule({
  type: _MatProgressBarModule
});
_MatProgressBarModule.\u0275inj = /* @__PURE__ */ \u0275\u0275defineInjector({
  imports: [MatCommonModule]
});
var MatProgressBarModule = _MatProgressBarModule;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && setClassMetadata(MatProgressBarModule, [{
    type: NgModule,
    args: [{
      imports: [MatProgressBar],
      exports: [MatProgressBar, MatCommonModule]
    }]
  }], null, null);
})();

// src/@fuse/components/loading-bar/loading-bar.component.ts
function FuseLoadingBarComponent_Conditional_0_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 0);
    \u0275\u0275element(1, "div", 1);
    \u0275\u0275elementEnd();
  }
}
var _FuseLoadingBarComponent = class _FuseLoadingBarComponent {
  constructor() {
    this._fuseLoadingService = inject(FuseLoadingService);
    this.autoMode = true;
    this.progress = 0;
    this.show = false;
    this._unsubscribeAll = new Subject();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Lifecycle hooks
  // -----------------------------------------------------------------------------------------------------
  /**
   * On changes
   *
   * @param changes
   */
  ngOnChanges(changes) {
    if ("autoMode" in changes) {
      this._fuseLoadingService.setAutoMode(coerceBooleanProperty(changes.autoMode.currentValue));
    }
  }
  /**
   * On init
   */
  ngOnInit() {
    this._fuseLoadingService.mode$.pipe(delay(300), takeUntil(this._unsubscribeAll)).subscribe((value) => {
      setTimeout(() => {
        this.mode = value;
      });
    });
    this._fuseLoadingService.progress$.pipe(delay(300), takeUntil(this._unsubscribeAll)).subscribe((value) => {
      setTimeout(() => {
        this.progress = value;
      });
    });
    this._fuseLoadingService.show$.pipe(takeUntil(this._unsubscribeAll)).subscribe((value) => {
      setTimeout(() => {
        this.show = value;
      });
    });
  }
  /**
   * On destroy
   */
  ngOnDestroy() {
    this._unsubscribeAll.next(null);
    this._unsubscribeAll.complete();
  }
};
_FuseLoadingBarComponent.\u0275fac = function FuseLoadingBarComponent_Factory(t) {
  return new (t || _FuseLoadingBarComponent)();
};
_FuseLoadingBarComponent.\u0275cmp = /* @__PURE__ */ \u0275\u0275defineComponent({ type: _FuseLoadingBarComponent, selectors: [["fuse-loading-bar"]], inputs: { autoMode: "autoMode" }, exportAs: ["fuseLoadingBar"], standalone: true, features: [\u0275\u0275NgOnChangesFeature, \u0275\u0275StandaloneFeature], decls: 1, vars: 1, consts: [[1, "spinner-container"], [1, "spinner"]], template: function FuseLoadingBarComponent_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275template(0, FuseLoadingBarComponent_Conditional_0_Template, 2, 0, "div", 0);
  }
  if (rf & 2) {
    \u0275\u0275conditional(ctx.show ? 0 : -1);
  }
}, dependencies: [MatProgressBarModule], styles: ["/* src/@fuse/components/loading-bar/loading-bar.component.scss */\n.spinner-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(255, 255, 255, 0.8);\n  z-index: 9999;\n}\n.spinner {\n  width: 60px;\n  height: 60px;\n  border: 8px solid rgba(0, 0, 0, 0.1);\n  border-top-color: #162683;\n  border-radius: 50%;\n  animation: spin 1s ease infinite;\n}\n@keyframes spin {\n  to {\n    transform: rotate(360deg);\n  }\n}\n/*# sourceMappingURL=loading-bar.component.css.map */\n"], encapsulation: 2 });
var FuseLoadingBarComponent = _FuseLoadingBarComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && \u0275setClassDebugInfo(FuseLoadingBarComponent, { className: "FuseLoadingBarComponent", filePath: "src\\@fuse\\components\\loading-bar\\loading-bar.component.ts", lineNumber: 26 });
})();

// src/app/layout/layouts/empty/empty.component.ts
function EmptyLayoutComponent_Conditional_3_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "router-outlet");
  }
}
var _EmptyLayoutComponent = class _EmptyLayoutComponent {
  /**
   * Constructor
   */
  constructor() {
    this._unsubscribeAll = new Subject();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Lifecycle hooks
  // -----------------------------------------------------------------------------------------------------
  /**
   * On destroy
   */
  ngOnDestroy() {
    this._unsubscribeAll.next(null);
    this._unsubscribeAll.complete();
  }
};
_EmptyLayoutComponent.\u0275fac = function EmptyLayoutComponent_Factory(t) {
  return new (t || _EmptyLayoutComponent)();
};
_EmptyLayoutComponent.\u0275cmp = /* @__PURE__ */ \u0275\u0275defineComponent({ type: _EmptyLayoutComponent, selectors: [["empty-layout"]], standalone: true, features: [\u0275\u0275StandaloneFeature], decls: 4, vars: 1, consts: [[1, "flex", "w-full", "flex-auto", "flex-col"], [1, "flex", "flex-auto", "flex-col"]], template: function EmptyLayoutComponent_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "fuse-loading-bar");
    \u0275\u0275elementStart(1, "div", 0)(2, "div", 1);
    \u0275\u0275template(3, EmptyLayoutComponent_Conditional_3_Template, 1, 0, "router-outlet");
    \u0275\u0275elementEnd()();
  }
  if (rf & 2) {
    \u0275\u0275advance(3);
    \u0275\u0275conditional(true ? 3 : -1);
  }
}, dependencies: [FuseLoadingBarComponent, RouterOutlet], encapsulation: 2 });
var EmptyLayoutComponent = _EmptyLayoutComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && \u0275setClassDebugInfo(EmptyLayoutComponent, { className: "EmptyLayoutComponent", filePath: "src\\app\\layout\\layouts\\empty\\empty.component.ts", lineNumber: 13 });
})();

// src/@fuse/components/fullscreen/fullscreen.component.ts
function FuseFullscreenComponent_ng_template_2_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "mat-icon", 3);
  }
  if (rf & 2) {
    \u0275\u0275property("svgIcon", "heroicons_outline:arrows-pointing-out");
  }
}
var _FuseFullscreenComponent = class _FuseFullscreenComponent {
  constructor() {
    this._document = inject(DOCUMENT);
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Toggle the fullscreen mode
   */
  toggleFullscreen() {
    if (!this._document.fullscreenEnabled) {
      console.log("Fullscreen is not available in this browser.");
      return;
    }
    const fullScreen = this._document.fullscreenElement;
    if (fullScreen) {
      this._document.exitFullscreen();
    } else {
      this._document.documentElement.requestFullscreen().catch(() => {
        console.error("Entering fullscreen mode failed.");
      });
    }
  }
};
_FuseFullscreenComponent.\u0275fac = function FuseFullscreenComponent_Factory(t) {
  return new (t || _FuseFullscreenComponent)();
};
_FuseFullscreenComponent.\u0275cmp = /* @__PURE__ */ \u0275\u0275defineComponent({ type: _FuseFullscreenComponent, selectors: [["fuse-fullscreen"]], inputs: { iconTpl: "iconTpl", tooltip: "tooltip" }, exportAs: ["fuseFullscreen"], standalone: true, features: [\u0275\u0275StandaloneFeature], decls: 4, vars: 2, consts: [["defaultIconTpl", ""], ["mat-icon-button", "", 3, "click", "matTooltip"], [3, "ngTemplateOutlet"], [3, "svgIcon"]], template: function FuseFullscreenComponent_Template(rf, ctx) {
  if (rf & 1) {
    const _r1 = \u0275\u0275getCurrentView();
    \u0275\u0275elementStart(0, "button", 1);
    \u0275\u0275listener("click", function FuseFullscreenComponent_Template_button_click_0_listener() {
      \u0275\u0275restoreView(_r1);
      return \u0275\u0275resetView(ctx.toggleFullscreen());
    });
    \u0275\u0275elementContainer(1, 2);
    \u0275\u0275elementEnd();
    \u0275\u0275template(2, FuseFullscreenComponent_ng_template_2_Template, 1, 1, "ng-template", null, 0, \u0275\u0275templateRefExtractor);
  }
  if (rf & 2) {
    const defaultIconTpl_r2 = \u0275\u0275reference(3);
    \u0275\u0275property("matTooltip", ctx.tooltip || "Toggle Fullscreen");
    \u0275\u0275advance();
    \u0275\u0275property("ngTemplateOutlet", ctx.iconTpl || defaultIconTpl_r2);
  }
}, dependencies: [
  MatButtonModule,
  MatIconButton,
  MatTooltipModule,
  MatTooltip,
  NgTemplateOutlet,
  MatIconModule,
  MatIcon
], encapsulation: 2, changeDetection: 0 });
var FuseFullscreenComponent = _FuseFullscreenComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && \u0275setClassDebugInfo(FuseFullscreenComponent, { className: "FuseFullscreenComponent", filePath: "src\\@fuse\\components\\fullscreen\\fullscreen.component.ts", lineNumber: 28 });
})();

// src/@fuse/components/navigation/navigation.service.ts
var _FuseNavigationService = class _FuseNavigationService {
  constructor() {
    this._componentRegistry = /* @__PURE__ */ new Map();
    this._navigationStore = /* @__PURE__ */ new Map();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Register navigation component
   *
   * @param name
   * @param component
   */
  registerComponent(name, component) {
    this._componentRegistry.set(name, component);
  }
  /**
   * Deregister navigation component
   *
   * @param name
   */
  deregisterComponent(name) {
    this._componentRegistry.delete(name);
  }
  /**
   * Get navigation component from the registry
   *
   * @param name
   */
  getComponent(name) {
    return this._componentRegistry.get(name);
  }
  /**
   * Store the given navigation with the given key
   *
   * @param key
   * @param navigation
   */
  storeNavigation(key, navigation) {
    this._navigationStore.set(key, navigation);
  }
  /**
   * Get navigation from storage by key
   *
   * @param key
   */
  getNavigation(key) {
    return this._navigationStore.get(key) ?? [];
  }
  /**
   * Delete the navigation from the storage
   *
   * @param key
   */
  deleteNavigation(key) {
    if (!this._navigationStore.has(key)) {
      console.warn(`Navigation with the key '${key}' does not exist in the store.`);
    }
    this._navigationStore.delete(key);
  }
  /**
   * Utility function that returns a flattened
   * version of the given navigation array
   *
   * @param navigation
   * @param flatNavigation
   */
  getFlatNavigation(navigation, flatNavigation = []) {
    for (const item of navigation) {
      if (item.type === "basic") {
        flatNavigation.push(item);
        continue;
      }
      if (item.type === "aside" || item.type === "collapsable" || item.type === "group") {
        if (item.children) {
          this.getFlatNavigation(item.children, flatNavigation);
        }
      }
    }
    return flatNavigation;
  }
  /**
   * Utility function that returns the item
   * with the given id from given navigation
   *
   * @param id
   * @param navigation
   */
  getItem(id, navigation) {
    for (const item of navigation) {
      if (item.id === id) {
        return item;
      }
      if (item.children) {
        const childItem = this.getItem(id, item.children);
        if (childItem) {
          return childItem;
        }
      }
    }
    return null;
  }
  /**
   * Utility function that returns the item's parent
   * with the given id from given navigation
   *
   * @param id
   * @param navigation
   * @param parent
   */
  getItemParent(id, navigation, parent) {
    for (const item of navigation) {
      if (item.id === id) {
        return parent;
      }
      if (item.children) {
        const childItem = this.getItemParent(id, item.children, item);
        if (childItem) {
          return childItem;
        }
      }
    }
    return null;
  }
};
_FuseNavigationService.\u0275fac = function FuseNavigationService_Factory(t) {
  return new (t || _FuseNavigationService)();
};
_FuseNavigationService.\u0275prov = /* @__PURE__ */ \u0275\u0275defineInjectable({ token: _FuseNavigationService, factory: _FuseNavigationService.\u0275fac, providedIn: "root" });
var FuseNavigationService = _FuseNavigationService;

// src/@fuse/components/navigation/horizontal/components/basic/basic.component.ts
var _c02 = (a0) => ({ "fuse-horizontal-navigation-item-active-forced": a0 });
var _c1 = (a0) => [a0];
function FuseHorizontalNavigationBasicItemComponent_Conditional_1_ng_container_1_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementContainer(0);
  }
}
function FuseHorizontalNavigationBasicItemComponent_Conditional_1_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 2);
    \u0275\u0275template(1, FuseHorizontalNavigationBasicItemComponent_Conditional_1_ng_container_1_Template, 1, 0, "ng-container", 7);
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    let tmp_4_0;
    let tmp_5_0;
    let tmp_6_0;
    let tmp_7_0;
    const ctx_r0 = \u0275\u0275nextContext();
    const itemTemplate_r2 = \u0275\u0275reference(9);
    \u0275\u0275property("ngClass", \u0275\u0275pureFunction1(10, _c02, ctx_r0.item.active))("routerLink", \u0275\u0275pureFunction1(12, _c1, ctx_r0.item.link))("fragment", (tmp_4_0 = ctx_r0.item.fragment) !== null && tmp_4_0 !== void 0 ? tmp_4_0 : null)("preserveFragment", (tmp_5_0 = ctx_r0.item.preserveFragment) !== null && tmp_5_0 !== void 0 ? tmp_5_0 : false)("queryParams", (tmp_6_0 = ctx_r0.item.queryParams) !== null && tmp_6_0 !== void 0 ? tmp_6_0 : null)("queryParamsHandling", (tmp_7_0 = ctx_r0.item.queryParamsHandling) !== null && tmp_7_0 !== void 0 ? tmp_7_0 : null)("routerLinkActive", "fuse-horizontal-navigation-item-active")("routerLinkActiveOptions", ctx_r0.isActiveMatchOptions)("matTooltip", ctx_r0.item.tooltip || "");
    \u0275\u0275advance();
    \u0275\u0275property("ngTemplateOutlet", itemTemplate_r2);
  }
}
function FuseHorizontalNavigationBasicItemComponent_Conditional_2_ng_container_1_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementContainer(0);
  }
}
function FuseHorizontalNavigationBasicItemComponent_Conditional_2_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "a", 3);
    \u0275\u0275template(1, FuseHorizontalNavigationBasicItemComponent_Conditional_2_ng_container_1_Template, 1, 0, "ng-container", 7);
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const ctx_r0 = \u0275\u0275nextContext();
    const itemTemplate_r2 = \u0275\u0275reference(9);
    \u0275\u0275property("href", ctx_r0.item.link, \u0275\u0275sanitizeUrl)("target", ctx_r0.item.target || "_self")("matTooltip", ctx_r0.item.tooltip || "");
    \u0275\u0275advance();
    \u0275\u0275property("ngTemplateOutlet", itemTemplate_r2);
  }
}
function FuseHorizontalNavigationBasicItemComponent_Conditional_3_ng_container_1_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementContainer(0);
  }
}
function FuseHorizontalNavigationBasicItemComponent_Conditional_3_Template(rf, ctx) {
  if (rf & 1) {
    const _r3 = \u0275\u0275getCurrentView();
    \u0275\u0275elementStart(0, "div", 8);
    \u0275\u0275listener("click", function FuseHorizontalNavigationBasicItemComponent_Conditional_3_Template_div_click_0_listener() {
      \u0275\u0275restoreView(_r3);
      const ctx_r0 = \u0275\u0275nextContext();
      return \u0275\u0275resetView(ctx_r0.item.function(ctx_r0.item));
    });
    \u0275\u0275template(1, FuseHorizontalNavigationBasicItemComponent_Conditional_3_ng_container_1_Template, 1, 0, "ng-container", 7);
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const ctx_r0 = \u0275\u0275nextContext();
    const itemTemplate_r2 = \u0275\u0275reference(9);
    \u0275\u0275property("ngClass", \u0275\u0275pureFunction1(3, _c02, ctx_r0.item.active))("matTooltip", ctx_r0.item.tooltip || "");
    \u0275\u0275advance();
    \u0275\u0275property("ngTemplateOutlet", itemTemplate_r2);
  }
}
function FuseHorizontalNavigationBasicItemComponent_Conditional_4_ng_container_1_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementContainer(0);
  }
}
function FuseHorizontalNavigationBasicItemComponent_Conditional_4_Template(rf, ctx) {
  if (rf & 1) {
    const _r4 = \u0275\u0275getCurrentView();
    \u0275\u0275elementStart(0, "div", 9);
    \u0275\u0275listener("click", function FuseHorizontalNavigationBasicItemComponent_Conditional_4_Template_div_click_0_listener() {
      \u0275\u0275restoreView(_r4);
      const ctx_r0 = \u0275\u0275nextContext();
      return \u0275\u0275resetView(ctx_r0.item.function(ctx_r0.item));
    });
    \u0275\u0275template(1, FuseHorizontalNavigationBasicItemComponent_Conditional_4_ng_container_1_Template, 1, 0, "ng-container", 7);
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    let tmp_4_0;
    let tmp_5_0;
    let tmp_6_0;
    let tmp_7_0;
    const ctx_r0 = \u0275\u0275nextContext();
    const itemTemplate_r2 = \u0275\u0275reference(9);
    \u0275\u0275property("ngClass", \u0275\u0275pureFunction1(10, _c02, ctx_r0.item.active))("routerLink", \u0275\u0275pureFunction1(12, _c1, ctx_r0.item.link))("fragment", (tmp_4_0 = ctx_r0.item.fragment) !== null && tmp_4_0 !== void 0 ? tmp_4_0 : null)("preserveFragment", (tmp_5_0 = ctx_r0.item.preserveFragment) !== null && tmp_5_0 !== void 0 ? tmp_5_0 : false)("queryParams", (tmp_6_0 = ctx_r0.item.queryParams) !== null && tmp_6_0 !== void 0 ? tmp_6_0 : null)("queryParamsHandling", (tmp_7_0 = ctx_r0.item.queryParamsHandling) !== null && tmp_7_0 !== void 0 ? tmp_7_0 : null)("routerLinkActive", "fuse-horizontal-navigation-item-active")("routerLinkActiveOptions", ctx_r0.isActiveMatchOptions)("matTooltip", ctx_r0.item.tooltip || "");
    \u0275\u0275advance();
    \u0275\u0275property("ngTemplateOutlet", itemTemplate_r2);
  }
}
function FuseHorizontalNavigationBasicItemComponent_Conditional_5_ng_container_1_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementContainer(0);
  }
}
function FuseHorizontalNavigationBasicItemComponent_Conditional_5_Template(rf, ctx) {
  if (rf & 1) {
    const _r5 = \u0275\u0275getCurrentView();
    \u0275\u0275elementStart(0, "a", 10);
    \u0275\u0275listener("click", function FuseHorizontalNavigationBasicItemComponent_Conditional_5_Template_a_click_0_listener() {
      \u0275\u0275restoreView(_r5);
      const ctx_r0 = \u0275\u0275nextContext();
      return \u0275\u0275resetView(ctx_r0.item.function(ctx_r0.item));
    });
    \u0275\u0275template(1, FuseHorizontalNavigationBasicItemComponent_Conditional_5_ng_container_1_Template, 1, 0, "ng-container", 7);
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const ctx_r0 = \u0275\u0275nextContext();
    const itemTemplate_r2 = \u0275\u0275reference(9);
    \u0275\u0275property("href", ctx_r0.item.link, \u0275\u0275sanitizeUrl)("target", ctx_r0.item.target || "_self")("matTooltip", ctx_r0.item.tooltip || "");
    \u0275\u0275advance();
    \u0275\u0275property("ngTemplateOutlet", itemTemplate_r2);
  }
}
function FuseHorizontalNavigationBasicItemComponent_Conditional_6_ng_container_1_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementContainer(0);
  }
}
function FuseHorizontalNavigationBasicItemComponent_Conditional_6_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 4);
    \u0275\u0275template(1, FuseHorizontalNavigationBasicItemComponent_Conditional_6_ng_container_1_Template, 1, 0, "ng-container", 7);
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const ctx_r0 = \u0275\u0275nextContext();
    const itemTemplate_r2 = \u0275\u0275reference(9);
    \u0275\u0275property("ngClass", \u0275\u0275pureFunction1(3, _c02, ctx_r0.item.active))("matTooltip", ctx_r0.item.tooltip || "");
    \u0275\u0275advance();
    \u0275\u0275property("ngTemplateOutlet", itemTemplate_r2);
  }
}
function FuseHorizontalNavigationBasicItemComponent_Conditional_7_ng_container_1_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementContainer(0);
  }
}
function FuseHorizontalNavigationBasicItemComponent_Conditional_7_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 6);
    \u0275\u0275template(1, FuseHorizontalNavigationBasicItemComponent_Conditional_7_ng_container_1_Template, 1, 0, "ng-container", 7);
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    \u0275\u0275nextContext();
    const itemTemplate_r2 = \u0275\u0275reference(9);
    \u0275\u0275advance();
    \u0275\u0275property("ngTemplateOutlet", itemTemplate_r2);
  }
}
function FuseHorizontalNavigationBasicItemComponent_ng_template_8_Conditional_0_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "mat-icon", 11);
  }
  if (rf & 2) {
    const ctx_r0 = \u0275\u0275nextContext(2);
    \u0275\u0275property("ngClass", ctx_r0.item.classes == null ? null : ctx_r0.item.classes.icon)("svgIcon", ctx_r0.item.icon);
  }
}
function FuseHorizontalNavigationBasicItemComponent_ng_template_8_Conditional_5_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 15)(1, "span", 14);
    \u0275\u0275text(2);
    \u0275\u0275elementEnd()();
  }
  if (rf & 2) {
    const ctx_r0 = \u0275\u0275nextContext(2);
    \u0275\u0275advance();
    \u0275\u0275property("ngClass", ctx_r0.item.classes == null ? null : ctx_r0.item.classes.subtitle);
    \u0275\u0275advance();
    \u0275\u0275textInterpolate1(" ", ctx_r0.item.subtitle, " ");
  }
}
function FuseHorizontalNavigationBasicItemComponent_ng_template_8_Conditional_6_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 16)(1, "div", 17);
    \u0275\u0275text(2);
    \u0275\u0275elementEnd()();
  }
  if (rf & 2) {
    const ctx_r0 = \u0275\u0275nextContext(2);
    \u0275\u0275advance();
    \u0275\u0275property("ngClass", ctx_r0.item.badge.classes);
    \u0275\u0275advance();
    \u0275\u0275textInterpolate1(" ", ctx_r0.item.badge.title, " ");
  }
}
function FuseHorizontalNavigationBasicItemComponent_ng_template_8_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275template(0, FuseHorizontalNavigationBasicItemComponent_ng_template_8_Conditional_0_Template, 1, 2, "mat-icon", 11);
    \u0275\u0275elementStart(1, "div", 12)(2, "div", 13)(3, "span", 14);
    \u0275\u0275text(4);
    \u0275\u0275elementEnd()();
    \u0275\u0275template(5, FuseHorizontalNavigationBasicItemComponent_ng_template_8_Conditional_5_Template, 3, 2, "div", 15);
    \u0275\u0275elementEnd();
    \u0275\u0275template(6, FuseHorizontalNavigationBasicItemComponent_ng_template_8_Conditional_6_Template, 3, 2, "div", 16);
  }
  if (rf & 2) {
    const ctx_r0 = \u0275\u0275nextContext();
    \u0275\u0275conditional(ctx_r0.item.icon ? 0 : -1);
    \u0275\u0275advance(3);
    \u0275\u0275property("ngClass", ctx_r0.item.classes == null ? null : ctx_r0.item.classes.title);
    \u0275\u0275advance();
    \u0275\u0275textInterpolate1(" ", ctx_r0.item.title, " ");
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx_r0.item.subtitle ? 5 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx_r0.item.badge ? 6 : -1);
  }
}
var _FuseHorizontalNavigationBasicItemComponent = class _FuseHorizontalNavigationBasicItemComponent {
  constructor() {
    this._changeDetectorRef = inject(ChangeDetectorRef);
    this._fuseNavigationService = inject(FuseNavigationService);
    this._fuseUtilsService = inject(FuseUtilsService);
    this.isActiveMatchOptions = this._fuseUtilsService.subsetMatchOptions;
    this._unsubscribeAll = new Subject();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Lifecycle hooks
  // -----------------------------------------------------------------------------------------------------
  /**
   * On init
   */
  ngOnInit() {
    this.isActiveMatchOptions = this.item.isActiveMatchOptions ?? this.item.exactMatch ? this._fuseUtilsService.exactMatchOptions : this._fuseUtilsService.subsetMatchOptions;
    this._fuseHorizontalNavigationComponent = this._fuseNavigationService.getComponent(this.name);
    this._changeDetectorRef.markForCheck();
    this._fuseHorizontalNavigationComponent.onRefreshed.pipe(takeUntil(this._unsubscribeAll)).subscribe(() => {
      this._changeDetectorRef.markForCheck();
    });
  }
  /**
   * On destroy
   */
  ngOnDestroy() {
    this._unsubscribeAll.next(null);
    this._unsubscribeAll.complete();
  }
};
_FuseHorizontalNavigationBasicItemComponent.\u0275fac = function FuseHorizontalNavigationBasicItemComponent_Factory(t) {
  return new (t || _FuseHorizontalNavigationBasicItemComponent)();
};
_FuseHorizontalNavigationBasicItemComponent.\u0275cmp = /* @__PURE__ */ \u0275\u0275defineComponent({ type: _FuseHorizontalNavigationBasicItemComponent, selectors: [["fuse-horizontal-navigation-basic-item"]], inputs: { item: "item", name: "name" }, standalone: true, features: [\u0275\u0275StandaloneFeature], decls: 10, vars: 10, consts: [["itemTemplate", ""], [1, "fuse-horizontal-navigation-item-wrapper", 3, "ngClass"], [1, "fuse-horizontal-navigation-item", 3, "ngClass", "routerLink", "fragment", "preserveFragment", "queryParams", "queryParamsHandling", "routerLinkActive", "routerLinkActiveOptions", "matTooltip"], [1, "fuse-horizontal-navigation-item", 3, "href", "target", "matTooltip"], [1, "fuse-horizontal-navigation-item", 3, "ngClass", "matTooltip"], ["mat-menu-item", "", 1, "fuse-horizontal-navigation-item", 3, "href", "target", "matTooltip"], [1, "fuse-horizontal-navigation-item", "fuse-horizontal-navigation-item-disabled"], [4, "ngTemplateOutlet"], [1, "fuse-horizontal-navigation-item", 3, "click", "ngClass", "matTooltip"], [1, "fuse-horizontal-navigation-item", 3, "click", "ngClass", "routerLink", "fragment", "preserveFragment", "queryParams", "queryParamsHandling", "routerLinkActive", "routerLinkActiveOptions", "matTooltip"], ["mat-menu-item", "", 1, "fuse-horizontal-navigation-item", 3, "click", "href", "target", "matTooltip"], [1, "fuse-horizontal-navigation-item-icon", 3, "ngClass", "svgIcon"], [1, "fuse-horizontal-navigation-item-title-wrapper"], [1, "fuse-horizontal-navigation-item-title"], [3, "ngClass"], [1, "fuse-horizontal-navigation-item-subtitle", "text-hint"], [1, "fuse-horizontal-navigation-item-badge"], [1, "fuse-horizontal-navigation-item-badge-content", 3, "ngClass"]], template: function FuseHorizontalNavigationBasicItemComponent_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 1);
    \u0275\u0275template(1, FuseHorizontalNavigationBasicItemComponent_Conditional_1_Template, 2, 14, "div", 2)(2, FuseHorizontalNavigationBasicItemComponent_Conditional_2_Template, 2, 4, "a", 3)(3, FuseHorizontalNavigationBasicItemComponent_Conditional_3_Template, 2, 5, "div", 4)(4, FuseHorizontalNavigationBasicItemComponent_Conditional_4_Template, 2, 14, "div", 2)(5, FuseHorizontalNavigationBasicItemComponent_Conditional_5_Template, 2, 4, "a", 5)(6, FuseHorizontalNavigationBasicItemComponent_Conditional_6_Template, 2, 5, "div", 4)(7, FuseHorizontalNavigationBasicItemComponent_Conditional_7_Template, 2, 1, "div", 6);
    \u0275\u0275elementEnd();
    \u0275\u0275template(8, FuseHorizontalNavigationBasicItemComponent_ng_template_8_Template, 7, 5, "ng-template", null, 0, \u0275\u0275templateRefExtractor);
  }
  if (rf & 2) {
    \u0275\u0275classProp("fuse-horizontal-navigation-item-has-subtitle", !!ctx.item.subtitle);
    \u0275\u0275property("ngClass", ctx.item.classes == null ? null : ctx.item.classes.wrapper);
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx.item.link && !ctx.item.externalLink && !ctx.item.function && !ctx.item.disabled ? 1 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx.item.link && ctx.item.externalLink && !ctx.item.function && !ctx.item.disabled ? 2 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(!ctx.item.link && ctx.item.function && !ctx.item.disabled ? 3 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx.item.link && !ctx.item.externalLink && ctx.item.function && !ctx.item.disabled ? 4 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx.item.link && ctx.item.externalLink && ctx.item.function && !ctx.item.disabled ? 5 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(!ctx.item.link && !ctx.item.function && !ctx.item.disabled ? 6 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx.item.disabled ? 7 : -1);
  }
}, dependencies: [
  NgClass,
  RouterLink,
  RouterLinkActive,
  MatTooltipModule,
  MatTooltip,
  NgTemplateOutlet,
  MatMenuModule,
  MatMenuItem,
  MatIconModule,
  MatIcon
], encapsulation: 2, changeDetection: 0 });
var FuseHorizontalNavigationBasicItemComponent = _FuseHorizontalNavigationBasicItemComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && \u0275setClassDebugInfo(FuseHorizontalNavigationBasicItemComponent, { className: "FuseHorizontalNavigationBasicItemComponent", filePath: "src\\@fuse\\components\\navigation\\horizontal\\components\\basic\\basic.component.ts", lineNumber: 40 });
})();

// src/@fuse/components/navigation/horizontal/components/divider/divider.component.ts
var _FuseHorizontalNavigationDividerItemComponent = class _FuseHorizontalNavigationDividerItemComponent {
  constructor() {
    this._changeDetectorRef = inject(ChangeDetectorRef);
    this._fuseNavigationService = inject(FuseNavigationService);
    this._unsubscribeAll = new Subject();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Lifecycle hooks
  // -----------------------------------------------------------------------------------------------------
  /**
   * On init
   */
  ngOnInit() {
    this._fuseHorizontalNavigationComponent = this._fuseNavigationService.getComponent(this.name);
    this._fuseHorizontalNavigationComponent.onRefreshed.pipe(takeUntil(this._unsubscribeAll)).subscribe(() => {
      this._changeDetectorRef.markForCheck();
    });
  }
  /**
   * On destroy
   */
  ngOnDestroy() {
    this._unsubscribeAll.next(null);
    this._unsubscribeAll.complete();
  }
};
_FuseHorizontalNavigationDividerItemComponent.\u0275fac = function FuseHorizontalNavigationDividerItemComponent_Factory(t) {
  return new (t || _FuseHorizontalNavigationDividerItemComponent)();
};
_FuseHorizontalNavigationDividerItemComponent.\u0275cmp = /* @__PURE__ */ \u0275\u0275defineComponent({ type: _FuseHorizontalNavigationDividerItemComponent, selectors: [["fuse-horizontal-navigation-divider-item"]], inputs: { item: "item", name: "name" }, standalone: true, features: [\u0275\u0275StandaloneFeature], decls: 1, vars: 1, consts: [[1, "fuse-horizontal-navigation-item-wrapper", "divider", 3, "ngClass"]], template: function FuseHorizontalNavigationDividerItemComponent_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "div", 0);
  }
  if (rf & 2) {
    \u0275\u0275property("ngClass", ctx.item.classes == null ? null : ctx.item.classes.wrapper);
  }
}, dependencies: [NgClass], encapsulation: 2, changeDetection: 0 });
var FuseHorizontalNavigationDividerItemComponent = _FuseHorizontalNavigationDividerItemComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && \u0275setClassDebugInfo(FuseHorizontalNavigationDividerItemComponent, { className: "FuseHorizontalNavigationDividerItemComponent", filePath: "src\\@fuse\\components\\navigation\\horizontal\\components\\divider\\divider.component.ts", lineNumber: 23 });
})();

// src/@fuse/components/navigation/horizontal/components/branch/branch.component.ts
var _c03 = ["matMenu"];
var _c12 = (a0, a1) => ({ "fuse-horizontal-navigation-menu-active": a0, "fuse-horizontal-navigation-menu-active-forced": a1 });
var _c2 = (a0) => ({ $implicit: a0 });
var _c3 = (a0, a1) => ({ "fuse-horizontal-navigation-item-disabled": a0, "fuse-horizontal-navigation-item-active-forced": a1 });
function FuseHorizontalNavigationBranchItemComponent_Conditional_0_ng_container_2_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementContainer(0);
  }
}
function FuseHorizontalNavigationBranchItemComponent_Conditional_0_Template(rf, ctx) {
  if (rf & 1) {
    const _r1 = \u0275\u0275getCurrentView();
    \u0275\u0275elementStart(0, "div", 6, 2);
    \u0275\u0275listener("onMenuOpen", function FuseHorizontalNavigationBranchItemComponent_Conditional_0_Template_div_onMenuOpen_0_listener() {
      \u0275\u0275restoreView(_r1);
      const ctx_r1 = \u0275\u0275nextContext();
      return \u0275\u0275resetView(ctx_r1.triggerChangeDetection());
    })("onMenuClose", function FuseHorizontalNavigationBranchItemComponent_Conditional_0_Template_div_onMenuClose_0_listener() {
      \u0275\u0275restoreView(_r1);
      const ctx_r1 = \u0275\u0275nextContext();
      return \u0275\u0275resetView(ctx_r1.triggerChangeDetection());
    });
    \u0275\u0275template(2, FuseHorizontalNavigationBranchItemComponent_Conditional_0_ng_container_2_Template, 1, 0, "ng-container", 7);
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const trigger_r3 = \u0275\u0275reference(1);
    const ctx_r1 = \u0275\u0275nextContext();
    const matMenu_r4 = \u0275\u0275reference(2);
    const itemTemplate_r5 = \u0275\u0275reference(6);
    \u0275\u0275property("ngClass", \u0275\u0275pureFunction2(4, _c12, trigger_r3.menuOpen, ctx_r1.item.active))("matMenuTriggerFor", matMenu_r4);
    \u0275\u0275advance(2);
    \u0275\u0275property("ngTemplateOutlet", itemTemplate_r5)("ngTemplateOutletContext", \u0275\u0275pureFunction1(7, _c2, ctx_r1.item));
  }
}
function FuseHorizontalNavigationBranchItemComponent_For_4_Conditional_0_Conditional_0_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 8);
    \u0275\u0275element(1, "fuse-horizontal-navigation-basic-item", 11);
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const item_r6 = \u0275\u0275nextContext(2).$implicit;
    const ctx_r1 = \u0275\u0275nextContext();
    \u0275\u0275property("disabled", item_r6.disabled);
    \u0275\u0275advance();
    \u0275\u0275property("item", item_r6)("name", ctx_r1.name);
  }
}
function FuseHorizontalNavigationBranchItemComponent_For_4_Conditional_0_Conditional_1_ng_container_1_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementContainer(0);
  }
}
function FuseHorizontalNavigationBranchItemComponent_For_4_Conditional_0_Conditional_1_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 9);
    \u0275\u0275template(1, FuseHorizontalNavigationBranchItemComponent_For_4_Conditional_0_Conditional_1_ng_container_1_Template, 1, 0, "ng-container", 7);
    \u0275\u0275element(2, "fuse-horizontal-navigation-branch-item", 12, 3);
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const branch_r7 = \u0275\u0275reference(3);
    const item_r6 = \u0275\u0275nextContext(2).$implicit;
    const ctx_r1 = \u0275\u0275nextContext();
    const itemTemplate_r5 = \u0275\u0275reference(6);
    \u0275\u0275property("disabled", item_r6.disabled)("matMenuTriggerFor", branch_r7.matMenu);
    \u0275\u0275advance();
    \u0275\u0275property("ngTemplateOutlet", itemTemplate_r5)("ngTemplateOutletContext", \u0275\u0275pureFunction1(7, _c2, item_r6));
    \u0275\u0275advance();
    \u0275\u0275property("child", true)("item", item_r6)("name", ctx_r1.name);
  }
}
function FuseHorizontalNavigationBranchItemComponent_For_4_Conditional_0_Conditional_2_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 10);
    \u0275\u0275element(1, "fuse-horizontal-navigation-divider-item", 11);
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const item_r6 = \u0275\u0275nextContext(2).$implicit;
    const ctx_r1 = \u0275\u0275nextContext();
    \u0275\u0275advance();
    \u0275\u0275property("item", item_r6)("name", ctx_r1.name);
  }
}
function FuseHorizontalNavigationBranchItemComponent_For_4_Conditional_0_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275template(0, FuseHorizontalNavigationBranchItemComponent_For_4_Conditional_0_Conditional_0_Template, 2, 3, "div", 8)(1, FuseHorizontalNavigationBranchItemComponent_For_4_Conditional_0_Conditional_1_Template, 4, 9, "div", 9)(2, FuseHorizontalNavigationBranchItemComponent_For_4_Conditional_0_Conditional_2_Template, 2, 2, "div", 10);
  }
  if (rf & 2) {
    const item_r6 = \u0275\u0275nextContext().$implicit;
    \u0275\u0275conditional(item_r6.type === "basic" ? 0 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(item_r6.type === "aside" || item_r6.type === "collapsable" || item_r6.type === "group" ? 1 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(item_r6.type === "divider" ? 2 : -1);
  }
}
function FuseHorizontalNavigationBranchItemComponent_For_4_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275template(0, FuseHorizontalNavigationBranchItemComponent_For_4_Conditional_0_Template, 3, 3);
  }
  if (rf & 2) {
    const item_r6 = ctx.$implicit;
    \u0275\u0275conditional(item_r6.hidden && !item_r6.hidden(item_r6) || !item_r6.hidden ? 0 : -1);
  }
}
function FuseHorizontalNavigationBranchItemComponent_ng_template_5_Conditional_2_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "mat-icon", 15);
  }
  if (rf & 2) {
    const item_r8 = \u0275\u0275nextContext().$implicit;
    \u0275\u0275property("ngClass", item_r8.classes == null ? null : item_r8.classes.icon)("svgIcon", item_r8.icon);
  }
}
function FuseHorizontalNavigationBranchItemComponent_ng_template_5_Conditional_7_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 19)(1, "span", 18);
    \u0275\u0275text(2);
    \u0275\u0275elementEnd()();
  }
  if (rf & 2) {
    const item_r8 = \u0275\u0275nextContext().$implicit;
    \u0275\u0275advance();
    \u0275\u0275property("ngClass", item_r8.classes == null ? null : item_r8.classes.subtitle);
    \u0275\u0275advance();
    \u0275\u0275textInterpolate1(" ", item_r8.subtitle, " ");
  }
}
function FuseHorizontalNavigationBranchItemComponent_ng_template_5_Conditional_8_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 20)(1, "div", 21);
    \u0275\u0275text(2);
    \u0275\u0275elementEnd()();
  }
  if (rf & 2) {
    const item_r8 = \u0275\u0275nextContext().$implicit;
    \u0275\u0275advance();
    \u0275\u0275property("ngClass", item_r8.badge.classes);
    \u0275\u0275advance();
    \u0275\u0275textInterpolate1(" ", item_r8.badge.title, " ");
  }
}
function FuseHorizontalNavigationBranchItemComponent_ng_template_5_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 13)(1, "div", 14);
    \u0275\u0275template(2, FuseHorizontalNavigationBranchItemComponent_ng_template_5_Conditional_2_Template, 1, 2, "mat-icon", 15);
    \u0275\u0275elementStart(3, "div", 16)(4, "div", 17)(5, "span", 18);
    \u0275\u0275text(6);
    \u0275\u0275elementEnd()();
    \u0275\u0275template(7, FuseHorizontalNavigationBranchItemComponent_ng_template_5_Conditional_7_Template, 3, 2, "div", 19);
    \u0275\u0275elementEnd();
    \u0275\u0275template(8, FuseHorizontalNavigationBranchItemComponent_ng_template_5_Conditional_8_Template, 3, 2, "div", 20);
    \u0275\u0275elementEnd()();
  }
  if (rf & 2) {
    const item_r8 = ctx.$implicit;
    \u0275\u0275classProp("fuse-horizontal-navigation-item-has-subtitle", !!item_r8.subtitle);
    \u0275\u0275property("ngClass", item_r8.classes == null ? null : item_r8.classes.wrapper);
    \u0275\u0275advance();
    \u0275\u0275property("ngClass", \u0275\u0275pureFunction2(10, _c3, item_r8.disabled, item_r8.active))("matTooltip", item_r8.tooltip || "");
    \u0275\u0275advance();
    \u0275\u0275conditional(item_r8.icon ? 2 : -1);
    \u0275\u0275advance(3);
    \u0275\u0275property("ngClass", item_r8.classes == null ? null : item_r8.classes.title);
    \u0275\u0275advance();
    \u0275\u0275textInterpolate1(" ", item_r8.title, " ");
    \u0275\u0275advance();
    \u0275\u0275conditional(item_r8.subtitle ? 7 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(item_r8.badge ? 8 : -1);
  }
}
var _FuseHorizontalNavigationBranchItemComponent = class _FuseHorizontalNavigationBranchItemComponent {
  constructor() {
    this._changeDetectorRef = inject(ChangeDetectorRef);
    this._fuseNavigationService = inject(FuseNavigationService);
    this.child = false;
    this._unsubscribeAll = new Subject();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Lifecycle hooks
  // -----------------------------------------------------------------------------------------------------
  /**
   * On init
   */
  ngOnInit() {
    this._fuseHorizontalNavigationComponent = this._fuseNavigationService.getComponent(this.name);
    this._fuseHorizontalNavigationComponent.onRefreshed.pipe(takeUntil(this._unsubscribeAll)).subscribe(() => {
      this._changeDetectorRef.markForCheck();
    });
  }
  /**
   * On destroy
   */
  ngOnDestroy() {
    this._unsubscribeAll.next(null);
    this._unsubscribeAll.complete();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Trigger the change detection
   */
  triggerChangeDetection() {
    this._changeDetectorRef.markForCheck();
  }
  /**
   * Track by function for ngFor loops
   *
   * @param index
   * @param item
   */
  trackByFn(index, item) {
    return item.id || index;
  }
};
_FuseHorizontalNavigationBranchItemComponent.\u0275fac = function FuseHorizontalNavigationBranchItemComponent_Factory(t) {
  return new (t || _FuseHorizontalNavigationBranchItemComponent)();
};
_FuseHorizontalNavigationBranchItemComponent.\u0275cmp = /* @__PURE__ */ \u0275\u0275defineComponent({ type: _FuseHorizontalNavigationBranchItemComponent, selectors: [["fuse-horizontal-navigation-branch-item"]], viewQuery: function FuseHorizontalNavigationBranchItemComponent_Query(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275viewQuery(_c03, 7);
  }
  if (rf & 2) {
    let _t;
    \u0275\u0275queryRefresh(_t = \u0275\u0275loadQuery()) && (ctx.matMenu = _t.first);
  }
}, inputs: { child: "child", item: "item", name: "name" }, standalone: true, features: [\u0275\u0275StandaloneFeature], decls: 7, vars: 2, consts: [["matMenu", "matMenu"], ["itemTemplate", ""], ["trigger", "matMenuTrigger"], ["branch", ""], [3, "ngClass", "matMenuTriggerFor"], [1, "fuse-horizontal-navigation-menu-panel", 3, "overlapTrigger"], [3, "onMenuOpen", "onMenuClose", "ngClass", "matMenuTriggerFor"], [4, "ngTemplateOutlet", "ngTemplateOutletContext"], ["mat-menu-item", "", 1, "fuse-horizontal-navigation-menu-item", 3, "disabled"], ["mat-menu-item", "", 1, "fuse-horizontal-navigation-menu-item", 3, "disabled", "matMenuTriggerFor"], ["mat-menu-item", "", 1, "fuse-horizontal-navigation-menu-item"], [3, "item", "name"], [3, "child", "item", "name"], [1, "fuse-horizontal-navigation-item-wrapper", 3, "ngClass"], [1, "fuse-horizontal-navigation-item", 3, "ngClass", "matTooltip"], [1, "fuse-horizontal-navigation-item-icon", 3, "ngClass", "svgIcon"], [1, "fuse-horizontal-navigation-item-title-wrapper"], [1, "fuse-horizontal-navigation-item-title"], [3, "ngClass"], [1, "fuse-horizontal-navigation-item-subtitle", "text-hint"], [1, "fuse-horizontal-navigation-item-badge"], [1, "fuse-horizontal-navigation-item-badge-content", 3, "ngClass"]], template: function FuseHorizontalNavigationBranchItemComponent_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275template(0, FuseHorizontalNavigationBranchItemComponent_Conditional_0_Template, 3, 9, "div", 4);
    \u0275\u0275elementStart(1, "mat-menu", 5, 0);
    \u0275\u0275repeaterCreate(3, FuseHorizontalNavigationBranchItemComponent_For_4_Template, 1, 1, null, null, ctx.trackByFn, true);
    \u0275\u0275elementEnd();
    \u0275\u0275template(5, FuseHorizontalNavigationBranchItemComponent_ng_template_5_Template, 9, 13, "ng-template", null, 1, \u0275\u0275templateRefExtractor);
  }
  if (rf & 2) {
    \u0275\u0275conditional(!ctx.child ? 0 : -1);
    \u0275\u0275advance();
    \u0275\u0275property("overlapTrigger", false);
    \u0275\u0275advance(2);
    \u0275\u0275repeater(ctx.item.children);
  }
}, dependencies: () => [
  _FuseHorizontalNavigationBranchItemComponent,
  NgClass,
  MatMenuModule,
  MatMenu,
  MatMenuItem,
  MatMenuTrigger,
  NgTemplateOutlet,
  FuseHorizontalNavigationBasicItemComponent,
  FuseHorizontalNavigationDividerItemComponent,
  MatTooltipModule,
  MatTooltip,
  MatIconModule,
  MatIcon
], encapsulation: 2, changeDetection: 0 });
var FuseHorizontalNavigationBranchItemComponent = _FuseHorizontalNavigationBranchItemComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && \u0275setClassDebugInfo(FuseHorizontalNavigationBranchItemComponent, { className: "FuseHorizontalNavigationBranchItemComponent", filePath: "src\\@fuse\\components\\navigation\\horizontal\\components\\branch\\branch.component.ts", lineNumber: 40 });
})();

// src/@fuse/components/navigation/horizontal/components/spacer/spacer.component.ts
var _FuseHorizontalNavigationSpacerItemComponent = class _FuseHorizontalNavigationSpacerItemComponent {
  constructor() {
    this._changeDetectorRef = inject(ChangeDetectorRef);
    this._fuseNavigationService = inject(FuseNavigationService);
    this._unsubscribeAll = new Subject();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Lifecycle hooks
  // -----------------------------------------------------------------------------------------------------
  /**
   * On init
   */
  ngOnInit() {
    this._fuseHorizontalNavigationComponent = this._fuseNavigationService.getComponent(this.name);
    this._fuseHorizontalNavigationComponent.onRefreshed.pipe(takeUntil(this._unsubscribeAll)).subscribe(() => {
      this._changeDetectorRef.markForCheck();
    });
  }
  /**
   * On destroy
   */
  ngOnDestroy() {
    this._unsubscribeAll.next(null);
    this._unsubscribeAll.complete();
  }
};
_FuseHorizontalNavigationSpacerItemComponent.\u0275fac = function FuseHorizontalNavigationSpacerItemComponent_Factory(t) {
  return new (t || _FuseHorizontalNavigationSpacerItemComponent)();
};
_FuseHorizontalNavigationSpacerItemComponent.\u0275cmp = /* @__PURE__ */ \u0275\u0275defineComponent({ type: _FuseHorizontalNavigationSpacerItemComponent, selectors: [["fuse-horizontal-navigation-spacer-item"]], inputs: { item: "item", name: "name" }, standalone: true, features: [\u0275\u0275StandaloneFeature], decls: 1, vars: 1, consts: [[1, "fuse-horizontal-navigation-item-wrapper", 3, "ngClass"]], template: function FuseHorizontalNavigationSpacerItemComponent_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "div", 0);
  }
  if (rf & 2) {
    \u0275\u0275property("ngClass", ctx.item.classes == null ? null : ctx.item.classes.wrapper);
  }
}, dependencies: [NgClass], encapsulation: 2, changeDetection: 0 });
var FuseHorizontalNavigationSpacerItemComponent = _FuseHorizontalNavigationSpacerItemComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && \u0275setClassDebugInfo(FuseHorizontalNavigationSpacerItemComponent, { className: "FuseHorizontalNavigationSpacerItemComponent", filePath: "src\\@fuse\\components\\navigation\\horizontal\\components\\spacer\\spacer.component.ts", lineNumber: 23 });
})();

// src/@fuse/components/navigation/horizontal/horizontal.component.ts
function FuseHorizontalNavigationComponent_For_2_Conditional_0_Conditional_0_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "fuse-horizontal-navigation-basic-item", 1);
  }
  if (rf & 2) {
    const item_r1 = \u0275\u0275nextContext(2).$implicit;
    const ctx_r1 = \u0275\u0275nextContext();
    \u0275\u0275property("item", item_r1)("name", ctx_r1.name);
  }
}
function FuseHorizontalNavigationComponent_For_2_Conditional_0_Conditional_1_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "fuse-horizontal-navigation-branch-item", 1);
  }
  if (rf & 2) {
    const item_r1 = \u0275\u0275nextContext(2).$implicit;
    const ctx_r1 = \u0275\u0275nextContext();
    \u0275\u0275property("item", item_r1)("name", ctx_r1.name);
  }
}
function FuseHorizontalNavigationComponent_For_2_Conditional_0_Conditional_2_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "fuse-horizontal-navigation-spacer-item", 1);
  }
  if (rf & 2) {
    const item_r1 = \u0275\u0275nextContext(2).$implicit;
    const ctx_r1 = \u0275\u0275nextContext();
    \u0275\u0275property("item", item_r1)("name", ctx_r1.name);
  }
}
function FuseHorizontalNavigationComponent_For_2_Conditional_0_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275template(0, FuseHorizontalNavigationComponent_For_2_Conditional_0_Conditional_0_Template, 1, 2, "fuse-horizontal-navigation-basic-item", 1)(1, FuseHorizontalNavigationComponent_For_2_Conditional_0_Conditional_1_Template, 1, 2, "fuse-horizontal-navigation-branch-item", 1)(2, FuseHorizontalNavigationComponent_For_2_Conditional_0_Conditional_2_Template, 1, 2, "fuse-horizontal-navigation-spacer-item", 1);
  }
  if (rf & 2) {
    const item_r1 = \u0275\u0275nextContext().$implicit;
    \u0275\u0275conditional(item_r1.type === "basic" ? 0 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(item_r1.type === "aside" || item_r1.type === "collapsable" || item_r1.type === "group" ? 1 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(item_r1.type === "spacer" ? 2 : -1);
  }
}
function FuseHorizontalNavigationComponent_For_2_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275template(0, FuseHorizontalNavigationComponent_For_2_Conditional_0_Template, 3, 3);
  }
  if (rf & 2) {
    const item_r1 = ctx.$implicit;
    \u0275\u0275conditional(item_r1.hidden && !item_r1.hidden(item_r1) || !item_r1.hidden ? 0 : -1);
  }
}
var _FuseHorizontalNavigationComponent = class _FuseHorizontalNavigationComponent {
  constructor() {
    this._changeDetectorRef = inject(ChangeDetectorRef);
    this._fuseNavigationService = inject(FuseNavigationService);
    this._fuseUtilsService = inject(FuseUtilsService);
    this.name = this._fuseUtilsService.randomId();
    this.onRefreshed = new ReplaySubject(1);
    this._unsubscribeAll = new Subject();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Lifecycle hooks
  // -----------------------------------------------------------------------------------------------------
  /**
   * On changes
   *
   * @param changes
   */
  ngOnChanges(changes) {
    if ("navigation" in changes) {
      this._changeDetectorRef.markForCheck();
    }
  }
  /**
   * On init
   */
  ngOnInit() {
    if (this.name === "") {
      this.name = this._fuseUtilsService.randomId();
    }
    this._fuseNavigationService.registerComponent(this.name, this);
  }
  /**
   * On destroy
   */
  ngOnDestroy() {
    this._fuseNavigationService.deregisterComponent(this.name);
    this._unsubscribeAll.next(null);
    this._unsubscribeAll.complete();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Refresh the component to apply the changes
   */
  refresh() {
    this._changeDetectorRef.markForCheck();
    this.onRefreshed.next(true);
  }
  /**
   * Track by function for ngFor loops
   *
   * @param index
   * @param item
   */
  trackByFn(index, item) {
    return item.id || index;
  }
};
_FuseHorizontalNavigationComponent.\u0275fac = function FuseHorizontalNavigationComponent_Factory(t) {
  return new (t || _FuseHorizontalNavigationComponent)();
};
_FuseHorizontalNavigationComponent.\u0275cmp = /* @__PURE__ */ \u0275\u0275defineComponent({ type: _FuseHorizontalNavigationComponent, selectors: [["fuse-horizontal-navigation"]], inputs: { name: "name", navigation: "navigation" }, exportAs: ["fuseHorizontalNavigation"], standalone: true, features: [\u0275\u0275NgOnChangesFeature, \u0275\u0275StandaloneFeature], decls: 3, vars: 0, consts: [[1, "fuse-horizontal-navigation-wrapper"], [1, "fuse-horizontal-navigation-menu-item", 3, "item", "name"]], template: function FuseHorizontalNavigationComponent_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 0);
    \u0275\u0275repeaterCreate(1, FuseHorizontalNavigationComponent_For_2_Template, 1, 1, null, null, ctx.trackByFn, true);
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    \u0275\u0275advance();
    \u0275\u0275repeater(ctx.navigation);
  }
}, dependencies: [
  FuseHorizontalNavigationBasicItemComponent,
  FuseHorizontalNavigationBranchItemComponent,
  FuseHorizontalNavigationSpacerItemComponent
], styles: ["/* src/@fuse/components/navigation/horizontal/horizontal.component.scss */\nfuse-horizontal-navigation .fuse-horizontal-navigation-wrapper {\n  display: flex;\n  align-items: center;\n}\n@media (min-width: 600px) {\n  fuse-horizontal-navigation .fuse-horizontal-navigation-wrapper fuse-horizontal-navigation-basic-item:hover .fuse-horizontal-navigation-item-wrapper,\n  fuse-horizontal-navigation .fuse-horizontal-navigation-wrapper fuse-horizontal-navigation-branch-item:hover .fuse-horizontal-navigation-item-wrapper {\n    background-color: var(--fuse-bg-hover);\n  }\n}\nfuse-horizontal-navigation .fuse-horizontal-navigation-wrapper fuse-horizontal-navigation-basic-item .fuse-horizontal-navigation-item-wrapper,\nfuse-horizontal-navigation .fuse-horizontal-navigation-wrapper fuse-horizontal-navigation-branch-item .fuse-horizontal-navigation-item-wrapper {\n  border-radius: 4px;\n  overflow: hidden;\n}\nfuse-horizontal-navigation .fuse-horizontal-navigation-wrapper fuse-horizontal-navigation-basic-item .fuse-horizontal-navigation-item-wrapper .fuse-horizontal-navigation-item,\nfuse-horizontal-navigation .fuse-horizontal-navigation-wrapper fuse-horizontal-navigation-branch-item .fuse-horizontal-navigation-item-wrapper .fuse-horizontal-navigation-item {\n  padding: 0 16px;\n  cursor: pointer;\n  -webkit-user-select: none;\n  user-select: none;\n}\nfuse-horizontal-navigation .fuse-horizontal-navigation-wrapper fuse-horizontal-navigation-basic-item .fuse-horizontal-navigation-item-wrapper .fuse-horizontal-navigation-item .fuse-horizontal-navigation-item-icon,\nfuse-horizontal-navigation .fuse-horizontal-navigation-wrapper fuse-horizontal-navigation-branch-item .fuse-horizontal-navigation-item-wrapper .fuse-horizontal-navigation-item .fuse-horizontal-navigation-item-icon {\n  margin-right: 12px;\n}\nfuse-horizontal-navigation .fuse-horizontal-navigation-wrapper fuse-horizontal-navigation-basic-item .fuse-horizontal-navigation-item-active .fuse-horizontal-navigation-item-title,\nfuse-horizontal-navigation .fuse-horizontal-navigation-wrapper fuse-horizontal-navigation-basic-item .fuse-horizontal-navigation-item-active-forced .fuse-horizontal-navigation-item-title {\n  --tw-text-opacity: 1 !important;\n  color: rgba(var(--fuse-primary-rgb), var(--tw-text-opacity)) !important;\n}\nfuse-horizontal-navigation .fuse-horizontal-navigation-wrapper fuse-horizontal-navigation-basic-item .fuse-horizontal-navigation-item-active .fuse-horizontal-navigation-item-subtitle,\nfuse-horizontal-navigation .fuse-horizontal-navigation-wrapper fuse-horizontal-navigation-basic-item .fuse-horizontal-navigation-item-active-forced .fuse-horizontal-navigation-item-subtitle {\n  --tw-text-opacity: 1 !important;\n  color: rgba(var(--fuse-primary-400-rgb), var(--tw-text-opacity)) !important;\n}\n.dark fuse-horizontal-navigation .fuse-horizontal-navigation-wrapper fuse-horizontal-navigation-basic-item .fuse-horizontal-navigation-item-active .fuse-horizontal-navigation-item-subtitle,\n.dark fuse-horizontal-navigation .fuse-horizontal-navigation-wrapper fuse-horizontal-navigation-basic-item .fuse-horizontal-navigation-item-active-forced .fuse-horizontal-navigation-item-subtitle {\n  --tw-text-opacity: 1 !important;\n  color: rgba(var(--fuse-primary-600-rgb), var(--tw-text-opacity)) !important;\n}\nfuse-horizontal-navigation .fuse-horizontal-navigation-wrapper fuse-horizontal-navigation-basic-item .fuse-horizontal-navigation-item-active .fuse-horizontal-navigation-item-icon,\nfuse-horizontal-navigation .fuse-horizontal-navigation-wrapper fuse-horizontal-navigation-basic-item .fuse-horizontal-navigation-item-active-forced .fuse-horizontal-navigation-item-icon {\n  --tw-text-opacity: 1 !important;\n  color: rgba(var(--fuse-primary-rgb), var(--tw-text-opacity)) !important;\n}\nfuse-horizontal-navigation .fuse-horizontal-navigation-wrapper fuse-horizontal-navigation-branch-item .fuse-horizontal-navigation-menu-active .fuse-horizontal-navigation-item-wrapper,\nfuse-horizontal-navigation .fuse-horizontal-navigation-wrapper fuse-horizontal-navigation-branch-item .fuse-horizontal-navigation-menu-active-forced .fuse-horizontal-navigation-item-wrapper {\n  background-color: var(--fuse-bg-hover);\n}\nfuse-horizontal-navigation .fuse-horizontal-navigation-wrapper fuse-horizontal-navigation-spacer-item {\n  margin: 12px 0;\n}\n.fuse-horizontal-navigation-menu-panel .fuse-horizontal-navigation-menu-item {\n  height: auto;\n  min-height: 0;\n  line-height: normal;\n  white-space: normal;\n}\n.fuse-horizontal-navigation-menu-panel .fuse-horizontal-navigation-menu-item fuse-horizontal-navigation-basic-item,\n.fuse-horizontal-navigation-menu-panel .fuse-horizontal-navigation-menu-item fuse-horizontal-navigation-branch-item,\n.fuse-horizontal-navigation-menu-panel .fuse-horizontal-navigation-menu-item fuse-horizontal-navigation-divider-item {\n  display: flex;\n  flex: 1 1 auto;\n}\n.fuse-horizontal-navigation-menu-panel .fuse-horizontal-navigation-menu-item fuse-horizontal-navigation-divider-item {\n  margin: 8px -16px;\n}\n.fuse-horizontal-navigation-menu-panel .fuse-horizontal-navigation-menu-item fuse-horizontal-navigation-divider-item .fuse-horizontal-navigation-item-wrapper {\n  height: 1px;\n  box-shadow: 0 1px 0 0;\n}\n.fuse-horizontal-navigation-menu-item {\n}\n.fuse-horizontal-navigation-menu-item fuse-horizontal-navigation-basic-item .fuse-horizontal-navigation-item-active .fuse-horizontal-navigation-item-title,\n.fuse-horizontal-navigation-menu-item fuse-horizontal-navigation-basic-item .fuse-horizontal-navigation-item-active-forced .fuse-horizontal-navigation-item-title {\n  --tw-text-opacity: 1 !important;\n  color: rgba(var(--fuse-primary-rgb), var(--tw-text-opacity)) !important;\n}\n.fuse-horizontal-navigation-menu-item fuse-horizontal-navigation-basic-item .fuse-horizontal-navigation-item-active .fuse-horizontal-navigation-item-subtitle,\n.fuse-horizontal-navigation-menu-item fuse-horizontal-navigation-basic-item .fuse-horizontal-navigation-item-active-forced .fuse-horizontal-navigation-item-subtitle {\n  --tw-text-opacity: 1 !important;\n  color: rgba(var(--fuse-primary-400-rgb), var(--tw-text-opacity)) !important;\n}\n.dark .fuse-horizontal-navigation-menu-item fuse-horizontal-navigation-basic-item .fuse-horizontal-navigation-item-active .fuse-horizontal-navigation-item-subtitle,\n.dark .fuse-horizontal-navigation-menu-item fuse-horizontal-navigation-basic-item .fuse-horizontal-navigation-item-active-forced .fuse-horizontal-navigation-item-subtitle {\n  --tw-text-opacity: 1 !important;\n  color: rgba(var(--fuse-primary-600-rgb), var(--tw-text-opacity)) !important;\n}\n.fuse-horizontal-navigation-menu-item fuse-horizontal-navigation-basic-item .fuse-horizontal-navigation-item-active .fuse-horizontal-navigation-item-icon,\n.fuse-horizontal-navigation-menu-item fuse-horizontal-navigation-basic-item .fuse-horizontal-navigation-item-active-forced .fuse-horizontal-navigation-item-icon {\n  --tw-text-opacity: 1 !important;\n  color: rgba(var(--fuse-primary-rgb), var(--tw-text-opacity)) !important;\n}\n.fuse-horizontal-navigation-menu-item .fuse-horizontal-navigation-item-wrapper {\n  width: 100%;\n}\n.fuse-horizontal-navigation-menu-item .fuse-horizontal-navigation-item-wrapper.fuse-horizontal-navigation-item-has-subtitle .fuse-horizontal-navigation-item {\n  min-height: 56px;\n}\n.fuse-horizontal-navigation-menu-item .fuse-horizontal-navigation-item-wrapper .fuse-horizontal-navigation-item {\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  min-height: 48px;\n  width: 100%;\n  font-size: 13px;\n  font-weight: 500;\n  text-decoration: none;\n}\n.fuse-horizontal-navigation-menu-item .fuse-horizontal-navigation-item-wrapper .fuse-horizontal-navigation-item .fuse-horizontal-navigation-item-title-wrapper .fuse-horizontal-navigation-item-subtitle {\n  font-size: 12px;\n}\n.fuse-horizontal-navigation-menu-item .fuse-horizontal-navigation-item-wrapper .fuse-horizontal-navigation-item .fuse-horizontal-navigation-item-badge {\n  margin-left: auto;\n}\n.fuse-horizontal-navigation-menu-item .fuse-horizontal-navigation-item-wrapper .fuse-horizontal-navigation-item .fuse-horizontal-navigation-item-badge .fuse-horizontal-navigation-item-badge-content {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 10px;\n  font-weight: 600;\n  white-space: nowrap;\n  height: 20px;\n}\n/*# sourceMappingURL=horizontal.component.css.map */\n"], encapsulation: 2, data: { animation: fuseAnimations }, changeDetection: 0 });
var FuseHorizontalNavigationComponent = _FuseHorizontalNavigationComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && \u0275setClassDebugInfo(FuseHorizontalNavigationComponent, { className: "FuseHorizontalNavigationComponent", filePath: "src\\@fuse\\components\\navigation\\horizontal\\horizontal.component.ts", lineNumber: 37 });
})();

// src/@fuse/components/navigation/vertical/components/basic/basic.component.ts
var _c04 = (a0) => ({ "fuse-vertical-navigation-item-active-forced": a0 });
var _c13 = (a0) => [a0];
function FuseVerticalNavigationBasicItemComponent_Conditional_1_ng_container_1_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementContainer(0);
  }
}
function FuseVerticalNavigationBasicItemComponent_Conditional_1_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "a", 2);
    \u0275\u0275template(1, FuseVerticalNavigationBasicItemComponent_Conditional_1_ng_container_1_Template, 1, 0, "ng-container", 6);
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    let tmp_4_0;
    let tmp_5_0;
    let tmp_6_0;
    let tmp_7_0;
    const ctx_r0 = \u0275\u0275nextContext();
    const itemTemplate_r2 = \u0275\u0275reference(9);
    \u0275\u0275property("ngClass", \u0275\u0275pureFunction1(10, _c04, ctx_r0.item.active))("routerLink", \u0275\u0275pureFunction1(12, _c13, ctx_r0.item.link))("fragment", (tmp_4_0 = ctx_r0.item.fragment) !== null && tmp_4_0 !== void 0 ? tmp_4_0 : null)("preserveFragment", (tmp_5_0 = ctx_r0.item.preserveFragment) !== null && tmp_5_0 !== void 0 ? tmp_5_0 : false)("queryParams", (tmp_6_0 = ctx_r0.item.queryParams) !== null && tmp_6_0 !== void 0 ? tmp_6_0 : null)("queryParamsHandling", (tmp_7_0 = ctx_r0.item.queryParamsHandling) !== null && tmp_7_0 !== void 0 ? tmp_7_0 : null)("routerLinkActive", "fuse-vertical-navigation-item-active")("routerLinkActiveOptions", ctx_r0.isActiveMatchOptions)("matTooltip", ctx_r0.item.tooltip || "");
    \u0275\u0275advance();
    \u0275\u0275property("ngTemplateOutlet", itemTemplate_r2);
  }
}
function FuseVerticalNavigationBasicItemComponent_Conditional_2_ng_container_1_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementContainer(0);
  }
}
function FuseVerticalNavigationBasicItemComponent_Conditional_2_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "a", 3);
    \u0275\u0275template(1, FuseVerticalNavigationBasicItemComponent_Conditional_2_ng_container_1_Template, 1, 0, "ng-container", 6);
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const ctx_r0 = \u0275\u0275nextContext();
    const itemTemplate_r2 = \u0275\u0275reference(9);
    \u0275\u0275property("href", ctx_r0.item.link, \u0275\u0275sanitizeUrl)("target", ctx_r0.item.target || "_self")("matTooltip", ctx_r0.item.tooltip || "");
    \u0275\u0275advance();
    \u0275\u0275property("ngTemplateOutlet", itemTemplate_r2);
  }
}
function FuseVerticalNavigationBasicItemComponent_Conditional_3_ng_container_1_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementContainer(0);
  }
}
function FuseVerticalNavigationBasicItemComponent_Conditional_3_Template(rf, ctx) {
  if (rf & 1) {
    const _r3 = \u0275\u0275getCurrentView();
    \u0275\u0275elementStart(0, "div", 7);
    \u0275\u0275listener("click", function FuseVerticalNavigationBasicItemComponent_Conditional_3_Template_div_click_0_listener() {
      \u0275\u0275restoreView(_r3);
      const ctx_r0 = \u0275\u0275nextContext();
      return \u0275\u0275resetView(ctx_r0.item.function(ctx_r0.item));
    });
    \u0275\u0275template(1, FuseVerticalNavigationBasicItemComponent_Conditional_3_ng_container_1_Template, 1, 0, "ng-container", 6);
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const ctx_r0 = \u0275\u0275nextContext();
    const itemTemplate_r2 = \u0275\u0275reference(9);
    \u0275\u0275property("ngClass", \u0275\u0275pureFunction1(3, _c04, ctx_r0.item.active))("matTooltip", ctx_r0.item.tooltip || "");
    \u0275\u0275advance();
    \u0275\u0275property("ngTemplateOutlet", itemTemplate_r2);
  }
}
function FuseVerticalNavigationBasicItemComponent_Conditional_4_ng_container_1_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementContainer(0);
  }
}
function FuseVerticalNavigationBasicItemComponent_Conditional_4_Template(rf, ctx) {
  if (rf & 1) {
    const _r4 = \u0275\u0275getCurrentView();
    \u0275\u0275elementStart(0, "a", 8);
    \u0275\u0275listener("click", function FuseVerticalNavigationBasicItemComponent_Conditional_4_Template_a_click_0_listener() {
      \u0275\u0275restoreView(_r4);
      const ctx_r0 = \u0275\u0275nextContext();
      return \u0275\u0275resetView(ctx_r0.item.function(ctx_r0.item));
    });
    \u0275\u0275template(1, FuseVerticalNavigationBasicItemComponent_Conditional_4_ng_container_1_Template, 1, 0, "ng-container", 6);
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    let tmp_4_0;
    let tmp_5_0;
    let tmp_6_0;
    let tmp_7_0;
    const ctx_r0 = \u0275\u0275nextContext();
    const itemTemplate_r2 = \u0275\u0275reference(9);
    \u0275\u0275property("ngClass", \u0275\u0275pureFunction1(10, _c04, ctx_r0.item.active))("routerLink", \u0275\u0275pureFunction1(12, _c13, ctx_r0.item.link))("fragment", (tmp_4_0 = ctx_r0.item.fragment) !== null && tmp_4_0 !== void 0 ? tmp_4_0 : null)("preserveFragment", (tmp_5_0 = ctx_r0.item.preserveFragment) !== null && tmp_5_0 !== void 0 ? tmp_5_0 : false)("queryParams", (tmp_6_0 = ctx_r0.item.queryParams) !== null && tmp_6_0 !== void 0 ? tmp_6_0 : null)("queryParamsHandling", (tmp_7_0 = ctx_r0.item.queryParamsHandling) !== null && tmp_7_0 !== void 0 ? tmp_7_0 : null)("routerLinkActive", "fuse-vertical-navigation-item-active")("routerLinkActiveOptions", ctx_r0.isActiveMatchOptions)("matTooltip", ctx_r0.item.tooltip || "");
    \u0275\u0275advance();
    \u0275\u0275property("ngTemplateOutlet", itemTemplate_r2);
  }
}
function FuseVerticalNavigationBasicItemComponent_Conditional_5_ng_container_1_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementContainer(0);
  }
}
function FuseVerticalNavigationBasicItemComponent_Conditional_5_Template(rf, ctx) {
  if (rf & 1) {
    const _r5 = \u0275\u0275getCurrentView();
    \u0275\u0275elementStart(0, "a", 9);
    \u0275\u0275listener("click", function FuseVerticalNavigationBasicItemComponent_Conditional_5_Template_a_click_0_listener() {
      \u0275\u0275restoreView(_r5);
      const ctx_r0 = \u0275\u0275nextContext();
      return \u0275\u0275resetView(ctx_r0.item.function(ctx_r0.item));
    });
    \u0275\u0275template(1, FuseVerticalNavigationBasicItemComponent_Conditional_5_ng_container_1_Template, 1, 0, "ng-container", 6);
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const ctx_r0 = \u0275\u0275nextContext();
    const itemTemplate_r2 = \u0275\u0275reference(9);
    \u0275\u0275property("href", ctx_r0.item.link, \u0275\u0275sanitizeUrl)("target", ctx_r0.item.target || "_self")("matTooltip", ctx_r0.item.tooltip || "");
    \u0275\u0275advance();
    \u0275\u0275property("ngTemplateOutlet", itemTemplate_r2);
  }
}
function FuseVerticalNavigationBasicItemComponent_Conditional_6_ng_container_1_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementContainer(0);
  }
}
function FuseVerticalNavigationBasicItemComponent_Conditional_6_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 4);
    \u0275\u0275template(1, FuseVerticalNavigationBasicItemComponent_Conditional_6_ng_container_1_Template, 1, 0, "ng-container", 6);
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const ctx_r0 = \u0275\u0275nextContext();
    const itemTemplate_r2 = \u0275\u0275reference(9);
    \u0275\u0275property("ngClass", \u0275\u0275pureFunction1(3, _c04, ctx_r0.item.active))("matTooltip", ctx_r0.item.tooltip || "");
    \u0275\u0275advance();
    \u0275\u0275property("ngTemplateOutlet", itemTemplate_r2);
  }
}
function FuseVerticalNavigationBasicItemComponent_Conditional_7_ng_container_1_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementContainer(0);
  }
}
function FuseVerticalNavigationBasicItemComponent_Conditional_7_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 5);
    \u0275\u0275template(1, FuseVerticalNavigationBasicItemComponent_Conditional_7_ng_container_1_Template, 1, 0, "ng-container", 6);
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const ctx_r0 = \u0275\u0275nextContext();
    const itemTemplate_r2 = \u0275\u0275reference(9);
    \u0275\u0275property("matTooltip", ctx_r0.item.tooltip || "");
    \u0275\u0275advance();
    \u0275\u0275property("ngTemplateOutlet", itemTemplate_r2);
  }
}
function FuseVerticalNavigationBasicItemComponent_ng_template_8_Conditional_0_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "mat-icon", 10);
  }
  if (rf & 2) {
    const ctx_r0 = \u0275\u0275nextContext(2);
    \u0275\u0275property("ngClass", ctx_r0.item.classes == null ? null : ctx_r0.item.classes.icon)("svgIcon", ctx_r0.item.icon);
  }
}
function FuseVerticalNavigationBasicItemComponent_ng_template_8_Conditional_5_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 14)(1, "span", 13);
    \u0275\u0275text(2);
    \u0275\u0275elementEnd()();
  }
  if (rf & 2) {
    const ctx_r0 = \u0275\u0275nextContext(2);
    \u0275\u0275advance();
    \u0275\u0275property("ngClass", ctx_r0.item.classes == null ? null : ctx_r0.item.classes.subtitle);
    \u0275\u0275advance();
    \u0275\u0275textInterpolate1(" ", ctx_r0.item.subtitle, " ");
  }
}
function FuseVerticalNavigationBasicItemComponent_ng_template_8_Conditional_6_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 15)(1, "div", 16);
    \u0275\u0275text(2);
    \u0275\u0275elementEnd()();
  }
  if (rf & 2) {
    const ctx_r0 = \u0275\u0275nextContext(2);
    \u0275\u0275advance();
    \u0275\u0275property("ngClass", ctx_r0.item.badge.classes);
    \u0275\u0275advance();
    \u0275\u0275textInterpolate1(" ", ctx_r0.item.badge.title, " ");
  }
}
function FuseVerticalNavigationBasicItemComponent_ng_template_8_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275template(0, FuseVerticalNavigationBasicItemComponent_ng_template_8_Conditional_0_Template, 1, 2, "mat-icon", 10);
    \u0275\u0275elementStart(1, "div", 11)(2, "div", 12)(3, "span", 13);
    \u0275\u0275text(4);
    \u0275\u0275elementEnd()();
    \u0275\u0275template(5, FuseVerticalNavigationBasicItemComponent_ng_template_8_Conditional_5_Template, 3, 2, "div", 14);
    \u0275\u0275elementEnd();
    \u0275\u0275template(6, FuseVerticalNavigationBasicItemComponent_ng_template_8_Conditional_6_Template, 3, 2, "div", 15);
  }
  if (rf & 2) {
    const ctx_r0 = \u0275\u0275nextContext();
    \u0275\u0275conditional(ctx_r0.item.icon ? 0 : -1);
    \u0275\u0275advance(3);
    \u0275\u0275property("ngClass", ctx_r0.item.classes == null ? null : ctx_r0.item.classes.title);
    \u0275\u0275advance();
    \u0275\u0275textInterpolate1(" ", ctx_r0.item.title, " ");
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx_r0.item.subtitle ? 5 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx_r0.item.badge ? 6 : -1);
  }
}
var _FuseVerticalNavigationBasicItemComponent = class _FuseVerticalNavigationBasicItemComponent {
  constructor() {
    this._changeDetectorRef = inject(ChangeDetectorRef);
    this._fuseNavigationService = inject(FuseNavigationService);
    this._fuseUtilsService = inject(FuseUtilsService);
    this.isActiveMatchOptions = this._fuseUtilsService.subsetMatchOptions;
    this._unsubscribeAll = new Subject();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Lifecycle hooks
  // -----------------------------------------------------------------------------------------------------
  /**
   * On init
   */
  ngOnInit() {
    this.isActiveMatchOptions = this.item.isActiveMatchOptions ?? this.item.exactMatch ? this._fuseUtilsService.exactMatchOptions : this._fuseUtilsService.subsetMatchOptions;
    this._fuseVerticalNavigationComponent = this._fuseNavigationService.getComponent(this.name);
    this._changeDetectorRef.markForCheck();
    this._fuseVerticalNavigationComponent.onRefreshed.pipe(takeUntil(this._unsubscribeAll)).subscribe(() => {
      this._changeDetectorRef.markForCheck();
    });
  }
  /**
   * On destroy
   */
  ngOnDestroy() {
    this._unsubscribeAll.next(null);
    this._unsubscribeAll.complete();
  }
};
_FuseVerticalNavigationBasicItemComponent.\u0275fac = function FuseVerticalNavigationBasicItemComponent_Factory(t) {
  return new (t || _FuseVerticalNavigationBasicItemComponent)();
};
_FuseVerticalNavigationBasicItemComponent.\u0275cmp = /* @__PURE__ */ \u0275\u0275defineComponent({ type: _FuseVerticalNavigationBasicItemComponent, selectors: [["fuse-vertical-navigation-basic-item"]], inputs: { item: "item", name: "name" }, standalone: true, features: [\u0275\u0275StandaloneFeature], decls: 10, vars: 10, consts: [["itemTemplate", ""], [1, "fuse-vertical-navigation-item-wrapper", 3, "ngClass"], [1, "fuse-vertical-navigation-item", 3, "ngClass", "routerLink", "fragment", "preserveFragment", "queryParams", "queryParamsHandling", "routerLinkActive", "routerLinkActiveOptions", "matTooltip"], [1, "fuse-vertical-navigation-item", 3, "href", "target", "matTooltip"], [1, "fuse-vertical-navigation-item", 3, "ngClass", "matTooltip"], [1, "fuse-vertical-navigation-item", "fuse-vertical-navigation-item-disabled", 3, "matTooltip"], [4, "ngTemplateOutlet"], [1, "fuse-vertical-navigation-item", 3, "click", "ngClass", "matTooltip"], [1, "fuse-vertical-navigation-item", 3, "click", "ngClass", "routerLink", "fragment", "preserveFragment", "queryParams", "queryParamsHandling", "routerLinkActive", "routerLinkActiveOptions", "matTooltip"], [1, "fuse-vertical-navigation-item", 3, "click", "href", "target", "matTooltip"], [1, "fuse-vertical-navigation-item-icon", 3, "ngClass", "svgIcon"], [1, "fuse-vertical-navigation-item-title-wrapper"], [1, "fuse-vertical-navigation-item-title"], [3, "ngClass"], [1, "fuse-vertical-navigation-item-subtitle"], [1, "fuse-vertical-navigation-item-badge"], [1, "fuse-vertical-navigation-item-badge-content", 3, "ngClass"]], template: function FuseVerticalNavigationBasicItemComponent_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 1);
    \u0275\u0275template(1, FuseVerticalNavigationBasicItemComponent_Conditional_1_Template, 2, 14, "a", 2)(2, FuseVerticalNavigationBasicItemComponent_Conditional_2_Template, 2, 4, "a", 3)(3, FuseVerticalNavigationBasicItemComponent_Conditional_3_Template, 2, 5, "div", 4)(4, FuseVerticalNavigationBasicItemComponent_Conditional_4_Template, 2, 14, "a", 2)(5, FuseVerticalNavigationBasicItemComponent_Conditional_5_Template, 2, 4, "a", 3)(6, FuseVerticalNavigationBasicItemComponent_Conditional_6_Template, 2, 5, "div", 4)(7, FuseVerticalNavigationBasicItemComponent_Conditional_7_Template, 2, 2, "div", 5);
    \u0275\u0275elementEnd();
    \u0275\u0275template(8, FuseVerticalNavigationBasicItemComponent_ng_template_8_Template, 7, 5, "ng-template", null, 0, \u0275\u0275templateRefExtractor);
  }
  if (rf & 2) {
    \u0275\u0275classProp("fuse-vertical-navigation-item-has-subtitle", !!ctx.item.subtitle);
    \u0275\u0275property("ngClass", ctx.item.classes == null ? null : ctx.item.classes.wrapper);
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx.item.link && !ctx.item.externalLink && !ctx.item.function && !ctx.item.disabled ? 1 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx.item.link && ctx.item.externalLink && !ctx.item.function && !ctx.item.disabled ? 2 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(!ctx.item.link && ctx.item.function && !ctx.item.disabled ? 3 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx.item.link && !ctx.item.externalLink && ctx.item.function && !ctx.item.disabled ? 4 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx.item.link && ctx.item.externalLink && ctx.item.function && !ctx.item.disabled ? 5 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(!ctx.item.link && !ctx.item.function && !ctx.item.disabled ? 6 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx.item.disabled ? 7 : -1);
  }
}, dependencies: [
  NgClass,
  RouterLink,
  RouterLinkActive,
  MatTooltipModule,
  MatTooltip,
  NgTemplateOutlet,
  MatIconModule,
  MatIcon
], encapsulation: 2, changeDetection: 0 });
var FuseVerticalNavigationBasicItemComponent = _FuseVerticalNavigationBasicItemComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && \u0275setClassDebugInfo(FuseVerticalNavigationBasicItemComponent, { className: "FuseVerticalNavigationBasicItemComponent", filePath: "src\\@fuse\\components\\navigation\\vertical\\components\\basic\\basic.component.ts", lineNumber: 38 });
})();

// src/@fuse/components/navigation/vertical/components/divider/divider.component.ts
var _FuseVerticalNavigationDividerItemComponent = class _FuseVerticalNavigationDividerItemComponent {
  constructor() {
    this._changeDetectorRef = inject(ChangeDetectorRef);
    this._fuseNavigationService = inject(FuseNavigationService);
    this._unsubscribeAll = new Subject();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Lifecycle hooks
  // -----------------------------------------------------------------------------------------------------
  /**
   * On init
   */
  ngOnInit() {
    this._fuseVerticalNavigationComponent = this._fuseNavigationService.getComponent(this.name);
    this._fuseVerticalNavigationComponent.onRefreshed.pipe(takeUntil(this._unsubscribeAll)).subscribe(() => {
      this._changeDetectorRef.markForCheck();
    });
  }
  /**
   * On destroy
   */
  ngOnDestroy() {
    this._unsubscribeAll.next(null);
    this._unsubscribeAll.complete();
  }
};
_FuseVerticalNavigationDividerItemComponent.\u0275fac = function FuseVerticalNavigationDividerItemComponent_Factory(t) {
  return new (t || _FuseVerticalNavigationDividerItemComponent)();
};
_FuseVerticalNavigationDividerItemComponent.\u0275cmp = /* @__PURE__ */ \u0275\u0275defineComponent({ type: _FuseVerticalNavigationDividerItemComponent, selectors: [["fuse-vertical-navigation-divider-item"]], inputs: { item: "item", name: "name" }, standalone: true, features: [\u0275\u0275StandaloneFeature], decls: 1, vars: 1, consts: [[1, "fuse-vertical-navigation-item-wrapper", "divider", 3, "ngClass"]], template: function FuseVerticalNavigationDividerItemComponent_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "div", 0);
  }
  if (rf & 2) {
    \u0275\u0275property("ngClass", ctx.item.classes == null ? null : ctx.item.classes.wrapper);
  }
}, dependencies: [NgClass], encapsulation: 2, changeDetection: 0 });
var FuseVerticalNavigationDividerItemComponent = _FuseVerticalNavigationDividerItemComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && \u0275setClassDebugInfo(FuseVerticalNavigationDividerItemComponent, { className: "FuseVerticalNavigationDividerItemComponent", filePath: "src\\@fuse\\components\\navigation\\vertical\\components\\divider\\divider.component.ts", lineNumber: 23 });
})();

// src/@fuse/components/navigation/vertical/components/spacer/spacer.component.ts
var _FuseVerticalNavigationSpacerItemComponent = class _FuseVerticalNavigationSpacerItemComponent {
  constructor() {
    this._changeDetectorRef = inject(ChangeDetectorRef);
    this._fuseNavigationService = inject(FuseNavigationService);
    this._unsubscribeAll = new Subject();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Lifecycle hooks
  // -----------------------------------------------------------------------------------------------------
  /**
   * On init
   */
  ngOnInit() {
    this._fuseVerticalNavigationComponent = this._fuseNavigationService.getComponent(this.name);
    this._fuseVerticalNavigationComponent.onRefreshed.pipe(takeUntil(this._unsubscribeAll)).subscribe(() => {
      this._changeDetectorRef.markForCheck();
    });
  }
  /**
   * On destroy
   */
  ngOnDestroy() {
    this._unsubscribeAll.next(null);
    this._unsubscribeAll.complete();
  }
};
_FuseVerticalNavigationSpacerItemComponent.\u0275fac = function FuseVerticalNavigationSpacerItemComponent_Factory(t) {
  return new (t || _FuseVerticalNavigationSpacerItemComponent)();
};
_FuseVerticalNavigationSpacerItemComponent.\u0275cmp = /* @__PURE__ */ \u0275\u0275defineComponent({ type: _FuseVerticalNavigationSpacerItemComponent, selectors: [["fuse-vertical-navigation-spacer-item"]], inputs: { item: "item", name: "name" }, standalone: true, features: [\u0275\u0275StandaloneFeature], decls: 1, vars: 1, consts: [[1, "fuse-vertical-navigation-item-wrapper", 3, "ngClass"]], template: function FuseVerticalNavigationSpacerItemComponent_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "div", 0);
  }
  if (rf & 2) {
    \u0275\u0275property("ngClass", ctx.item.classes == null ? null : ctx.item.classes.wrapper);
  }
}, dependencies: [NgClass], encapsulation: 2, changeDetection: 0 });
var FuseVerticalNavigationSpacerItemComponent = _FuseVerticalNavigationSpacerItemComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && \u0275setClassDebugInfo(FuseVerticalNavigationSpacerItemComponent, { className: "FuseVerticalNavigationSpacerItemComponent", filePath: "src\\@fuse\\components\\navigation\\vertical\\components\\spacer\\spacer.component.ts", lineNumber: 23 });
})();

// src/@fuse/components/navigation/vertical/components/group/group.component.ts
function FuseVerticalNavigationGroupItemComponent_Conditional_2_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "mat-icon", 2);
  }
  if (rf & 2) {
    const ctx_r0 = \u0275\u0275nextContext();
    \u0275\u0275property("ngClass", ctx_r0.item.classes == null ? null : ctx_r0.item.classes.icon)("svgIcon", ctx_r0.item.icon);
  }
}
function FuseVerticalNavigationGroupItemComponent_Conditional_7_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 6)(1, "span", 5);
    \u0275\u0275text(2);
    \u0275\u0275elementEnd()();
  }
  if (rf & 2) {
    const ctx_r0 = \u0275\u0275nextContext();
    \u0275\u0275advance();
    \u0275\u0275property("ngClass", ctx_r0.item.classes == null ? null : ctx_r0.item.classes.subtitle);
    \u0275\u0275advance();
    \u0275\u0275textInterpolate1(" ", ctx_r0.item.subtitle, " ");
  }
}
function FuseVerticalNavigationGroupItemComponent_Conditional_8_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 7)(1, "div", 8);
    \u0275\u0275text(2);
    \u0275\u0275elementEnd()();
  }
  if (rf & 2) {
    const ctx_r0 = \u0275\u0275nextContext();
    \u0275\u0275advance();
    \u0275\u0275property("ngClass", ctx_r0.item.badge.classes);
    \u0275\u0275advance();
    \u0275\u0275textInterpolate1(" ", ctx_r0.item.badge.title, " ");
  }
}
function FuseVerticalNavigationGroupItemComponent_For_10_Conditional_0_Conditional_0_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "fuse-vertical-navigation-basic-item", 9);
  }
  if (rf & 2) {
    const item_r2 = \u0275\u0275nextContext(2).$implicit;
    const ctx_r0 = \u0275\u0275nextContext();
    \u0275\u0275property("item", item_r2)("name", ctx_r0.name);
  }
}
function FuseVerticalNavigationGroupItemComponent_For_10_Conditional_0_Conditional_1_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "fuse-vertical-navigation-collapsable-item", 10);
  }
  if (rf & 2) {
    const item_r2 = \u0275\u0275nextContext(2).$implicit;
    const ctx_r0 = \u0275\u0275nextContext();
    \u0275\u0275property("item", item_r2)("name", ctx_r0.name)("autoCollapse", ctx_r0.autoCollapse);
  }
}
function FuseVerticalNavigationGroupItemComponent_For_10_Conditional_0_Conditional_2_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "fuse-vertical-navigation-divider-item", 9);
  }
  if (rf & 2) {
    const item_r2 = \u0275\u0275nextContext(2).$implicit;
    const ctx_r0 = \u0275\u0275nextContext();
    \u0275\u0275property("item", item_r2)("name", ctx_r0.name);
  }
}
function FuseVerticalNavigationGroupItemComponent_For_10_Conditional_0_Conditional_3_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "fuse-vertical-navigation-group-item", 9);
  }
  if (rf & 2) {
    const item_r2 = \u0275\u0275nextContext(2).$implicit;
    const ctx_r0 = \u0275\u0275nextContext();
    \u0275\u0275property("item", item_r2)("name", ctx_r0.name);
  }
}
function FuseVerticalNavigationGroupItemComponent_For_10_Conditional_0_Conditional_4_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "fuse-vertical-navigation-spacer-item", 9);
  }
  if (rf & 2) {
    const item_r2 = \u0275\u0275nextContext(2).$implicit;
    const ctx_r0 = \u0275\u0275nextContext();
    \u0275\u0275property("item", item_r2)("name", ctx_r0.name);
  }
}
function FuseVerticalNavigationGroupItemComponent_For_10_Conditional_0_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275template(0, FuseVerticalNavigationGroupItemComponent_For_10_Conditional_0_Conditional_0_Template, 1, 2, "fuse-vertical-navigation-basic-item", 9)(1, FuseVerticalNavigationGroupItemComponent_For_10_Conditional_0_Conditional_1_Template, 1, 3, "fuse-vertical-navigation-collapsable-item", 10)(2, FuseVerticalNavigationGroupItemComponent_For_10_Conditional_0_Conditional_2_Template, 1, 2, "fuse-vertical-navigation-divider-item", 9)(3, FuseVerticalNavigationGroupItemComponent_For_10_Conditional_0_Conditional_3_Template, 1, 2, "fuse-vertical-navigation-group-item", 9)(4, FuseVerticalNavigationGroupItemComponent_For_10_Conditional_0_Conditional_4_Template, 1, 2, "fuse-vertical-navigation-spacer-item", 9);
  }
  if (rf & 2) {
    const item_r2 = \u0275\u0275nextContext().$implicit;
    \u0275\u0275conditional(item_r2.type === "basic" ? 0 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(item_r2.type === "collapsable" ? 1 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(item_r2.type === "divider" ? 2 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(item_r2.type === "group" ? 3 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(item_r2.type === "spacer" ? 4 : -1);
  }
}
function FuseVerticalNavigationGroupItemComponent_For_10_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275template(0, FuseVerticalNavigationGroupItemComponent_For_10_Conditional_0_Template, 5, 5);
  }
  if (rf & 2) {
    const item_r2 = ctx.$implicit;
    \u0275\u0275conditional(item_r2.hidden && !item_r2.hidden(item_r2) || !item_r2.hidden ? 0 : -1);
  }
}
var _FuseVerticalNavigationGroupItemComponent = class _FuseVerticalNavigationGroupItemComponent {
  constructor() {
    this._changeDetectorRef = inject(ChangeDetectorRef);
    this._fuseNavigationService = inject(FuseNavigationService);
    this._unsubscribeAll = new Subject();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Lifecycle hooks
  // -----------------------------------------------------------------------------------------------------
  /**
   * On init
   */
  ngOnInit() {
    this._fuseVerticalNavigationComponent = this._fuseNavigationService.getComponent(this.name);
    this._fuseVerticalNavigationComponent.onRefreshed.pipe(takeUntil(this._unsubscribeAll)).subscribe(() => {
      this._changeDetectorRef.markForCheck();
    });
  }
  /**
   * On destroy
   */
  ngOnDestroy() {
    this._unsubscribeAll.next(null);
    this._unsubscribeAll.complete();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Track by function for ngFor loops
   *
   * @param index
   * @param item
   */
  trackByFn(index, item) {
    return item.id || index;
  }
};
_FuseVerticalNavigationGroupItemComponent.\u0275fac = function FuseVerticalNavigationGroupItemComponent_Factory(t) {
  return new (t || _FuseVerticalNavigationGroupItemComponent)();
};
_FuseVerticalNavigationGroupItemComponent.\u0275cmp = /* @__PURE__ */ \u0275\u0275defineComponent({ type: _FuseVerticalNavigationGroupItemComponent, selectors: [["fuse-vertical-navigation-group-item"]], inputs: { autoCollapse: "autoCollapse", item: "item", name: "name" }, standalone: true, features: [\u0275\u0275StandaloneFeature], decls: 11, vars: 8, consts: [[1, "fuse-vertical-navigation-item-wrapper", 3, "ngClass"], [1, "fuse-vertical-navigation-item"], [1, "fuse-vertical-navigation-item-icon", 3, "ngClass", "svgIcon"], [1, "fuse-vertical-navigation-item-title-wrapper"], [1, "fuse-vertical-navigation-item-title"], [3, "ngClass"], [1, "fuse-vertical-navigation-item-subtitle"], [1, "fuse-vertical-navigation-item-badge"], [1, "fuse-vertical-navigation-item-badge-content", 3, "ngClass"], [3, "item", "name"], [3, "item", "name", "autoCollapse"]], template: function FuseVerticalNavigationGroupItemComponent_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 0)(1, "div", 1);
    \u0275\u0275template(2, FuseVerticalNavigationGroupItemComponent_Conditional_2_Template, 1, 2, "mat-icon", 2);
    \u0275\u0275elementStart(3, "div", 3)(4, "div", 4)(5, "span", 5);
    \u0275\u0275text(6);
    \u0275\u0275elementEnd()();
    \u0275\u0275template(7, FuseVerticalNavigationGroupItemComponent_Conditional_7_Template, 3, 2, "div", 6);
    \u0275\u0275elementEnd();
    \u0275\u0275template(8, FuseVerticalNavigationGroupItemComponent_Conditional_8_Template, 3, 2, "div", 7);
    \u0275\u0275elementEnd()();
    \u0275\u0275repeaterCreate(9, FuseVerticalNavigationGroupItemComponent_For_10_Template, 1, 1, null, null, ctx.trackByFn, true);
  }
  if (rf & 2) {
    \u0275\u0275classProp("fuse-vertical-navigation-item-has-subtitle", !!ctx.item.subtitle);
    \u0275\u0275property("ngClass", ctx.item.classes == null ? null : ctx.item.classes.wrapper);
    \u0275\u0275advance(2);
    \u0275\u0275conditional(ctx.item.icon ? 2 : -1);
    \u0275\u0275advance(3);
    \u0275\u0275property("ngClass", ctx.item.classes == null ? null : ctx.item.classes.title);
    \u0275\u0275advance();
    \u0275\u0275textInterpolate1(" ", ctx.item.title, " ");
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx.item.subtitle ? 7 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx.item.badge ? 8 : -1);
    \u0275\u0275advance();
    \u0275\u0275repeater(ctx.item.children);
  }
}, dependencies: () => [
  _FuseVerticalNavigationGroupItemComponent,
  NgClass,
  MatIconModule,
  MatIcon,
  FuseVerticalNavigationBasicItemComponent,
  FuseVerticalNavigationCollapsableItemComponent,
  FuseVerticalNavigationDividerItemComponent,
  FuseVerticalNavigationSpacerItemComponent
], encapsulation: 2, changeDetection: 0 });
var FuseVerticalNavigationGroupItemComponent = _FuseVerticalNavigationGroupItemComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && \u0275setClassDebugInfo(FuseVerticalNavigationGroupItemComponent, { className: "FuseVerticalNavigationGroupItemComponent", filePath: "src\\@fuse\\components\\navigation\\vertical\\components\\group\\group.component.ts", lineNumber: 38 });
})();

// src/@fuse/components/navigation/vertical/components/collapsable/collapsable.component.ts
var _c05 = (a0) => ({ "fuse-vertical-navigation-item-disabled": a0 });
function FuseVerticalNavigationCollapsableItemComponent_Conditional_2_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "mat-icon", 2);
  }
  if (rf & 2) {
    const ctx_r0 = \u0275\u0275nextContext();
    \u0275\u0275property("ngClass", ctx_r0.item.classes == null ? null : ctx_r0.item.classes.icon)("svgIcon", ctx_r0.item.icon);
  }
}
function FuseVerticalNavigationCollapsableItemComponent_Conditional_7_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 6)(1, "span", 5);
    \u0275\u0275text(2);
    \u0275\u0275elementEnd()();
  }
  if (rf & 2) {
    const ctx_r0 = \u0275\u0275nextContext();
    \u0275\u0275advance();
    \u0275\u0275property("ngClass", ctx_r0.item.classes == null ? null : ctx_r0.item.classes.subtitle);
    \u0275\u0275advance();
    \u0275\u0275textInterpolate1(" ", ctx_r0.item.subtitle, " ");
  }
}
function FuseVerticalNavigationCollapsableItemComponent_Conditional_8_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 7)(1, "div", 10);
    \u0275\u0275text(2);
    \u0275\u0275elementEnd()();
  }
  if (rf & 2) {
    const ctx_r0 = \u0275\u0275nextContext();
    \u0275\u0275advance();
    \u0275\u0275property("ngClass", ctx_r0.item.badge.classes);
    \u0275\u0275advance();
    \u0275\u0275textInterpolate1(" ", ctx_r0.item.badge.title, " ");
  }
}
function FuseVerticalNavigationCollapsableItemComponent_Conditional_10_For_2_Conditional_0_Conditional_0_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "fuse-vertical-navigation-basic-item", 11);
  }
  if (rf & 2) {
    const item_r2 = \u0275\u0275nextContext(2).$implicit;
    const ctx_r0 = \u0275\u0275nextContext(2);
    \u0275\u0275property("item", item_r2)("name", ctx_r0.name);
  }
}
function FuseVerticalNavigationCollapsableItemComponent_Conditional_10_For_2_Conditional_0_Conditional_1_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "fuse-vertical-navigation-collapsable-item", 12);
  }
  if (rf & 2) {
    const item_r2 = \u0275\u0275nextContext(2).$implicit;
    const ctx_r0 = \u0275\u0275nextContext(2);
    \u0275\u0275property("item", item_r2)("name", ctx_r0.name)("autoCollapse", ctx_r0.autoCollapse);
  }
}
function FuseVerticalNavigationCollapsableItemComponent_Conditional_10_For_2_Conditional_0_Conditional_2_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "fuse-vertical-navigation-divider-item", 11);
  }
  if (rf & 2) {
    const item_r2 = \u0275\u0275nextContext(2).$implicit;
    const ctx_r0 = \u0275\u0275nextContext(2);
    \u0275\u0275property("item", item_r2)("name", ctx_r0.name);
  }
}
function FuseVerticalNavigationCollapsableItemComponent_Conditional_10_For_2_Conditional_0_Conditional_3_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "fuse-vertical-navigation-group-item", 11);
  }
  if (rf & 2) {
    const item_r2 = \u0275\u0275nextContext(2).$implicit;
    const ctx_r0 = \u0275\u0275nextContext(2);
    \u0275\u0275property("item", item_r2)("name", ctx_r0.name);
  }
}
function FuseVerticalNavigationCollapsableItemComponent_Conditional_10_For_2_Conditional_0_Conditional_4_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "fuse-vertical-navigation-spacer-item", 11);
  }
  if (rf & 2) {
    const item_r2 = \u0275\u0275nextContext(2).$implicit;
    const ctx_r0 = \u0275\u0275nextContext(2);
    \u0275\u0275property("item", item_r2)("name", ctx_r0.name);
  }
}
function FuseVerticalNavigationCollapsableItemComponent_Conditional_10_For_2_Conditional_0_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275template(0, FuseVerticalNavigationCollapsableItemComponent_Conditional_10_For_2_Conditional_0_Conditional_0_Template, 1, 2, "fuse-vertical-navigation-basic-item", 11)(1, FuseVerticalNavigationCollapsableItemComponent_Conditional_10_For_2_Conditional_0_Conditional_1_Template, 1, 3, "fuse-vertical-navigation-collapsable-item", 12)(2, FuseVerticalNavigationCollapsableItemComponent_Conditional_10_For_2_Conditional_0_Conditional_2_Template, 1, 2, "fuse-vertical-navigation-divider-item", 11)(3, FuseVerticalNavigationCollapsableItemComponent_Conditional_10_For_2_Conditional_0_Conditional_3_Template, 1, 2, "fuse-vertical-navigation-group-item", 11)(4, FuseVerticalNavigationCollapsableItemComponent_Conditional_10_For_2_Conditional_0_Conditional_4_Template, 1, 2, "fuse-vertical-navigation-spacer-item", 11);
  }
  if (rf & 2) {
    const item_r2 = \u0275\u0275nextContext().$implicit;
    \u0275\u0275conditional(item_r2.type === "basic" ? 0 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(item_r2.type === "collapsable" ? 1 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(item_r2.type === "divider" ? 2 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(item_r2.type === "group" ? 3 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(item_r2.type === "spacer" ? 4 : -1);
  }
}
function FuseVerticalNavigationCollapsableItemComponent_Conditional_10_For_2_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275template(0, FuseVerticalNavigationCollapsableItemComponent_Conditional_10_For_2_Conditional_0_Template, 5, 5);
  }
  if (rf & 2) {
    const item_r2 = ctx.$implicit;
    \u0275\u0275conditional(item_r2.hidden && !item_r2.hidden(item_r2) || !item_r2.hidden ? 0 : -1);
  }
}
function FuseVerticalNavigationCollapsableItemComponent_Conditional_10_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 9);
    \u0275\u0275repeaterCreate(1, FuseVerticalNavigationCollapsableItemComponent_Conditional_10_For_2_Template, 1, 1, null, null, \u0275\u0275componentInstance().trackByFn, true);
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const ctx_r0 = \u0275\u0275nextContext();
    \u0275\u0275property("@expandCollapse", void 0);
    \u0275\u0275advance();
    \u0275\u0275repeater(ctx_r0.item.children);
  }
}
var _FuseVerticalNavigationCollapsableItemComponent = class _FuseVerticalNavigationCollapsableItemComponent {
  constructor() {
    this._changeDetectorRef = inject(ChangeDetectorRef);
    this._router = inject(Router);
    this._fuseNavigationService = inject(FuseNavigationService);
    this.isCollapsed = true;
    this.isExpanded = false;
    this._unsubscribeAll = new Subject();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Accessors
  // -----------------------------------------------------------------------------------------------------
  /**
   * Host binding for component classes
   */
  get classList() {
    return {
      "fuse-vertical-navigation-item-collapsed": this.isCollapsed,
      "fuse-vertical-navigation-item-expanded": this.isExpanded
    };
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Lifecycle hooks
  // -----------------------------------------------------------------------------------------------------
  /**
   * On init
   */
  ngOnInit() {
    this._fuseVerticalNavigationComponent = this._fuseNavigationService.getComponent(this.name);
    if (this._hasActiveChild(this.item, this._router.url)) {
      this.expand();
    } else {
      if (this.autoCollapse) {
        this.collapse();
      }
    }
    this._fuseVerticalNavigationComponent.onCollapsableItemCollapsed.pipe(takeUntil(this._unsubscribeAll)).subscribe((collapsedItem) => {
      if (collapsedItem === null) {
        return;
      }
      if (this._isChildrenOf(collapsedItem, this.item)) {
        this.collapse();
      }
    });
    if (this.autoCollapse) {
      this._fuseVerticalNavigationComponent.onCollapsableItemExpanded.pipe(takeUntil(this._unsubscribeAll)).subscribe((expandedItem) => {
        if (expandedItem === null) {
          return;
        }
        if (this._isChildrenOf(this.item, expandedItem)) {
          return;
        }
        if (this._hasActiveChild(this.item, this._router.url)) {
          return;
        }
        if (this.item === expandedItem) {
          return;
        }
        this.collapse();
      });
    }
    this._router.events.pipe(filter((event) => event instanceof NavigationEnd), takeUntil(this._unsubscribeAll)).subscribe((event) => {
      if (this._hasActiveChild(this.item, event.urlAfterRedirects)) {
        this.expand();
      } else {
        if (this.autoCollapse) {
          this.collapse();
        }
      }
    });
    this._fuseVerticalNavigationComponent.onRefreshed.pipe(takeUntil(this._unsubscribeAll)).subscribe(() => {
      this._changeDetectorRef.markForCheck();
    });
  }
  /**
   * On destroy
   */
  ngOnDestroy() {
    this._unsubscribeAll.next(null);
    this._unsubscribeAll.complete();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Collapse
   */
  collapse() {
    if (this.item.disabled) {
      return;
    }
    if (this.isCollapsed) {
      return;
    }
    this.isCollapsed = true;
    this.isExpanded = !this.isCollapsed;
    this._changeDetectorRef.markForCheck();
    this._fuseVerticalNavigationComponent.onCollapsableItemCollapsed.next(this.item);
  }
  /**
   * Expand
   */
  expand() {
    if (this.item.disabled) {
      return;
    }
    if (!this.isCollapsed) {
      return;
    }
    this.isCollapsed = false;
    this.isExpanded = !this.isCollapsed;
    this._changeDetectorRef.markForCheck();
    this._fuseVerticalNavigationComponent.onCollapsableItemExpanded.next(this.item);
  }
  /**
   * Toggle collapsable
   */
  toggleCollapsable() {
    if (this.isCollapsed) {
      this.expand();
    } else {
      this.collapse();
    }
  }
  /**
   * Track by function for ngFor loops
   *
   * @param index
   * @param item
   */
  trackByFn(index, item) {
    return item.id || index;
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Private methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Check if the given item has the given url
   * in one of its children
   *
   * @param item
   * @param currentUrl
   * @private
   */
  _hasActiveChild(item, currentUrl) {
    const children = item.children;
    if (!children) {
      return false;
    }
    for (const child of children) {
      if (child.children) {
        if (this._hasActiveChild(child, currentUrl)) {
          return true;
        }
      }
      if (child.link && this._router.isActive(child.link, child.exactMatch || false)) {
        return true;
      }
    }
    return false;
  }
  /**
   * Check if this is a children
   * of the given item
   *
   * @param parent
   * @param item
   * @private
   */
  _isChildrenOf(parent, item) {
    const children = parent.children;
    if (!children) {
      return false;
    }
    if (children.indexOf(item) > -1) {
      return true;
    }
    for (const child of children) {
      if (child.children) {
        if (this._isChildrenOf(child, item)) {
          return true;
        }
      }
    }
    return false;
  }
};
_FuseVerticalNavigationCollapsableItemComponent.\u0275fac = function FuseVerticalNavigationCollapsableItemComponent_Factory(t) {
  return new (t || _FuseVerticalNavigationCollapsableItemComponent)();
};
_FuseVerticalNavigationCollapsableItemComponent.\u0275cmp = /* @__PURE__ */ \u0275\u0275defineComponent({ type: _FuseVerticalNavigationCollapsableItemComponent, selectors: [["fuse-vertical-navigation-collapsable-item"]], hostVars: 2, hostBindings: function FuseVerticalNavigationCollapsableItemComponent_HostBindings(rf, ctx) {
  if (rf & 2) {
    \u0275\u0275classMap(ctx.classList);
  }
}, inputs: { autoCollapse: "autoCollapse", item: "item", name: "name" }, standalone: true, features: [\u0275\u0275StandaloneFeature], decls: 11, vars: 14, consts: [[1, "fuse-vertical-navigation-item-wrapper", 3, "ngClass"], [1, "fuse-vertical-navigation-item", 3, "click", "ngClass", "matTooltip"], [1, "fuse-vertical-navigation-item-icon", 3, "ngClass", "svgIcon"], [1, "fuse-vertical-navigation-item-title-wrapper"], [1, "fuse-vertical-navigation-item-title"], [3, "ngClass"], [1, "fuse-vertical-navigation-item-subtitle"], [1, "fuse-vertical-navigation-item-badge"], [1, "fuse-vertical-navigation-item-arrow", "icon-size-4", 3, "svgIcon"], [1, "fuse-vertical-navigation-item-children"], [1, "fuse-vertical-navigation-item-badge-content", 3, "ngClass"], [3, "item", "name"], [3, "item", "name", "autoCollapse"]], template: function FuseVerticalNavigationCollapsableItemComponent_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 0)(1, "div", 1);
    \u0275\u0275listener("click", function FuseVerticalNavigationCollapsableItemComponent_Template_div_click_1_listener() {
      return ctx.toggleCollapsable();
    });
    \u0275\u0275template(2, FuseVerticalNavigationCollapsableItemComponent_Conditional_2_Template, 1, 2, "mat-icon", 2);
    \u0275\u0275elementStart(3, "div", 3)(4, "div", 4)(5, "span", 5);
    \u0275\u0275text(6);
    \u0275\u0275elementEnd()();
    \u0275\u0275template(7, FuseVerticalNavigationCollapsableItemComponent_Conditional_7_Template, 3, 2, "div", 6);
    \u0275\u0275elementEnd();
    \u0275\u0275template(8, FuseVerticalNavigationCollapsableItemComponent_Conditional_8_Template, 3, 2, "div", 7);
    \u0275\u0275element(9, "mat-icon", 8);
    \u0275\u0275elementEnd()();
    \u0275\u0275template(10, FuseVerticalNavigationCollapsableItemComponent_Conditional_10_Template, 3, 1, "div", 9);
  }
  if (rf & 2) {
    \u0275\u0275classProp("fuse-vertical-navigation-item-has-subtitle", !!ctx.item.subtitle);
    \u0275\u0275property("ngClass", ctx.item.classes == null ? null : ctx.item.classes.wrapper);
    \u0275\u0275advance();
    \u0275\u0275property("ngClass", \u0275\u0275pureFunction1(12, _c05, ctx.item.disabled))("matTooltip", ctx.item.tooltip || "");
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx.item.icon ? 2 : -1);
    \u0275\u0275advance(3);
    \u0275\u0275property("ngClass", ctx.item.classes == null ? null : ctx.item.classes.title);
    \u0275\u0275advance();
    \u0275\u0275textInterpolate1(" ", ctx.item.title, " ");
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx.item.subtitle ? 7 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx.item.badge ? 8 : -1);
    \u0275\u0275advance();
    \u0275\u0275property("svgIcon", "heroicons_solid:chevron-right");
    \u0275\u0275advance();
    \u0275\u0275conditional(!ctx.isCollapsed ? 10 : -1);
  }
}, dependencies: () => [
  _FuseVerticalNavigationCollapsableItemComponent,
  NgClass,
  MatTooltipModule,
  MatTooltip,
  MatIconModule,
  MatIcon,
  FuseVerticalNavigationBasicItemComponent,
  FuseVerticalNavigationDividerItemComponent,
  FuseVerticalNavigationGroupItemComponent,
  FuseVerticalNavigationSpacerItemComponent
], encapsulation: 2, data: { animation: fuseAnimations }, changeDetection: 0 });
var FuseVerticalNavigationCollapsableItemComponent = _FuseVerticalNavigationCollapsableItemComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && \u0275setClassDebugInfo(FuseVerticalNavigationCollapsableItemComponent, { className: "FuseVerticalNavigationCollapsableItemComponent", filePath: "src\\@fuse\\components\\navigation\\vertical\\components\\collapsable\\collapsable.component.ts", lineNumber: 44 });
})();

// src/@fuse/components/navigation/vertical/components/aside/aside.component.ts
var _c06 = (a0, a1, a2) => ({ "fuse-vertical-navigation-item-active": a0, "fuse-vertical-navigation-item-disabled": a1, "fuse-vertical-navigation-item-active-forced": a2 });
function FuseVerticalNavigationAsideItemComponent_Conditional_2_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "mat-icon", 2);
  }
  if (rf & 2) {
    const ctx_r0 = \u0275\u0275nextContext();
    \u0275\u0275property("ngClass", ctx_r0.item.classes == null ? null : ctx_r0.item.classes.icon)("svgIcon", ctx_r0.item.icon);
  }
}
function FuseVerticalNavigationAsideItemComponent_Conditional_7_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 6)(1, "span", 5);
    \u0275\u0275text(2);
    \u0275\u0275elementEnd()();
  }
  if (rf & 2) {
    const ctx_r0 = \u0275\u0275nextContext();
    \u0275\u0275advance();
    \u0275\u0275property("ngClass", ctx_r0.item.classes == null ? null : ctx_r0.item.classes.subtitle);
    \u0275\u0275advance();
    \u0275\u0275textInterpolate1(" ", ctx_r0.item.subtitle, " ");
  }
}
function FuseVerticalNavigationAsideItemComponent_Conditional_8_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 7)(1, "div", 9);
    \u0275\u0275text(2);
    \u0275\u0275elementEnd()();
  }
  if (rf & 2) {
    const ctx_r0 = \u0275\u0275nextContext();
    \u0275\u0275advance();
    \u0275\u0275property("ngClass", ctx_r0.item.badge.classes);
    \u0275\u0275advance();
    \u0275\u0275textInterpolate1(" ", ctx_r0.item.badge.title, " ");
  }
}
function FuseVerticalNavigationAsideItemComponent_Conditional_9_For_2_Conditional_0_Conditional_0_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "fuse-vertical-navigation-basic-item", 10);
  }
  if (rf & 2) {
    const item_r2 = \u0275\u0275nextContext(2).$implicit;
    const ctx_r0 = \u0275\u0275nextContext(2);
    \u0275\u0275property("item", item_r2)("name", ctx_r0.name);
  }
}
function FuseVerticalNavigationAsideItemComponent_Conditional_9_For_2_Conditional_0_Conditional_1_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "fuse-vertical-navigation-collapsable-item", 11);
  }
  if (rf & 2) {
    const item_r2 = \u0275\u0275nextContext(2).$implicit;
    const ctx_r0 = \u0275\u0275nextContext(2);
    \u0275\u0275property("item", item_r2)("name", ctx_r0.name)("autoCollapse", ctx_r0.autoCollapse);
  }
}
function FuseVerticalNavigationAsideItemComponent_Conditional_9_For_2_Conditional_0_Conditional_2_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "fuse-vertical-navigation-divider-item", 10);
  }
  if (rf & 2) {
    const item_r2 = \u0275\u0275nextContext(2).$implicit;
    const ctx_r0 = \u0275\u0275nextContext(2);
    \u0275\u0275property("item", item_r2)("name", ctx_r0.name);
  }
}
function FuseVerticalNavigationAsideItemComponent_Conditional_9_For_2_Conditional_0_Conditional_3_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "fuse-vertical-navigation-group-item", 10);
  }
  if (rf & 2) {
    const item_r2 = \u0275\u0275nextContext(2).$implicit;
    const ctx_r0 = \u0275\u0275nextContext(2);
    \u0275\u0275property("item", item_r2)("name", ctx_r0.name);
  }
}
function FuseVerticalNavigationAsideItemComponent_Conditional_9_For_2_Conditional_0_Conditional_4_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "fuse-vertical-navigation-spacer-item", 10);
  }
  if (rf & 2) {
    const item_r2 = \u0275\u0275nextContext(2).$implicit;
    const ctx_r0 = \u0275\u0275nextContext(2);
    \u0275\u0275property("item", item_r2)("name", ctx_r0.name);
  }
}
function FuseVerticalNavigationAsideItemComponent_Conditional_9_For_2_Conditional_0_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275template(0, FuseVerticalNavigationAsideItemComponent_Conditional_9_For_2_Conditional_0_Conditional_0_Template, 1, 2, "fuse-vertical-navigation-basic-item", 10)(1, FuseVerticalNavigationAsideItemComponent_Conditional_9_For_2_Conditional_0_Conditional_1_Template, 1, 3, "fuse-vertical-navigation-collapsable-item", 11)(2, FuseVerticalNavigationAsideItemComponent_Conditional_9_For_2_Conditional_0_Conditional_2_Template, 1, 2, "fuse-vertical-navigation-divider-item", 10)(3, FuseVerticalNavigationAsideItemComponent_Conditional_9_For_2_Conditional_0_Conditional_3_Template, 1, 2, "fuse-vertical-navigation-group-item", 10)(4, FuseVerticalNavigationAsideItemComponent_Conditional_9_For_2_Conditional_0_Conditional_4_Template, 1, 2, "fuse-vertical-navigation-spacer-item", 10);
  }
  if (rf & 2) {
    const item_r2 = \u0275\u0275nextContext().$implicit;
    \u0275\u0275conditional(item_r2.type === "basic" ? 0 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(item_r2.type === "collapsable" ? 1 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(item_r2.type === "divider" ? 2 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(item_r2.type === "group" ? 3 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(item_r2.type === "spacer" ? 4 : -1);
  }
}
function FuseVerticalNavigationAsideItemComponent_Conditional_9_For_2_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275template(0, FuseVerticalNavigationAsideItemComponent_Conditional_9_For_2_Conditional_0_Template, 5, 5);
  }
  if (rf & 2) {
    const item_r2 = ctx.$implicit;
    \u0275\u0275conditional(item_r2.hidden && !item_r2.hidden(item_r2) || !item_r2.hidden ? 0 : -1);
  }
}
function FuseVerticalNavigationAsideItemComponent_Conditional_9_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 8);
    \u0275\u0275repeaterCreate(1, FuseVerticalNavigationAsideItemComponent_Conditional_9_For_2_Template, 1, 1, null, null, \u0275\u0275componentInstance().trackByFn, true);
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const ctx_r0 = \u0275\u0275nextContext();
    \u0275\u0275advance();
    \u0275\u0275repeater(ctx_r0.item.children);
  }
}
var _FuseVerticalNavigationAsideItemComponent = class _FuseVerticalNavigationAsideItemComponent {
  constructor() {
    this._changeDetectorRef = inject(ChangeDetectorRef);
    this._router = inject(Router);
    this._fuseNavigationService = inject(FuseNavigationService);
    this.active = false;
    this._unsubscribeAll = new Subject();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Lifecycle hooks
  // -----------------------------------------------------------------------------------------------------
  /**
   * On changes
   *
   * @param changes
   */
  ngOnChanges(changes) {
    if ("activeItemId" in changes) {
      this._markIfActive(this._router.url);
    }
  }
  /**
   * On init
   */
  ngOnInit() {
    this._markIfActive(this._router.url);
    this._router.events.pipe(filter((event) => event instanceof NavigationEnd), takeUntil(this._unsubscribeAll)).subscribe((event) => {
      this._markIfActive(event.urlAfterRedirects);
    });
    this._fuseVerticalNavigationComponent = this._fuseNavigationService.getComponent(this.name);
    this._fuseVerticalNavigationComponent.onRefreshed.pipe(takeUntil(this._unsubscribeAll)).subscribe(() => {
      this._changeDetectorRef.markForCheck();
    });
  }
  /**
   * On destroy
   */
  ngOnDestroy() {
    this._unsubscribeAll.next(null);
    this._unsubscribeAll.complete();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Track by function for ngFor loops
   *
   * @param index
   * @param item
   */
  trackByFn(index, item) {
    return item.id || index;
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Private methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Check if the given item has the given url
   * in one of its children
   *
   * @param item
   * @param currentUrl
   * @private
   */
  _hasActiveChild(item, currentUrl) {
    const children = item.children;
    if (!children) {
      return false;
    }
    for (const child of children) {
      if (child.children) {
        if (this._hasActiveChild(child, currentUrl)) {
          return true;
        }
      }
      if (child.type !== "basic") {
        continue;
      }
      if (child.link && this._router.isActive(child.link, child.exactMatch || false)) {
        return true;
      }
    }
    return false;
  }
  /**
   * Decide and mark if the item is active
   *
   * @private
   */
  _markIfActive(currentUrl) {
    this.active = this.activeItemId === this.item.id;
    if (this._hasActiveChild(this.item, currentUrl)) {
      this.active = true;
    }
    this._changeDetectorRef.markForCheck();
  }
};
_FuseVerticalNavigationAsideItemComponent.\u0275fac = function FuseVerticalNavigationAsideItemComponent_Factory(t) {
  return new (t || _FuseVerticalNavigationAsideItemComponent)();
};
_FuseVerticalNavigationAsideItemComponent.\u0275cmp = /* @__PURE__ */ \u0275\u0275defineComponent({ type: _FuseVerticalNavigationAsideItemComponent, selectors: [["fuse-vertical-navigation-aside-item"]], inputs: { activeItemId: "activeItemId", autoCollapse: "autoCollapse", item: "item", name: "name", skipChildren: "skipChildren" }, standalone: true, features: [\u0275\u0275NgOnChangesFeature, \u0275\u0275StandaloneFeature], decls: 10, vars: 15, consts: [[1, "fuse-vertical-navigation-item-wrapper", 3, "ngClass"], [1, "fuse-vertical-navigation-item", 3, "ngClass", "matTooltip"], [1, "fuse-vertical-navigation-item-icon", 3, "ngClass", "svgIcon"], [1, "fuse-vertical-navigation-item-title-wrapper"], [1, "fuse-vertical-navigation-item-title"], [3, "ngClass"], [1, "fuse-vertical-navigation-item-subtitle"], [1, "fuse-vertical-navigation-item-badge"], [1, "fuse-vertical-navigation-item-children"], [1, "fuse-vertical-navigation-item-badge-content", 3, "ngClass"], [3, "item", "name"], [3, "item", "name", "autoCollapse"]], template: function FuseVerticalNavigationAsideItemComponent_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 0)(1, "div", 1);
    \u0275\u0275template(2, FuseVerticalNavigationAsideItemComponent_Conditional_2_Template, 1, 2, "mat-icon", 2);
    \u0275\u0275elementStart(3, "div", 3)(4, "div", 4)(5, "span", 5);
    \u0275\u0275text(6);
    \u0275\u0275elementEnd()();
    \u0275\u0275template(7, FuseVerticalNavigationAsideItemComponent_Conditional_7_Template, 3, 2, "div", 6);
    \u0275\u0275elementEnd();
    \u0275\u0275template(8, FuseVerticalNavigationAsideItemComponent_Conditional_8_Template, 3, 2, "div", 7);
    \u0275\u0275elementEnd()();
    \u0275\u0275template(9, FuseVerticalNavigationAsideItemComponent_Conditional_9_Template, 3, 0, "div", 8);
  }
  if (rf & 2) {
    \u0275\u0275classProp("fuse-vertical-navigation-item-has-subtitle", !!ctx.item.subtitle);
    \u0275\u0275property("ngClass", ctx.item.classes == null ? null : ctx.item.classes.wrapper);
    \u0275\u0275advance();
    \u0275\u0275property("ngClass", \u0275\u0275pureFunction3(11, _c06, ctx.active, ctx.item.disabled, ctx.item.active))("matTooltip", ctx.item.tooltip || "");
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx.item.icon ? 2 : -1);
    \u0275\u0275advance(3);
    \u0275\u0275property("ngClass", ctx.item.classes == null ? null : ctx.item.classes.title);
    \u0275\u0275advance();
    \u0275\u0275textInterpolate1(" ", ctx.item.title, " ");
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx.item.subtitle ? 7 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx.item.badge ? 8 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(!ctx.skipChildren ? 9 : -1);
  }
}, dependencies: [
  NgClass,
  MatTooltipModule,
  MatTooltip,
  MatIconModule,
  MatIcon,
  FuseVerticalNavigationBasicItemComponent,
  FuseVerticalNavigationCollapsableItemComponent,
  FuseVerticalNavigationDividerItemComponent,
  FuseVerticalNavigationGroupItemComponent,
  FuseVerticalNavigationSpacerItemComponent
], encapsulation: 2, changeDetection: 0 });
var FuseVerticalNavigationAsideItemComponent = _FuseVerticalNavigationAsideItemComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && \u0275setClassDebugInfo(FuseVerticalNavigationAsideItemComponent, { className: "FuseVerticalNavigationAsideItemComponent", filePath: "src\\@fuse\\components\\navigation\\vertical\\components\\aside\\aside.component.ts", lineNumber: 43 });
})();

// src/@fuse/directives/scrollbar/scrollbar.types.ts
var ScrollbarGeometry = class {
  constructor(x, y, w, h) {
    this.x = x;
    this.y = y;
    this.w = w;
    this.h = h;
  }
};
var ScrollbarPosition = class {
  constructor(x, y) {
    this.x = x;
    this.y = y;
  }
};

// node_modules/perfect-scrollbar/dist/perfect-scrollbar.esm.js
function get(element) {
  return getComputedStyle(element);
}
function set(element, obj) {
  for (var key in obj) {
    var val = obj[key];
    if (typeof val === "number") {
      val = val + "px";
    }
    element.style[key] = val;
  }
  return element;
}
function div(className) {
  var div2 = document.createElement("div");
  div2.className = className;
  return div2;
}
var elMatches = typeof Element !== "undefined" && (Element.prototype.matches || Element.prototype.webkitMatchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector);
function matches(element, query) {
  if (!elMatches) {
    throw new Error("No element matching method supported");
  }
  return elMatches.call(element, query);
}
function remove(element) {
  if (element.remove) {
    element.remove();
  } else {
    if (element.parentNode) {
      element.parentNode.removeChild(element);
    }
  }
}
function queryChildren(element, selector) {
  return Array.prototype.filter.call(
    element.children,
    function(child) {
      return matches(child, selector);
    }
  );
}
var cls = {
  main: "ps",
  rtl: "ps__rtl",
  element: {
    thumb: function(x) {
      return "ps__thumb-" + x;
    },
    rail: function(x) {
      return "ps__rail-" + x;
    },
    consuming: "ps__child--consume"
  },
  state: {
    focus: "ps--focus",
    clicking: "ps--clicking",
    active: function(x) {
      return "ps--active-" + x;
    },
    scrolling: function(x) {
      return "ps--scrolling-" + x;
    }
  }
};
var scrollingClassTimeout = { x: null, y: null };
function addScrollingClass(i, x) {
  var classList = i.element.classList;
  var className = cls.state.scrolling(x);
  if (classList.contains(className)) {
    clearTimeout(scrollingClassTimeout[x]);
  } else {
    classList.add(className);
  }
}
function removeScrollingClass(i, x) {
  scrollingClassTimeout[x] = setTimeout(
    function() {
      return i.isAlive && i.element.classList.remove(cls.state.scrolling(x));
    },
    i.settings.scrollingThreshold
  );
}
function setScrollingClassInstantly(i, x) {
  addScrollingClass(i, x);
  removeScrollingClass(i, x);
}
var EventElement = function EventElement2(element) {
  this.element = element;
  this.handlers = {};
};
var prototypeAccessors = { isEmpty: { configurable: true } };
EventElement.prototype.bind = function bind(eventName, handler) {
  if (typeof this.handlers[eventName] === "undefined") {
    this.handlers[eventName] = [];
  }
  this.handlers[eventName].push(handler);
  this.element.addEventListener(eventName, handler, false);
};
EventElement.prototype.unbind = function unbind(eventName, target) {
  var this$1 = this;
  this.handlers[eventName] = this.handlers[eventName].filter(function(handler) {
    if (target && handler !== target) {
      return true;
    }
    this$1.element.removeEventListener(eventName, handler, false);
    return false;
  });
};
EventElement.prototype.unbindAll = function unbindAll() {
  for (var name in this.handlers) {
    this.unbind(name);
  }
};
prototypeAccessors.isEmpty.get = function() {
  var this$1 = this;
  return Object.keys(this.handlers).every(
    function(key) {
      return this$1.handlers[key].length === 0;
    }
  );
};
Object.defineProperties(EventElement.prototype, prototypeAccessors);
var EventManager = function EventManager2() {
  this.eventElements = [];
};
EventManager.prototype.eventElement = function eventElement(element) {
  var ee = this.eventElements.filter(function(ee2) {
    return ee2.element === element;
  })[0];
  if (!ee) {
    ee = new EventElement(element);
    this.eventElements.push(ee);
  }
  return ee;
};
EventManager.prototype.bind = function bind2(element, eventName, handler) {
  this.eventElement(element).bind(eventName, handler);
};
EventManager.prototype.unbind = function unbind2(element, eventName, handler) {
  var ee = this.eventElement(element);
  ee.unbind(eventName, handler);
  if (ee.isEmpty) {
    this.eventElements.splice(this.eventElements.indexOf(ee), 1);
  }
};
EventManager.prototype.unbindAll = function unbindAll2() {
  this.eventElements.forEach(function(e) {
    return e.unbindAll();
  });
  this.eventElements = [];
};
EventManager.prototype.once = function once(element, eventName, handler) {
  var ee = this.eventElement(element);
  var onceHandler = function(evt) {
    ee.unbind(eventName, onceHandler);
    handler(evt);
  };
  ee.bind(eventName, onceHandler);
};
function createEvent(name) {
  if (typeof window.CustomEvent === "function") {
    return new CustomEvent(name);
  } else {
    var evt = document.createEvent("CustomEvent");
    evt.initCustomEvent(name, false, false, void 0);
    return evt;
  }
}
function processScrollDiff(i, axis, diff, useScrollingClass, forceFireReachEvent) {
  if (useScrollingClass === void 0) useScrollingClass = true;
  if (forceFireReachEvent === void 0) forceFireReachEvent = false;
  var fields;
  if (axis === "top") {
    fields = [
      "contentHeight",
      "containerHeight",
      "scrollTop",
      "y",
      "up",
      "down"
    ];
  } else if (axis === "left") {
    fields = [
      "contentWidth",
      "containerWidth",
      "scrollLeft",
      "x",
      "left",
      "right"
    ];
  } else {
    throw new Error("A proper axis should be provided");
  }
  processScrollDiff$1(i, diff, fields, useScrollingClass, forceFireReachEvent);
}
function processScrollDiff$1(i, diff, ref, useScrollingClass, forceFireReachEvent) {
  var contentHeight = ref[0];
  var containerHeight = ref[1];
  var scrollTop = ref[2];
  var y = ref[3];
  var up = ref[4];
  var down = ref[5];
  if (useScrollingClass === void 0) useScrollingClass = true;
  if (forceFireReachEvent === void 0) forceFireReachEvent = false;
  var element = i.element;
  i.reach[y] = null;
  if (element[scrollTop] < 1) {
    i.reach[y] = "start";
  }
  if (element[scrollTop] > i[contentHeight] - i[containerHeight] - 1) {
    i.reach[y] = "end";
  }
  if (diff) {
    element.dispatchEvent(createEvent("ps-scroll-" + y));
    if (diff < 0) {
      element.dispatchEvent(createEvent("ps-scroll-" + up));
    } else if (diff > 0) {
      element.dispatchEvent(createEvent("ps-scroll-" + down));
    }
    if (useScrollingClass) {
      setScrollingClassInstantly(i, y);
    }
  }
  if (i.reach[y] && (diff || forceFireReachEvent)) {
    element.dispatchEvent(createEvent("ps-" + y + "-reach-" + i.reach[y]));
  }
}
function toInt(x) {
  return parseInt(x, 10) || 0;
}
function isEditable(el) {
  return matches(el, "input,[contenteditable]") || matches(el, "select,[contenteditable]") || matches(el, "textarea,[contenteditable]") || matches(el, "button,[contenteditable]");
}
function outerWidth(element) {
  var styles = get(element);
  return toInt(styles.width) + toInt(styles.paddingLeft) + toInt(styles.paddingRight) + toInt(styles.borderLeftWidth) + toInt(styles.borderRightWidth);
}
var env = {
  isWebKit: typeof document !== "undefined" && "WebkitAppearance" in document.documentElement.style,
  supportsTouch: typeof window !== "undefined" && ("ontouchstart" in window || "maxTouchPoints" in window.navigator && window.navigator.maxTouchPoints > 0 || window.DocumentTouch && document instanceof window.DocumentTouch),
  supportsIePointer: typeof navigator !== "undefined" && navigator.msMaxTouchPoints,
  isChrome: typeof navigator !== "undefined" && /Chrome/i.test(navigator && navigator.userAgent)
};
function updateGeometry(i) {
  var element = i.element;
  var roundedScrollTop = Math.floor(element.scrollTop);
  var rect = element.getBoundingClientRect();
  i.containerWidth = Math.round(rect.width);
  i.containerHeight = Math.round(rect.height);
  i.contentWidth = element.scrollWidth;
  i.contentHeight = element.scrollHeight;
  if (!element.contains(i.scrollbarXRail)) {
    queryChildren(element, cls.element.rail("x")).forEach(
      function(el) {
        return remove(el);
      }
    );
    element.appendChild(i.scrollbarXRail);
  }
  if (!element.contains(i.scrollbarYRail)) {
    queryChildren(element, cls.element.rail("y")).forEach(
      function(el) {
        return remove(el);
      }
    );
    element.appendChild(i.scrollbarYRail);
  }
  if (!i.settings.suppressScrollX && i.containerWidth + i.settings.scrollXMarginOffset < i.contentWidth) {
    i.scrollbarXActive = true;
    i.railXWidth = i.containerWidth - i.railXMarginWidth;
    i.railXRatio = i.containerWidth / i.railXWidth;
    i.scrollbarXWidth = getThumbSize(
      i,
      toInt(i.railXWidth * i.containerWidth / i.contentWidth)
    );
    i.scrollbarXLeft = toInt(
      (i.negativeScrollAdjustment + element.scrollLeft) * (i.railXWidth - i.scrollbarXWidth) / (i.contentWidth - i.containerWidth)
    );
  } else {
    i.scrollbarXActive = false;
  }
  if (!i.settings.suppressScrollY && i.containerHeight + i.settings.scrollYMarginOffset < i.contentHeight) {
    i.scrollbarYActive = true;
    i.railYHeight = i.containerHeight - i.railYMarginHeight;
    i.railYRatio = i.containerHeight / i.railYHeight;
    i.scrollbarYHeight = getThumbSize(
      i,
      toInt(i.railYHeight * i.containerHeight / i.contentHeight)
    );
    i.scrollbarYTop = toInt(
      roundedScrollTop * (i.railYHeight - i.scrollbarYHeight) / (i.contentHeight - i.containerHeight)
    );
  } else {
    i.scrollbarYActive = false;
  }
  if (i.scrollbarXLeft >= i.railXWidth - i.scrollbarXWidth) {
    i.scrollbarXLeft = i.railXWidth - i.scrollbarXWidth;
  }
  if (i.scrollbarYTop >= i.railYHeight - i.scrollbarYHeight) {
    i.scrollbarYTop = i.railYHeight - i.scrollbarYHeight;
  }
  updateCss(element, i);
  if (i.scrollbarXActive) {
    element.classList.add(cls.state.active("x"));
  } else {
    element.classList.remove(cls.state.active("x"));
    i.scrollbarXWidth = 0;
    i.scrollbarXLeft = 0;
    element.scrollLeft = i.isRtl === true ? i.contentWidth : 0;
  }
  if (i.scrollbarYActive) {
    element.classList.add(cls.state.active("y"));
  } else {
    element.classList.remove(cls.state.active("y"));
    i.scrollbarYHeight = 0;
    i.scrollbarYTop = 0;
    element.scrollTop = 0;
  }
}
function getThumbSize(i, thumbSize) {
  if (i.settings.minScrollbarLength) {
    thumbSize = Math.max(thumbSize, i.settings.minScrollbarLength);
  }
  if (i.settings.maxScrollbarLength) {
    thumbSize = Math.min(thumbSize, i.settings.maxScrollbarLength);
  }
  return thumbSize;
}
function updateCss(element, i) {
  var xRailOffset = { width: i.railXWidth };
  var roundedScrollTop = Math.floor(element.scrollTop);
  if (i.isRtl) {
    xRailOffset.left = i.negativeScrollAdjustment + element.scrollLeft + i.containerWidth - i.contentWidth;
  } else {
    xRailOffset.left = element.scrollLeft;
  }
  if (i.isScrollbarXUsingBottom) {
    xRailOffset.bottom = i.scrollbarXBottom - roundedScrollTop;
  } else {
    xRailOffset.top = i.scrollbarXTop + roundedScrollTop;
  }
  set(i.scrollbarXRail, xRailOffset);
  var yRailOffset = { top: roundedScrollTop, height: i.railYHeight };
  if (i.isScrollbarYUsingRight) {
    if (i.isRtl) {
      yRailOffset.right = i.contentWidth - (i.negativeScrollAdjustment + element.scrollLeft) - i.scrollbarYRight - i.scrollbarYOuterWidth - 9;
    } else {
      yRailOffset.right = i.scrollbarYRight - element.scrollLeft;
    }
  } else {
    if (i.isRtl) {
      yRailOffset.left = i.negativeScrollAdjustment + element.scrollLeft + i.containerWidth * 2 - i.contentWidth - i.scrollbarYLeft - i.scrollbarYOuterWidth;
    } else {
      yRailOffset.left = i.scrollbarYLeft + element.scrollLeft;
    }
  }
  set(i.scrollbarYRail, yRailOffset);
  set(i.scrollbarX, {
    left: i.scrollbarXLeft,
    width: i.scrollbarXWidth - i.railBorderXWidth
  });
  set(i.scrollbarY, {
    top: i.scrollbarYTop,
    height: i.scrollbarYHeight - i.railBorderYWidth
  });
}
function clickRail(i) {
  var element = i.element;
  i.event.bind(i.scrollbarY, "mousedown", function(e) {
    return e.stopPropagation();
  });
  i.event.bind(i.scrollbarYRail, "mousedown", function(e) {
    var positionTop = e.pageY - window.pageYOffset - i.scrollbarYRail.getBoundingClientRect().top;
    var direction = positionTop > i.scrollbarYTop ? 1 : -1;
    i.element.scrollTop += direction * i.containerHeight;
    updateGeometry(i);
    e.stopPropagation();
  });
  i.event.bind(i.scrollbarX, "mousedown", function(e) {
    return e.stopPropagation();
  });
  i.event.bind(i.scrollbarXRail, "mousedown", function(e) {
    var positionLeft = e.pageX - window.pageXOffset - i.scrollbarXRail.getBoundingClientRect().left;
    var direction = positionLeft > i.scrollbarXLeft ? 1 : -1;
    i.element.scrollLeft += direction * i.containerWidth;
    updateGeometry(i);
    e.stopPropagation();
  });
}
function dragThumb(i) {
  bindMouseScrollHandler(i, [
    "containerWidth",
    "contentWidth",
    "pageX",
    "railXWidth",
    "scrollbarX",
    "scrollbarXWidth",
    "scrollLeft",
    "x",
    "scrollbarXRail"
  ]);
  bindMouseScrollHandler(i, [
    "containerHeight",
    "contentHeight",
    "pageY",
    "railYHeight",
    "scrollbarY",
    "scrollbarYHeight",
    "scrollTop",
    "y",
    "scrollbarYRail"
  ]);
}
function bindMouseScrollHandler(i, ref) {
  var containerHeight = ref[0];
  var contentHeight = ref[1];
  var pageY = ref[2];
  var railYHeight = ref[3];
  var scrollbarY = ref[4];
  var scrollbarYHeight = ref[5];
  var scrollTop = ref[6];
  var y = ref[7];
  var scrollbarYRail = ref[8];
  var element = i.element;
  var startingScrollTop = null;
  var startingMousePageY = null;
  var scrollBy = null;
  function mouseMoveHandler(e) {
    if (e.touches && e.touches[0]) {
      e[pageY] = e.touches[0].pageY;
    }
    element[scrollTop] = startingScrollTop + scrollBy * (e[pageY] - startingMousePageY);
    addScrollingClass(i, y);
    updateGeometry(i);
    e.stopPropagation();
    if (e.type.startsWith("touch") && e.changedTouches.length > 1) {
      e.preventDefault();
    }
  }
  function mouseUpHandler() {
    removeScrollingClass(i, y);
    i[scrollbarYRail].classList.remove(cls.state.clicking);
    i.event.unbind(i.ownerDocument, "mousemove", mouseMoveHandler);
  }
  function bindMoves(e, touchMode) {
    startingScrollTop = element[scrollTop];
    if (touchMode && e.touches) {
      e[pageY] = e.touches[0].pageY;
    }
    startingMousePageY = e[pageY];
    scrollBy = (i[contentHeight] - i[containerHeight]) / (i[railYHeight] - i[scrollbarYHeight]);
    if (!touchMode) {
      i.event.bind(i.ownerDocument, "mousemove", mouseMoveHandler);
      i.event.once(i.ownerDocument, "mouseup", mouseUpHandler);
      e.preventDefault();
    } else {
      i.event.bind(i.ownerDocument, "touchmove", mouseMoveHandler);
    }
    i[scrollbarYRail].classList.add(cls.state.clicking);
    e.stopPropagation();
  }
  i.event.bind(i[scrollbarY], "mousedown", function(e) {
    bindMoves(e);
  });
  i.event.bind(i[scrollbarY], "touchstart", function(e) {
    bindMoves(e, true);
  });
}
function keyboard(i) {
  var element = i.element;
  var elementHovered = function() {
    return matches(element, ":hover");
  };
  var scrollbarFocused = function() {
    return matches(i.scrollbarX, ":focus") || matches(i.scrollbarY, ":focus");
  };
  function shouldPreventDefault(deltaX, deltaY) {
    var scrollTop = Math.floor(element.scrollTop);
    if (deltaX === 0) {
      if (!i.scrollbarYActive) {
        return false;
      }
      if (scrollTop === 0 && deltaY > 0 || scrollTop >= i.contentHeight - i.containerHeight && deltaY < 0) {
        return !i.settings.wheelPropagation;
      }
    }
    var scrollLeft = element.scrollLeft;
    if (deltaY === 0) {
      if (!i.scrollbarXActive) {
        return false;
      }
      if (scrollLeft === 0 && deltaX < 0 || scrollLeft >= i.contentWidth - i.containerWidth && deltaX > 0) {
        return !i.settings.wheelPropagation;
      }
    }
    return true;
  }
  i.event.bind(i.ownerDocument, "keydown", function(e) {
    if (e.isDefaultPrevented && e.isDefaultPrevented() || e.defaultPrevented) {
      return;
    }
    if (!elementHovered() && !scrollbarFocused()) {
      return;
    }
    var activeElement = document.activeElement ? document.activeElement : i.ownerDocument.activeElement;
    if (activeElement) {
      if (activeElement.tagName === "IFRAME") {
        activeElement = activeElement.contentDocument.activeElement;
      } else {
        while (activeElement.shadowRoot) {
          activeElement = activeElement.shadowRoot.activeElement;
        }
      }
      if (isEditable(activeElement)) {
        return;
      }
    }
    var deltaX = 0;
    var deltaY = 0;
    switch (e.which) {
      case 37:
        if (e.metaKey) {
          deltaX = -i.contentWidth;
        } else if (e.altKey) {
          deltaX = -i.containerWidth;
        } else {
          deltaX = -30;
        }
        break;
      case 38:
        if (e.metaKey) {
          deltaY = i.contentHeight;
        } else if (e.altKey) {
          deltaY = i.containerHeight;
        } else {
          deltaY = 30;
        }
        break;
      case 39:
        if (e.metaKey) {
          deltaX = i.contentWidth;
        } else if (e.altKey) {
          deltaX = i.containerWidth;
        } else {
          deltaX = 30;
        }
        break;
      case 40:
        if (e.metaKey) {
          deltaY = -i.contentHeight;
        } else if (e.altKey) {
          deltaY = -i.containerHeight;
        } else {
          deltaY = -30;
        }
        break;
      case 32:
        if (e.shiftKey) {
          deltaY = i.containerHeight;
        } else {
          deltaY = -i.containerHeight;
        }
        break;
      case 33:
        deltaY = i.containerHeight;
        break;
      case 34:
        deltaY = -i.containerHeight;
        break;
      case 36:
        deltaY = i.contentHeight;
        break;
      case 35:
        deltaY = -i.contentHeight;
        break;
      default:
        return;
    }
    if (i.settings.suppressScrollX && deltaX !== 0) {
      return;
    }
    if (i.settings.suppressScrollY && deltaY !== 0) {
      return;
    }
    element.scrollTop -= deltaY;
    element.scrollLeft += deltaX;
    updateGeometry(i);
    if (shouldPreventDefault(deltaX, deltaY)) {
      e.preventDefault();
    }
  });
}
function wheel(i) {
  var element = i.element;
  function shouldPreventDefault(deltaX, deltaY) {
    var roundedScrollTop = Math.floor(element.scrollTop);
    var isTop = element.scrollTop === 0;
    var isBottom = roundedScrollTop + element.offsetHeight === element.scrollHeight;
    var isLeft = element.scrollLeft === 0;
    var isRight = element.scrollLeft + element.offsetWidth === element.scrollWidth;
    var hitsBound;
    if (Math.abs(deltaY) > Math.abs(deltaX)) {
      hitsBound = isTop || isBottom;
    } else {
      hitsBound = isLeft || isRight;
    }
    return hitsBound ? !i.settings.wheelPropagation : true;
  }
  function getDeltaFromEvent(e) {
    var deltaX = e.deltaX;
    var deltaY = -1 * e.deltaY;
    if (typeof deltaX === "undefined" || typeof deltaY === "undefined") {
      deltaX = -1 * e.wheelDeltaX / 6;
      deltaY = e.wheelDeltaY / 6;
    }
    if (e.deltaMode && e.deltaMode === 1) {
      deltaX *= 10;
      deltaY *= 10;
    }
    if (deltaX !== deltaX && deltaY !== deltaY) {
      deltaX = 0;
      deltaY = e.wheelDelta;
    }
    if (e.shiftKey) {
      return [-deltaY, -deltaX];
    }
    return [deltaX, deltaY];
  }
  function shouldBeConsumedByChild(target, deltaX, deltaY) {
    if (!env.isWebKit && element.querySelector("select:focus")) {
      return true;
    }
    if (!element.contains(target)) {
      return false;
    }
    var cursor = target;
    while (cursor && cursor !== element) {
      if (cursor.classList.contains(cls.element.consuming)) {
        return true;
      }
      var style2 = get(cursor);
      if (deltaY && style2.overflowY.match(/(scroll|auto)/)) {
        var maxScrollTop = cursor.scrollHeight - cursor.clientHeight;
        if (maxScrollTop > 0) {
          if (cursor.scrollTop > 0 && deltaY < 0 || cursor.scrollTop < maxScrollTop && deltaY > 0) {
            return true;
          }
        }
      }
      if (deltaX && style2.overflowX.match(/(scroll|auto)/)) {
        var maxScrollLeft = cursor.scrollWidth - cursor.clientWidth;
        if (maxScrollLeft > 0) {
          if (cursor.scrollLeft > 0 && deltaX < 0 || cursor.scrollLeft < maxScrollLeft && deltaX > 0) {
            return true;
          }
        }
      }
      cursor = cursor.parentNode;
    }
    return false;
  }
  function mousewheelHandler(e) {
    var ref = getDeltaFromEvent(e);
    var deltaX = ref[0];
    var deltaY = ref[1];
    if (shouldBeConsumedByChild(e.target, deltaX, deltaY)) {
      return;
    }
    var shouldPrevent = false;
    if (!i.settings.useBothWheelAxes) {
      element.scrollTop -= deltaY * i.settings.wheelSpeed;
      element.scrollLeft += deltaX * i.settings.wheelSpeed;
    } else if (i.scrollbarYActive && !i.scrollbarXActive) {
      if (deltaY) {
        element.scrollTop -= deltaY * i.settings.wheelSpeed;
      } else {
        element.scrollTop += deltaX * i.settings.wheelSpeed;
      }
      shouldPrevent = true;
    } else if (i.scrollbarXActive && !i.scrollbarYActive) {
      if (deltaX) {
        element.scrollLeft += deltaX * i.settings.wheelSpeed;
      } else {
        element.scrollLeft -= deltaY * i.settings.wheelSpeed;
      }
      shouldPrevent = true;
    }
    updateGeometry(i);
    shouldPrevent = shouldPrevent || shouldPreventDefault(deltaX, deltaY);
    if (shouldPrevent && !e.ctrlKey) {
      e.stopPropagation();
      e.preventDefault();
    }
  }
  if (typeof window.onwheel !== "undefined") {
    i.event.bind(element, "wheel", mousewheelHandler);
  } else if (typeof window.onmousewheel !== "undefined") {
    i.event.bind(element, "mousewheel", mousewheelHandler);
  }
}
function touch(i) {
  if (!env.supportsTouch && !env.supportsIePointer) {
    return;
  }
  var element = i.element;
  function shouldPrevent(deltaX, deltaY) {
    var scrollTop = Math.floor(element.scrollTop);
    var scrollLeft = element.scrollLeft;
    var magnitudeX = Math.abs(deltaX);
    var magnitudeY = Math.abs(deltaY);
    if (magnitudeY > magnitudeX) {
      if (deltaY < 0 && scrollTop === i.contentHeight - i.containerHeight || deltaY > 0 && scrollTop === 0) {
        return window.scrollY === 0 && deltaY > 0 && env.isChrome;
      }
    } else if (magnitudeX > magnitudeY) {
      if (deltaX < 0 && scrollLeft === i.contentWidth - i.containerWidth || deltaX > 0 && scrollLeft === 0) {
        return true;
      }
    }
    return true;
  }
  function applyTouchMove(differenceX, differenceY) {
    element.scrollTop -= differenceY;
    element.scrollLeft -= differenceX;
    updateGeometry(i);
  }
  var startOffset = {};
  var startTime = 0;
  var speed = {};
  var easingLoop = null;
  function getTouch(e) {
    if (e.targetTouches) {
      return e.targetTouches[0];
    } else {
      return e;
    }
  }
  function shouldHandle(e) {
    if (e.pointerType && e.pointerType === "pen" && e.buttons === 0) {
      return false;
    }
    if (e.targetTouches && e.targetTouches.length === 1) {
      return true;
    }
    if (e.pointerType && e.pointerType !== "mouse" && e.pointerType !== e.MSPOINTER_TYPE_MOUSE) {
      return true;
    }
    return false;
  }
  function touchStart(e) {
    if (!shouldHandle(e)) {
      return;
    }
    var touch2 = getTouch(e);
    startOffset.pageX = touch2.pageX;
    startOffset.pageY = touch2.pageY;
    startTime = (/* @__PURE__ */ new Date()).getTime();
    if (easingLoop !== null) {
      clearInterval(easingLoop);
    }
  }
  function shouldBeConsumedByChild(target, deltaX, deltaY) {
    if (!element.contains(target)) {
      return false;
    }
    var cursor = target;
    while (cursor && cursor !== element) {
      if (cursor.classList.contains(cls.element.consuming)) {
        return true;
      }
      var style2 = get(cursor);
      if (deltaY && style2.overflowY.match(/(scroll|auto)/)) {
        var maxScrollTop = cursor.scrollHeight - cursor.clientHeight;
        if (maxScrollTop > 0) {
          if (cursor.scrollTop > 0 && deltaY < 0 || cursor.scrollTop < maxScrollTop && deltaY > 0) {
            return true;
          }
        }
      }
      if (deltaX && style2.overflowX.match(/(scroll|auto)/)) {
        var maxScrollLeft = cursor.scrollWidth - cursor.clientWidth;
        if (maxScrollLeft > 0) {
          if (cursor.scrollLeft > 0 && deltaX < 0 || cursor.scrollLeft < maxScrollLeft && deltaX > 0) {
            return true;
          }
        }
      }
      cursor = cursor.parentNode;
    }
    return false;
  }
  function touchMove(e) {
    if (shouldHandle(e)) {
      var touch2 = getTouch(e);
      var currentOffset = { pageX: touch2.pageX, pageY: touch2.pageY };
      var differenceX = currentOffset.pageX - startOffset.pageX;
      var differenceY = currentOffset.pageY - startOffset.pageY;
      if (shouldBeConsumedByChild(e.target, differenceX, differenceY)) {
        return;
      }
      applyTouchMove(differenceX, differenceY);
      startOffset = currentOffset;
      var currentTime = (/* @__PURE__ */ new Date()).getTime();
      var timeGap = currentTime - startTime;
      if (timeGap > 0) {
        speed.x = differenceX / timeGap;
        speed.y = differenceY / timeGap;
        startTime = currentTime;
      }
      if (shouldPrevent(differenceX, differenceY)) {
        e.preventDefault();
      }
    }
  }
  function touchEnd() {
    if (i.settings.swipeEasing) {
      clearInterval(easingLoop);
      easingLoop = setInterval(function() {
        if (i.isInitialized) {
          clearInterval(easingLoop);
          return;
        }
        if (!speed.x && !speed.y) {
          clearInterval(easingLoop);
          return;
        }
        if (Math.abs(speed.x) < 0.01 && Math.abs(speed.y) < 0.01) {
          clearInterval(easingLoop);
          return;
        }
        if (!i.element) {
          clearInterval(easingLoop);
          return;
        }
        applyTouchMove(speed.x * 30, speed.y * 30);
        speed.x *= 0.8;
        speed.y *= 0.8;
      }, 10);
    }
  }
  if (env.supportsTouch) {
    i.event.bind(element, "touchstart", touchStart);
    i.event.bind(element, "touchmove", touchMove);
    i.event.bind(element, "touchend", touchEnd);
  } else if (env.supportsIePointer) {
    if (window.PointerEvent) {
      i.event.bind(element, "pointerdown", touchStart);
      i.event.bind(element, "pointermove", touchMove);
      i.event.bind(element, "pointerup", touchEnd);
    } else if (window.MSPointerEvent) {
      i.event.bind(element, "MSPointerDown", touchStart);
      i.event.bind(element, "MSPointerMove", touchMove);
      i.event.bind(element, "MSPointerUp", touchEnd);
    }
  }
}
var defaultSettings = function() {
  return {
    handlers: ["click-rail", "drag-thumb", "keyboard", "wheel", "touch"],
    maxScrollbarLength: null,
    minScrollbarLength: null,
    scrollingThreshold: 1e3,
    scrollXMarginOffset: 0,
    scrollYMarginOffset: 0,
    suppressScrollX: false,
    suppressScrollY: false,
    swipeEasing: true,
    useBothWheelAxes: false,
    wheelPropagation: true,
    wheelSpeed: 1
  };
};
var handlers = {
  "click-rail": clickRail,
  "drag-thumb": dragThumb,
  keyboard,
  wheel,
  touch
};
var PerfectScrollbar = function PerfectScrollbar2(element, userSettings) {
  var this$1 = this;
  if (userSettings === void 0) userSettings = {};
  if (typeof element === "string") {
    element = document.querySelector(element);
  }
  if (!element || !element.nodeName) {
    throw new Error("no element is specified to initialize PerfectScrollbar");
  }
  this.element = element;
  element.classList.add(cls.main);
  this.settings = defaultSettings();
  for (var key in userSettings) {
    this.settings[key] = userSettings[key];
  }
  this.containerWidth = null;
  this.containerHeight = null;
  this.contentWidth = null;
  this.contentHeight = null;
  var focus = function() {
    return element.classList.add(cls.state.focus);
  };
  var blur = function() {
    return element.classList.remove(cls.state.focus);
  };
  this.isRtl = get(element).direction === "rtl";
  if (this.isRtl === true) {
    element.classList.add(cls.rtl);
  }
  this.isNegativeScroll = function() {
    var originalScrollLeft = element.scrollLeft;
    var result = null;
    element.scrollLeft = -1;
    result = element.scrollLeft < 0;
    element.scrollLeft = originalScrollLeft;
    return result;
  }();
  this.negativeScrollAdjustment = this.isNegativeScroll ? element.scrollWidth - element.clientWidth : 0;
  this.event = new EventManager();
  this.ownerDocument = element.ownerDocument || document;
  this.scrollbarXRail = div(cls.element.rail("x"));
  element.appendChild(this.scrollbarXRail);
  this.scrollbarX = div(cls.element.thumb("x"));
  this.scrollbarXRail.appendChild(this.scrollbarX);
  this.scrollbarX.setAttribute("tabindex", 0);
  this.event.bind(this.scrollbarX, "focus", focus);
  this.event.bind(this.scrollbarX, "blur", blur);
  this.scrollbarXActive = null;
  this.scrollbarXWidth = null;
  this.scrollbarXLeft = null;
  var railXStyle = get(this.scrollbarXRail);
  this.scrollbarXBottom = parseInt(railXStyle.bottom, 10);
  if (isNaN(this.scrollbarXBottom)) {
    this.isScrollbarXUsingBottom = false;
    this.scrollbarXTop = toInt(railXStyle.top);
  } else {
    this.isScrollbarXUsingBottom = true;
  }
  this.railBorderXWidth = toInt(railXStyle.borderLeftWidth) + toInt(railXStyle.borderRightWidth);
  set(this.scrollbarXRail, { display: "block" });
  this.railXMarginWidth = toInt(railXStyle.marginLeft) + toInt(railXStyle.marginRight);
  set(this.scrollbarXRail, { display: "" });
  this.railXWidth = null;
  this.railXRatio = null;
  this.scrollbarYRail = div(cls.element.rail("y"));
  element.appendChild(this.scrollbarYRail);
  this.scrollbarY = div(cls.element.thumb("y"));
  this.scrollbarYRail.appendChild(this.scrollbarY);
  this.scrollbarY.setAttribute("tabindex", 0);
  this.event.bind(this.scrollbarY, "focus", focus);
  this.event.bind(this.scrollbarY, "blur", blur);
  this.scrollbarYActive = null;
  this.scrollbarYHeight = null;
  this.scrollbarYTop = null;
  var railYStyle = get(this.scrollbarYRail);
  this.scrollbarYRight = parseInt(railYStyle.right, 10);
  if (isNaN(this.scrollbarYRight)) {
    this.isScrollbarYUsingRight = false;
    this.scrollbarYLeft = toInt(railYStyle.left);
  } else {
    this.isScrollbarYUsingRight = true;
  }
  this.scrollbarYOuterWidth = this.isRtl ? outerWidth(this.scrollbarY) : null;
  this.railBorderYWidth = toInt(railYStyle.borderTopWidth) + toInt(railYStyle.borderBottomWidth);
  set(this.scrollbarYRail, { display: "block" });
  this.railYMarginHeight = toInt(railYStyle.marginTop) + toInt(railYStyle.marginBottom);
  set(this.scrollbarYRail, { display: "" });
  this.railYHeight = null;
  this.railYRatio = null;
  this.reach = {
    x: element.scrollLeft <= 0 ? "start" : element.scrollLeft >= this.contentWidth - this.containerWidth ? "end" : null,
    y: element.scrollTop <= 0 ? "start" : element.scrollTop >= this.contentHeight - this.containerHeight ? "end" : null
  };
  this.isAlive = true;
  this.settings.handlers.forEach(function(handlerName) {
    return handlers[handlerName](this$1);
  });
  this.lastScrollTop = Math.floor(element.scrollTop);
  this.lastScrollLeft = element.scrollLeft;
  this.event.bind(this.element, "scroll", function(e) {
    return this$1.onScroll(e);
  });
  updateGeometry(this);
};
PerfectScrollbar.prototype.update = function update() {
  if (!this.isAlive) {
    return;
  }
  this.negativeScrollAdjustment = this.isNegativeScroll ? this.element.scrollWidth - this.element.clientWidth : 0;
  set(this.scrollbarXRail, { display: "block" });
  set(this.scrollbarYRail, { display: "block" });
  this.railXMarginWidth = toInt(get(this.scrollbarXRail).marginLeft) + toInt(get(this.scrollbarXRail).marginRight);
  this.railYMarginHeight = toInt(get(this.scrollbarYRail).marginTop) + toInt(get(this.scrollbarYRail).marginBottom);
  set(this.scrollbarXRail, { display: "none" });
  set(this.scrollbarYRail, { display: "none" });
  updateGeometry(this);
  processScrollDiff(this, "top", 0, false, true);
  processScrollDiff(this, "left", 0, false, true);
  set(this.scrollbarXRail, { display: "" });
  set(this.scrollbarYRail, { display: "" });
};
PerfectScrollbar.prototype.onScroll = function onScroll(e) {
  if (!this.isAlive) {
    return;
  }
  updateGeometry(this);
  processScrollDiff(this, "top", this.element.scrollTop - this.lastScrollTop);
  processScrollDiff(
    this,
    "left",
    this.element.scrollLeft - this.lastScrollLeft
  );
  this.lastScrollTop = Math.floor(this.element.scrollTop);
  this.lastScrollLeft = this.element.scrollLeft;
};
PerfectScrollbar.prototype.destroy = function destroy() {
  if (!this.isAlive) {
    return;
  }
  this.event.unbindAll();
  remove(this.scrollbarX);
  remove(this.scrollbarY);
  remove(this.scrollbarXRail);
  remove(this.scrollbarYRail);
  this.removePsClasses();
  this.element = null;
  this.scrollbarX = null;
  this.scrollbarY = null;
  this.scrollbarXRail = null;
  this.scrollbarYRail = null;
  this.isAlive = false;
};
PerfectScrollbar.prototype.removePsClasses = function removePsClasses() {
  this.element.className = this.element.className.split(" ").filter(function(name) {
    return !name.match(/^ps([-_].+|)$/);
  }).join(" ");
};
var perfect_scrollbar_esm_default = PerfectScrollbar;

// src/@fuse/directives/scrollbar/scrollbar.directive.ts
var _FuseScrollbarDirective = class _FuseScrollbarDirective {
  constructor() {
    this._elementRef = inject(ElementRef);
    this._platform = inject(Platform);
    this.fuseScrollbar = true;
    this._unsubscribeAll = new Subject();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Accessors
  // -----------------------------------------------------------------------------------------------------
  /**
   * Getter for _elementRef
   */
  get elementRef() {
    return this._elementRef;
  }
  /**
   * Getter for _ps
   */
  get ps() {
    return this._ps;
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Lifecycle hooks
  // -----------------------------------------------------------------------------------------------------
  /**
   * On changes
   *
   * @param changes
   */
  ngOnChanges(changes) {
    if ("fuseScrollbar" in changes) {
      this.fuseScrollbar = coerceBooleanProperty(changes.fuseScrollbar.currentValue);
      if (this.fuseScrollbar) {
        this._init();
      } else {
        this._destroy();
      }
    }
    if ("fuseScrollbarOptions" in changes) {
      this._options = merge_default({}, this._options, changes.fuseScrollbarOptions.currentValue);
      if (!this._ps) {
        return;
      }
      setTimeout(() => {
        this._destroy();
      });
      setTimeout(() => {
        this._init();
      });
    }
  }
  /**
   * On init
   */
  ngOnInit() {
    fromEvent(window, "resize").pipe(takeUntil(this._unsubscribeAll), debounceTime(150)).subscribe(() => {
      this.update();
    });
  }
  /**
   * On destroy
   */
  ngOnDestroy() {
    this._destroy();
    this._unsubscribeAll.next(null);
    this._unsubscribeAll.complete();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Is enabled
   */
  isEnabled() {
    return this.fuseScrollbar;
  }
  /**
   * Update the scrollbar
   */
  update() {
    if (!this._ps) {
      return;
    }
    this._ps.update();
  }
  /**
   * Destroy the scrollbar
   */
  destroy() {
    this.ngOnDestroy();
  }
  /**
   * Returns the geometry of the scrollable element
   *
   * @param prefix
   */
  geometry(prefix = "scroll") {
    return new ScrollbarGeometry(this._elementRef.nativeElement[prefix + "Left"], this._elementRef.nativeElement[prefix + "Top"], this._elementRef.nativeElement[prefix + "Width"], this._elementRef.nativeElement[prefix + "Height"]);
  }
  /**
   * Returns the position of the scrollable element
   *
   * @param absolute
   */
  position(absolute = false) {
    let scrollbarPosition;
    if (!absolute && this._ps) {
      scrollbarPosition = new ScrollbarPosition(this._ps.reach.x || 0, this._ps.reach.y || 0);
    } else {
      scrollbarPosition = new ScrollbarPosition(this._elementRef.nativeElement.scrollLeft, this._elementRef.nativeElement.scrollTop);
    }
    return scrollbarPosition;
  }
  /**
   * Scroll to
   *
   * @param x
   * @param y
   * @param speed
   */
  scrollTo(x, y, speed) {
    if (y == null && speed == null) {
      this.animateScrolling("scrollTop", x, speed);
    } else {
      if (x != null) {
        this.animateScrolling("scrollLeft", x, speed);
      }
      if (y != null) {
        this.animateScrolling("scrollTop", y, speed);
      }
    }
  }
  /**
   * Scroll to X
   *
   * @param x
   * @param speed
   */
  scrollToX(x, speed) {
    this.animateScrolling("scrollLeft", x, speed);
  }
  /**
   * Scroll to Y
   *
   * @param y
   * @param speed
   */
  scrollToY(y, speed) {
    this.animateScrolling("scrollTop", y, speed);
  }
  /**
   * Scroll to top
   *
   * @param offset
   * @param speed
   */
  scrollToTop(offset = 0, speed) {
    this.animateScrolling("scrollTop", offset, speed);
  }
  /**
   * Scroll to bottom
   *
   * @param offset
   * @param speed
   */
  scrollToBottom(offset = 0, speed) {
    const top = this._elementRef.nativeElement.scrollHeight - this._elementRef.nativeElement.clientHeight;
    this.animateScrolling("scrollTop", top - offset, speed);
  }
  /**
   * Scroll to left
   *
   * @param offset
   * @param speed
   */
  scrollToLeft(offset = 0, speed) {
    this.animateScrolling("scrollLeft", offset, speed);
  }
  /**
   * Scroll to right
   *
   * @param offset
   * @param speed
   */
  scrollToRight(offset = 0, speed) {
    const left = this._elementRef.nativeElement.scrollWidth - this._elementRef.nativeElement.clientWidth;
    this.animateScrolling("scrollLeft", left - offset, speed);
  }
  /**
   * Scroll to element
   *
   * @param qs
   * @param offset
   * @param ignoreVisible If true, scrollToElement won't happen if element is already inside the current viewport
   * @param speed
   */
  scrollToElement(qs, offset = 0, ignoreVisible = false, speed) {
    const element = this._elementRef.nativeElement.querySelector(qs);
    if (!element) {
      return;
    }
    const elementPos = element.getBoundingClientRect();
    const scrollerPos = this._elementRef.nativeElement.getBoundingClientRect();
    if (this._elementRef.nativeElement.classList.contains("ps--active-x")) {
      if (ignoreVisible && elementPos.right <= scrollerPos.right - Math.abs(offset)) {
        return;
      }
      const currentPos = this._elementRef.nativeElement["scrollLeft"];
      const position = elementPos.left - scrollerPos.left + currentPos;
      this.animateScrolling("scrollLeft", position + offset, speed);
    }
    if (this._elementRef.nativeElement.classList.contains("ps--active-y")) {
      if (ignoreVisible && elementPos.bottom <= scrollerPos.bottom - Math.abs(offset)) {
        return;
      }
      const currentPos = this._elementRef.nativeElement["scrollTop"];
      const position = elementPos.top - scrollerPos.top + currentPos;
      this.animateScrolling("scrollTop", position + offset, speed);
    }
  }
  /**
   * Animate scrolling
   *
   * @param target
   * @param value
   * @param speed
   */
  animateScrolling(target, value, speed) {
    if (this._animation) {
      window.cancelAnimationFrame(this._animation);
      this._animation = null;
    }
    if (!speed || typeof window === "undefined") {
      this._elementRef.nativeElement[target] = value;
    } else if (value !== this._elementRef.nativeElement[target]) {
      let newValue = 0;
      let scrollCount = 0;
      let oldTimestamp = performance.now();
      let oldValue = this._elementRef.nativeElement[target];
      const cosParameter = (oldValue - value) / 2;
      const step = (newTimestamp) => {
        scrollCount += Math.PI / (speed / (newTimestamp - oldTimestamp));
        newValue = Math.round(value + cosParameter + cosParameter * Math.cos(scrollCount));
        if (this._elementRef.nativeElement[target] === oldValue) {
          if (scrollCount >= Math.PI) {
            this.animateScrolling(target, value, 0);
          } else {
            this._elementRef.nativeElement[target] = newValue;
            oldValue = this._elementRef.nativeElement[target];
            oldTimestamp = newTimestamp;
            this._animation = window.requestAnimationFrame(step);
          }
        }
      };
      window.requestAnimationFrame(step);
    }
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Private methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Initialize
   *
   * @private
   */
  _init() {
    if (this._ps) {
      return;
    }
    if (this._platform.ANDROID || this._platform.IOS || !this._platform.isBrowser) {
      this.fuseScrollbar = false;
      return;
    }
    this._ps = new perfect_scrollbar_esm_default(this._elementRef.nativeElement, __spreadValues({}, this._options));
  }
  /**
   * Destroy
   *
   * @private
   */
  _destroy() {
    if (!this._ps) {
      return;
    }
    this._ps.destroy();
    this._ps = null;
  }
};
_FuseScrollbarDirective.\u0275fac = function FuseScrollbarDirective_Factory(t) {
  return new (t || _FuseScrollbarDirective)();
};
_FuseScrollbarDirective.\u0275dir = /* @__PURE__ */ \u0275\u0275defineDirective({ type: _FuseScrollbarDirective, selectors: [["", "fuseScrollbar", ""]], inputs: { fuseScrollbar: "fuseScrollbar", fuseScrollbarOptions: "fuseScrollbarOptions" }, exportAs: ["fuseScrollbar"], standalone: true, features: [\u0275\u0275NgOnChangesFeature] });
var FuseScrollbarDirective = _FuseScrollbarDirective;

// src/@fuse/components/navigation/vertical/vertical.component.ts
var _c07 = ["navigationContent"];
var _c14 = [[["", "fuseVerticalNavigationHeader", ""]], [["", "fuseVerticalNavigationContentHeader", ""]], [["", "fuseVerticalNavigationContentFooter", ""]], [["", "fuseVerticalNavigationFooter", ""]]];
var _c22 = ["[fuseVerticalNavigationHeader]", "[fuseVerticalNavigationContentHeader]", "[fuseVerticalNavigationContentFooter]", "[fuseVerticalNavigationFooter]"];
var _c32 = (a0) => ({ wheelPropagation: a0, suppressScrollX: true });
var _c4 = () => ({ wheelPropagation: false, suppressScrollX: true });
function FuseVerticalNavigationComponent_For_8_Conditional_0_Conditional_0_Template(rf, ctx) {
  if (rf & 1) {
    const _r1 = \u0275\u0275getCurrentView();
    \u0275\u0275elementStart(0, "fuse-vertical-navigation-aside-item", 11);
    \u0275\u0275listener("click", function FuseVerticalNavigationComponent_For_8_Conditional_0_Conditional_0_Template_fuse_vertical_navigation_aside_item_click_0_listener() {
      \u0275\u0275restoreView(_r1);
      const item_r2 = \u0275\u0275nextContext(2).$implicit;
      const ctx_r2 = \u0275\u0275nextContext();
      return \u0275\u0275resetView(ctx_r2.toggleAside(item_r2));
    });
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const item_r2 = \u0275\u0275nextContext(2).$implicit;
    const ctx_r2 = \u0275\u0275nextContext();
    \u0275\u0275property("item", item_r2)("name", ctx_r2.name)("activeItemId", ctx_r2.activeAsideItemId)("autoCollapse", ctx_r2.autoCollapse)("skipChildren", true);
  }
}
function FuseVerticalNavigationComponent_For_8_Conditional_0_Conditional_1_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "fuse-vertical-navigation-basic-item", 9);
  }
  if (rf & 2) {
    const item_r2 = \u0275\u0275nextContext(2).$implicit;
    const ctx_r2 = \u0275\u0275nextContext();
    \u0275\u0275property("item", item_r2)("name", ctx_r2.name);
  }
}
function FuseVerticalNavigationComponent_For_8_Conditional_0_Conditional_2_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "fuse-vertical-navigation-collapsable-item", 10);
  }
  if (rf & 2) {
    const item_r2 = \u0275\u0275nextContext(2).$implicit;
    const ctx_r2 = \u0275\u0275nextContext();
    \u0275\u0275property("item", item_r2)("name", ctx_r2.name)("autoCollapse", ctx_r2.autoCollapse);
  }
}
function FuseVerticalNavigationComponent_For_8_Conditional_0_Conditional_3_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "fuse-vertical-navigation-divider-item", 9);
  }
  if (rf & 2) {
    const item_r2 = \u0275\u0275nextContext(2).$implicit;
    const ctx_r2 = \u0275\u0275nextContext();
    \u0275\u0275property("item", item_r2)("name", ctx_r2.name);
  }
}
function FuseVerticalNavigationComponent_For_8_Conditional_0_Conditional_4_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "fuse-vertical-navigation-group-item", 10);
  }
  if (rf & 2) {
    const item_r2 = \u0275\u0275nextContext(2).$implicit;
    const ctx_r2 = \u0275\u0275nextContext();
    \u0275\u0275property("item", item_r2)("name", ctx_r2.name)("autoCollapse", ctx_r2.autoCollapse);
  }
}
function FuseVerticalNavigationComponent_For_8_Conditional_0_Conditional_5_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "fuse-vertical-navigation-spacer-item", 9);
  }
  if (rf & 2) {
    const item_r2 = \u0275\u0275nextContext(2).$implicit;
    const ctx_r2 = \u0275\u0275nextContext();
    \u0275\u0275property("item", item_r2)("name", ctx_r2.name);
  }
}
function FuseVerticalNavigationComponent_For_8_Conditional_0_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275template(0, FuseVerticalNavigationComponent_For_8_Conditional_0_Conditional_0_Template, 1, 5, "fuse-vertical-navigation-aside-item", 8)(1, FuseVerticalNavigationComponent_For_8_Conditional_0_Conditional_1_Template, 1, 2, "fuse-vertical-navigation-basic-item", 9)(2, FuseVerticalNavigationComponent_For_8_Conditional_0_Conditional_2_Template, 1, 3, "fuse-vertical-navigation-collapsable-item", 10)(3, FuseVerticalNavigationComponent_For_8_Conditional_0_Conditional_3_Template, 1, 2, "fuse-vertical-navigation-divider-item", 9)(4, FuseVerticalNavigationComponent_For_8_Conditional_0_Conditional_4_Template, 1, 3, "fuse-vertical-navigation-group-item", 10)(5, FuseVerticalNavigationComponent_For_8_Conditional_0_Conditional_5_Template, 1, 2, "fuse-vertical-navigation-spacer-item", 9);
  }
  if (rf & 2) {
    const item_r2 = \u0275\u0275nextContext().$implicit;
    \u0275\u0275conditional(item_r2.type === "aside" ? 0 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(item_r2.type === "basic" ? 1 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(item_r2.type === "collapsable" ? 2 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(item_r2.type === "divider" ? 3 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(item_r2.type === "group" ? 4 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(item_r2.type === "spacer" ? 5 : -1);
  }
}
function FuseVerticalNavigationComponent_For_8_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275template(0, FuseVerticalNavigationComponent_For_8_Conditional_0_Template, 6, 6);
  }
  if (rf & 2) {
    const item_r2 = ctx.$implicit;
    \u0275\u0275conditional(item_r2.hidden && !item_r2.hidden(item_r2) || !item_r2.hidden ? 0 : -1);
  }
}
function FuseVerticalNavigationComponent_Conditional_13_For_2_Conditional_0_Conditional_0_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "fuse-vertical-navigation-aside-item", 10);
  }
  if (rf & 2) {
    const item_r4 = \u0275\u0275nextContext(2).$implicit;
    const ctx_r2 = \u0275\u0275nextContext(2);
    \u0275\u0275property("item", item_r4)("name", ctx_r2.name)("autoCollapse", ctx_r2.autoCollapse);
  }
}
function FuseVerticalNavigationComponent_Conditional_13_For_2_Conditional_0_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275template(0, FuseVerticalNavigationComponent_Conditional_13_For_2_Conditional_0_Conditional_0_Template, 1, 3, "fuse-vertical-navigation-aside-item", 10);
  }
  if (rf & 2) {
    const item_r4 = \u0275\u0275nextContext().$implicit;
    const ctx_r2 = \u0275\u0275nextContext(2);
    \u0275\u0275conditional(item_r4.type === "aside" && item_r4.id === ctx_r2.activeAsideItemId ? 0 : -1);
  }
}
function FuseVerticalNavigationComponent_Conditional_13_For_2_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275template(0, FuseVerticalNavigationComponent_Conditional_13_For_2_Conditional_0_Template, 1, 1);
  }
  if (rf & 2) {
    const item_r4 = ctx.$implicit;
    \u0275\u0275conditional(item_r4.hidden && !item_r4.hidden(item_r4) || !item_r4.hidden ? 0 : -1);
  }
}
function FuseVerticalNavigationComponent_Conditional_13_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 7);
    \u0275\u0275repeaterCreate(1, FuseVerticalNavigationComponent_Conditional_13_For_2_Template, 1, 1, null, null, \u0275\u0275componentInstance().trackByFn, true);
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const ctx_r2 = \u0275\u0275nextContext();
    \u0275\u0275property("fuseScrollbarOptions", \u0275\u0275pureFunction0(5, _c4))("@fadeInLeft", ctx_r2.position === "left")("@fadeInRight", ctx_r2.position === "right")("@fadeOutLeft", ctx_r2.position === "left")("@fadeOutRight", ctx_r2.position === "right");
    \u0275\u0275advance();
    \u0275\u0275repeater(ctx_r2.navigation);
  }
}
var _FuseVerticalNavigationComponent = class _FuseVerticalNavigationComponent {
  /**
   * Constructor
   */
  constructor() {
    this._animationBuilder = inject(AnimationBuilder);
    this._changeDetectorRef = inject(ChangeDetectorRef);
    this._document = inject(DOCUMENT);
    this._elementRef = inject(ElementRef);
    this._renderer2 = inject(Renderer2);
    this._router = inject(Router);
    this._scrollStrategyOptions = inject(ScrollStrategyOptions);
    this._fuseNavigationService = inject(FuseNavigationService);
    this._fuseUtilsService = inject(FuseUtilsService);
    this.appearance = "default";
    this.autoCollapse = true;
    this.inner = false;
    this.mode = "side";
    this.name = this._fuseUtilsService.randomId();
    this.opened = true;
    this.position = "left";
    this.transparentOverlay = false;
    this.appearanceChanged = new EventEmitter();
    this.modeChanged = new EventEmitter();
    this.openedChanged = new EventEmitter();
    this.positionChanged = new EventEmitter();
    this.activeAsideItemId = null;
    this.onCollapsableItemCollapsed = new ReplaySubject(1);
    this.onCollapsableItemExpanded = new ReplaySubject(1);
    this.onRefreshed = new ReplaySubject(1);
    this._animationsEnabled = false;
    this._hovered = false;
    this._scrollStrategy = this._scrollStrategyOptions.block();
    this._unsubscribeAll = new Subject();
    this._handleAsideOverlayClick = () => {
      this.closeAside();
    };
    this._handleOverlayClick = () => {
      this.close();
    };
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Accessors
  // -----------------------------------------------------------------------------------------------------
  /**
   * Host binding for component classes
   */
  get classList() {
    return {
      "fuse-vertical-navigation-animations-enabled": this._animationsEnabled,
      [`fuse-vertical-navigation-appearance-${this.appearance}`]: true,
      "fuse-vertical-navigation-hover": this._hovered,
      "fuse-vertical-navigation-inner": this.inner,
      "fuse-vertical-navigation-mode-over": this.mode === "over",
      "fuse-vertical-navigation-mode-side": this.mode === "side",
      "fuse-vertical-navigation-opened": this.opened,
      "fuse-vertical-navigation-position-left": this.position === "left",
      "fuse-vertical-navigation-position-right": this.position === "right"
    };
  }
  /**
   * Host binding for component inline styles
   */
  get styleList() {
    return {
      visibility: this.opened ? "visible" : "hidden"
    };
  }
  /**
   * Setter for fuseScrollbarDirectives
   */
  set fuseScrollbarDirectives(fuseScrollbarDirectives) {
    this._fuseScrollbarDirectives = fuseScrollbarDirectives;
    if (fuseScrollbarDirectives.length === 0) {
      return;
    }
    if (this._fuseScrollbarDirectivesSubscription) {
      this._fuseScrollbarDirectivesSubscription.unsubscribe();
    }
    this._fuseScrollbarDirectivesSubscription = merge(this.onCollapsableItemCollapsed, this.onCollapsableItemExpanded).pipe(takeUntil(this._unsubscribeAll), delay(250)).subscribe(() => {
      fuseScrollbarDirectives.forEach((fuseScrollbarDirective) => {
        fuseScrollbarDirective.update();
      });
    });
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Decorated methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * On mouseenter
   *
   * @private
   */
  _onMouseenter() {
    this._enableAnimations();
    this._hovered = true;
  }
  /**
   * On mouseleave
   *
   * @private
   */
  _onMouseleave() {
    this._enableAnimations();
    this._hovered = false;
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Lifecycle hooks
  // -----------------------------------------------------------------------------------------------------
  /**
   * On changes
   *
   * @param changes
   */
  ngOnChanges(changes) {
    if ("appearance" in changes) {
      this.appearanceChanged.next(changes.appearance.currentValue);
    }
    if ("inner" in changes) {
      this.inner = coerceBooleanProperty(changes.inner.currentValue);
    }
    if ("mode" in changes) {
      const currentMode = changes.mode.currentValue;
      const previousMode = changes.mode.previousValue;
      this._disableAnimations();
      if (previousMode === "over" && currentMode === "side") {
        this._hideOverlay();
      }
      if (previousMode === "side" && currentMode === "over") {
        this.closeAside();
        if (this.opened) {
          this._showOverlay();
        }
      }
      this.modeChanged.next(currentMode);
      setTimeout(() => {
        this._enableAnimations();
      }, 500);
    }
    if ("navigation" in changes) {
      this._changeDetectorRef.markForCheck();
    }
    if ("opened" in changes) {
      this.opened = coerceBooleanProperty(changes.opened.currentValue);
      this._toggleOpened(this.opened);
    }
    if ("position" in changes) {
      this.positionChanged.next(changes.position.currentValue);
    }
    if ("transparentOverlay" in changes) {
      this.transparentOverlay = coerceBooleanProperty(changes.transparentOverlay.currentValue);
    }
  }
  /**
   * On init
   */
  ngOnInit() {
    if (this.name === "") {
      this.name = this._fuseUtilsService.randomId();
    }
    this._fuseNavigationService.registerComponent(this.name, this);
    this._router.events.pipe(filter((event) => event instanceof NavigationEnd), takeUntil(this._unsubscribeAll)).subscribe(() => {
      if (this.mode === "over" && this.opened) {
        this.close();
      }
      if (this.mode === "side" && this.activeAsideItemId) {
        this.closeAside();
      }
    });
  }
  /**
   * After view init
   */
  ngAfterViewInit() {
    this._mutationObserver = new MutationObserver((mutations) => {
      mutations.forEach((mutation) => {
        const mutationTarget = mutation.target;
        if (mutation.attributeName === "class") {
          if (mutationTarget.classList.contains("cdk-global-scrollblock")) {
            const top = parseInt(mutationTarget.style.top, 10);
            this._renderer2.setStyle(this._elementRef.nativeElement, "margin-top", `${Math.abs(top)}px`);
          } else {
            this._renderer2.setStyle(this._elementRef.nativeElement, "margin-top", null);
          }
        }
      });
    });
    this._mutationObserver.observe(this._document.documentElement, {
      attributes: true,
      attributeFilter: ["class"]
    });
    setTimeout(() => {
      if (!this._navigationContentEl) {
        return;
      }
      if (!this._navigationContentEl.nativeElement.classList.contains("ps")) {
        const activeItem = this._navigationContentEl.nativeElement.querySelector(".fuse-vertical-navigation-item-active");
        if (activeItem) {
          activeItem.scrollIntoView();
        }
      } else {
        this._fuseScrollbarDirectives.forEach((fuseScrollbarDirective) => {
          if (!fuseScrollbarDirective.isEnabled()) {
            return;
          }
          fuseScrollbarDirective.scrollToElement(".fuse-vertical-navigation-item-active", -120, true);
        });
      }
    });
  }
  /**
   * On destroy
   */
  ngOnDestroy() {
    this._mutationObserver.disconnect();
    this.close();
    this.closeAside();
    this._fuseNavigationService.deregisterComponent(this.name);
    this._unsubscribeAll.next(null);
    this._unsubscribeAll.complete();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Refresh the component to apply the changes
   */
  refresh() {
    this._changeDetectorRef.markForCheck();
    this.onRefreshed.next(true);
  }
  /**
   * Open the navigation
   */
  open() {
    if (this.opened) {
      return;
    }
    this._toggleOpened(true);
  }
  /**
   * Close the navigation
   */
  close() {
    if (!this.opened) {
      return;
    }
    this.closeAside();
    this._toggleOpened(false);
  }
  /**
   * Toggle the navigation
   */
  toggle() {
    if (this.opened) {
      this.close();
    } else {
      this.open();
    }
  }
  /**
   * Open the aside
   *
   * @param item
   */
  openAside(item) {
    if (item.disabled || !item.id) {
      return;
    }
    this.activeAsideItemId = item.id;
    this._showAsideOverlay();
    this._changeDetectorRef.markForCheck();
  }
  /**
   * Close the aside
   */
  closeAside() {
    this.activeAsideItemId = null;
    this._hideAsideOverlay();
    this._changeDetectorRef.markForCheck();
  }
  /**
   * Toggle the aside
   *
   * @param item
   */
  toggleAside(item) {
    if (this.activeAsideItemId === item.id) {
      this.closeAside();
    } else {
      this.openAside(item);
    }
  }
  /**
   * Track by function for ngFor loops
   *
   * @param index
   * @param item
   */
  trackByFn(index, item) {
    return item.id || index;
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Private methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Enable the animations
   *
   * @private
   */
  _enableAnimations() {
    if (this._animationsEnabled) {
      return;
    }
    this._animationsEnabled = true;
  }
  /**
   * Disable the animations
   *
   * @private
   */
  _disableAnimations() {
    if (!this._animationsEnabled) {
      return;
    }
    this._animationsEnabled = false;
  }
  /**
   * Show the overlay
   *
   * @private
   */
  _showOverlay() {
    if (this._asideOverlay) {
      return;
    }
    this._overlay = this._renderer2.createElement("div");
    this._overlay.classList.add("fuse-vertical-navigation-overlay");
    if (this.transparentOverlay) {
      this._overlay.classList.add("fuse-vertical-navigation-overlay-transparent");
    }
    this._renderer2.appendChild(this._elementRef.nativeElement.parentElement, this._overlay);
    this._scrollStrategy.enable();
    this._player = this._animationBuilder.build([
      animate("300ms cubic-bezier(0.25, 0.8, 0.25, 1)", style({ opacity: 1 }))
    ]).create(this._overlay);
    this._player.play();
    this._overlay.addEventListener("click", this._handleOverlayClick);
  }
  /**
   * Hide the overlay
   *
   * @private
   */
  _hideOverlay() {
    if (!this._overlay) {
      return;
    }
    this._player = this._animationBuilder.build([
      animate("300ms cubic-bezier(0.25, 0.8, 0.25, 1)", style({ opacity: 0 }))
    ]).create(this._overlay);
    this._player.play();
    this._player.onDone(() => {
      if (this._overlay) {
        this._overlay.removeEventListener("click", this._handleOverlayClick);
        this._overlay.parentNode.removeChild(this._overlay);
        this._overlay = null;
      }
      this._scrollStrategy.disable();
    });
  }
  /**
   * Show the aside overlay
   *
   * @private
   */
  _showAsideOverlay() {
    if (this._asideOverlay) {
      return;
    }
    this._asideOverlay = this._renderer2.createElement("div");
    this._asideOverlay.classList.add("fuse-vertical-navigation-aside-overlay");
    this._renderer2.appendChild(this._elementRef.nativeElement.parentElement, this._asideOverlay);
    this._player = this._animationBuilder.build([
      animate("300ms cubic-bezier(0.25, 0.8, 0.25, 1)", style({ opacity: 1 }))
    ]).create(this._asideOverlay);
    this._player.play();
    this._asideOverlay.addEventListener("click", this._handleAsideOverlayClick);
  }
  /**
   * Hide the aside overlay
   *
   * @private
   */
  _hideAsideOverlay() {
    if (!this._asideOverlay) {
      return;
    }
    this._player = this._animationBuilder.build([
      animate("300ms cubic-bezier(0.25, 0.8, 0.25, 1)", style({ opacity: 0 }))
    ]).create(this._asideOverlay);
    this._player.play();
    this._player.onDone(() => {
      if (this._asideOverlay) {
        this._asideOverlay.removeEventListener("click", this._handleAsideOverlayClick);
        this._asideOverlay.parentNode.removeChild(this._asideOverlay);
        this._asideOverlay = null;
      }
    });
  }
  /**
   * Open/close the navigation
   *
   * @param open
   * @private
   */
  _toggleOpened(open) {
    this.opened = open;
    this._enableAnimations();
    if (this.mode === "over") {
      if (this.opened) {
        this._showOverlay();
      } else {
        this._hideOverlay();
      }
    }
    this.openedChanged.next(open);
  }
};
_FuseVerticalNavigationComponent.\u0275fac = function FuseVerticalNavigationComponent_Factory(t) {
  return new (t || _FuseVerticalNavigationComponent)();
};
_FuseVerticalNavigationComponent.\u0275cmp = /* @__PURE__ */ \u0275\u0275defineComponent({ type: _FuseVerticalNavigationComponent, selectors: [["fuse-vertical-navigation"]], viewQuery: function FuseVerticalNavigationComponent_Query(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275viewQuery(_c07, 5);
    \u0275\u0275viewQuery(FuseScrollbarDirective, 5);
  }
  if (rf & 2) {
    let _t;
    \u0275\u0275queryRefresh(_t = \u0275\u0275loadQuery()) && (ctx._navigationContentEl = _t.first);
    \u0275\u0275queryRefresh(_t = \u0275\u0275loadQuery()) && (ctx.fuseScrollbarDirectives = _t);
  }
}, hostVars: 4, hostBindings: function FuseVerticalNavigationComponent_HostBindings(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275listener("mouseenter", function FuseVerticalNavigationComponent_mouseenter_HostBindingHandler() {
      return ctx._onMouseenter();
    })("mouseleave", function FuseVerticalNavigationComponent_mouseleave_HostBindingHandler() {
      return ctx._onMouseleave();
    });
  }
  if (rf & 2) {
    \u0275\u0275styleMap(ctx.styleList);
    \u0275\u0275classMap(ctx.classList);
  }
}, inputs: { appearance: "appearance", autoCollapse: "autoCollapse", inner: "inner", mode: "mode", name: "name", navigation: "navigation", opened: "opened", position: "position", transparentOverlay: "transparentOverlay" }, outputs: { appearanceChanged: "appearanceChanged", modeChanged: "modeChanged", openedChanged: "openedChanged", positionChanged: "positionChanged" }, exportAs: ["fuseVerticalNavigation"], standalone: true, features: [\u0275\u0275NgOnChangesFeature, \u0275\u0275StandaloneFeature], ngContentSelectors: _c22, decls: 14, vars: 4, consts: [["navigationContent", ""], [1, "fuse-vertical-navigation-wrapper"], [1, "fuse-vertical-navigation-header"], ["fuseScrollbar", "", 1, "fuse-vertical-navigation-content", 3, "fuseScrollbarOptions"], [1, "fuse-vertical-navigation-content-header"], [1, "fuse-vertical-navigation-content-footer"], [1, "fuse-vertical-navigation-footer"], ["fuseScrollbar", "", 1, "fuse-vertical-navigation-aside-wrapper", 3, "fuseScrollbarOptions"], [3, "item", "name", "activeItemId", "autoCollapse", "skipChildren"], [3, "item", "name"], [3, "item", "name", "autoCollapse"], [3, "click", "item", "name", "activeItemId", "autoCollapse", "skipChildren"]], template: function FuseVerticalNavigationComponent_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275projectionDef(_c14);
    \u0275\u0275elementStart(0, "div", 1)(1, "div", 2);
    \u0275\u0275projection(2);
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(3, "div", 3, 0)(5, "div", 4);
    \u0275\u0275projection(6, 1);
    \u0275\u0275elementEnd();
    \u0275\u0275repeaterCreate(7, FuseVerticalNavigationComponent_For_8_Template, 1, 1, null, null, ctx.trackByFn, true);
    \u0275\u0275elementStart(9, "div", 5);
    \u0275\u0275projection(10, 2);
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(11, "div", 6);
    \u0275\u0275projection(12, 3);
    \u0275\u0275elementEnd()();
    \u0275\u0275template(13, FuseVerticalNavigationComponent_Conditional_13_Template, 3, 6, "div", 7);
  }
  if (rf & 2) {
    \u0275\u0275advance(3);
    \u0275\u0275property("fuseScrollbarOptions", \u0275\u0275pureFunction1(2, _c32, ctx.inner));
    \u0275\u0275advance(4);
    \u0275\u0275repeater(ctx.navigation);
    \u0275\u0275advance(6);
    \u0275\u0275conditional(ctx.activeAsideItemId ? 13 : -1);
  }
}, dependencies: [
  FuseScrollbarDirective,
  FuseVerticalNavigationAsideItemComponent,
  FuseVerticalNavigationBasicItemComponent,
  FuseVerticalNavigationCollapsableItemComponent,
  FuseVerticalNavigationDividerItemComponent,
  FuseVerticalNavigationGroupItemComponent,
  FuseVerticalNavigationSpacerItemComponent
], styles: ['/* src/@fuse/components/navigation/vertical/vertical.component.scss */\n:root {\n  --fuse-vertical-navigation-width: 280px;\n}\nfuse-vertical-navigation {\n  position: sticky;\n  display: flex;\n  flex-direction: column;\n  flex: 1 0 auto;\n  top: 0;\n  width: var(--fuse-vertical-navigation-width);\n  min-width: var(--fuse-vertical-navigation-width);\n  max-width: var(--fuse-vertical-navigation-width);\n  height: 100vh;\n  min-height: 100vh;\n  max-height: 100vh;\n  z-index: 200;\n}\nfuse-vertical-navigation.fuse-vertical-navigation-animations-enabled {\n  transition-duration: 400ms;\n  transition-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1);\n  transition-property:\n    visibility,\n    margin-left,\n    margin-right,\n    transform,\n    width,\n    max-width,\n    min-width;\n}\nfuse-vertical-navigation.fuse-vertical-navigation-animations-enabled .fuse-vertical-navigation-wrapper {\n  transition-duration: 400ms;\n  transition-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1);\n  transition-property:\n    width,\n    max-width,\n    min-width;\n}\nfuse-vertical-navigation.fuse-vertical-navigation-mode-over {\n  position: fixed;\n  top: 0;\n  bottom: 0;\n}\nfuse-vertical-navigation.fuse-vertical-navigation-position-left {\n}\nfuse-vertical-navigation.fuse-vertical-navigation-position-left.fuse-vertical-navigation-mode-side {\n  margin-left: calc(var(--fuse-vertical-navigation-width) * -1);\n}\nfuse-vertical-navigation.fuse-vertical-navigation-position-left.fuse-vertical-navigation-mode-side.fuse-vertical-navigation-opened {\n  margin-left: 0;\n}\nfuse-vertical-navigation.fuse-vertical-navigation-position-left.fuse-vertical-navigation-mode-over {\n  left: 0;\n  transform: translate3d(-100%, 0, 0);\n}\nfuse-vertical-navigation.fuse-vertical-navigation-position-left.fuse-vertical-navigation-mode-over.fuse-vertical-navigation-opened {\n  transform: translate3d(0, 0, 0);\n}\nfuse-vertical-navigation.fuse-vertical-navigation-position-left .fuse-vertical-navigation-wrapper {\n  left: 0;\n}\nfuse-vertical-navigation.fuse-vertical-navigation-position-right {\n}\nfuse-vertical-navigation.fuse-vertical-navigation-position-right.fuse-vertical-navigation-mode-side {\n  margin-right: calc(var(--fuse-vertical-navigation-width) * -1);\n}\nfuse-vertical-navigation.fuse-vertical-navigation-position-right.fuse-vertical-navigation-mode-side.fuse-vertical-navigation-opened {\n  margin-right: 0;\n}\nfuse-vertical-navigation.fuse-vertical-navigation-position-right.fuse-vertical-navigation-mode-over {\n  right: 0;\n  transform: translate3d(100%, 0, 0);\n}\nfuse-vertical-navigation.fuse-vertical-navigation-position-right.fuse-vertical-navigation-mode-over.fuse-vertical-navigation-opened {\n  transform: translate3d(0, 0, 0);\n}\nfuse-vertical-navigation.fuse-vertical-navigation-position-right .fuse-vertical-navigation-wrapper {\n  right: 0;\n}\nfuse-vertical-navigation.fuse-vertical-navigation-inner {\n  position: relative;\n  width: auto;\n  min-width: 0;\n  max-width: none;\n  height: auto;\n  min-height: 0;\n  max-height: none;\n  box-shadow: none;\n}\nfuse-vertical-navigation.fuse-vertical-navigation-inner .fuse-vertical-navigation-wrapper {\n  position: relative;\n  overflow: visible;\n  height: auto;\n}\nfuse-vertical-navigation.fuse-vertical-navigation-inner .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content {\n  overflow: visible !important;\n}\nfuse-vertical-navigation .fuse-vertical-navigation-wrapper {\n  position: absolute;\n  display: flex;\n  flex: 1 1 auto;\n  flex-direction: column;\n  top: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  z-index: 10;\n  background: inherit;\n  box-shadow: inset -1px 0 0 var(--fuse-border);\n}\nfuse-vertical-navigation .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content {\n  flex: 1 1 auto;\n  overflow-x: hidden;\n  overflow-y: auto;\n  overscroll-behavior: contain;\n}\nfuse-vertical-navigation .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content > fuse-vertical-navigation-divider-item {\n  margin: 24px 0;\n}\nfuse-vertical-navigation .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content > fuse-vertical-navigation-group-item {\n  margin-top: 24px;\n}\nfuse-vertical-navigation .fuse-vertical-navigation-aside-wrapper {\n  position: absolute;\n  display: flex;\n  flex: 1 1 auto;\n  flex-direction: column;\n  top: 0;\n  bottom: 0;\n  left: var(--fuse-vertical-navigation-width);\n  width: var(--fuse-vertical-navigation-width);\n  height: 100%;\n  z-index: 5;\n  overflow-x: hidden;\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n  transition-duration: 400ms;\n  transition-property: left, right;\n  transition-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1);\n  background: inherit;\n}\nfuse-vertical-navigation .fuse-vertical-navigation-aside-wrapper > fuse-vertical-navigation-aside-item {\n  padding: 24px 0;\n}\nfuse-vertical-navigation .fuse-vertical-navigation-aside-wrapper > fuse-vertical-navigation-aside-item > .fuse-vertical-navigation-item-wrapper {\n  display: none !important;\n}\nfuse-vertical-navigation.fuse-vertical-navigation-position-right .fuse-vertical-navigation-aside-wrapper {\n  left: auto;\n  right: var(--fuse-vertical-navigation-width);\n}\nfuse-vertical-navigation fuse-vertical-navigation-aside-item,\nfuse-vertical-navigation fuse-vertical-navigation-basic-item,\nfuse-vertical-navigation fuse-vertical-navigation-collapsable-item,\nfuse-vertical-navigation fuse-vertical-navigation-divider-item,\nfuse-vertical-navigation fuse-vertical-navigation-group-item,\nfuse-vertical-navigation fuse-vertical-navigation-spacer-item {\n  display: flex;\n  flex-direction: column;\n  flex: 1 0 auto;\n  -webkit-user-select: none;\n  user-select: none;\n}\nfuse-vertical-navigation fuse-vertical-navigation-aside-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item,\nfuse-vertical-navigation fuse-vertical-navigation-basic-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item,\nfuse-vertical-navigation fuse-vertical-navigation-collapsable-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item,\nfuse-vertical-navigation fuse-vertical-navigation-divider-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item,\nfuse-vertical-navigation fuse-vertical-navigation-group-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item,\nfuse-vertical-navigation fuse-vertical-navigation-spacer-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item {\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  padding: 10px 16px;\n  font-size: 13px;\n  font-weight: 500;\n  line-height: 20px;\n  text-decoration: none;\n  border-radius: 6px;\n}\nfuse-vertical-navigation fuse-vertical-navigation-aside-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item.fuse-vertical-navigation-item-disabled,\nfuse-vertical-navigation fuse-vertical-navigation-basic-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item.fuse-vertical-navigation-item-disabled,\nfuse-vertical-navigation fuse-vertical-navigation-collapsable-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item.fuse-vertical-navigation-item-disabled,\nfuse-vertical-navigation fuse-vertical-navigation-divider-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item.fuse-vertical-navigation-item-disabled,\nfuse-vertical-navigation fuse-vertical-navigation-group-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item.fuse-vertical-navigation-item-disabled,\nfuse-vertical-navigation fuse-vertical-navigation-spacer-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item.fuse-vertical-navigation-item-disabled {\n  cursor: default;\n  opacity: 0.4;\n}\nfuse-vertical-navigation fuse-vertical-navigation-aside-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-icon,\nfuse-vertical-navigation fuse-vertical-navigation-basic-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-icon,\nfuse-vertical-navigation fuse-vertical-navigation-collapsable-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-icon,\nfuse-vertical-navigation fuse-vertical-navigation-divider-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-icon,\nfuse-vertical-navigation fuse-vertical-navigation-group-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-icon,\nfuse-vertical-navigation fuse-vertical-navigation-spacer-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-icon {\n  margin-right: 16px;\n}\nfuse-vertical-navigation fuse-vertical-navigation-aside-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-title-wrapper .fuse-vertical-navigation-item-subtitle,\nfuse-vertical-navigation fuse-vertical-navigation-basic-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-title-wrapper .fuse-vertical-navigation-item-subtitle,\nfuse-vertical-navigation fuse-vertical-navigation-collapsable-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-title-wrapper .fuse-vertical-navigation-item-subtitle,\nfuse-vertical-navigation fuse-vertical-navigation-divider-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-title-wrapper .fuse-vertical-navigation-item-subtitle,\nfuse-vertical-navigation fuse-vertical-navigation-group-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-title-wrapper .fuse-vertical-navigation-item-subtitle,\nfuse-vertical-navigation fuse-vertical-navigation-spacer-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-title-wrapper .fuse-vertical-navigation-item-subtitle {\n  font-size: 11px;\n  line-height: 1.5;\n}\nfuse-vertical-navigation fuse-vertical-navigation-aside-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-badge,\nfuse-vertical-navigation fuse-vertical-navigation-basic-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-badge,\nfuse-vertical-navigation fuse-vertical-navigation-collapsable-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-badge,\nfuse-vertical-navigation fuse-vertical-navigation-divider-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-badge,\nfuse-vertical-navigation fuse-vertical-navigation-group-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-badge,\nfuse-vertical-navigation fuse-vertical-navigation-spacer-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-badge {\n  margin-left: auto;\n}\nfuse-vertical-navigation fuse-vertical-navigation-aside-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-badge .fuse-vertical-navigation-item-badge-content,\nfuse-vertical-navigation fuse-vertical-navigation-basic-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-badge .fuse-vertical-navigation-item-badge-content,\nfuse-vertical-navigation fuse-vertical-navigation-collapsable-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-badge .fuse-vertical-navigation-item-badge-content,\nfuse-vertical-navigation fuse-vertical-navigation-divider-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-badge .fuse-vertical-navigation-item-badge-content,\nfuse-vertical-navigation fuse-vertical-navigation-group-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-badge .fuse-vertical-navigation-item-badge-content,\nfuse-vertical-navigation fuse-vertical-navigation-spacer-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-badge .fuse-vertical-navigation-item-badge-content {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 10px;\n  font-weight: 600;\n  white-space: nowrap;\n  height: 20px;\n}\nfuse-vertical-navigation fuse-vertical-navigation-aside-item > .fuse-vertical-navigation-item-wrapper,\nfuse-vertical-navigation fuse-vertical-navigation-basic-item > .fuse-vertical-navigation-item-wrapper,\nfuse-vertical-navigation fuse-vertical-navigation-collapsable-item > .fuse-vertical-navigation-item-wrapper,\nfuse-vertical-navigation fuse-vertical-navigation-group-item > .fuse-vertical-navigation-item-wrapper {\n  margin: 0 12px;\n}\nfuse-vertical-navigation fuse-vertical-navigation-aside-item,\nfuse-vertical-navigation fuse-vertical-navigation-basic-item,\nfuse-vertical-navigation fuse-vertical-navigation-collapsable-item {\n  margin-bottom: 4px;\n}\nfuse-vertical-navigation fuse-vertical-navigation-aside-item .fuse-vertical-navigation-item,\nfuse-vertical-navigation fuse-vertical-navigation-basic-item .fuse-vertical-navigation-item,\nfuse-vertical-navigation fuse-vertical-navigation-collapsable-item .fuse-vertical-navigation-item {\n  cursor: pointer;\n}\nfuse-vertical-navigation fuse-vertical-navigation-collapsable-item {\n}\nfuse-vertical-navigation fuse-vertical-navigation-collapsable-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-badge + .fuse-vertical-navigation-item-arrow {\n  margin-left: 8px;\n}\nfuse-vertical-navigation fuse-vertical-navigation-collapsable-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-arrow {\n  height: 20px;\n  line-height: 20px;\n  margin-left: auto;\n  transition: transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1), color 375ms cubic-bezier(0.25, 0.8, 0.25, 1);\n}\nfuse-vertical-navigation fuse-vertical-navigation-collapsable-item.fuse-vertical-navigation-item-expanded > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-arrow {\n  transform: rotate(90deg);\n}\nfuse-vertical-navigation fuse-vertical-navigation-collapsable-item > .fuse-vertical-navigation-item-children > *:first-child {\n  margin-top: 6px;\n}\nfuse-vertical-navigation fuse-vertical-navigation-collapsable-item > .fuse-vertical-navigation-item-children > *:last-child {\n  padding-bottom: 6px;\n}\nfuse-vertical-navigation fuse-vertical-navigation-collapsable-item > .fuse-vertical-navigation-item-children > *:last-child > .fuse-vertical-navigation-item-children > *:last-child {\n  padding-bottom: 0;\n}\nfuse-vertical-navigation fuse-vertical-navigation-collapsable-item > .fuse-vertical-navigation-item-children .fuse-vertical-navigation-item {\n  padding: 10px 16px;\n}\nfuse-vertical-navigation fuse-vertical-navigation-collapsable-item .fuse-vertical-navigation-item-children {\n  overflow: hidden;\n}\nfuse-vertical-navigation fuse-vertical-navigation-collapsable-item .fuse-vertical-navigation-item-children .fuse-vertical-navigation-item {\n  padding-left: 56px;\n}\nfuse-vertical-navigation fuse-vertical-navigation-collapsable-item .fuse-vertical-navigation-item-children .fuse-vertical-navigation-item-children {\n}\nfuse-vertical-navigation fuse-vertical-navigation-collapsable-item .fuse-vertical-navigation-item-children .fuse-vertical-navigation-item-children .fuse-vertical-navigation-item {\n  padding-left: 72px;\n}\nfuse-vertical-navigation fuse-vertical-navigation-collapsable-item .fuse-vertical-navigation-item-children .fuse-vertical-navigation-item-children .fuse-vertical-navigation-item-children {\n}\nfuse-vertical-navigation fuse-vertical-navigation-collapsable-item .fuse-vertical-navigation-item-children .fuse-vertical-navigation-item-children .fuse-vertical-navigation-item-children .fuse-vertical-navigation-item {\n  padding-left: 88px;\n}\nfuse-vertical-navigation fuse-vertical-navigation-collapsable-item .fuse-vertical-navigation-item-children .fuse-vertical-navigation-item-children .fuse-vertical-navigation-item-children .fuse-vertical-navigation-item-children .fuse-vertical-navigation-item {\n  padding-left: 104px;\n}\nfuse-vertical-navigation fuse-vertical-navigation-divider-item {\n  margin: 12px 0;\n}\nfuse-vertical-navigation fuse-vertical-navigation-divider-item .fuse-vertical-navigation-item-wrapper {\n  height: 1px;\n  box-shadow: 0 1px 0 0;\n}\nfuse-vertical-navigation fuse-vertical-navigation-group-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-badge,\nfuse-vertical-navigation fuse-vertical-navigation-group-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-icon {\n  display: none !important;\n}\nfuse-vertical-navigation fuse-vertical-navigation-group-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-title-wrapper .fuse-vertical-navigation-item-title {\n  font-size: 12px;\n  font-weight: 600;\n  letter-spacing: 0.05em;\n  text-transform: uppercase;\n}\nfuse-vertical-navigation fuse-vertical-navigation-spacer-item {\n  margin: 6px 0;\n}\n.fuse-vertical-navigation-overlay {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  z-index: 170;\n  opacity: 0;\n  background-color: rgba(0, 0, 0, 0.6);\n}\n.fuse-vertical-navigation-overlay + .fuse-vertical-navigation-aside-overlay {\n  background-color: transparent;\n}\n.fuse-vertical-navigation-aside-overlay {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  z-index: 169;\n  opacity: 0;\n  background-color: rgba(0, 0, 0, 0.3);\n}\nfuse-vertical-navigation-aside-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item,\nfuse-vertical-navigation-basic-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item,\nfuse-vertical-navigation-collapsable-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item,\nfuse-vertical-navigation-group-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item {\n  color: currentColor;\n}\nfuse-vertical-navigation-aside-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-icon,\nfuse-vertical-navigation-basic-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-icon,\nfuse-vertical-navigation-collapsable-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-icon,\nfuse-vertical-navigation-group-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-icon {\n  color: currentColor;\n  opacity: 0.6;\n}\nfuse-vertical-navigation-aside-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-title-wrapper .fuse-vertical-navigation-item-title,\nfuse-vertical-navigation-basic-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-title-wrapper .fuse-vertical-navigation-item-title,\nfuse-vertical-navigation-collapsable-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-title-wrapper .fuse-vertical-navigation-item-title,\nfuse-vertical-navigation-group-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-title-wrapper .fuse-vertical-navigation-item-title {\n  color: currentColor;\n  opacity: 0.8;\n}\nfuse-vertical-navigation-aside-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-title-wrapper .fuse-vertical-navigation-item-subtitle,\nfuse-vertical-navigation-basic-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-title-wrapper .fuse-vertical-navigation-item-subtitle,\nfuse-vertical-navigation-collapsable-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-title-wrapper .fuse-vertical-navigation-item-subtitle,\nfuse-vertical-navigation-group-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-title-wrapper .fuse-vertical-navigation-item-subtitle {\n  color: currentColor;\n  opacity: 0.5;\n}\nfuse-vertical-navigation-aside-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item,\nfuse-vertical-navigation-basic-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item,\nfuse-vertical-navigation-collapsable-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item {\n}\nfuse-vertical-navigation-aside-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item:not(.fuse-vertical-navigation-item-disabled).fuse-vertical-navigation-item-active,\nfuse-vertical-navigation-aside-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item:not(.fuse-vertical-navigation-item-disabled).fuse-vertical-navigation-item-active-forced,\nfuse-vertical-navigation-basic-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item:not(.fuse-vertical-navigation-item-disabled).fuse-vertical-navigation-item-active,\nfuse-vertical-navigation-basic-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item:not(.fuse-vertical-navigation-item-disabled).fuse-vertical-navigation-item-active-forced,\nfuse-vertical-navigation-collapsable-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item:not(.fuse-vertical-navigation-item-disabled).fuse-vertical-navigation-item-active,\nfuse-vertical-navigation-collapsable-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item:not(.fuse-vertical-navigation-item-disabled).fuse-vertical-navigation-item-active-forced {\n  background-color: rgb(30 41 59 / var(--tw-bg-opacity));\n  --tw-bg-opacity: 0.05;\n}\nfuse-vertical-navigation-aside-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item:not(.fuse-vertical-navigation-item-disabled).fuse-vertical-navigation-item-active:is(.dark *),\nfuse-vertical-navigation-aside-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item:not(.fuse-vertical-navigation-item-disabled).fuse-vertical-navigation-item-active-forced:is(.dark *),\nfuse-vertical-navigation-basic-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item:not(.fuse-vertical-navigation-item-disabled).fuse-vertical-navigation-item-active:is(.dark *),\nfuse-vertical-navigation-basic-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item:not(.fuse-vertical-navigation-item-disabled).fuse-vertical-navigation-item-active-forced:is(.dark *),\nfuse-vertical-navigation-collapsable-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item:not(.fuse-vertical-navigation-item-disabled).fuse-vertical-navigation-item-active:is(.dark *),\nfuse-vertical-navigation-collapsable-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item:not(.fuse-vertical-navigation-item-disabled).fuse-vertical-navigation-item-active-forced:is(.dark *) {\n  background-color: rgb(255 255 255 / var(--tw-bg-opacity));\n  --tw-bg-opacity: 0.12;\n}\nfuse-vertical-navigation-aside-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item:not(.fuse-vertical-navigation-item-disabled).fuse-vertical-navigation-item-active .fuse-vertical-navigation-item-icon,\nfuse-vertical-navigation-aside-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item:not(.fuse-vertical-navigation-item-disabled).fuse-vertical-navigation-item-active-forced .fuse-vertical-navigation-item-icon,\nfuse-vertical-navigation-basic-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item:not(.fuse-vertical-navigation-item-disabled).fuse-vertical-navigation-item-active .fuse-vertical-navigation-item-icon,\nfuse-vertical-navigation-basic-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item:not(.fuse-vertical-navigation-item-disabled).fuse-vertical-navigation-item-active-forced .fuse-vertical-navigation-item-icon,\nfuse-vertical-navigation-collapsable-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item:not(.fuse-vertical-navigation-item-disabled).fuse-vertical-navigation-item-active .fuse-vertical-navigation-item-icon,\nfuse-vertical-navigation-collapsable-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item:not(.fuse-vertical-navigation-item-disabled).fuse-vertical-navigation-item-active-forced .fuse-vertical-navigation-item-icon {\n  opacity: 1;\n}\nfuse-vertical-navigation-aside-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item:not(.fuse-vertical-navigation-item-disabled).fuse-vertical-navigation-item-active .fuse-vertical-navigation-item-title,\nfuse-vertical-navigation-aside-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item:not(.fuse-vertical-navigation-item-disabled).fuse-vertical-navigation-item-active-forced .fuse-vertical-navigation-item-title,\nfuse-vertical-navigation-basic-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item:not(.fuse-vertical-navigation-item-disabled).fuse-vertical-navigation-item-active .fuse-vertical-navigation-item-title,\nfuse-vertical-navigation-basic-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item:not(.fuse-vertical-navigation-item-disabled).fuse-vertical-navigation-item-active-forced .fuse-vertical-navigation-item-title,\nfuse-vertical-navigation-collapsable-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item:not(.fuse-vertical-navigation-item-disabled).fuse-vertical-navigation-item-active .fuse-vertical-navigation-item-title,\nfuse-vertical-navigation-collapsable-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item:not(.fuse-vertical-navigation-item-disabled).fuse-vertical-navigation-item-active-forced .fuse-vertical-navigation-item-title {\n  opacity: 1;\n}\nfuse-vertical-navigation-aside-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item:not(.fuse-vertical-navigation-item-disabled).fuse-vertical-navigation-item-active .fuse-vertical-navigation-item-subtitle,\nfuse-vertical-navigation-aside-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item:not(.fuse-vertical-navigation-item-disabled).fuse-vertical-navigation-item-active-forced .fuse-vertical-navigation-item-subtitle,\nfuse-vertical-navigation-basic-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item:not(.fuse-vertical-navigation-item-disabled).fuse-vertical-navigation-item-active .fuse-vertical-navigation-item-subtitle,\nfuse-vertical-navigation-basic-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item:not(.fuse-vertical-navigation-item-disabled).fuse-vertical-navigation-item-active-forced .fuse-vertical-navigation-item-subtitle,\nfuse-vertical-navigation-collapsable-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item:not(.fuse-vertical-navigation-item-disabled).fuse-vertical-navigation-item-active .fuse-vertical-navigation-item-subtitle,\nfuse-vertical-navigation-collapsable-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item:not(.fuse-vertical-navigation-item-disabled).fuse-vertical-navigation-item-active-forced .fuse-vertical-navigation-item-subtitle {\n  opacity: 1;\n}\nfuse-vertical-navigation-aside-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item:not(.fuse-vertical-navigation-item-active-forced):not(.fuse-vertical-navigation-item-active):not(.fuse-vertical-navigation-item-disabled):hover,\nfuse-vertical-navigation-basic-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item:not(.fuse-vertical-navigation-item-active-forced):not(.fuse-vertical-navigation-item-active):not(.fuse-vertical-navigation-item-disabled):hover,\nfuse-vertical-navigation-collapsable-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item:not(.fuse-vertical-navigation-item-active-forced):not(.fuse-vertical-navigation-item-active):not(.fuse-vertical-navigation-item-disabled):hover {\n  background-color: rgb(30 41 59 / var(--tw-bg-opacity));\n  --tw-bg-opacity: 0.05;\n}\nfuse-vertical-navigation-aside-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item:not(.fuse-vertical-navigation-item-active-forced):not(.fuse-vertical-navigation-item-active):not(.fuse-vertical-navigation-item-disabled):hover:is(.dark *),\nfuse-vertical-navigation-basic-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item:not(.fuse-vertical-navigation-item-active-forced):not(.fuse-vertical-navigation-item-active):not(.fuse-vertical-navigation-item-disabled):hover:is(.dark *),\nfuse-vertical-navigation-collapsable-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item:not(.fuse-vertical-navigation-item-active-forced):not(.fuse-vertical-navigation-item-active):not(.fuse-vertical-navigation-item-disabled):hover:is(.dark *) {\n  background-color: rgb(255 255 255 / var(--tw-bg-opacity));\n  --tw-bg-opacity: 0.12;\n}\nfuse-vertical-navigation-aside-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item:not(.fuse-vertical-navigation-item-active-forced):not(.fuse-vertical-navigation-item-active):not(.fuse-vertical-navigation-item-disabled):hover .fuse-vertical-navigation-item-icon,\nfuse-vertical-navigation-basic-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item:not(.fuse-vertical-navigation-item-active-forced):not(.fuse-vertical-navigation-item-active):not(.fuse-vertical-navigation-item-disabled):hover .fuse-vertical-navigation-item-icon,\nfuse-vertical-navigation-collapsable-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item:not(.fuse-vertical-navigation-item-active-forced):not(.fuse-vertical-navigation-item-active):not(.fuse-vertical-navigation-item-disabled):hover .fuse-vertical-navigation-item-icon {\n  opacity: 1;\n}\nfuse-vertical-navigation-aside-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item:not(.fuse-vertical-navigation-item-active-forced):not(.fuse-vertical-navigation-item-active):not(.fuse-vertical-navigation-item-disabled):hover .fuse-vertical-navigation-item-title,\nfuse-vertical-navigation-aside-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item:not(.fuse-vertical-navigation-item-active-forced):not(.fuse-vertical-navigation-item-active):not(.fuse-vertical-navigation-item-disabled):hover .fuse-vertical-navigation-item-arrow,\nfuse-vertical-navigation-basic-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item:not(.fuse-vertical-navigation-item-active-forced):not(.fuse-vertical-navigation-item-active):not(.fuse-vertical-navigation-item-disabled):hover .fuse-vertical-navigation-item-title,\nfuse-vertical-navigation-basic-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item:not(.fuse-vertical-navigation-item-active-forced):not(.fuse-vertical-navigation-item-active):not(.fuse-vertical-navigation-item-disabled):hover .fuse-vertical-navigation-item-arrow,\nfuse-vertical-navigation-collapsable-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item:not(.fuse-vertical-navigation-item-active-forced):not(.fuse-vertical-navigation-item-active):not(.fuse-vertical-navigation-item-disabled):hover .fuse-vertical-navigation-item-title,\nfuse-vertical-navigation-collapsable-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item:not(.fuse-vertical-navigation-item-active-forced):not(.fuse-vertical-navigation-item-active):not(.fuse-vertical-navigation-item-disabled):hover .fuse-vertical-navigation-item-arrow {\n  opacity: 1;\n}\nfuse-vertical-navigation-aside-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item:not(.fuse-vertical-navigation-item-active-forced):not(.fuse-vertical-navigation-item-active):not(.fuse-vertical-navigation-item-disabled):hover .fuse-vertical-navigation-item-subtitle,\nfuse-vertical-navigation-basic-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item:not(.fuse-vertical-navigation-item-active-forced):not(.fuse-vertical-navigation-item-active):not(.fuse-vertical-navigation-item-disabled):hover .fuse-vertical-navigation-item-subtitle,\nfuse-vertical-navigation-collapsable-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item:not(.fuse-vertical-navigation-item-active-forced):not(.fuse-vertical-navigation-item-active):not(.fuse-vertical-navigation-item-disabled):hover .fuse-vertical-navigation-item-subtitle {\n  opacity: 1;\n}\nfuse-vertical-navigation-collapsable-item {\n}\nfuse-vertical-navigation-collapsable-item.fuse-vertical-navigation-item-expanded > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-icon {\n  opacity: 1;\n}\nfuse-vertical-navigation-collapsable-item.fuse-vertical-navigation-item-expanded > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-title,\nfuse-vertical-navigation-collapsable-item.fuse-vertical-navigation-item-expanded > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-arrow {\n  opacity: 1;\n}\nfuse-vertical-navigation-collapsable-item.fuse-vertical-navigation-item-expanded > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-subtitle {\n  opacity: 1;\n}\nfuse-vertical-navigation-group-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-title-wrapper .fuse-vertical-navigation-item-title {\n  --tw-text-opacity: 1;\n  color: rgba(var(--fuse-primary-600-rgb), var(--tw-text-opacity));\n  opacity: 1;\n}\nfuse-vertical-navigation-group-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-title-wrapper .fuse-vertical-navigation-item-title:is(.dark *) {\n  --tw-text-opacity: 1;\n  color: rgba(var(--fuse-primary-400-rgb), var(--tw-text-opacity));\n}\n:root {\n  --fuse-vertical-navigation-compact-width: 112px;\n}\nfuse-vertical-navigation {\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-compact {\n  width: var(--fuse-vertical-navigation-compact-width);\n  min-width: var(--fuse-vertical-navigation-compact-width);\n  max-width: var(--fuse-vertical-navigation-compact-width);\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-compact.fuse-vertical-navigation-position-left {\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-compact.fuse-vertical-navigation-position-left.fuse-vertical-navigation-mode-side {\n  margin-left: calc(var(--fuse-vertical-navigation-compact-width) * -1);\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-compact.fuse-vertical-navigation-position-left.fuse-vertical-navigation-opened {\n  margin-left: 0;\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-compact.fuse-vertical-navigation-position-right {\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-compact.fuse-vertical-navigation-position-right.fuse-vertical-navigation-mode-side {\n  margin-right: calc(var(--fuse-vertical-navigation-compact-width) * -1);\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-compact.fuse-vertical-navigation-position-right.fuse-vertical-navigation-opened {\n  margin-right: 0;\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-compact.fuse-vertical-navigation-position-right .fuse-vertical-navigation-aside-wrapper {\n  left: auto;\n  right: var(--fuse-vertical-navigation-compact-width);\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-compact .fuse-vertical-navigation-wrapper {\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-compact .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content > fuse-vertical-navigation-aside-item .fuse-vertical-navigation-item-wrapper,\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-compact .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content > fuse-vertical-navigation-basic-item .fuse-vertical-navigation-item-wrapper {\n  margin: 4px 8px 0 8px;\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-compact .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content > fuse-vertical-navigation-aside-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item,\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-compact .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content > fuse-vertical-navigation-basic-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item {\n  flex-direction: column;\n  justify-content: center;\n  padding: 12px;\n  border-radius: 6px;\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-compact .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content > fuse-vertical-navigation-aside-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-icon,\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-compact .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content > fuse-vertical-navigation-basic-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-icon {\n  margin-right: 0;\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-compact .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content > fuse-vertical-navigation-aside-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-title-wrapper,\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-compact .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content > fuse-vertical-navigation-basic-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-title-wrapper {\n  margin-top: 8px;\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-compact .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content > fuse-vertical-navigation-aside-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-title-wrapper .fuse-vertical-navigation-item-title,\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-compact .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content > fuse-vertical-navigation-basic-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-title-wrapper .fuse-vertical-navigation-item-title {\n  font-size: 12px;\n  font-weight: 500;\n  text-align: center;\n  line-height: 16px;\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-compact .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content > fuse-vertical-navigation-aside-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-title-wrapper .fuse-vertical-navigation-item-subtitle,\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-compact .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content > fuse-vertical-navigation-basic-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-title-wrapper .fuse-vertical-navigation-item-subtitle {\n  display: none !important;\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-compact .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content > fuse-vertical-navigation-aside-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-badge,\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-compact .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content > fuse-vertical-navigation-basic-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-badge {\n  position: absolute;\n  top: 12px;\n  left: 64px;\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-compact .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content > fuse-vertical-navigation-aside-item > fuse-vertical-navigation-collapsable-item,\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-compact .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content > fuse-vertical-navigation-basic-item > fuse-vertical-navigation-collapsable-item {\n  display: none;\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-compact .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content > fuse-vertical-navigation-aside-item > fuse-vertical-navigation-group-item > .fuse-vertical-navigation-item-wrapper,\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-compact .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content > fuse-vertical-navigation-basic-item > fuse-vertical-navigation-group-item > .fuse-vertical-navigation-item-wrapper {\n  display: none;\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-compact .fuse-vertical-navigation-aside-wrapper {\n  left: var(--fuse-vertical-navigation-compact-width);\n}\n:root {\n  --fuse-vertical-navigation-width: 280px;\n  --fuse-vertical-navigation-dense-width: 80px;\n}\nfuse-vertical-navigation {\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-dense {\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-dense:not(.fuse-vertical-navigation-mode-over) {\n  width: var(--fuse-vertical-navigation-dense-width);\n  min-width: var(--fuse-vertical-navigation-dense-width);\n  max-width: var(--fuse-vertical-navigation-dense-width);\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-dense:not(.fuse-vertical-navigation-mode-over).fuse-vertical-navigation-position-left {\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-dense:not(.fuse-vertical-navigation-mode-over).fuse-vertical-navigation-position-left.fuse-vertical-navigation-mode-side {\n  margin-left: calc(var(--fuse-vertical-navigation-dense-width) * -1);\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-dense:not(.fuse-vertical-navigation-mode-over).fuse-vertical-navigation-position-left.fuse-vertical-navigation-opened {\n  margin-left: 0;\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-dense:not(.fuse-vertical-navigation-mode-over).fuse-vertical-navigation-position-right {\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-dense:not(.fuse-vertical-navigation-mode-over).fuse-vertical-navigation-position-right.fuse-vertical-navigation-mode-side {\n  margin-right: calc(var(--fuse-vertical-navigation-dense-width) * -1);\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-dense:not(.fuse-vertical-navigation-mode-over).fuse-vertical-navigation-position-right.fuse-vertical-navigation-opened {\n  margin-right: 0;\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-dense:not(.fuse-vertical-navigation-mode-over).fuse-vertical-navigation-position-right .fuse-vertical-navigation-aside-wrapper {\n  left: auto;\n  right: var(--fuse-vertical-navigation-dense-width);\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-dense:not(.fuse-vertical-navigation-mode-over).fuse-vertical-navigation-position-right.fuse-vertical-navigation-hover .fuse-vertical-navigation-aside-wrapper {\n  left: auto;\n  right: var(--fuse-vertical-navigation-width);\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-dense .fuse-vertical-navigation-wrapper {\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-dense .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content fuse-vertical-navigation-aside-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item,\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-dense .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content fuse-vertical-navigation-basic-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item,\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-dense .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content fuse-vertical-navigation-collapsable-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item,\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-dense .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content fuse-vertical-navigation-group-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item {\n  width: calc(var(--fuse-vertical-navigation-dense-width) - 24px);\n  min-width: calc(var(--fuse-vertical-navigation-dense-width) - 24px);\n  max-width: calc(var(--fuse-vertical-navigation-dense-width) - 24px);\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-dense .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content fuse-vertical-navigation-aside-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-arrow,\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-dense .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content fuse-vertical-navigation-aside-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-badge,\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-dense .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content fuse-vertical-navigation-aside-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-title-wrapper,\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-dense .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content fuse-vertical-navigation-basic-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-arrow,\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-dense .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content fuse-vertical-navigation-basic-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-badge,\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-dense .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content fuse-vertical-navigation-basic-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-title-wrapper,\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-dense .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content fuse-vertical-navigation-collapsable-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-arrow,\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-dense .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content fuse-vertical-navigation-collapsable-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-badge,\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-dense .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content fuse-vertical-navigation-collapsable-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-title-wrapper,\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-dense .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content fuse-vertical-navigation-group-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-arrow,\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-dense .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content fuse-vertical-navigation-group-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-badge,\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-dense .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content fuse-vertical-navigation-group-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-title-wrapper {\n  transition: opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1);\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-dense .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content fuse-vertical-navigation-group-item:first-of-type {\n  margin-top: 0;\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-dense:not(.fuse-vertical-navigation-hover):not(.fuse-vertical-navigation-mode-over) {\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-dense:not(.fuse-vertical-navigation-hover):not(.fuse-vertical-navigation-mode-over) .fuse-vertical-navigation-wrapper {\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-dense:not(.fuse-vertical-navigation-hover):not(.fuse-vertical-navigation-mode-over) .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item {\n  padding: 10px 16px;\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-dense:not(.fuse-vertical-navigation-hover):not(.fuse-vertical-navigation-mode-over) .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-arrow,\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-dense:not(.fuse-vertical-navigation-hover):not(.fuse-vertical-navigation-mode-over) .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-badge,\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-dense:not(.fuse-vertical-navigation-hover):not(.fuse-vertical-navigation-mode-over) .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-title-wrapper {\n  white-space: nowrap;\n  opacity: 0;\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-dense:not(.fuse-vertical-navigation-hover):not(.fuse-vertical-navigation-mode-over) .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content fuse-vertical-navigation-collapsable-item .fuse-vertical-navigation-item-children {\n  display: none;\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-dense:not(.fuse-vertical-navigation-hover):not(.fuse-vertical-navigation-mode-over) .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content fuse-vertical-navigation-group-item > .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item:before {\n  content: "";\n  position: absolute;\n  top: 20px;\n  width: 23px;\n  border-top-width: 2px;\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-dense .fuse-vertical-navigation-aside-wrapper {\n  left: var(--fuse-vertical-navigation-dense-width);\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-dense.fuse-vertical-navigation-hover .fuse-vertical-navigation-wrapper {\n  width: var(--fuse-vertical-navigation-width);\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-dense.fuse-vertical-navigation-hover .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item {\n  width: calc(var(--fuse-vertical-navigation-width) - 24px);\n  min-width: calc(var(--fuse-vertical-navigation-width) - 24px);\n  max-width: calc(var(--fuse-vertical-navigation-width) - 24px);\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-dense.fuse-vertical-navigation-hover .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-arrow,\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-dense.fuse-vertical-navigation-hover .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-badge,\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-dense.fuse-vertical-navigation-hover .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-title-wrapper {\n  white-space: nowrap;\n  animation: removeWhiteSpaceNoWrap 1ms linear 350ms;\n  animation-fill-mode: forwards;\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-dense.fuse-vertical-navigation-hover .fuse-vertical-navigation-aside-wrapper {\n  left: var(--fuse-vertical-navigation-width);\n}\n@keyframes removeWhiteSpaceNoWrap {\n  0% {\n    white-space: nowrap;\n  }\n  99% {\n    white-space: nowrap;\n  }\n  100% {\n    white-space: normal;\n  }\n}\n:root {\n  --fuse-vertical-navigation-thin-width: 80px;\n}\nfuse-vertical-navigation {\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-thin {\n  width: var(--fuse-vertical-navigation-thin-width);\n  min-width: var(--fuse-vertical-navigation-thin-width);\n  max-width: var(--fuse-vertical-navigation-thin-width);\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-thin.fuse-vertical-navigation-position-left.fuse-vertical-navigation-mode-side {\n  margin-left: calc(var(--fuse-vertical-navigation-thin-width) * -1);\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-thin.fuse-vertical-navigation-position-left.fuse-vertical-navigation-opened {\n  margin-left: 0;\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-thin.fuse-vertical-navigation-position-right.fuse-vertical-navigation-mode-side {\n  margin-right: calc(var(--fuse-vertical-navigation-thin-width) * -1);\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-thin.fuse-vertical-navigation-position-right.fuse-vertical-navigation-opened {\n  margin-right: 0;\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-thin.fuse-vertical-navigation-position-right .fuse-vertical-navigation-aside-wrapper {\n  left: auto;\n  right: var(--fuse-vertical-navigation-thin-width);\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-thin .fuse-vertical-navigation-wrapper {\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-thin .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content > fuse-vertical-navigation-aside-item,\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-thin .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content > fuse-vertical-navigation-basic-item {\n  flex-direction: column;\n  justify-content: center;\n  height: 64px;\n  min-height: 64px;\n  max-height: 64px;\n  padding: 0 16px;\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-thin .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content > fuse-vertical-navigation-aside-item .fuse-vertical-navigation-item-wrapper,\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-thin .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content > fuse-vertical-navigation-basic-item .fuse-vertical-navigation-item-wrapper {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-thin .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content > fuse-vertical-navigation-aside-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item,\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-thin .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content > fuse-vertical-navigation-basic-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item {\n  justify-content: center;\n  padding: 12px;\n  border-radius: 4px;\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-thin .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content > fuse-vertical-navigation-aside-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-icon,\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-thin .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content > fuse-vertical-navigation-basic-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-icon {\n  margin: 0;\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-thin .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content > fuse-vertical-navigation-aside-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-arrow,\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-thin .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content > fuse-vertical-navigation-aside-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-badge-content,\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-thin .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content > fuse-vertical-navigation-aside-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-title-wrapper,\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-thin .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content > fuse-vertical-navigation-basic-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-arrow,\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-thin .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content > fuse-vertical-navigation-basic-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-badge-content,\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-thin .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content > fuse-vertical-navigation-basic-item .fuse-vertical-navigation-item-wrapper .fuse-vertical-navigation-item .fuse-vertical-navigation-item-title-wrapper {\n  display: none;\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-thin .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content > fuse-vertical-navigation-collapsable-item {\n  display: none;\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-thin .fuse-vertical-navigation-wrapper .fuse-vertical-navigation-content > fuse-vertical-navigation-group-item > .fuse-vertical-navigation-item-wrapper {\n  display: none;\n}\nfuse-vertical-navigation.fuse-vertical-navigation-appearance-thin .fuse-vertical-navigation-aside-wrapper {\n  left: var(--fuse-vertical-navigation-thin-width);\n}\n/*# sourceMappingURL=vertical.component.css.map */\n'], encapsulation: 2, data: { animation: fuseAnimations }, changeDetection: 0 });
var FuseVerticalNavigationComponent = _FuseVerticalNavigationComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && \u0275setClassDebugInfo(FuseVerticalNavigationComponent, { className: "FuseVerticalNavigationComponent", filePath: "src\\@fuse\\components\\navigation\\vertical\\vertical.component.ts", lineNumber: 78 });
})();

// src/app/layout/common/languages/languages.component.ts
var _c08 = (a0) => ({ $implicit: a0 });
function LanguagesComponent_ng_container_1_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementContainer(0);
  }
}
function LanguagesComponent_For_5_ng_container_2_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementContainer(0);
  }
}
function LanguagesComponent_For_5_Template(rf, ctx) {
  if (rf & 1) {
    const _r1 = \u0275\u0275getCurrentView();
    \u0275\u0275elementStart(0, "button", 6);
    \u0275\u0275listener("click", function LanguagesComponent_For_5_Template_button_click_0_listener() {
      const lang_r2 = \u0275\u0275restoreView(_r1).$implicit;
      const ctx_r2 = \u0275\u0275nextContext();
      return \u0275\u0275resetView(ctx_r2.setActiveLang(lang_r2.id));
    });
    \u0275\u0275elementStart(1, "span", 7);
    \u0275\u0275template(2, LanguagesComponent_For_5_ng_container_2_Template, 1, 0, "ng-container", 3);
    \u0275\u0275elementStart(3, "span", 8);
    \u0275\u0275text(4);
    \u0275\u0275elementEnd()()();
  }
  if (rf & 2) {
    const lang_r2 = ctx.$implicit;
    \u0275\u0275nextContext();
    const flagImage_r4 = \u0275\u0275reference(7);
    \u0275\u0275advance(2);
    \u0275\u0275property("ngTemplateOutlet", flagImage_r4)("ngTemplateOutletContext", \u0275\u0275pureFunction1(3, _c08, lang_r2.id));
    \u0275\u0275advance(2);
    \u0275\u0275textInterpolate(lang_r2.label);
  }
}
function LanguagesComponent_ng_template_6_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "span", 9);
    \u0275\u0275element(1, "span", 10)(2, "img", 11);
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const lang_r5 = ctx.$implicit;
    const ctx_r2 = \u0275\u0275nextContext();
    \u0275\u0275advance(2);
    \u0275\u0275property("src", "images/flags/" + ctx_r2.flagCodes[lang_r5].toUpperCase() + ".svg", \u0275\u0275sanitizeUrl)("alt", "Flag image for " + lang_r5);
  }
}
var _LanguagesComponent = class _LanguagesComponent {
  /**
   * Constructor
   */
  constructor(_changeDetectorRef, _fuseNavigationService, _translocoService) {
    this._changeDetectorRef = _changeDetectorRef;
    this._fuseNavigationService = _fuseNavigationService;
    this._translocoService = _translocoService;
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Lifecycle hooks
  // -----------------------------------------------------------------------------------------------------
  /**
   * On init
   */
  ngOnInit() {
    this.availableLangs = this._translocoService.getAvailableLangs();
    this._translocoService.langChanges$.subscribe((activeLang) => {
      this.activeLang = activeLang;
      this._updateNavigation(activeLang);
    });
    this.flagCodes = {
      en: "us",
      tr: "tr"
    };
  }
  /**
   * On destroy
   */
  ngOnDestroy() {
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Set the active lang
   *
   * @param lang
   */
  setActiveLang(lang) {
    this._translocoService.setActiveLang(lang);
  }
  /**
   * Track by function for ngFor loops
   *
   * @param index
   * @param item
   */
  trackByFn(index, item) {
    return item.id || index;
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Private methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Update the navigation
   *
   * @param lang
   * @private
   */
  _updateNavigation(lang) {
    const navComponent = this._fuseNavigationService.getComponent("mainNavigation");
    if (!navComponent) {
      return null;
    }
    const navigation = navComponent.navigation;
    const projectDashboardItem = this._fuseNavigationService.getItem("dashboards.project", navigation);
    if (projectDashboardItem) {
      this._translocoService.selectTranslate("Project").pipe(take(1)).subscribe((translation) => {
        projectDashboardItem.title = translation;
        navComponent.refresh();
      });
    }
    const analyticsDashboardItem = this._fuseNavigationService.getItem("dashboards.analytics", navigation);
    if (analyticsDashboardItem) {
      this._translocoService.selectTranslate("Analytics").pipe(take(1)).subscribe((translation) => {
        analyticsDashboardItem.title = translation;
        navComponent.refresh();
      });
    }
  }
};
_LanguagesComponent.\u0275fac = function LanguagesComponent_Factory(t) {
  return new (t || _LanguagesComponent)(\u0275\u0275directiveInject(ChangeDetectorRef), \u0275\u0275directiveInject(FuseNavigationService), \u0275\u0275directiveInject(TranslocoService));
};
_LanguagesComponent.\u0275cmp = /* @__PURE__ */ \u0275\u0275defineComponent({ type: _LanguagesComponent, selectors: [["languages"]], exportAs: ["languages"], standalone: true, features: [\u0275\u0275StandaloneFeature], decls: 8, vars: 6, consts: [["languages", "matMenu"], ["flagImage", ""], ["mat-icon-button", "", 3, "matMenuTriggerFor"], [4, "ngTemplateOutlet", "ngTemplateOutletContext"], [3, "xPosition"], ["mat-menu-item", ""], ["mat-menu-item", "", 3, "click"], [1, "flex", "items-center"], [1, "ml-3"], [1, "relative", "w-6", "overflow-hidden", "rounded-sm", "shadow"], [1, "absolute", "inset-0", "ring-1", "ring-inset", "ring-black", "ring-opacity-10"], [1, "w-full", 3, "src", "alt"]], template: function LanguagesComponent_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "button", 2);
    \u0275\u0275template(1, LanguagesComponent_ng_container_1_Template, 1, 0, "ng-container", 3);
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(2, "mat-menu", 4, 0);
    \u0275\u0275repeaterCreate(4, LanguagesComponent_For_5_Template, 5, 5, "button", 5, ctx.trackByFn, true);
    \u0275\u0275elementEnd();
    \u0275\u0275template(6, LanguagesComponent_ng_template_6_Template, 3, 2, "ng-template", null, 1, \u0275\u0275templateRefExtractor);
  }
  if (rf & 2) {
    const languages_r6 = \u0275\u0275reference(3);
    const flagImage_r4 = \u0275\u0275reference(7);
    \u0275\u0275property("matMenuTriggerFor", languages_r6);
    \u0275\u0275advance();
    \u0275\u0275property("ngTemplateOutlet", flagImage_r4)("ngTemplateOutletContext", \u0275\u0275pureFunction1(4, _c08, ctx.activeLang));
    \u0275\u0275advance();
    \u0275\u0275property("xPosition", "before");
    \u0275\u0275advance(2);
    \u0275\u0275repeater(ctx.availableLangs);
  }
}, dependencies: [MatButtonModule, MatIconButton, MatMenuModule, MatMenu, MatMenuItem, MatMenuTrigger, NgTemplateOutlet], encapsulation: 2, changeDetection: 0 });
var LanguagesComponent = _LanguagesComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && \u0275setClassDebugInfo(LanguagesComponent, { className: "LanguagesComponent", filePath: "src\\app\\layout\\common\\languages\\languages.component.ts", lineNumber: 28 });
})();

// src/app/layout/common/messages/messages.component.ts
var _c09 = ["messagesOrigin"];
var _c15 = ["messagesPanel"];
var _c23 = (a0) => ({ unread: a0 });
var _c33 = (a0, a1) => ({ "bg-gray-400 dark:bg-gray-500 sm:opacity-0 sm:group-hover:opacity-100": a0, "bg-primary": a1 });
function MessagesComponent_Conditional_2_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "span", 4)(1, "span", 6);
    \u0275\u0275text(2);
    \u0275\u0275elementEnd()();
  }
  if (rf & 2) {
    const ctx_r1 = \u0275\u0275nextContext();
    \u0275\u0275advance(2);
    \u0275\u0275textInterpolate1(" ", ctx_r1.unreadCount, " ");
  }
}
function MessagesComponent_ng_template_4_For_12_Conditional_1_Conditional_0_ng_container_1_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementContainer(0);
  }
}
function MessagesComponent_ng_template_4_For_12_Conditional_1_Conditional_0_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "a", 23);
    \u0275\u0275template(1, MessagesComponent_ng_template_4_For_12_Conditional_1_Conditional_0_ng_container_1_Template, 1, 0, "ng-container", 25);
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const message_r5 = \u0275\u0275nextContext(2).$implicit;
    const messageContent_r6 = \u0275\u0275reference(9);
    \u0275\u0275property("href", message_r5.link, \u0275\u0275sanitizeUrl);
    \u0275\u0275advance();
    \u0275\u0275property("ngTemplateOutlet", messageContent_r6);
  }
}
function MessagesComponent_ng_template_4_For_12_Conditional_1_Conditional_1_ng_container_1_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementContainer(0);
  }
}
function MessagesComponent_ng_template_4_For_12_Conditional_1_Conditional_1_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "a", 24);
    \u0275\u0275template(1, MessagesComponent_ng_template_4_For_12_Conditional_1_Conditional_1_ng_container_1_Template, 1, 0, "ng-container", 25);
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const message_r5 = \u0275\u0275nextContext(2).$implicit;
    const messageContent_r6 = \u0275\u0275reference(9);
    \u0275\u0275property("routerLink", message_r5.link);
    \u0275\u0275advance();
    \u0275\u0275property("ngTemplateOutlet", messageContent_r6);
  }
}
function MessagesComponent_ng_template_4_For_12_Conditional_1_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275template(0, MessagesComponent_ng_template_4_For_12_Conditional_1_Conditional_0_Template, 2, 2, "a", 23)(1, MessagesComponent_ng_template_4_For_12_Conditional_1_Conditional_1_Template, 2, 2, "a", 24);
  }
  if (rf & 2) {
    const message_r5 = \u0275\u0275nextContext().$implicit;
    \u0275\u0275conditional(!message_r5.useRouter ? 0 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(message_r5.useRouter ? 1 : -1);
  }
}
function MessagesComponent_ng_template_4_For_12_Conditional_2_ng_container_1_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementContainer(0);
  }
}
function MessagesComponent_ng_template_4_For_12_Conditional_2_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 17);
    \u0275\u0275template(1, MessagesComponent_ng_template_4_For_12_Conditional_2_ng_container_1_Template, 1, 0, "ng-container", 25);
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    \u0275\u0275nextContext();
    const messageContent_r6 = \u0275\u0275reference(9);
    \u0275\u0275advance();
    \u0275\u0275property("ngTemplateOutlet", messageContent_r6);
  }
}
function MessagesComponent_ng_template_4_For_12_ng_template_8_Conditional_0_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 26);
    \u0275\u0275element(1, "mat-icon", 32);
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const message_r5 = \u0275\u0275nextContext(2).$implicit;
    \u0275\u0275advance();
    \u0275\u0275property("svgIcon", message_r5.icon);
  }
}
function MessagesComponent_ng_template_4_For_12_ng_template_8_Conditional_1_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "img", 27);
  }
  if (rf & 2) {
    const message_r5 = \u0275\u0275nextContext(2).$implicit;
    \u0275\u0275property("src", message_r5.image, \u0275\u0275sanitizeUrl)("alt", "Message image");
  }
}
function MessagesComponent_ng_template_4_For_12_ng_template_8_Conditional_3_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "div", 29);
  }
  if (rf & 2) {
    const message_r5 = \u0275\u0275nextContext(2).$implicit;
    \u0275\u0275property("innerHTML", message_r5.title, \u0275\u0275sanitizeHtml);
  }
}
function MessagesComponent_ng_template_4_For_12_ng_template_8_Conditional_4_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "div", 30);
  }
  if (rf & 2) {
    const message_r5 = \u0275\u0275nextContext(2).$implicit;
    \u0275\u0275property("innerHTML", message_r5.description, \u0275\u0275sanitizeHtml);
  }
}
function MessagesComponent_ng_template_4_For_12_ng_template_8_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275template(0, MessagesComponent_ng_template_4_For_12_ng_template_8_Conditional_0_Template, 2, 1, "div", 26)(1, MessagesComponent_ng_template_4_For_12_ng_template_8_Conditional_1_Template, 1, 2, "img", 27);
    \u0275\u0275elementStart(2, "div", 28);
    \u0275\u0275template(3, MessagesComponent_ng_template_4_For_12_ng_template_8_Conditional_3_Template, 1, 1, "div", 29)(4, MessagesComponent_ng_template_4_For_12_ng_template_8_Conditional_4_Template, 1, 1, "div", 30);
    \u0275\u0275elementStart(5, "div", 31);
    \u0275\u0275text(6);
    \u0275\u0275pipe(7, "date");
    \u0275\u0275elementEnd()();
  }
  if (rf & 2) {
    const message_r5 = \u0275\u0275nextContext().$implicit;
    \u0275\u0275conditional(message_r5.icon && !message_r5.image ? 0 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(message_r5.image ? 1 : -1);
    \u0275\u0275advance(2);
    \u0275\u0275conditional(message_r5.title ? 3 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(message_r5.description ? 4 : -1);
    \u0275\u0275advance(2);
    \u0275\u0275textInterpolate1(" ", \u0275\u0275pipeBind2(7, 5, message_r5.time, "MMM dd, h:mm a"), " ");
  }
}
function MessagesComponent_ng_template_4_For_12_Template(rf, ctx) {
  if (rf & 1) {
    const _r4 = \u0275\u0275getCurrentView();
    \u0275\u0275elementStart(0, "div", 16);
    \u0275\u0275template(1, MessagesComponent_ng_template_4_For_12_Conditional_1_Template, 2, 2)(2, MessagesComponent_ng_template_4_For_12_Conditional_2_Template, 2, 1, "div", 17);
    \u0275\u0275elementStart(3, "div", 18)(4, "button", 19);
    \u0275\u0275listener("click", function MessagesComponent_ng_template_4_For_12_Template_button_click_4_listener() {
      const message_r5 = \u0275\u0275restoreView(_r4).$implicit;
      const ctx_r1 = \u0275\u0275nextContext(2);
      return \u0275\u0275resetView(ctx_r1.toggleRead(message_r5));
    });
    \u0275\u0275element(5, "span", 20);
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(6, "button", 21);
    \u0275\u0275listener("click", function MessagesComponent_ng_template_4_For_12_Template_button_click_6_listener() {
      const message_r5 = \u0275\u0275restoreView(_r4).$implicit;
      const ctx_r1 = \u0275\u0275nextContext(2);
      return \u0275\u0275resetView(ctx_r1.delete(message_r5));
    });
    \u0275\u0275element(7, "mat-icon", 22);
    \u0275\u0275elementEnd()()();
    \u0275\u0275template(8, MessagesComponent_ng_template_4_For_12_ng_template_8_Template, 8, 8, "ng-template", null, 2, \u0275\u0275templateRefExtractor);
  }
  if (rf & 2) {
    const message_r5 = ctx.$implicit;
    \u0275\u0275property("ngClass", \u0275\u0275pureFunction1(7, _c23, !message_r5.read));
    \u0275\u0275advance();
    \u0275\u0275conditional(message_r5.link ? 1 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(!message_r5.link ? 2 : -1);
    \u0275\u0275advance(2);
    \u0275\u0275property("matTooltip", message_r5.read ? "Mark as unread" : "Mark as read");
    \u0275\u0275advance();
    \u0275\u0275property("ngClass", \u0275\u0275pureFunction2(9, _c33, message_r5.read, !message_r5.read));
    \u0275\u0275advance();
    \u0275\u0275property("matTooltip", "Remove");
    \u0275\u0275advance();
    \u0275\u0275property("svgIcon", "heroicons_solid:x-mark");
  }
}
function MessagesComponent_ng_template_4_Conditional_13_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 15)(1, "div", 33);
    \u0275\u0275element(2, "mat-icon", 34);
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(3, "div", 35);
    \u0275\u0275text(4, " No messages ");
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(5, "div", 36);
    \u0275\u0275text(6, " When you have messages, they will appear here. ");
    \u0275\u0275elementEnd()();
  }
  if (rf & 2) {
    \u0275\u0275advance(2);
    \u0275\u0275property("svgIcon", "heroicons_outline:inbox");
  }
}
function MessagesComponent_ng_template_4_Template(rf, ctx) {
  if (rf & 1) {
    const _r3 = \u0275\u0275getCurrentView();
    \u0275\u0275elementStart(0, "div", 7)(1, "div", 8)(2, "div", 9)(3, "button", 3);
    \u0275\u0275listener("click", function MessagesComponent_ng_template_4_Template_button_click_3_listener() {
      \u0275\u0275restoreView(_r3);
      const ctx_r1 = \u0275\u0275nextContext();
      return \u0275\u0275resetView(ctx_r1.closePanel());
    });
    \u0275\u0275element(4, "mat-icon", 10);
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(5, "div", 11);
    \u0275\u0275text(6, "Messages");
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(7, "div", 12)(8, "button", 13);
    \u0275\u0275listener("click", function MessagesComponent_ng_template_4_Template_button_click_8_listener() {
      \u0275\u0275restoreView(_r3);
      const ctx_r1 = \u0275\u0275nextContext();
      return \u0275\u0275resetView(ctx_r1.markAllAsRead());
    });
    \u0275\u0275element(9, "mat-icon", 10);
    \u0275\u0275elementEnd()()();
    \u0275\u0275elementStart(10, "div", 14);
    \u0275\u0275repeaterCreate(11, MessagesComponent_ng_template_4_For_12_Template, 10, 12, null, null, \u0275\u0275componentInstance().trackByFn, true);
    \u0275\u0275template(13, MessagesComponent_ng_template_4_Conditional_13_Template, 7, 1, "div", 15);
    \u0275\u0275elementEnd()();
  }
  if (rf & 2) {
    const ctx_r1 = \u0275\u0275nextContext();
    \u0275\u0275advance(4);
    \u0275\u0275property("svgIcon", "heroicons_solid:x-mark");
    \u0275\u0275advance(4);
    \u0275\u0275property("disabled", ctx_r1.unreadCount === 0)("matTooltip", "Mark all as read");
    \u0275\u0275advance();
    \u0275\u0275property("svgIcon", "heroicons_solid:envelope-open");
    \u0275\u0275advance(2);
    \u0275\u0275repeater(ctx_r1.messages);
    \u0275\u0275advance(2);
    \u0275\u0275conditional(!ctx_r1.messages || !ctx_r1.messages.length ? 13 : -1);
  }
}
var _MessagesComponent = class _MessagesComponent {
  /**
   * Constructor
   */
  constructor(_changeDetectorRef, _messagesService, _overlay, _viewContainerRef) {
    this._changeDetectorRef = _changeDetectorRef;
    this._messagesService = _messagesService;
    this._overlay = _overlay;
    this._viewContainerRef = _viewContainerRef;
    this.unreadCount = 0;
    this._unsubscribeAll = new Subject();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Lifecycle hooks
  // -----------------------------------------------------------------------------------------------------
  /**
   * On init
   */
  ngOnInit() {
    this._messagesService.messages$.pipe(takeUntil(this._unsubscribeAll)).subscribe((messages3) => {
      this.messages = messages3;
      this._calculateUnreadCount();
      this._changeDetectorRef.markForCheck();
    });
  }
  /**
   * On destroy
   */
  ngOnDestroy() {
    this._unsubscribeAll.next(null);
    this._unsubscribeAll.complete();
    if (this._overlayRef) {
      this._overlayRef.dispose();
    }
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Open the messages panel
   */
  openPanel() {
    if (!this._messagesPanel || !this._messagesOrigin) {
      return;
    }
    if (!this._overlayRef) {
      this._createOverlay();
    }
    this._overlayRef.attach(new TemplatePortal(this._messagesPanel, this._viewContainerRef));
  }
  /**
   * Close the messages panel
   */
  closePanel() {
    this._overlayRef.detach();
  }
  /**
   * Mark all messages as read
   */
  markAllAsRead() {
    this._messagesService.markAllAsRead().subscribe();
  }
  /**
   * Toggle read status of the given message
   */
  toggleRead(message) {
    message.read = !message.read;
    this._messagesService.update(message.id, message).subscribe();
  }
  /**
   * Delete the given message
   */
  delete(message) {
    this._messagesService.delete(message.id).subscribe();
  }
  /**
   * Track by function for ngFor loops
   *
   * @param index
   * @param item
   */
  trackByFn(index, item) {
    return item.id || index;
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Private methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Create the overlay
   */
  _createOverlay() {
    this._overlayRef = this._overlay.create({
      hasBackdrop: true,
      backdropClass: "fuse-backdrop-on-mobile",
      scrollStrategy: this._overlay.scrollStrategies.block(),
      positionStrategy: this._overlay.position().flexibleConnectedTo(this._messagesOrigin._elementRef.nativeElement).withLockedPosition(true).withPush(true).withPositions([
        {
          originX: "start",
          originY: "bottom",
          overlayX: "start",
          overlayY: "top"
        },
        {
          originX: "start",
          originY: "top",
          overlayX: "start",
          overlayY: "bottom"
        },
        {
          originX: "end",
          originY: "bottom",
          overlayX: "end",
          overlayY: "top"
        },
        {
          originX: "end",
          originY: "top",
          overlayX: "end",
          overlayY: "bottom"
        }
      ])
    });
    this._overlayRef.backdropClick().subscribe(() => {
      this._overlayRef.detach();
    });
  }
  /**
   * Calculate the unread count
   *
   * @private
   */
  _calculateUnreadCount() {
    let count = 0;
    if (this.messages && this.messages.length) {
      count = this.messages.filter((message) => !message.read).length;
    }
    this.unreadCount = count;
  }
};
_MessagesComponent.\u0275fac = function MessagesComponent_Factory(t) {
  return new (t || _MessagesComponent)(\u0275\u0275directiveInject(ChangeDetectorRef), \u0275\u0275directiveInject(MessagesService), \u0275\u0275directiveInject(Overlay), \u0275\u0275directiveInject(ViewContainerRef));
};
_MessagesComponent.\u0275cmp = /* @__PURE__ */ \u0275\u0275defineComponent({ type: _MessagesComponent, selectors: [["messages"]], viewQuery: function MessagesComponent_Query(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275viewQuery(_c09, 5);
    \u0275\u0275viewQuery(_c15, 5);
  }
  if (rf & 2) {
    let _t;
    \u0275\u0275queryRefresh(_t = \u0275\u0275loadQuery()) && (ctx._messagesOrigin = _t.first);
    \u0275\u0275queryRefresh(_t = \u0275\u0275loadQuery()) && (ctx._messagesPanel = _t.first);
  }
}, exportAs: ["messages"], standalone: true, features: [\u0275\u0275StandaloneFeature], decls: 6, vars: 2, consts: [["messagesOrigin", ""], ["messagesPanel", ""], ["messageContent", ""], ["mat-icon-button", "", 3, "click"], [1, "absolute", "left-0", "right-0", "top-0", "flex", "h-3", "items-center", "justify-center"], [3, "svgIcon"], [1, "ml-4", "mt-2.5", "flex", "h-4", "min-w-4", "shrink-0", "items-center", "justify-center", "rounded-full", "bg-indigo-600", "px-1", "text-xs", "font-medium", "text-indigo-50"], [1, "fixed", "inset-0", "flex", "flex-col", "overflow-hidden", "shadow-lg", "sm:static", "sm:inset-auto", "sm:w-90", "sm:min-w-90", "sm:rounded-2xl"], [1, "flex", "shrink-0", "items-center", "bg-primary", "py-4", "pl-6", "pr-4", "text-on-primary"], [1, "-ml-1", "mr-3", "sm:hidden"], [1, "text-current", "icon-size-5", 3, "svgIcon"], [1, "text-lg", "font-medium", "leading-10"], [1, "ml-auto"], ["mat-icon-button", "", 1, "dark:text-white", 3, "click", "disabled", "matTooltip"], [1, "bg-card", "relative", "flex", "flex-auto", "flex-col", "divide-y", "overflow-y-auto", "sm:max-h-120"], [1, "flex", "flex-auto", "flex-col", "items-center", "justify-center", "px-8", "py-12", "sm:justify-start"], [1, "group", "flex", "hover:bg-gray-50", "dark:hover:bg-black", "dark:hover:bg-opacity-5", 3, "ngClass"], [1, "flex", "flex-auto", "py-5", "pl-6"], [1, "relative", "my-5", "ml-2", "mr-6", "flex", "flex-col"], ["mat-icon-button", "", 1, "h-6", "min-h-6", "w-6", 3, "click", "matTooltip"], [1, "h-2", "w-2", "rounded-full", 3, "ngClass"], ["mat-icon-button", "", 1, "h-6", "min-h-6", "w-6", "sm:opacity-0", "sm:group-hover:opacity-100", 3, "click", "matTooltip"], [1, "icon-size-4", 3, "svgIcon"], [1, "flex", "flex-auto", "cursor-pointer", "py-5", "pl-6", 3, "href"], [1, "flex", "flex-auto", "cursor-pointer", "py-5", "pl-6", 3, "routerLink"], [4, "ngTemplateOutlet"], [1, "mr-4", "flex", "h-8", "w-8", "shrink-0", "items-center", "justify-center", "rounded-full", "bg-gray-100", "dark:bg-gray-700"], [1, "mr-4", "h-8", "w-8", "shrink-0", "overflow-hidden", "rounded-full", "object-cover", "object-center", 3, "src", "alt"], [1, "flex", "flex-auto", "flex-col"], [1, "line-clamp-1", "font-semibold", 3, "innerHTML"], [1, "line-clamp-2", 3, "innerHTML"], [1, "text-secondary", "mt-2", "text-sm", "leading-none"], [1, "icon-size-5", 3, "svgIcon"], [1, "flex", "h-14", "w-14", "flex-0", "items-center", "justify-center", "rounded-full", "bg-primary-100", "dark:bg-primary-600"], [1, "text-primary-700", "dark:text-primary-50", 3, "svgIcon"], [1, "mt-5", "text-2xl", "font-semibold", "tracking-tight"], [1, "text-secondary", "mt-1", "w-full", "max-w-60", "text-center", "text-md"]], template: function MessagesComponent_Template(rf, ctx) {
  if (rf & 1) {
    const _r1 = \u0275\u0275getCurrentView();
    \u0275\u0275elementStart(0, "button", 3, 0);
    \u0275\u0275listener("click", function MessagesComponent_Template_button_click_0_listener() {
      \u0275\u0275restoreView(_r1);
      return \u0275\u0275resetView(ctx.openPanel());
    });
    \u0275\u0275template(2, MessagesComponent_Conditional_2_Template, 3, 1, "span", 4);
    \u0275\u0275element(3, "mat-icon", 5);
    \u0275\u0275elementEnd();
    \u0275\u0275template(4, MessagesComponent_ng_template_4_Template, 14, 5, "ng-template", null, 1, \u0275\u0275templateRefExtractor);
  }
  if (rf & 2) {
    \u0275\u0275advance(2);
    \u0275\u0275conditional(ctx.unreadCount > 0 ? 2 : -1);
    \u0275\u0275advance();
    \u0275\u0275property("svgIcon", "heroicons_outline:inbox");
  }
}, dependencies: [
  MatButtonModule,
  MatIconButton,
  MatIconModule,
  MatIcon,
  MatTooltipModule,
  MatTooltip,
  NgClass,
  NgTemplateOutlet,
  RouterLink,
  DatePipe
], encapsulation: 2, changeDetection: 0 });
var MessagesComponent = _MessagesComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && \u0275setClassDebugInfo(MessagesComponent, { className: "MessagesComponent", filePath: "src\\app\\layout\\common\\messages\\messages.component.ts", lineNumber: 40 });
})();

// src/app/layout/common/notifications/notifications.component.ts
var _c010 = ["notificationsOrigin"];
var _c16 = ["notificationsPanel"];
var _c24 = (a0) => ({ unread: a0 });
var _c34 = (a0, a1) => ({ "bg-gray-400 dark:bg-gray-500 sm:opacity-0 sm:group-hover:opacity-100": a0, "bg-primary": a1 });
function NotificationsComponent_Conditional_2_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "span", 4)(1, "span", 6);
    \u0275\u0275text(2);
    \u0275\u0275elementEnd()();
  }
  if (rf & 2) {
    const ctx_r1 = \u0275\u0275nextContext();
    \u0275\u0275advance(2);
    \u0275\u0275textInterpolate1(" ", ctx_r1.unreadCount, " ");
  }
}
function NotificationsComponent_ng_template_4_For_12_Conditional_1_Conditional_0_ng_container_1_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementContainer(0);
  }
}
function NotificationsComponent_ng_template_4_For_12_Conditional_1_Conditional_0_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "a", 23);
    \u0275\u0275template(1, NotificationsComponent_ng_template_4_For_12_Conditional_1_Conditional_0_ng_container_1_Template, 1, 0, "ng-container", 25);
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const notification_r5 = \u0275\u0275nextContext(2).$implicit;
    const notificationContent_r6 = \u0275\u0275reference(9);
    \u0275\u0275property("href", notification_r5.link, \u0275\u0275sanitizeUrl);
    \u0275\u0275advance();
    \u0275\u0275property("ngTemplateOutlet", notificationContent_r6);
  }
}
function NotificationsComponent_ng_template_4_For_12_Conditional_1_Conditional_1_ng_container_1_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementContainer(0);
  }
}
function NotificationsComponent_ng_template_4_For_12_Conditional_1_Conditional_1_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "a", 24);
    \u0275\u0275template(1, NotificationsComponent_ng_template_4_For_12_Conditional_1_Conditional_1_ng_container_1_Template, 1, 0, "ng-container", 25);
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const notification_r5 = \u0275\u0275nextContext(2).$implicit;
    const notificationContent_r6 = \u0275\u0275reference(9);
    \u0275\u0275property("routerLink", notification_r5.link);
    \u0275\u0275advance();
    \u0275\u0275property("ngTemplateOutlet", notificationContent_r6);
  }
}
function NotificationsComponent_ng_template_4_For_12_Conditional_1_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275template(0, NotificationsComponent_ng_template_4_For_12_Conditional_1_Conditional_0_Template, 2, 2, "a", 23)(1, NotificationsComponent_ng_template_4_For_12_Conditional_1_Conditional_1_Template, 2, 2, "a", 24);
  }
  if (rf & 2) {
    const notification_r5 = \u0275\u0275nextContext().$implicit;
    \u0275\u0275conditional(!notification_r5.useRouter ? 0 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(notification_r5.useRouter ? 1 : -1);
  }
}
function NotificationsComponent_ng_template_4_For_12_Conditional_2_ng_container_1_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementContainer(0);
  }
}
function NotificationsComponent_ng_template_4_For_12_Conditional_2_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 17);
    \u0275\u0275template(1, NotificationsComponent_ng_template_4_For_12_Conditional_2_ng_container_1_Template, 1, 0, "ng-container", 25);
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    \u0275\u0275nextContext();
    const notificationContent_r6 = \u0275\u0275reference(9);
    \u0275\u0275advance();
    \u0275\u0275property("ngTemplateOutlet", notificationContent_r6);
  }
}
function NotificationsComponent_ng_template_4_For_12_ng_template_8_Conditional_0_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 26);
    \u0275\u0275element(1, "mat-icon", 32);
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const notification_r5 = \u0275\u0275nextContext(2).$implicit;
    \u0275\u0275advance();
    \u0275\u0275property("svgIcon", notification_r5.icon);
  }
}
function NotificationsComponent_ng_template_4_For_12_ng_template_8_Conditional_1_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "img", 27);
  }
  if (rf & 2) {
    const notification_r5 = \u0275\u0275nextContext(2).$implicit;
    \u0275\u0275property("src", notification_r5.image, \u0275\u0275sanitizeUrl)("alt", "Notification image");
  }
}
function NotificationsComponent_ng_template_4_For_12_ng_template_8_Conditional_3_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "div", 29);
  }
  if (rf & 2) {
    const notification_r5 = \u0275\u0275nextContext(2).$implicit;
    \u0275\u0275property("innerHTML", notification_r5.title, \u0275\u0275sanitizeHtml);
  }
}
function NotificationsComponent_ng_template_4_For_12_ng_template_8_Conditional_4_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "div", 30);
  }
  if (rf & 2) {
    const notification_r5 = \u0275\u0275nextContext(2).$implicit;
    \u0275\u0275property("innerHTML", notification_r5.description, \u0275\u0275sanitizeHtml);
  }
}
function NotificationsComponent_ng_template_4_For_12_ng_template_8_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275template(0, NotificationsComponent_ng_template_4_For_12_ng_template_8_Conditional_0_Template, 2, 1, "div", 26)(1, NotificationsComponent_ng_template_4_For_12_ng_template_8_Conditional_1_Template, 1, 2, "img", 27);
    \u0275\u0275elementStart(2, "div", 28);
    \u0275\u0275template(3, NotificationsComponent_ng_template_4_For_12_ng_template_8_Conditional_3_Template, 1, 1, "div", 29)(4, NotificationsComponent_ng_template_4_For_12_ng_template_8_Conditional_4_Template, 1, 1, "div", 30);
    \u0275\u0275elementStart(5, "div", 31);
    \u0275\u0275text(6);
    \u0275\u0275pipe(7, "date");
    \u0275\u0275elementEnd()();
  }
  if (rf & 2) {
    const notification_r5 = \u0275\u0275nextContext().$implicit;
    \u0275\u0275conditional(notification_r5.icon && !notification_r5.image ? 0 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(notification_r5.image ? 1 : -1);
    \u0275\u0275advance(2);
    \u0275\u0275conditional(notification_r5.title ? 3 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(notification_r5.description ? 4 : -1);
    \u0275\u0275advance(2);
    \u0275\u0275textInterpolate1(" ", \u0275\u0275pipeBind2(7, 5, notification_r5.time, "MMM dd, h:mm a"), " ");
  }
}
function NotificationsComponent_ng_template_4_For_12_Template(rf, ctx) {
  if (rf & 1) {
    const _r4 = \u0275\u0275getCurrentView();
    \u0275\u0275elementStart(0, "div", 16);
    \u0275\u0275template(1, NotificationsComponent_ng_template_4_For_12_Conditional_1_Template, 2, 2)(2, NotificationsComponent_ng_template_4_For_12_Conditional_2_Template, 2, 1, "div", 17);
    \u0275\u0275elementStart(3, "div", 18)(4, "button", 19);
    \u0275\u0275listener("click", function NotificationsComponent_ng_template_4_For_12_Template_button_click_4_listener() {
      const notification_r5 = \u0275\u0275restoreView(_r4).$implicit;
      const ctx_r1 = \u0275\u0275nextContext(2);
      return \u0275\u0275resetView(ctx_r1.toggleRead(notification_r5));
    });
    \u0275\u0275element(5, "span", 20);
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(6, "button", 21);
    \u0275\u0275listener("click", function NotificationsComponent_ng_template_4_For_12_Template_button_click_6_listener() {
      const notification_r5 = \u0275\u0275restoreView(_r4).$implicit;
      const ctx_r1 = \u0275\u0275nextContext(2);
      return \u0275\u0275resetView(ctx_r1.delete(notification_r5));
    });
    \u0275\u0275element(7, "mat-icon", 22);
    \u0275\u0275elementEnd()()();
    \u0275\u0275template(8, NotificationsComponent_ng_template_4_For_12_ng_template_8_Template, 8, 8, "ng-template", null, 2, \u0275\u0275templateRefExtractor);
  }
  if (rf & 2) {
    const notification_r5 = ctx.$implicit;
    \u0275\u0275property("ngClass", \u0275\u0275pureFunction1(7, _c24, !notification_r5.read));
    \u0275\u0275advance();
    \u0275\u0275conditional(notification_r5.link ? 1 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(!notification_r5.link ? 2 : -1);
    \u0275\u0275advance(2);
    \u0275\u0275property("matTooltip", notification_r5.read ? "Mark as unread" : "Mark as read");
    \u0275\u0275advance();
    \u0275\u0275property("ngClass", \u0275\u0275pureFunction2(9, _c34, notification_r5.read, !notification_r5.read));
    \u0275\u0275advance();
    \u0275\u0275property("matTooltip", "Remove");
    \u0275\u0275advance();
    \u0275\u0275property("svgIcon", "heroicons_solid:x-mark");
  }
}
function NotificationsComponent_ng_template_4_Conditional_13_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 15)(1, "div", 33);
    \u0275\u0275element(2, "mat-icon", 34);
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(3, "div", 35);
    \u0275\u0275text(4, " No notifications ");
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(5, "div", 36);
    \u0275\u0275text(6, " When you have notifications, they will appear here. ");
    \u0275\u0275elementEnd()();
  }
  if (rf & 2) {
    \u0275\u0275advance(2);
    \u0275\u0275property("svgIcon", "heroicons_outline:bell");
  }
}
function NotificationsComponent_ng_template_4_Template(rf, ctx) {
  if (rf & 1) {
    const _r3 = \u0275\u0275getCurrentView();
    \u0275\u0275elementStart(0, "div", 7)(1, "div", 8)(2, "div", 9)(3, "button", 3);
    \u0275\u0275listener("click", function NotificationsComponent_ng_template_4_Template_button_click_3_listener() {
      \u0275\u0275restoreView(_r3);
      const ctx_r1 = \u0275\u0275nextContext();
      return \u0275\u0275resetView(ctx_r1.closePanel());
    });
    \u0275\u0275element(4, "mat-icon", 10);
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(5, "div", 11);
    \u0275\u0275text(6, "Notifications");
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(7, "div", 12)(8, "button", 13);
    \u0275\u0275listener("click", function NotificationsComponent_ng_template_4_Template_button_click_8_listener() {
      \u0275\u0275restoreView(_r3);
      const ctx_r1 = \u0275\u0275nextContext();
      return \u0275\u0275resetView(ctx_r1.markAllAsRead());
    });
    \u0275\u0275element(9, "mat-icon", 10);
    \u0275\u0275elementEnd()()();
    \u0275\u0275elementStart(10, "div", 14);
    \u0275\u0275repeaterCreate(11, NotificationsComponent_ng_template_4_For_12_Template, 10, 12, null, null, \u0275\u0275componentInstance().trackByFn, true);
    \u0275\u0275template(13, NotificationsComponent_ng_template_4_Conditional_13_Template, 7, 1, "div", 15);
    \u0275\u0275elementEnd()();
  }
  if (rf & 2) {
    const ctx_r1 = \u0275\u0275nextContext();
    \u0275\u0275advance(4);
    \u0275\u0275property("svgIcon", "heroicons_solid:x-mark");
    \u0275\u0275advance(4);
    \u0275\u0275property("matTooltip", "Mark all as read")("disabled", ctx_r1.unreadCount === 0);
    \u0275\u0275advance();
    \u0275\u0275property("svgIcon", "heroicons_solid:envelope-open");
    \u0275\u0275advance(2);
    \u0275\u0275repeater(ctx_r1.notifications);
    \u0275\u0275advance(2);
    \u0275\u0275conditional(!ctx_r1.notifications || !ctx_r1.notifications.length ? 13 : -1);
  }
}
var _NotificationsComponent = class _NotificationsComponent {
  /**
   * Constructor
   */
  constructor(_changeDetectorRef, _notificationsService, _overlay, _viewContainerRef) {
    this._changeDetectorRef = _changeDetectorRef;
    this._notificationsService = _notificationsService;
    this._overlay = _overlay;
    this._viewContainerRef = _viewContainerRef;
    this.unreadCount = 0;
    this._unsubscribeAll = new Subject();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Lifecycle hooks
  // -----------------------------------------------------------------------------------------------------
  /**
   * On init
   */
  ngOnInit() {
    this._notificationsService.notifications$.pipe(takeUntil(this._unsubscribeAll)).subscribe((notifications2) => {
      this.notifications = notifications2;
      this._calculateUnreadCount();
      this._changeDetectorRef.markForCheck();
    });
  }
  /**
   * On destroy
   */
  ngOnDestroy() {
    this._unsubscribeAll.next(null);
    this._unsubscribeAll.complete();
    if (this._overlayRef) {
      this._overlayRef.dispose();
    }
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Open the notifications panel
   */
  openPanel() {
    if (!this._notificationsPanel || !this._notificationsOrigin) {
      return;
    }
    if (!this._overlayRef) {
      this._createOverlay();
    }
    this._overlayRef.attach(new TemplatePortal(this._notificationsPanel, this._viewContainerRef));
  }
  /**
   * Close the notifications panel
   */
  closePanel() {
    this._overlayRef.detach();
  }
  /**
   * Mark all notifications as read
   */
  markAllAsRead() {
    this._notificationsService.markAllAsRead().subscribe();
  }
  /**
   * Toggle read status of the given notification
   */
  toggleRead(notification) {
    notification.read = !notification.read;
    this._notificationsService.update(notification.id, notification).subscribe();
  }
  /**
   * Delete the given notification
   */
  delete(notification) {
    this._notificationsService.delete(notification.id).subscribe();
  }
  /**
   * Track by function for ngFor loops
   *
   * @param index
   * @param item
   */
  trackByFn(index, item) {
    return item.id || index;
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Private methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Create the overlay
   */
  _createOverlay() {
    this._overlayRef = this._overlay.create({
      hasBackdrop: true,
      backdropClass: "fuse-backdrop-on-mobile",
      scrollStrategy: this._overlay.scrollStrategies.block(),
      positionStrategy: this._overlay.position().flexibleConnectedTo(this._notificationsOrigin._elementRef.nativeElement).withLockedPosition(true).withPush(true).withPositions([
        {
          originX: "start",
          originY: "bottom",
          overlayX: "start",
          overlayY: "top"
        },
        {
          originX: "start",
          originY: "top",
          overlayX: "start",
          overlayY: "bottom"
        },
        {
          originX: "end",
          originY: "bottom",
          overlayX: "end",
          overlayY: "top"
        },
        {
          originX: "end",
          originY: "top",
          overlayX: "end",
          overlayY: "bottom"
        }
      ])
    });
    this._overlayRef.backdropClick().subscribe(() => {
      this._overlayRef.detach();
    });
  }
  /**
   * Calculate the unread count
   *
   * @private
   */
  _calculateUnreadCount() {
    let count = 0;
    if (this.notifications && this.notifications.length) {
      count = this.notifications.filter((notification) => !notification.read).length;
    }
    this.unreadCount = count;
  }
};
_NotificationsComponent.\u0275fac = function NotificationsComponent_Factory(t) {
  return new (t || _NotificationsComponent)(\u0275\u0275directiveInject(ChangeDetectorRef), \u0275\u0275directiveInject(NotificationsService), \u0275\u0275directiveInject(Overlay), \u0275\u0275directiveInject(ViewContainerRef));
};
_NotificationsComponent.\u0275cmp = /* @__PURE__ */ \u0275\u0275defineComponent({ type: _NotificationsComponent, selectors: [["notifications"]], viewQuery: function NotificationsComponent_Query(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275viewQuery(_c010, 5);
    \u0275\u0275viewQuery(_c16, 5);
  }
  if (rf & 2) {
    let _t;
    \u0275\u0275queryRefresh(_t = \u0275\u0275loadQuery()) && (ctx._notificationsOrigin = _t.first);
    \u0275\u0275queryRefresh(_t = \u0275\u0275loadQuery()) && (ctx._notificationsPanel = _t.first);
  }
}, exportAs: ["notifications"], standalone: true, features: [\u0275\u0275StandaloneFeature], decls: 6, vars: 2, consts: [["notificationsOrigin", ""], ["notificationsPanel", ""], ["notificationContent", ""], ["mat-icon-button", "", 3, "click"], [1, "absolute", "left-0", "right-0", "top-0", "flex", "h-3", "items-center", "justify-center"], [3, "svgIcon"], [1, "ml-4", "mt-2.5", "flex", "h-4", "min-w-4", "shrink-0", "items-center", "justify-center", "rounded-full", "bg-teal-600", "px-1", "text-xs", "font-medium", "text-indigo-50"], [1, "fixed", "inset-0", "flex", "flex-col", "overflow-hidden", "shadow-lg", "sm:static", "sm:inset-auto", "sm:w-90", "sm:min-w-90", "sm:rounded-2xl"], [1, "flex", "shrink-0", "items-center", "bg-primary", "py-4", "pl-6", "pr-4", "text-on-primary"], [1, "-ml-1", "mr-3", "sm:hidden"], [1, "text-current", "icon-size-5", 3, "svgIcon"], [1, "text-lg", "font-medium", "leading-10"], [1, "ml-auto"], ["mat-icon-button", "", 1, "dark:text-white", 3, "click", "matTooltip", "disabled"], [1, "bg-card", "relative", "flex", "flex-auto", "flex-col", "divide-y", "overflow-y-auto", "sm:max-h-120"], [1, "flex", "flex-auto", "flex-col", "items-center", "justify-center", "px-8", "py-12", "sm:justify-start"], [1, "group", "flex", "hover:bg-gray-50", "dark:hover:bg-black", "dark:hover:bg-opacity-5", 3, "ngClass"], [1, "flex", "flex-auto", "py-5", "pl-6"], [1, "relative", "my-5", "ml-2", "mr-6", "flex", "flex-col"], ["mat-icon-button", "", 1, "h-6", "min-h-6", "w-6", 3, "click", "matTooltip"], [1, "h-2", "w-2", "rounded-full", 3, "ngClass"], ["mat-icon-button", "", 1, "h-6", "min-h-6", "w-6", "sm:opacity-0", "sm:group-hover:opacity-100", 3, "click", "matTooltip"], [1, "icon-size-4", 3, "svgIcon"], [1, "flex", "flex-auto", "cursor-pointer", "py-5", "pl-6", 3, "href"], [1, "flex", "flex-auto", "cursor-pointer", "py-5", "pl-6", 3, "routerLink"], [4, "ngTemplateOutlet"], [1, "mr-4", "flex", "h-8", "w-8", "shrink-0", "items-center", "justify-center", "rounded-full", "bg-gray-100", "dark:bg-gray-700"], [1, "mr-4", "h-8", "w-8", "shrink-0", "overflow-hidden", "rounded-full", "object-cover", "object-center", 3, "src", "alt"], [1, "flex", "flex-auto", "flex-col"], [1, "line-clamp-1", "font-semibold", 3, "innerHTML"], [1, "line-clamp-2", 3, "innerHTML"], [1, "text-secondary", "mt-2", "text-sm", "leading-none"], [1, "icon-size-5", 3, "svgIcon"], [1, "flex", "h-14", "w-14", "flex-0", "items-center", "justify-center", "rounded-full", "bg-primary-100", "dark:bg-primary-600"], [1, "text-primary-700", "dark:text-primary-50", 3, "svgIcon"], [1, "mt-5", "text-2xl", "font-semibold", "tracking-tight"], [1, "text-secondary", "mt-1", "w-full", "max-w-60", "text-center", "text-md"]], template: function NotificationsComponent_Template(rf, ctx) {
  if (rf & 1) {
    const _r1 = \u0275\u0275getCurrentView();
    \u0275\u0275elementStart(0, "button", 3, 0);
    \u0275\u0275listener("click", function NotificationsComponent_Template_button_click_0_listener() {
      \u0275\u0275restoreView(_r1);
      return \u0275\u0275resetView(ctx.openPanel());
    });
    \u0275\u0275template(2, NotificationsComponent_Conditional_2_Template, 3, 1, "span", 4);
    \u0275\u0275element(3, "mat-icon", 5);
    \u0275\u0275elementEnd();
    \u0275\u0275template(4, NotificationsComponent_ng_template_4_Template, 14, 5, "ng-template", null, 1, \u0275\u0275templateRefExtractor);
  }
  if (rf & 2) {
    \u0275\u0275advance(2);
    \u0275\u0275conditional(ctx.unreadCount > 0 ? 2 : -1);
    \u0275\u0275advance();
    \u0275\u0275property("svgIcon", "heroicons_outline:bell");
  }
}, dependencies: [
  MatButtonModule,
  MatIconButton,
  MatIconModule,
  MatIcon,
  MatTooltipModule,
  MatTooltip,
  NgClass,
  NgTemplateOutlet,
  RouterLink,
  DatePipe
], encapsulation: 2, changeDetection: 0 });
var NotificationsComponent = _NotificationsComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && \u0275setClassDebugInfo(NotificationsComponent, { className: "NotificationsComponent", filePath: "src\\app\\layout\\common\\notifications\\notifications.component.ts", lineNumber: 40 });
})();

// src/app/layout/common/search/search.component.ts
var _c011 = ["barSearchInput"];
var _c17 = ["matAutocomplete"];
var _c25 = (a0) => ({ $implicit: a0 });
var _c35 = (a0) => ({ "text-hint line-through": a0 });
function SearchComponent_Conditional_0_Conditional_0_Template(rf, ctx) {
  if (rf & 1) {
    const _r1 = \u0275\u0275getCurrentView();
    \u0275\u0275elementStart(0, "button", 8);
    \u0275\u0275listener("click", function SearchComponent_Conditional_0_Conditional_0_Template_button_click_0_listener() {
      \u0275\u0275restoreView(_r1);
      const ctx_r1 = \u0275\u0275nextContext(2);
      return \u0275\u0275resetView(ctx_r1.open());
    });
    \u0275\u0275element(1, "mat-icon", 9);
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    \u0275\u0275advance();
    \u0275\u0275property("svgIcon", "heroicons_outline:magnifying-glass");
  }
}
function SearchComponent_Conditional_0_Conditional_1_Conditional_6_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "mat-option", 13);
    \u0275\u0275text(1, " No results found! ");
    \u0275\u0275elementEnd();
  }
}
function SearchComponent_Conditional_0_Conditional_1_For_8_For_4_Conditional_1_ng_container_0_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementContainer(0);
  }
}
function SearchComponent_Conditional_0_Conditional_1_For_8_For_4_Conditional_1_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275template(0, SearchComponent_Conditional_0_Conditional_1_For_8_For_4_Conditional_1_ng_container_0_Template, 1, 0, "ng-container", 18);
  }
  if (rf & 2) {
    const result_r4 = \u0275\u0275nextContext().$implicit;
    \u0275\u0275nextContext(4);
    const contactResult_r5 = \u0275\u0275reference(3);
    \u0275\u0275property("ngTemplateOutlet", contactResult_r5)("ngTemplateOutletContext", \u0275\u0275pureFunction1(2, _c25, result_r4));
  }
}
function SearchComponent_Conditional_0_Conditional_1_For_8_For_4_Conditional_2_ng_container_0_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementContainer(0);
  }
}
function SearchComponent_Conditional_0_Conditional_1_For_8_For_4_Conditional_2_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275template(0, SearchComponent_Conditional_0_Conditional_1_For_8_For_4_Conditional_2_ng_container_0_Template, 1, 0, "ng-container", 18);
  }
  if (rf & 2) {
    const result_r4 = \u0275\u0275nextContext().$implicit;
    \u0275\u0275nextContext(4);
    const pageResult_r6 = \u0275\u0275reference(5);
    \u0275\u0275property("ngTemplateOutlet", pageResult_r6)("ngTemplateOutletContext", \u0275\u0275pureFunction1(2, _c25, result_r4));
  }
}
function SearchComponent_Conditional_0_Conditional_1_For_8_For_4_Conditional_3_ng_container_0_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementContainer(0);
  }
}
function SearchComponent_Conditional_0_Conditional_1_For_8_For_4_Conditional_3_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275template(0, SearchComponent_Conditional_0_Conditional_1_For_8_For_4_Conditional_3_ng_container_0_Template, 1, 0, "ng-container", 18);
  }
  if (rf & 2) {
    const result_r4 = \u0275\u0275nextContext().$implicit;
    \u0275\u0275nextContext(4);
    const taskResult_r7 = \u0275\u0275reference(7);
    \u0275\u0275property("ngTemplateOutlet", taskResult_r7)("ngTemplateOutletContext", \u0275\u0275pureFunction1(2, _c25, result_r4));
  }
}
function SearchComponent_Conditional_0_Conditional_1_For_8_For_4_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "mat-option", 17);
    \u0275\u0275template(1, SearchComponent_Conditional_0_Conditional_1_For_8_For_4_Conditional_1_Template, 1, 4, "ng-container")(2, SearchComponent_Conditional_0_Conditional_1_For_8_For_4_Conditional_2_Template, 1, 4, "ng-container")(3, SearchComponent_Conditional_0_Conditional_1_For_8_For_4_Conditional_3_Template, 1, 4, "ng-container");
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const result_r4 = ctx.$implicit;
    const resultSet_r8 = \u0275\u0275nextContext().$implicit;
    \u0275\u0275property("routerLink", result_r4.link)("value", result_r4.value);
    \u0275\u0275advance();
    \u0275\u0275conditional(resultSet_r8.id === "contacts" ? 1 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(resultSet_r8.id === "pages" ? 2 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(resultSet_r8.id === "tasks" ? 3 : -1);
  }
}
function SearchComponent_Conditional_0_Conditional_1_For_8_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "mat-optgroup", 15)(1, "span", 16);
    \u0275\u0275text(2);
    \u0275\u0275elementEnd()();
    \u0275\u0275repeaterCreate(3, SearchComponent_Conditional_0_Conditional_1_For_8_For_4_Template, 4, 5, "mat-option", 17, \u0275\u0275componentInstance().trackByFn, true);
  }
  if (rf & 2) {
    const resultSet_r8 = ctx.$implicit;
    \u0275\u0275advance(2);
    \u0275\u0275textInterpolate(resultSet_r8.label.toUpperCase());
    \u0275\u0275advance();
    \u0275\u0275repeater(resultSet_r8.results);
  }
}
function SearchComponent_Conditional_0_Conditional_1_Template(rf, ctx) {
  if (rf & 1) {
    const _r3 = \u0275\u0275getCurrentView();
    \u0275\u0275elementStart(0, "div", 7);
    \u0275\u0275element(1, "mat-icon", 10);
    \u0275\u0275elementStart(2, "input", 11, 3);
    \u0275\u0275listener("keydown", function SearchComponent_Conditional_0_Conditional_1_Template_input_keydown_2_listener($event) {
      \u0275\u0275restoreView(_r3);
      const ctx_r1 = \u0275\u0275nextContext(2);
      return \u0275\u0275resetView(ctx_r1.onKeydown($event));
    });
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(4, "mat-autocomplete", 12, 4);
    \u0275\u0275template(6, SearchComponent_Conditional_0_Conditional_1_Conditional_6_Template, 2, 0, "mat-option", 13);
    \u0275\u0275repeaterCreate(7, SearchComponent_Conditional_0_Conditional_1_For_8_Template, 5, 1, null, null, \u0275\u0275componentInstance().trackByFn, true);
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(9, "button", 14);
    \u0275\u0275listener("click", function SearchComponent_Conditional_0_Conditional_1_Template_button_click_9_listener() {
      \u0275\u0275restoreView(_r3);
      const ctx_r1 = \u0275\u0275nextContext(2);
      return \u0275\u0275resetView(ctx_r1.close());
    });
    \u0275\u0275element(10, "mat-icon", 9);
    \u0275\u0275elementEnd()();
  }
  if (rf & 2) {
    const matAutocomplete_r9 = \u0275\u0275reference(5);
    const ctx_r1 = \u0275\u0275nextContext(2);
    \u0275\u0275property("@slideInTop", void 0)("@slideOutTop", void 0);
    \u0275\u0275advance();
    \u0275\u0275property("svgIcon", "heroicons_outline:magnifying-glass");
    \u0275\u0275advance();
    \u0275\u0275property("formControl", ctx_r1.searchControl)("matAutocomplete", matAutocomplete_r9)("placeholder", "Search...");
    \u0275\u0275advance(2);
    \u0275\u0275property("autoSelectActiveOption", true)("disableRipple", true);
    \u0275\u0275advance(2);
    \u0275\u0275conditional(ctx_r1.resultSets && !ctx_r1.resultSets.length ? 6 : -1);
    \u0275\u0275advance();
    \u0275\u0275repeater(ctx_r1.resultSets);
    \u0275\u0275advance(3);
    \u0275\u0275property("svgIcon", "heroicons_outline:x-mark");
  }
}
function SearchComponent_Conditional_0_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275template(0, SearchComponent_Conditional_0_Conditional_0_Template, 2, 1, "button", 6)(1, SearchComponent_Conditional_0_Conditional_1_Template, 11, 10, "div", 7);
  }
  if (rf & 2) {
    const ctx_r1 = \u0275\u0275nextContext();
    \u0275\u0275conditional(!ctx_r1.opened ? 0 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx_r1.opened ? 1 : -1);
  }
}
function SearchComponent_Conditional_1_Conditional_6_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "mat-option", 13);
    \u0275\u0275text(1, " No results found! ");
    \u0275\u0275elementEnd();
  }
}
function SearchComponent_Conditional_1_For_8_For_4_Conditional_1_ng_container_0_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementContainer(0);
  }
}
function SearchComponent_Conditional_1_For_8_For_4_Conditional_1_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275template(0, SearchComponent_Conditional_1_For_8_For_4_Conditional_1_ng_container_0_Template, 1, 0, "ng-container", 18);
  }
  if (rf & 2) {
    const result_r11 = \u0275\u0275nextContext().$implicit;
    \u0275\u0275nextContext(3);
    const contactResult_r5 = \u0275\u0275reference(3);
    \u0275\u0275property("ngTemplateOutlet", contactResult_r5)("ngTemplateOutletContext", \u0275\u0275pureFunction1(2, _c25, result_r11));
  }
}
function SearchComponent_Conditional_1_For_8_For_4_Conditional_2_ng_container_0_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementContainer(0);
  }
}
function SearchComponent_Conditional_1_For_8_For_4_Conditional_2_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275template(0, SearchComponent_Conditional_1_For_8_For_4_Conditional_2_ng_container_0_Template, 1, 0, "ng-container", 18);
  }
  if (rf & 2) {
    const result_r11 = \u0275\u0275nextContext().$implicit;
    \u0275\u0275nextContext(3);
    const pageResult_r6 = \u0275\u0275reference(5);
    \u0275\u0275property("ngTemplateOutlet", pageResult_r6)("ngTemplateOutletContext", \u0275\u0275pureFunction1(2, _c25, result_r11));
  }
}
function SearchComponent_Conditional_1_For_8_For_4_Conditional_3_ng_container_0_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementContainer(0);
  }
}
function SearchComponent_Conditional_1_For_8_For_4_Conditional_3_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275template(0, SearchComponent_Conditional_1_For_8_For_4_Conditional_3_ng_container_0_Template, 1, 0, "ng-container", 18);
  }
  if (rf & 2) {
    const result_r11 = \u0275\u0275nextContext().$implicit;
    \u0275\u0275nextContext(3);
    const taskResult_r7 = \u0275\u0275reference(7);
    \u0275\u0275property("ngTemplateOutlet", taskResult_r7)("ngTemplateOutletContext", \u0275\u0275pureFunction1(2, _c25, result_r11));
  }
}
function SearchComponent_Conditional_1_For_8_For_4_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "mat-option", 17);
    \u0275\u0275template(1, SearchComponent_Conditional_1_For_8_For_4_Conditional_1_Template, 1, 4, "ng-container")(2, SearchComponent_Conditional_1_For_8_For_4_Conditional_2_Template, 1, 4, "ng-container")(3, SearchComponent_Conditional_1_For_8_For_4_Conditional_3_Template, 1, 4, "ng-container");
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const result_r11 = ctx.$implicit;
    const resultSet_r12 = \u0275\u0275nextContext().$implicit;
    \u0275\u0275property("routerLink", result_r11.link)("value", result_r11.value);
    \u0275\u0275advance();
    \u0275\u0275conditional(resultSet_r12.id === "contacts" ? 1 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(resultSet_r12.id === "pages" ? 2 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(resultSet_r12.id === "tasks" ? 3 : -1);
  }
}
function SearchComponent_Conditional_1_For_8_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "mat-optgroup", 15)(1, "span", 16);
    \u0275\u0275text(2);
    \u0275\u0275elementEnd()();
    \u0275\u0275repeaterCreate(3, SearchComponent_Conditional_1_For_8_For_4_Template, 4, 5, "mat-option", 17, \u0275\u0275componentInstance().trackByFn, true);
  }
  if (rf & 2) {
    const resultSet_r12 = ctx.$implicit;
    \u0275\u0275advance(2);
    \u0275\u0275textInterpolate(resultSet_r12.label.toUpperCase());
    \u0275\u0275advance();
    \u0275\u0275repeater(resultSet_r12.results);
  }
}
function SearchComponent_Conditional_1_Template(rf, ctx) {
  if (rf & 1) {
    const _r10 = \u0275\u0275getCurrentView();
    \u0275\u0275elementStart(0, "div", 5)(1, "mat-form-field", 19);
    \u0275\u0275element(2, "mat-icon", 20);
    \u0275\u0275elementStart(3, "input", 21);
    \u0275\u0275listener("keydown", function SearchComponent_Conditional_1_Template_input_keydown_3_listener($event) {
      \u0275\u0275restoreView(_r10);
      const ctx_r1 = \u0275\u0275nextContext();
      return \u0275\u0275resetView(ctx_r1.onKeydown($event));
    });
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(4, "mat-autocomplete", 22, 4);
    \u0275\u0275template(6, SearchComponent_Conditional_1_Conditional_6_Template, 2, 0, "mat-option", 13);
    \u0275\u0275repeaterCreate(7, SearchComponent_Conditional_1_For_8_Template, 5, 1, null, null, \u0275\u0275componentInstance().trackByFn, true);
    \u0275\u0275elementEnd()();
  }
  if (rf & 2) {
    const matAutocomplete_r13 = \u0275\u0275reference(5);
    const ctx_r1 = \u0275\u0275nextContext();
    \u0275\u0275advance();
    \u0275\u0275property("subscriptSizing", "dynamic");
    \u0275\u0275advance();
    \u0275\u0275property("svgIcon", "heroicons_outline:magnifying-glass");
    \u0275\u0275advance();
    \u0275\u0275property("formControl", ctx_r1.searchControl)("matAutocomplete", matAutocomplete_r13)("placeholder", "Search...");
    \u0275\u0275advance();
    \u0275\u0275property("autoSelectActiveOption", true)("disableRipple", true);
    \u0275\u0275advance(2);
    \u0275\u0275conditional(ctx_r1.resultSets && !ctx_r1.resultSets.length ? 6 : -1);
    \u0275\u0275advance();
    \u0275\u0275repeater(ctx_r1.resultSets);
  }
}
function SearchComponent_ng_template_2_Conditional_2_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "img", 25);
  }
  if (rf & 2) {
    const result_r14 = \u0275\u0275nextContext().$implicit;
    \u0275\u0275property("src", result_r14.avatar, \u0275\u0275sanitizeUrl);
  }
}
function SearchComponent_ng_template_2_Conditional_3_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "mat-icon", 26);
  }
  if (rf & 2) {
    \u0275\u0275property("svgIcon", "heroicons_outline:user-circle");
  }
}
function SearchComponent_ng_template_2_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 23)(1, "div", 24);
    \u0275\u0275template(2, SearchComponent_ng_template_2_Conditional_2_Template, 1, 1, "img", 25)(3, SearchComponent_ng_template_2_Conditional_3_Template, 1, 1, "mat-icon", 26);
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(4, "div", 27);
    \u0275\u0275element(5, "span", 28);
    \u0275\u0275elementEnd()();
  }
  if (rf & 2) {
    const result_r14 = ctx.$implicit;
    \u0275\u0275advance(2);
    \u0275\u0275conditional(result_r14.avatar ? 2 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(!result_r14.avatar ? 3 : -1);
    \u0275\u0275advance(2);
    \u0275\u0275property("innerHTML", result_r14.name, \u0275\u0275sanitizeHtml);
  }
}
function SearchComponent_ng_template_4_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 29);
    \u0275\u0275element(1, "div", 30);
    \u0275\u0275elementStart(2, "div", 31);
    \u0275\u0275text(3);
    \u0275\u0275elementEnd()();
  }
  if (rf & 2) {
    const result_r15 = ctx.$implicit;
    \u0275\u0275advance();
    \u0275\u0275property("innerHTML", result_r15.title, \u0275\u0275sanitizeHtml);
    \u0275\u0275advance(2);
    \u0275\u0275textInterpolate1(" ", result_r15.link, " ");
  }
}
function SearchComponent_ng_template_6_Conditional_1_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "mat-icon", 32);
  }
  if (rf & 2) {
    \u0275\u0275property("svgIcon", "heroicons_outline:check-circle");
  }
}
function SearchComponent_ng_template_6_Conditional_2_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "mat-icon", 33);
  }
  if (rf & 2) {
    \u0275\u0275property("svgIcon", "heroicons_outline:check-circle");
  }
}
function SearchComponent_ng_template_6_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 23);
    \u0275\u0275template(1, SearchComponent_ng_template_6_Conditional_1_Template, 1, 1, "mat-icon", 32)(2, SearchComponent_ng_template_6_Conditional_2_Template, 1, 1, "mat-icon", 33);
    \u0275\u0275element(3, "div", 34);
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const result_r16 = ctx.$implicit;
    \u0275\u0275advance();
    \u0275\u0275conditional(result_r16.completed ? 1 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(!result_r16.completed ? 2 : -1);
    \u0275\u0275advance();
    \u0275\u0275property("ngClass", \u0275\u0275pureFunction1(4, _c35, result_r16.completed))("innerHTML", result_r16.title, \u0275\u0275sanitizeHtml);
  }
}
var _SearchComponent = class _SearchComponent {
  /**
   * Constructor
   */
  constructor(_elementRef, _httpClient, _renderer2) {
    this._elementRef = _elementRef;
    this._httpClient = _httpClient;
    this._renderer2 = _renderer2;
    this.appearance = "basic";
    this.debounce = 300;
    this.minLength = 2;
    this.search = new EventEmitter();
    this.opened = false;
    this.searchControl = new UntypedFormControl();
    this._unsubscribeAll = new Subject();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Accessors
  // -----------------------------------------------------------------------------------------------------
  /**
   * Host binding for component classes
   */
  get classList() {
    return {
      "search-appearance-bar": this.appearance === "bar",
      "search-appearance-basic": this.appearance === "basic",
      "search-opened": this.opened
    };
  }
  /**
   * Setter for bar search input
   *
   * @param value
   */
  set barSearchInput(value) {
    if (value) {
      setTimeout(() => {
        value.nativeElement.focus();
      });
    }
  }
  /**
   * Setter for mat-autocomplete element reference
   *
   * @param value
   */
  set matAutocomplete(value) {
    this._matAutocomplete = value;
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Lifecycle hooks
  // -----------------------------------------------------------------------------------------------------
  /**
   * On changes
   *
   * @param changes
   */
  ngOnChanges(changes) {
    if ("appearance" in changes) {
      this.close();
    }
  }
  /**
   * On init
   */
  ngOnInit() {
    this.searchControl.valueChanges.pipe(
      debounceTime(this.debounce),
      takeUntil(this._unsubscribeAll),
      map((value) => {
        if (!value || value.length < this.minLength) {
          this.resultSets = null;
        }
        return value;
      }),
      // Filter out undefined/null/false statements and also
      // filter out the values that are smaller than minLength
      filter((value) => value && value.length >= this.minLength)
    ).subscribe((value) => {
      this._httpClient.post("api/common/search", { query: value }).subscribe((resultSets) => {
        this.resultSets = resultSets;
        this.search.next(resultSets);
      });
    });
  }
  /**
   * On destroy
   */
  ngOnDestroy() {
    this._unsubscribeAll.next(null);
    this._unsubscribeAll.complete();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * On keydown of the search input
   *
   * @param event
   */
  onKeydown(event) {
    if (event.code === "Escape") {
      if (this.appearance === "bar" && !this._matAutocomplete.isOpen) {
        this.close();
      }
    }
  }
  /**
   * Open the search
   * Used in 'bar'
   */
  open() {
    if (this.opened) {
      return;
    }
    this.opened = true;
  }
  /**
   * Close the search
   * * Used in 'bar'
   */
  close() {
    if (!this.opened) {
      return;
    }
    this.searchControl.setValue("");
    this.opened = false;
  }
  /**
   * Track by function for ngFor loops
   *
   * @param index
   * @param item
   */
  trackByFn(index, item) {
    return item.id || index;
  }
};
_SearchComponent.\u0275fac = function SearchComponent_Factory(t) {
  return new (t || _SearchComponent)(\u0275\u0275directiveInject(ElementRef), \u0275\u0275directiveInject(HttpClient), \u0275\u0275directiveInject(Renderer2));
};
_SearchComponent.\u0275cmp = /* @__PURE__ */ \u0275\u0275defineComponent({ type: _SearchComponent, selectors: [["search"]], viewQuery: function SearchComponent_Query(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275viewQuery(_c011, 5);
    \u0275\u0275viewQuery(_c17, 5);
  }
  if (rf & 2) {
    let _t;
    \u0275\u0275queryRefresh(_t = \u0275\u0275loadQuery()) && (ctx.barSearchInput = _t.first);
    \u0275\u0275queryRefresh(_t = \u0275\u0275loadQuery()) && (ctx.matAutocomplete = _t.first);
  }
}, hostVars: 2, hostBindings: function SearchComponent_HostBindings(rf, ctx) {
  if (rf & 2) {
    \u0275\u0275classMap(ctx.classList);
  }
}, inputs: { appearance: "appearance", debounce: "debounce", minLength: "minLength" }, outputs: { search: "search" }, exportAs: ["fuseSearch"], standalone: true, features: [\u0275\u0275ProvidersFeature([
  {
    provide: MAT_AUTOCOMPLETE_SCROLL_STRATEGY,
    useFactory: () => {
      const overlay = inject(Overlay);
      return () => overlay.scrollStrategies.block();
    }
  }
]), \u0275\u0275NgOnChangesFeature, \u0275\u0275StandaloneFeature], decls: 8, vars: 2, consts: [["contactResult", ""], ["pageResult", ""], ["taskResult", ""], ["barSearchInput", ""], ["matAutocomplete", "matAutocomplete"], [1, "w-full", "sm:min-w-80"], ["mat-icon-button", ""], [1, "bg-card", "absolute", "inset-0", "z-99", "flex", "shrink-0", "items-center"], ["mat-icon-button", "", 3, "click"], [3, "svgIcon"], [1, "absolute", "ml-6", "sm:ml-8", 3, "svgIcon"], [1, "h-full", "w-full", "px-16", "sm:px-18", 3, "keydown", "formControl", "matAutocomplete", "placeholder"], [1, "max-h-128", "rounded-b", "border-t", "shadow-md", "sm:px-2", 3, "autoSelectActiveOption", "disableRipple"], [1, "text-secondary", "pointer-events-none", "bg-transparent", "px-6", "py-0", "text-md"], ["mat-icon-button", "", 1, "absolute", "right-5", "top-1/2", "-mt-5", "h-10", "w-10", "shrink-0", "sm:right-7", 3, "click"], [1, "mt-2", "flex", "items-center", "px-2"], [1, "text-secondary", "text-sm", "font-semibold", "tracking-wider"], [1, "group", "relative", "mb-1", "rounded-md", "px-6", "py-0", "text-md", "dark:hover:bg-hover", "hover:bg-gray-100", 3, "routerLink", "value"], [4, "ngTemplateOutlet", "ngTemplateOutletContext"], [1, "w-full", 3, "subscriptSizing"], ["matPrefix", "", 3, "svgIcon"], ["matInput", "", 3, "keydown", "formControl", "matAutocomplete", "placeholder"], [1, "mt-1", "max-h-128", "rounded", 3, "autoSelectActiveOption", "disableRipple"], [1, "flex", "items-center"], [1, "flex", "h-8", "w-8", "shrink-0", "items-center", "justify-center", "overflow-hidden", "rounded-full", "bg-primary-100", "dark:bg-primary-800"], [3, "src"], [1, "m-0", "text-primary", "icon-size-5", "dark:text-primary-400", 3, "svgIcon"], [1, "ml-3", "truncate"], [3, "innerHTML"], [1, "flex", "flex-col"], [1, "truncate", "leading-normal", 3, "innerHTML"], [1, "text-secondary", "truncate", "text-sm", "leading-normal"], [1, "mr-0", "text-primary", "dark:text-primary-400", 3, "svgIcon"], [1, "text-hint", "mr-0", 3, "svgIcon"], [1, "ml-3", "truncate", "leading-normal", 3, "ngClass", "innerHTML"]], template: function SearchComponent_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275template(0, SearchComponent_Conditional_0_Template, 2, 2)(1, SearchComponent_Conditional_1_Template, 9, 8, "div", 5)(2, SearchComponent_ng_template_2_Template, 6, 3, "ng-template", null, 0, \u0275\u0275templateRefExtractor)(4, SearchComponent_ng_template_4_Template, 4, 2, "ng-template", null, 1, \u0275\u0275templateRefExtractor)(6, SearchComponent_ng_template_6_Template, 4, 6, "ng-template", null, 2, \u0275\u0275templateRefExtractor);
  }
  if (rf & 2) {
    \u0275\u0275conditional(ctx.appearance === "bar" ? 0 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx.appearance === "basic" ? 1 : -1);
  }
}, dependencies: [
  MatButtonModule,
  MatIconButton,
  MatIconModule,
  MatIcon,
  FormsModule,
  DefaultValueAccessor,
  NgControlStatus,
  MatAutocompleteModule,
  MatAutocomplete,
  MatOption,
  MatOptgroup,
  MatAutocompleteTrigger,
  ReactiveFormsModule,
  FormControlDirective,
  MatOptionModule,
  RouterLink,
  NgTemplateOutlet,
  MatFormFieldModule,
  MatFormField,
  MatPrefix,
  MatInputModule,
  MatInput,
  NgClass
], encapsulation: 2, data: { animation: fuseAnimations } });
var SearchComponent = _SearchComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && \u0275setClassDebugInfo(SearchComponent, { className: "SearchComponent", filePath: "src\\app\\layout\\common\\search\\search.component.ts", lineNumber: 69 });
})();

// src/app/layout/common/shortcuts/shortcuts.component.ts
var _c012 = ["shortcutsOrigin"];
var _c18 = ["shortcutsPanel"];
var _c26 = (a0) => ({ "pointer-events-none": a0 });
var _c36 = (a0) => ({ "group-hover:opacity-0": a0 });
function ShortcutsComponent_ng_template_3_Conditional_8_Conditional_1_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275text(0, " - Add new ");
  }
}
function ShortcutsComponent_ng_template_3_Conditional_8_Conditional_2_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275text(0, " - Editing ");
  }
}
function ShortcutsComponent_ng_template_3_Conditional_8_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "span", 11);
    \u0275\u0275template(1, ShortcutsComponent_ng_template_3_Conditional_8_Conditional_1_Template, 1, 0)(2, ShortcutsComponent_ng_template_3_Conditional_8_Conditional_2_Template, 1, 0);
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const ctx_r2 = \u0275\u0275nextContext(2);
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx_r2.mode === "add" ? 1 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx_r2.mode === "modify" || ctx_r2.mode === "edit" ? 2 : -1);
  }
}
function ShortcutsComponent_ng_template_3_Conditional_10_Template(rf, ctx) {
  if (rf & 1) {
    const _r4 = \u0275\u0275getCurrentView();
    \u0275\u0275elementStart(0, "button", 16);
    \u0275\u0275listener("click", function ShortcutsComponent_ng_template_3_Conditional_10_Template_button_click_0_listener() {
      \u0275\u0275restoreView(_r4);
      const ctx_r2 = \u0275\u0275nextContext(2);
      return \u0275\u0275resetView(ctx_r2.changeMode("modify"));
    });
    \u0275\u0275element(1, "mat-icon", 8);
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(2, "button", 16);
    \u0275\u0275listener("click", function ShortcutsComponent_ng_template_3_Conditional_10_Template_button_click_2_listener() {
      \u0275\u0275restoreView(_r4);
      const ctx_r2 = \u0275\u0275nextContext(2);
      return \u0275\u0275resetView(ctx_r2.newShortcut());
    });
    \u0275\u0275element(3, "mat-icon", 8);
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    \u0275\u0275property("matTooltip", "Enter edit mode");
    \u0275\u0275advance();
    \u0275\u0275property("svgIcon", "heroicons_solid:pencil-square");
    \u0275\u0275advance();
    \u0275\u0275property("matTooltip", "Add shortcut");
    \u0275\u0275advance();
    \u0275\u0275property("svgIcon", "heroicons_solid:plus-circle");
  }
}
function ShortcutsComponent_ng_template_3_Conditional_11_Template(rf, ctx) {
  if (rf & 1) {
    const _r5 = \u0275\u0275getCurrentView();
    \u0275\u0275elementStart(0, "button", 16);
    \u0275\u0275listener("click", function ShortcutsComponent_ng_template_3_Conditional_11_Template_button_click_0_listener() {
      \u0275\u0275restoreView(_r5);
      const ctx_r2 = \u0275\u0275nextContext(2);
      return \u0275\u0275resetView(ctx_r2.changeMode("view"));
    });
    \u0275\u0275element(1, "mat-icon", 8);
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    \u0275\u0275property("matTooltip", "Exit edit mode");
    \u0275\u0275advance();
    \u0275\u0275property("svgIcon", "heroicons_solid:check-circle");
  }
}
function ShortcutsComponent_ng_template_3_Conditional_12_Template(rf, ctx) {
  if (rf & 1) {
    const _r6 = \u0275\u0275getCurrentView();
    \u0275\u0275elementStart(0, "button", 16);
    \u0275\u0275listener("click", function ShortcutsComponent_ng_template_3_Conditional_12_Template_button_click_0_listener() {
      \u0275\u0275restoreView(_r6);
      const ctx_r2 = \u0275\u0275nextContext(2);
      return \u0275\u0275resetView(ctx_r2.changeMode("view"));
    });
    \u0275\u0275element(1, "mat-icon", 8);
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    \u0275\u0275property("matTooltip", "Cancel");
    \u0275\u0275advance();
    \u0275\u0275property("svgIcon", "heroicons_solid:x-circle");
  }
}
function ShortcutsComponent_ng_template_3_Conditional_13_Template(rf, ctx) {
  if (rf & 1) {
    const _r7 = \u0275\u0275getCurrentView();
    \u0275\u0275elementStart(0, "button", 16);
    \u0275\u0275listener("click", function ShortcutsComponent_ng_template_3_Conditional_13_Template_button_click_0_listener() {
      \u0275\u0275restoreView(_r7);
      const ctx_r2 = \u0275\u0275nextContext(2);
      return \u0275\u0275resetView(ctx_r2.changeMode("modify"));
    });
    \u0275\u0275element(1, "mat-icon", 8);
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    \u0275\u0275property("matTooltip", "Cancel");
    \u0275\u0275advance();
    \u0275\u0275property("svgIcon", "heroicons_solid:x-circle");
  }
}
function ShortcutsComponent_ng_template_3_Conditional_15_For_2_Conditional_1_Template(rf, ctx) {
  if (rf & 1) {
    const _r8 = \u0275\u0275getCurrentView();
    \u0275\u0275elementStart(0, "div", 23);
    \u0275\u0275listener("click", function ShortcutsComponent_ng_template_3_Conditional_15_For_2_Conditional_1_Template_div_click_0_listener() {
      \u0275\u0275restoreView(_r8);
      const shortcut_r9 = \u0275\u0275nextContext().$implicit;
      const ctx_r2 = \u0275\u0275nextContext(3);
      return \u0275\u0275resetView(ctx_r2.editShortcut(shortcut_r9));
    });
    \u0275\u0275elementEnd();
  }
}
function ShortcutsComponent_ng_template_3_Conditional_15_For_2_Conditional_2_ng_container_1_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementContainer(0);
  }
}
function ShortcutsComponent_ng_template_3_Conditional_15_For_2_Conditional_2_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "a", 21);
    \u0275\u0275template(1, ShortcutsComponent_ng_template_3_Conditional_15_For_2_Conditional_2_ng_container_1_Template, 1, 0, "ng-container", 24);
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const shortcut_r9 = \u0275\u0275nextContext().$implicit;
    const linkContent_r10 = \u0275\u0275reference(5);
    const ctx_r2 = \u0275\u0275nextContext(3);
    \u0275\u0275property("ngClass", \u0275\u0275pureFunction1(3, _c26, ctx_r2.mode === "modify"))("href", shortcut_r9.link, \u0275\u0275sanitizeUrl);
    \u0275\u0275advance();
    \u0275\u0275property("ngTemplateOutlet", linkContent_r10);
  }
}
function ShortcutsComponent_ng_template_3_Conditional_15_For_2_Conditional_3_ng_container_1_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementContainer(0);
  }
}
function ShortcutsComponent_ng_template_3_Conditional_15_For_2_Conditional_3_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "a", 22);
    \u0275\u0275template(1, ShortcutsComponent_ng_template_3_Conditional_15_For_2_Conditional_3_ng_container_1_Template, 1, 0, "ng-container", 24);
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const shortcut_r9 = \u0275\u0275nextContext().$implicit;
    const linkContent_r10 = \u0275\u0275reference(5);
    const ctx_r2 = \u0275\u0275nextContext(3);
    \u0275\u0275property("ngClass", \u0275\u0275pureFunction1(3, _c26, ctx_r2.mode === "modify"))("routerLink", shortcut_r9.link);
    \u0275\u0275advance();
    \u0275\u0275property("ngTemplateOutlet", linkContent_r10);
  }
}
function ShortcutsComponent_ng_template_3_Conditional_15_For_2_ng_template_4_Conditional_1_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "mat-icon", 26);
  }
  if (rf & 2) {
    \u0275\u0275property("svgIcon", "heroicons_solid:pencil");
  }
}
function ShortcutsComponent_ng_template_3_Conditional_15_For_2_ng_template_4_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 25);
    \u0275\u0275template(1, ShortcutsComponent_ng_template_3_Conditional_15_For_2_ng_template_4_Conditional_1_Template, 1, 1, "mat-icon", 26);
    \u0275\u0275element(2, "mat-icon", 27);
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(3, "div", 28);
    \u0275\u0275text(4);
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(5, "div", 29);
    \u0275\u0275text(6);
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const shortcut_r9 = \u0275\u0275nextContext().$implicit;
    const ctx_r2 = \u0275\u0275nextContext(3);
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx_r2.mode === "modify" ? 1 : -1);
    \u0275\u0275advance();
    \u0275\u0275property("ngClass", \u0275\u0275pureFunction1(5, _c36, ctx_r2.mode === "modify"))("svgIcon", shortcut_r9.icon);
    \u0275\u0275advance(2);
    \u0275\u0275textInterpolate1(" ", shortcut_r9.label, " ");
    \u0275\u0275advance(2);
    \u0275\u0275textInterpolate1(" ", shortcut_r9.description, " ");
  }
}
function ShortcutsComponent_ng_template_3_Conditional_15_For_2_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 18);
    \u0275\u0275template(1, ShortcutsComponent_ng_template_3_Conditional_15_For_2_Conditional_1_Template, 1, 0, "div", 20)(2, ShortcutsComponent_ng_template_3_Conditional_15_For_2_Conditional_2_Template, 2, 5, "a", 21)(3, ShortcutsComponent_ng_template_3_Conditional_15_For_2_Conditional_3_Template, 2, 5, "a", 22)(4, ShortcutsComponent_ng_template_3_Conditional_15_For_2_ng_template_4_Template, 7, 7, "ng-template", null, 2, \u0275\u0275templateRefExtractor);
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const shortcut_r9 = ctx.$implicit;
    const ctx_r2 = \u0275\u0275nextContext(3);
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx_r2.mode === "modify" ? 1 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(!shortcut_r9.useRouter ? 2 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(shortcut_r9.useRouter ? 3 : -1);
  }
}
function ShortcutsComponent_ng_template_3_Conditional_15_Conditional_3_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 19)(1, "div", 30);
    \u0275\u0275element(2, "mat-icon", 31);
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(3, "div", 32);
    \u0275\u0275text(4, " No shortcuts ");
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(5, "div", 33);
    \u0275\u0275text(6, " When you have shortcuts, they will appear here. ");
    \u0275\u0275elementEnd()();
  }
  if (rf & 2) {
    \u0275\u0275advance(2);
    \u0275\u0275property("svgIcon", "heroicons_outline:bookmark");
  }
}
function ShortcutsComponent_ng_template_3_Conditional_15_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 17);
    \u0275\u0275repeaterCreate(1, ShortcutsComponent_ng_template_3_Conditional_15_For_2_Template, 6, 3, "div", 18, \u0275\u0275componentInstance().trackByFn, true);
    \u0275\u0275elementEnd();
    \u0275\u0275template(3, ShortcutsComponent_ng_template_3_Conditional_15_Conditional_3_Template, 7, 1, "div", 19);
  }
  if (rf & 2) {
    const ctx_r2 = \u0275\u0275nextContext(2);
    \u0275\u0275advance();
    \u0275\u0275repeater(ctx_r2.shortcuts);
    \u0275\u0275advance(2);
    \u0275\u0275conditional(!ctx_r2.shortcuts || !ctx_r2.shortcuts.length ? 3 : -1);
  }
}
function ShortcutsComponent_ng_template_3_Conditional_16_Conditional_20_Template(rf, ctx) {
  if (rf & 1) {
    const _r12 = \u0275\u0275getCurrentView();
    \u0275\u0275elementStart(0, "button", 41);
    \u0275\u0275listener("click", function ShortcutsComponent_ng_template_3_Conditional_16_Conditional_20_Template_button_click_0_listener() {
      \u0275\u0275restoreView(_r12);
      const ctx_r2 = \u0275\u0275nextContext(3);
      return \u0275\u0275resetView(ctx_r2.delete());
    });
    \u0275\u0275text(1, " Delete ");
    \u0275\u0275elementEnd();
  }
}
function ShortcutsComponent_ng_template_3_Conditional_16_Conditional_22_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275text(0, " Add ");
  }
}
function ShortcutsComponent_ng_template_3_Conditional_16_Conditional_23_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275text(0, " Update ");
  }
}
function ShortcutsComponent_ng_template_3_Conditional_16_Template(rf, ctx) {
  if (rf & 1) {
    const _r11 = \u0275\u0275getCurrentView();
    \u0275\u0275elementStart(0, "form", 15)(1, "mat-form-field", 34)(2, "mat-label");
    \u0275\u0275text(3, "Label");
    \u0275\u0275elementEnd();
    \u0275\u0275element(4, "input", 35);
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(5, "mat-form-field", 34)(6, "mat-label");
    \u0275\u0275text(7, "Description");
    \u0275\u0275elementEnd();
    \u0275\u0275element(8, "input", 36);
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(9, "mat-form-field", 34)(10, "mat-label");
    \u0275\u0275text(11, "Icon");
    \u0275\u0275elementEnd();
    \u0275\u0275element(12, "input", 35);
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(13, "mat-form-field", 34)(14, "mat-label");
    \u0275\u0275text(15, "Link");
    \u0275\u0275elementEnd();
    \u0275\u0275element(16, "input", 35);
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(17, "mat-slide-toggle", 37);
    \u0275\u0275text(18, " Use router for the link ");
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(19, "div", 38);
    \u0275\u0275template(20, ShortcutsComponent_ng_template_3_Conditional_16_Conditional_20_Template, 2, 0, "button", 39);
    \u0275\u0275elementStart(21, "button", 40);
    \u0275\u0275listener("click", function ShortcutsComponent_ng_template_3_Conditional_16_Template_button_click_21_listener() {
      \u0275\u0275restoreView(_r11);
      const ctx_r2 = \u0275\u0275nextContext(2);
      return \u0275\u0275resetView(ctx_r2.save());
    });
    \u0275\u0275template(22, ShortcutsComponent_ng_template_3_Conditional_16_Conditional_22_Template, 1, 0)(23, ShortcutsComponent_ng_template_3_Conditional_16_Conditional_23_Template, 1, 0);
    \u0275\u0275elementEnd()()();
  }
  if (rf & 2) {
    const ctx_r2 = \u0275\u0275nextContext(2);
    \u0275\u0275property("formGroup", ctx_r2.shortcutForm);
    \u0275\u0275advance(4);
    \u0275\u0275property("formControlName", "label");
    \u0275\u0275advance(4);
    \u0275\u0275property("formControlName", "description");
    \u0275\u0275advance(4);
    \u0275\u0275property("formControlName", "icon");
    \u0275\u0275advance(4);
    \u0275\u0275property("formControlName", "link");
    \u0275\u0275advance();
    \u0275\u0275property("color", "primary")("formControlName", "useRouter");
    \u0275\u0275advance(3);
    \u0275\u0275conditional(ctx_r2.mode === "edit" ? 20 : -1);
    \u0275\u0275advance();
    \u0275\u0275property("color", "primary")("disabled", !ctx_r2.shortcutForm.valid);
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx_r2.mode === "add" ? 22 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx_r2.mode === "edit" ? 23 : -1);
  }
}
function ShortcutsComponent_ng_template_3_Template(rf, ctx) {
  if (rf & 1) {
    const _r2 = \u0275\u0275getCurrentView();
    \u0275\u0275elementStart(0, "div", 5)(1, "div", 6)(2, "div", 7)(3, "button", 3);
    \u0275\u0275listener("click", function ShortcutsComponent_ng_template_3_Template_button_click_3_listener() {
      \u0275\u0275restoreView(_r2);
      const ctx_r2 = \u0275\u0275nextContext();
      return \u0275\u0275resetView(ctx_r2.closePanel());
    });
    \u0275\u0275element(4, "mat-icon", 8);
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(5, "div", 9)(6, "span", 10);
    \u0275\u0275text(7, "Shortcuts");
    \u0275\u0275elementEnd();
    \u0275\u0275template(8, ShortcutsComponent_ng_template_3_Conditional_8_Template, 3, 2, "span", 11);
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(9, "div", 12);
    \u0275\u0275template(10, ShortcutsComponent_ng_template_3_Conditional_10_Template, 4, 4)(11, ShortcutsComponent_ng_template_3_Conditional_11_Template, 2, 2, "button", 13)(12, ShortcutsComponent_ng_template_3_Conditional_12_Template, 2, 2, "button", 13)(13, ShortcutsComponent_ng_template_3_Conditional_13_Template, 2, 2, "button", 13);
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(14, "div", 14);
    \u0275\u0275template(15, ShortcutsComponent_ng_template_3_Conditional_15_Template, 4, 1)(16, ShortcutsComponent_ng_template_3_Conditional_16_Template, 24, 12, "form", 15);
    \u0275\u0275elementEnd()();
  }
  if (rf & 2) {
    const ctx_r2 = \u0275\u0275nextContext();
    \u0275\u0275advance(4);
    \u0275\u0275property("svgIcon", "heroicons_solid:x-mark");
    \u0275\u0275advance(4);
    \u0275\u0275conditional(ctx_r2.mode !== "view" ? 8 : -1);
    \u0275\u0275advance(2);
    \u0275\u0275conditional(ctx_r2.mode === "view" ? 10 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx_r2.mode === "modify" ? 11 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx_r2.mode === "add" ? 12 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx_r2.mode === "edit" ? 13 : -1);
    \u0275\u0275advance(2);
    \u0275\u0275conditional(ctx_r2.mode === "view" || ctx_r2.mode === "modify" ? 15 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx_r2.mode === "add" || ctx_r2.mode === "edit" ? 16 : -1);
  }
}
var _ShortcutsComponent = class _ShortcutsComponent {
  /**
   * Constructor
   */
  constructor(_changeDetectorRef, _formBuilder, _shortcutsService, _overlay, _viewContainerRef) {
    this._changeDetectorRef = _changeDetectorRef;
    this._formBuilder = _formBuilder;
    this._shortcutsService = _shortcutsService;
    this._overlay = _overlay;
    this._viewContainerRef = _viewContainerRef;
    this.mode = "view";
    this._unsubscribeAll = new Subject();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Lifecycle hooks
  // -----------------------------------------------------------------------------------------------------
  /**
   * On init
   */
  ngOnInit() {
    this.shortcutForm = this._formBuilder.group({
      id: [null],
      label: ["", Validators.required],
      description: [""],
      icon: ["", Validators.required],
      link: ["", Validators.required],
      useRouter: ["", Validators.required]
    });
    this._shortcutsService.shortcuts$.pipe(takeUntil(this._unsubscribeAll)).subscribe((shortcuts2) => {
      this.shortcuts = shortcuts2;
      this._changeDetectorRef.markForCheck();
    });
  }
  /**
   * On destroy
   */
  ngOnDestroy() {
    this._unsubscribeAll.next(null);
    this._unsubscribeAll.complete();
    if (this._overlayRef) {
      this._overlayRef.dispose();
    }
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Open the shortcuts panel
   */
  openPanel() {
    if (!this._shortcutsPanel || !this._shortcutsOrigin) {
      return;
    }
    this.mode = "view";
    if (!this._overlayRef) {
      this._createOverlay();
    }
    this._overlayRef.attach(new TemplatePortal(this._shortcutsPanel, this._viewContainerRef));
  }
  /**
   * Close the shortcuts panel
   */
  closePanel() {
    this._overlayRef.detach();
  }
  /**
   * Change the mode
   */
  changeMode(mode) {
    this.mode = mode;
  }
  /**
   * Prepare for a new shortcut
   */
  newShortcut() {
    this.shortcutForm.reset();
    this.mode = "add";
  }
  /**
   * Edit a shortcut
   */
  editShortcut(shortcut) {
    this.shortcutForm.reset(shortcut);
    this.mode = "edit";
  }
  /**
   * Save shortcut
   */
  save() {
    const shortcut = this.shortcutForm.value;
    if (shortcut.id) {
      this._shortcutsService.update(shortcut.id, shortcut).subscribe();
    } else {
      this._shortcutsService.create(shortcut).subscribe();
    }
    this.mode = "modify";
  }
  /**
   * Delete shortcut
   */
  delete() {
    const shortcut = this.shortcutForm.value;
    this._shortcutsService.delete(shortcut.id).subscribe();
    this.mode = "modify";
  }
  /**
   * Track by function for ngFor loops
   *
   * @param index
   * @param item
   */
  trackByFn(index, item) {
    return item.id || index;
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Private methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Create the overlay
   */
  _createOverlay() {
    this._overlayRef = this._overlay.create({
      hasBackdrop: true,
      backdropClass: "fuse-backdrop-on-mobile",
      scrollStrategy: this._overlay.scrollStrategies.block(),
      positionStrategy: this._overlay.position().flexibleConnectedTo(this._shortcutsOrigin._elementRef.nativeElement).withLockedPosition(true).withPush(true).withPositions([
        {
          originX: "start",
          originY: "bottom",
          overlayX: "start",
          overlayY: "top"
        },
        {
          originX: "start",
          originY: "top",
          overlayX: "start",
          overlayY: "bottom"
        },
        {
          originX: "end",
          originY: "bottom",
          overlayX: "end",
          overlayY: "top"
        },
        {
          originX: "end",
          originY: "top",
          overlayX: "end",
          overlayY: "bottom"
        }
      ])
    });
    this._overlayRef.backdropClick().subscribe(() => {
      this._overlayRef.detach();
    });
  }
};
_ShortcutsComponent.\u0275fac = function ShortcutsComponent_Factory(t) {
  return new (t || _ShortcutsComponent)(\u0275\u0275directiveInject(ChangeDetectorRef), \u0275\u0275directiveInject(UntypedFormBuilder), \u0275\u0275directiveInject(ShortcutsService), \u0275\u0275directiveInject(Overlay), \u0275\u0275directiveInject(ViewContainerRef));
};
_ShortcutsComponent.\u0275cmp = /* @__PURE__ */ \u0275\u0275defineComponent({ type: _ShortcutsComponent, selectors: [["shortcuts"]], viewQuery: function ShortcutsComponent_Query(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275viewQuery(_c012, 5);
    \u0275\u0275viewQuery(_c18, 5);
  }
  if (rf & 2) {
    let _t;
    \u0275\u0275queryRefresh(_t = \u0275\u0275loadQuery()) && (ctx._shortcutsOrigin = _t.first);
    \u0275\u0275queryRefresh(_t = \u0275\u0275loadQuery()) && (ctx._shortcutsPanel = _t.first);
  }
}, exportAs: ["shortcuts"], standalone: true, features: [\u0275\u0275StandaloneFeature], decls: 5, vars: 1, consts: [["shortcutsOrigin", ""], ["shortcutsPanel", ""], ["linkContent", ""], ["mat-icon-button", "", 3, "click"], [3, "svgIcon"], [1, "fixed", "inset-0", "flex", "flex-col", "overflow-hidden", "shadow-lg", "sm:static", "sm:inset-auto", "sm:w-90", "sm:min-w-90", "sm:rounded-2xl"], [1, "flex", "shrink-0", "items-center", "bg-primary", "py-4", "pl-6", "pr-4", "text-on-primary"], [1, "-ml-1", "mr-3", "sm:hidden"], [1, "text-current", "icon-size-5", 3, "svgIcon"], [1, "flex", "items-center", "text-lg", "font-medium", "leading-10"], [1, ""], [1, "ml-1"], [1, "ml-auto"], ["mat-icon-button", "", 3, "matTooltip"], [1, "bg-card", "relative", "-mb-px", "flex", "flex-auto", "flex-col", "overflow-y-auto", "sm:max-h-120"], [1, "p-6", 3, "formGroup"], ["mat-icon-button", "", 3, "click", "matTooltip"], [1, "grid", "grid-flow-row", "grid-cols-2"], [1, "group", "bg-card", "relative", "flex", "flex-col", "overflow-hidden", "border-b", "border-r", "even:border-r-0", "hover:bg-gray-50", "dark:hover:bg-black", "dark:hover:bg-opacity-5"], [1, "flex", "flex-auto", "flex-col", "items-center", "justify-center", "px-8", "py-12", "sm:justify-start"], [1, "absolute", "inset-0", "z-99", "cursor-pointer"], [1, "flex", "h-full", "w-full", "flex-col", "items-center", "justify-center", "py-6", "no-underline", 3, "ngClass", "href"], [1, "flex", "h-full", "w-full", "flex-col", "items-center", "justify-center", "py-6", "no-underline", 3, "ngClass", "routerLink"], [1, "absolute", "inset-0", "z-99", "cursor-pointer", 3, "click"], [4, "ngTemplateOutlet"], [1, "relative", "mb-3", "flex", "h-12", "w-12", "shrink-0", "items-center", "justify-center", "rounded-full", "bg-gray-100", "dark:bg-gray-700"], [1, "absolute", "z-20", "opacity-0", "icon-size-5", "group-hover:opacity-100", 3, "svgIcon"], [1, "z-10", 3, "ngClass", "svgIcon"], [1, "text-center", "font-medium"], [1, "text-secondary", "text-center", "text-md"], [1, "flex", "h-14", "w-14", "flex-0", "items-center", "justify-center", "rounded-full", "bg-primary-100", "dark:bg-primary-600"], [1, "text-primary-700", "dark:text-primary-50", 3, "svgIcon"], [1, "mt-5", "text-2xl", "font-semibold", "tracking-tight"], [1, "text-secondary", "mt-1", "w-full", "max-w-60", "text-center", "text-md"], [1, "w-full"], ["matInput", "", "required", "", 3, "formControlName"], ["matInput", "", 3, "formControlName"], [3, "color", "formControlName"], [1, "mt-4", "flex", "items-center", "justify-end"], ["mat-flat-button", "", "type", "button", 1, "mr-2"], ["mat-flat-button", "", "type", "button", 3, "click", "color", "disabled"], ["mat-flat-button", "", "type", "button", 1, "mr-2", 3, "click"]], template: function ShortcutsComponent_Template(rf, ctx) {
  if (rf & 1) {
    const _r1 = \u0275\u0275getCurrentView();
    \u0275\u0275elementStart(0, "button", 3, 0);
    \u0275\u0275listener("click", function ShortcutsComponent_Template_button_click_0_listener() {
      \u0275\u0275restoreView(_r1);
      return \u0275\u0275resetView(ctx.openPanel());
    });
    \u0275\u0275element(2, "mat-icon", 4);
    \u0275\u0275elementEnd();
    \u0275\u0275template(3, ShortcutsComponent_ng_template_3_Template, 17, 8, "ng-template", null, 1, \u0275\u0275templateRefExtractor);
  }
  if (rf & 2) {
    \u0275\u0275advance(2);
    \u0275\u0275property("svgIcon", "heroicons_outline:squares-plus");
  }
}, dependencies: [
  MatButtonModule,
  MatButton,
  MatIconButton,
  MatIconModule,
  MatIcon,
  MatTooltipModule,
  MatTooltip,
  NgClass,
  NgTemplateOutlet,
  RouterLink,
  FormsModule,
  \u0275NgNoValidate,
  DefaultValueAccessor,
  NgControlStatus,
  NgControlStatusGroup,
  RequiredValidator,
  ReactiveFormsModule,
  FormGroupDirective,
  FormControlName,
  MatFormFieldModule,
  MatFormField,
  MatLabel,
  MatInputModule,
  MatInput,
  MatSlideToggleModule,
  MatSlideToggle
], encapsulation: 2, changeDetection: 0 });
var ShortcutsComponent = _ShortcutsComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && \u0275setClassDebugInfo(ShortcutsComponent, { className: "ShortcutsComponent", filePath: "src\\app\\layout\\common\\shortcuts\\shortcuts.component.ts", lineNumber: 54 });
})();

// src/app/pages/profile/mi-perfil/mi-perfil.component.ts
function MiPerfilComponent_Conditional_23_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "mat-icon", 13);
  }
  if (rf & 2) {
    \u0275\u0275property("svgIcon", "heroicons_solid:eye");
  }
}
function MiPerfilComponent_Conditional_24_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "mat-icon", 13);
  }
  if (rf & 2) {
    \u0275\u0275property("svgIcon", "heroicons_solid:eye-slash");
  }
}
function MiPerfilComponent_Conditional_25_Conditional_1_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275text(0, " El m\xEDnimo de caracteres son 5. ");
  }
}
function MiPerfilComponent_Conditional_25_Conditional_2_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275text(0, " El maximo de caracteres son 20. ");
  }
}
function MiPerfilComponent_Conditional_25_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "mat-error");
    \u0275\u0275template(1, MiPerfilComponent_Conditional_25_Conditional_1_Template, 1, 0)(2, MiPerfilComponent_Conditional_25_Conditional_2_Template, 1, 0);
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const ctx_r2 = \u0275\u0275nextContext();
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx_r2.form.get("contrasena").hasError("minlength") ? 1 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx_r2.form.get("contrasena").hasError("maxlength") ? 2 : -1);
  }
}
function MiPerfilComponent_Conditional_32_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "mat-icon", 13);
  }
  if (rf & 2) {
    \u0275\u0275property("svgIcon", "heroicons_solid:eye");
  }
}
function MiPerfilComponent_Conditional_33_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "mat-icon", 13);
  }
  if (rf & 2) {
    \u0275\u0275property("svgIcon", "heroicons_solid:eye-slash");
  }
}
function MiPerfilComponent_Conditional_34_Conditional_1_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275text(0, " El m\xEDnimo de caracteres son 5. ");
  }
}
function MiPerfilComponent_Conditional_34_Conditional_2_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275text(0, " El maximo de caracteres son 20. ");
  }
}
function MiPerfilComponent_Conditional_34_Conditional_3_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275text(0, " Las contrase\xF1as no coinciden! ");
  }
}
function MiPerfilComponent_Conditional_34_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "mat-error");
    \u0275\u0275template(1, MiPerfilComponent_Conditional_34_Conditional_1_Template, 1, 0)(2, MiPerfilComponent_Conditional_34_Conditional_2_Template, 1, 0)(3, MiPerfilComponent_Conditional_34_Conditional_3_Template, 1, 0);
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const ctx_r2 = \u0275\u0275nextContext();
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx_r2.form.get("confirmaContrasena").hasError("minlength") ? 1 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx_r2.form.get("confirmaContrasena").hasError("maxlength") ? 2 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx_r2.form.get("confirmaContrasena").hasError("passwordMismatchError") ? 3 : -1);
  }
}
var _MiPerfilComponent = class _MiPerfilComponent {
  constructor() {
    this.fb = inject(FormBuilder);
    this.usuarioService = inject(UsuariosService);
    this.fuseService = inject(FuseConfirmationService);
    this.swalService = inject(SwalService);
    this.dialogRef = inject(MatDialogRef);
  }
  createForm() {
    this.form = this.fb.group({
      id: [null],
      nombre: [""],
      apellido: [""],
      idMunicipio: [""],
      contrasena: ["", [Validators.minLength(5), Validators.maxLength(20)]],
      confirmaContrasena: ["", [Validators.minLength(5), Validators.maxLength(20)]]
    }, { validators: passwordMatchValidator("contrasena", "confirmaContrasena") });
  }
  ngOnInit() {
    this.createForm();
    this.getPerfil();
  }
  getPerfil() {
    this.subcription$ = this.usuarioService.getUsuarioComun().subscribe((response) => {
      const empleado = response.data;
      this.form.patchValue(empleado);
    });
  }
  onSave() {
    if (this.form.valid) {
      const data = this.form.getRawValue();
      const dialog = this.fuseService.open(__spreadValues({}, guardar));
      dialog.afterClosed().subscribe((response) => {
        if (response === "confirmed") {
          this.usuarioService.putUsuarioComunes(data).subscribe((res) => {
            console.log(res);
            this.swalService.ToastAler({
              icon: "success",
              title: "Registro Actualizado con Exito.",
              timer: 4e3
            });
            this.closeDialog();
          }, (error) => {
            this.swalService.ToastAler({
              icon: "error",
              title: "Ha ocurrido un error en actualizar el registro!",
              timer: 4e3
            });
          });
        } else {
          this.closeDialog();
        }
      });
    }
  }
  closeDialog() {
    this.dialogRef.close();
  }
};
_MiPerfilComponent.\u0275fac = function MiPerfilComponent_Factory(t) {
  return new (t || _MiPerfilComponent)();
};
_MiPerfilComponent.\u0275cmp = /* @__PURE__ */ \u0275\u0275defineComponent({ type: _MiPerfilComponent, selectors: [["app-mi-perfil"]], standalone: true, features: [\u0275\u0275StandaloneFeature], decls: 40, vars: 16, consts: [["passwordField", ""], ["passwordConfirm", ""], [1, "w-full", "sm:bg-card", "sm:rounded-2xl", "sm:mx-0", "mx-auto"], [1, "mt-8", "text-3xl", "font-semibold", "leading-tight", "tracking-tight", "text-center"], [1, "mt-8", 3, "formGroup"], [1, "font-bold", "mb-4", "text-2xl"], [1, "flex", "flex-col", "sm:flex-row", "gap-2.5"], ["floatLabel", "always", 1, "w-full"], ["matInput", "", "placeholder", "Primer nombre", 3, "formControlName", "readonly"], ["matInput", "", "placeholder", "Primer apellido", 3, "formControlName", "readonly"], [1, "flex", "flex-col", "lg:flex-row", "mb-4", "gap-2"], ["id", "contrasena", "matInput", "", "type", "password", "placeholder", "Contrase\xF1a", 3, "formControlName"], ["mat-icon-button", "", "type", "button", "matSuffix", "", 3, "click"], [1, "icon-size-5", 3, "svgIcon"], ["id", "confirmaContrasena", "matInput", "", "type", "password", "placeholder", "Confirmar contrase\xF1a", 3, "formControlName"], [1, "flex", "flex-wrap", "justify-end", "gap-2.5"], ["mat-stroked-button", "", 1, "sm:w-auto", "w-full", "bg-crediorange-100", "rounded-lg", "transition", "duration-200", "text-white", "font-semibold", 3, "matDialogClose"], ["mat-flat-button", "", 1, "sm:w-auto", "w-full", "bg-crediblue-50", "hover:bg-crediblue-100", "text-white", "font-semibold", "py-2", "px-4", "rounded-lg", "transition", "duration-200", 3, "click", "color", "matDialogClose"]], template: function MiPerfilComponent_Template(rf, ctx) {
  if (rf & 1) {
    const _r1 = \u0275\u0275getCurrentView();
    \u0275\u0275elementStart(0, "div", 2)(1, "div", 3);
    \u0275\u0275text(2, " Mi perfil ");
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(3, "form", 4)(4, "div")(5, "p", 5);
    \u0275\u0275text(6, "Informaci\xF3n general");
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(7, "div", 6)(8, "mat-form-field", 7)(9, "mat-label");
    \u0275\u0275text(10, "Primer nombre");
    \u0275\u0275elementEnd();
    \u0275\u0275element(11, "input", 8);
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(12, "mat-form-field", 7)(13, "mat-label");
    \u0275\u0275text(14, "Primer apellido");
    \u0275\u0275elementEnd();
    \u0275\u0275element(15, "input", 9);
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(16, "div", 10)(17, "mat-form-field", 7)(18, "mat-label");
    \u0275\u0275text(19, "Contrase\xF1a");
    \u0275\u0275elementEnd();
    \u0275\u0275element(20, "input", 11, 0);
    \u0275\u0275elementStart(22, "button", 12);
    \u0275\u0275listener("click", function MiPerfilComponent_Template_button_click_22_listener() {
      \u0275\u0275restoreView(_r1);
      const passwordField_r2 = \u0275\u0275reference(21);
      return \u0275\u0275resetView(passwordField_r2.type === "password" ? passwordField_r2.type = "text" : passwordField_r2.type = "password");
    });
    \u0275\u0275template(23, MiPerfilComponent_Conditional_23_Template, 1, 1, "mat-icon", 13)(24, MiPerfilComponent_Conditional_24_Template, 1, 1, "mat-icon", 13);
    \u0275\u0275elementEnd();
    \u0275\u0275template(25, MiPerfilComponent_Conditional_25_Template, 3, 2, "mat-error");
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(26, "mat-form-field", 7)(27, "mat-label");
    \u0275\u0275text(28, "Confirmar contrase\xF1a");
    \u0275\u0275elementEnd();
    \u0275\u0275element(29, "input", 14, 1);
    \u0275\u0275elementStart(31, "button", 12);
    \u0275\u0275listener("click", function MiPerfilComponent_Template_button_click_31_listener() {
      \u0275\u0275restoreView(_r1);
      const passwordConfirm_r4 = \u0275\u0275reference(30);
      return \u0275\u0275resetView(passwordConfirm_r4.type === "password" ? passwordConfirm_r4.type = "text" : passwordConfirm_r4.type = "password");
    });
    \u0275\u0275template(32, MiPerfilComponent_Conditional_32_Template, 1, 1, "mat-icon", 13)(33, MiPerfilComponent_Conditional_33_Template, 1, 1, "mat-icon", 13);
    \u0275\u0275elementEnd();
    \u0275\u0275template(34, MiPerfilComponent_Conditional_34_Template, 4, 3, "mat-error");
    \u0275\u0275elementEnd()()();
    \u0275\u0275elementStart(35, "div", 15)(36, "button", 16);
    \u0275\u0275text(37, " Cancelar ");
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(38, "button", 17);
    \u0275\u0275listener("click", function MiPerfilComponent_Template_button_click_38_listener() {
      \u0275\u0275restoreView(_r1);
      return \u0275\u0275resetView(ctx.onSave());
    });
    \u0275\u0275text(39, " Actualizar ");
    \u0275\u0275elementEnd()()()();
  }
  if (rf & 2) {
    const passwordField_r2 = \u0275\u0275reference(21);
    const passwordConfirm_r4 = \u0275\u0275reference(30);
    \u0275\u0275advance(3);
    \u0275\u0275property("formGroup", ctx.form);
    \u0275\u0275advance(8);
    \u0275\u0275property("formControlName", "nombre")("readonly", true);
    \u0275\u0275advance(4);
    \u0275\u0275property("formControlName", "apellido")("readonly", true);
    \u0275\u0275advance(5);
    \u0275\u0275property("formControlName", "contrasena");
    \u0275\u0275advance(3);
    \u0275\u0275conditional(passwordField_r2.type === "password" ? 23 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(passwordField_r2.type === "text" ? 24 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx.form.get("contrasena").dirty || ctx.form.get("contrasena").touched ? 25 : -1);
    \u0275\u0275advance(4);
    \u0275\u0275property("formControlName", "confirmaContrasena");
    \u0275\u0275advance(3);
    \u0275\u0275conditional(passwordConfirm_r4.type === "password" ? 32 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(passwordConfirm_r4.type === "text" ? 33 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx.form.get("confirmaContrasena").dirty || ctx.form.get("confirmaContrasena").touched ? 34 : -1);
    \u0275\u0275advance(2);
    \u0275\u0275property("matDialogClose", "cancelled");
    \u0275\u0275advance(2);
    \u0275\u0275property("color", "primary")("matDialogClose", "confirmed");
  }
}, dependencies: [
  ReactiveFormsModule,
  \u0275NgNoValidate,
  DefaultValueAccessor,
  NgControlStatus,
  NgControlStatusGroup,
  FormGroupDirective,
  FormControlName,
  MatFormField,
  MatIcon,
  MatInput,
  MatDialogClose,
  MatButton,
  MatIconButton,
  MatLabel,
  MatError
], styles: ["\n\n  .custom-dialog-container {\n  width: 100%;\n}\n@media (min-width: 1280px) {\n    .custom-dialog-container {\n    width: 50%;\n  }\n}\n/*# sourceMappingURL=mi-perfil.component.css.map */"] });
var MiPerfilComponent = _MiPerfilComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && \u0275setClassDebugInfo(MiPerfilComponent, { className: "MiPerfilComponent", filePath: "src\\app\\pages\\profile\\mi-perfil\\mi-perfil.component.ts", lineNumber: 32 });
})();
function passwordMatchValidator(controlName, matchingControlName) {
  return (formGroup) => {
    const control = formGroup.get(controlName);
    const matchingControl = formGroup.get(matchingControlName);
    if (matchingControl?.errors && !matchingControl.errors["passwordMismatchError"]) {
      return null;
    }
    if (control?.value !== matchingControl?.value) {
      matchingControl?.setErrors({ passwordMismatchError: true });
    } else {
      matchingControl?.setErrors(null);
    }
    return null;
  };
}

// src/app/layout/common/user/user.component.ts
var _c013 = (a0, a1, a2, a3, a4) => ({ "mb-px mr-px": a0, "bg-green-500": a1, "bg-amber-500": a2, "bg-red-500": a3, "bg-gray-400": a4 });
function UserComponent_Conditional_2_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "img", 4);
  }
  if (rf & 2) {
    const ctx_r1 = \u0275\u0275nextContext();
    \u0275\u0275property("src", ctx_r1.user == null ? null : ctx_r1.user.avatar, \u0275\u0275sanitizeUrl);
  }
}
function UserComponent_Conditional_3_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "mat-icon", 5);
  }
  if (rf & 2) {
    \u0275\u0275property("svgIcon", "heroicons_outline:user-circle");
  }
}
var _UserComponent = class _UserComponent {
  /**
   * Constructor
   */
  constructor(_changeDetectorRef, _router, _userService) {
    this._changeDetectorRef = _changeDetectorRef;
    this._router = _router;
    this._userService = _userService;
    this.showAvatar = true;
    this._unsubscribeAll = new Subject();
    this._matDialog = inject(MatDialog);
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Lifecycle hooks
  // -----------------------------------------------------------------------------------------------------
  /**
   * On init
   */
  ngOnInit() {
    this._userService.user$.pipe(takeUntil(this._unsubscribeAll)).subscribe((user2) => {
      this.user = user2;
      this._changeDetectorRef.markForCheck();
    });
  }
  /**
   * On destroy
   */
  ngOnDestroy() {
    this._unsubscribeAll.next(null);
    this._unsubscribeAll.complete();
  }
  openProfile() {
    this._matDialog.open(MiPerfilComponent, {
      autoFocus: false,
      maxHeight: "97vh",
      disableClose: true,
      panelClass: "custom-dialog-container"
    });
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Update the user status
   *
   * @param status
   */
  updateUserStatus(status) {
    if (!this.user) {
      return;
    }
    this._userService.update(__spreadProps(__spreadValues({}, this.user), {
      status
    })).subscribe();
  }
  /**
   * Sign out
   */
  signOut() {
    this._router.navigate(["/sign-out"]);
  }
};
_UserComponent.\u0275fac = function UserComponent_Factory(t) {
  return new (t || _UserComponent)(\u0275\u0275directiveInject(ChangeDetectorRef), \u0275\u0275directiveInject(Router), \u0275\u0275directiveInject(UserService));
};
_UserComponent.\u0275cmp = /* @__PURE__ */ \u0275\u0275defineComponent({ type: _UserComponent, selectors: [["user"]], inputs: { showAvatar: "showAvatar" }, exportAs: ["user"], standalone: true, features: [\u0275\u0275StandaloneFeature], decls: 41, vars: 14, consts: [["userActions", "matMenu"], ["userStatus", "matMenu"], ["mat-icon-button", "", 3, "matMenuTriggerFor"], [1, "relative"], [1, "h-7", "w-7", "rounded-full", 3, "src"], [3, "svgIcon"], [1, "absolute", "bottom-0", "right-0", "h-2", "w-2", "rounded-full", 3, "ngClass"], [3, "xPosition"], ["mat-menu-item", ""], [1, "flex", "flex-col", "leading-none"], [1, "mt-1.5", "text-md", "font-medium"], [1, "my-2"], ["mat-menu-item", "", 3, "click"], [1, "user-status-menu"], [1, "mr-3", "inline-flex", "h-4", "w-4", "rounded-full", "bg-green-500"], [1, "mr-3", "inline-flex", "h-4", "w-4", "rounded-full", "bg-amber-500"], [1, "mr-3", "inline-flex", "h-4", "w-4", "rounded-full", "bg-red-500"], [1, "mr-3", "inline-flex", "h-4", "w-4", "rounded-full", "bg-gray-400"]], template: function UserComponent_Template(rf, ctx) {
  if (rf & 1) {
    const _r1 = \u0275\u0275getCurrentView();
    \u0275\u0275elementStart(0, "button", 2)(1, "span", 3);
    \u0275\u0275template(2, UserComponent_Conditional_2_Template, 1, 1, "img", 4)(3, UserComponent_Conditional_3_Template, 1, 1, "mat-icon", 5);
    \u0275\u0275element(4, "span", 6);
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(5, "mat-menu", 7, 0)(7, "button", 8)(8, "span", 9)(9, "span");
    \u0275\u0275text(10, "Usuario");
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(11, "span", 10);
    \u0275\u0275text(12);
    \u0275\u0275elementEnd()()();
    \u0275\u0275element(13, "mat-divider", 11);
    \u0275\u0275elementStart(14, "button", 12);
    \u0275\u0275listener("click", function UserComponent_Template_button_click_14_listener() {
      \u0275\u0275restoreView(_r1);
      return \u0275\u0275resetView(ctx.openProfile());
    });
    \u0275\u0275element(15, "mat-icon", 5);
    \u0275\u0275elementStart(16, "span");
    \u0275\u0275text(17, "Mi perfil");
    \u0275\u0275elementEnd()();
    \u0275\u0275element(18, "mat-divider", 11);
    \u0275\u0275elementStart(19, "button", 12);
    \u0275\u0275listener("click", function UserComponent_Template_button_click_19_listener() {
      \u0275\u0275restoreView(_r1);
      return \u0275\u0275resetView(ctx.signOut());
    });
    \u0275\u0275element(20, "mat-icon", 5);
    \u0275\u0275elementStart(21, "span");
    \u0275\u0275text(22, "Cerrar sesi\xF3n");
    \u0275\u0275elementEnd()()();
    \u0275\u0275elementStart(23, "mat-menu", 13, 1)(25, "button", 12);
    \u0275\u0275listener("click", function UserComponent_Template_button_click_25_listener() {
      \u0275\u0275restoreView(_r1);
      return \u0275\u0275resetView(ctx.updateUserStatus("online"));
    });
    \u0275\u0275element(26, "span", 14);
    \u0275\u0275elementStart(27, "span");
    \u0275\u0275text(28, "Online");
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(29, "button", 12);
    \u0275\u0275listener("click", function UserComponent_Template_button_click_29_listener() {
      \u0275\u0275restoreView(_r1);
      return \u0275\u0275resetView(ctx.updateUserStatus("away"));
    });
    \u0275\u0275element(30, "span", 15);
    \u0275\u0275elementStart(31, "span");
    \u0275\u0275text(32, "Away");
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(33, "button", 12);
    \u0275\u0275listener("click", function UserComponent_Template_button_click_33_listener() {
      \u0275\u0275restoreView(_r1);
      return \u0275\u0275resetView(ctx.updateUserStatus("busy"));
    });
    \u0275\u0275element(34, "span", 16);
    \u0275\u0275elementStart(35, "span");
    \u0275\u0275text(36, "Busy");
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(37, "button", 12);
    \u0275\u0275listener("click", function UserComponent_Template_button_click_37_listener() {
      \u0275\u0275restoreView(_r1);
      return \u0275\u0275resetView(ctx.updateUserStatus("not-visible"));
    });
    \u0275\u0275element(38, "span", 17);
    \u0275\u0275elementStart(39, "span");
    \u0275\u0275text(40, "Invisible");
    \u0275\u0275elementEnd()()();
  }
  if (rf & 2) {
    const userActions_r3 = \u0275\u0275reference(6);
    \u0275\u0275property("matMenuTriggerFor", userActions_r3);
    \u0275\u0275advance(2);
    \u0275\u0275conditional(ctx.showAvatar && (ctx.user == null ? null : ctx.user.avatar) ? 2 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(!ctx.showAvatar || !(ctx.user == null ? null : ctx.user.avatar) ? 3 : -1);
    \u0275\u0275advance();
    \u0275\u0275property("ngClass", \u0275\u0275pureFunction5(8, _c013, !ctx.showAvatar || !(ctx.user == null ? null : ctx.user.avatar), (ctx.user == null ? null : ctx.user.status) === "online", (ctx.user == null ? null : ctx.user.status) === "away", (ctx.user == null ? null : ctx.user.status) === "busy", (ctx.user == null ? null : ctx.user.status) === "not-visible"));
    \u0275\u0275advance();
    \u0275\u0275property("xPosition", "before");
    \u0275\u0275advance(7);
    \u0275\u0275textInterpolate(ctx.user == null ? null : ctx.user.email);
    \u0275\u0275advance(3);
    \u0275\u0275property("svgIcon", "heroicons_outline:user-circle");
    \u0275\u0275advance(5);
    \u0275\u0275property("svgIcon", "heroicons_outline:arrow-right-on-rectangle");
  }
}, dependencies: [
  MatButtonModule,
  MatIconButton,
  MatMenuModule,
  MatMenu,
  MatMenuItem,
  MatMenuTrigger,
  MatIconModule,
  MatIcon,
  NgClass,
  MatDividerModule,
  MatDivider
], encapsulation: 2, changeDetection: 0 });
var UserComponent = _UserComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && \u0275setClassDebugInfo(UserComponent, { className: "UserComponent", filePath: "src\\app\\layout\\common\\user\\user.component.ts", lineNumber: 38 });
})();

// src/app/layout/layouts/horizontal/centered/centered.component.ts
function CenteredLayoutComponent_Conditional_2_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "fuse-vertical-navigation", 1);
    \u0275\u0275elementContainerStart(1, 11);
    \u0275\u0275elementStart(2, "div", 12);
    \u0275\u0275element(3, "img", 13);
    \u0275\u0275elementEnd();
    \u0275\u0275elementContainerEnd();
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const ctx_r0 = \u0275\u0275nextContext();
    \u0275\u0275property("mode", "over")("name", "mainNavigation")("navigation", ctx_r0.navigation.default)("opened", false);
  }
}
function CenteredLayoutComponent_Conditional_5_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 14)(1, "div", 15);
    \u0275\u0275element(2, "img", 16)(3, "img", 17);
    \u0275\u0275elementEnd();
    \u0275\u0275element(4, "img", 18);
    \u0275\u0275elementEnd();
    \u0275\u0275element(5, "fuse-horizontal-navigation", 19);
  }
  if (rf & 2) {
    const ctx_r0 = \u0275\u0275nextContext();
    \u0275\u0275advance(5);
    \u0275\u0275property("name", "mainNavigation")("navigation", ctx_r0.navigation.horizontal);
  }
}
function CenteredLayoutComponent_Conditional_6_Template(rf, ctx) {
  if (rf & 1) {
    const _r2 = \u0275\u0275getCurrentView();
    \u0275\u0275elementStart(0, "button", 20);
    \u0275\u0275listener("click", function CenteredLayoutComponent_Conditional_6_Template_button_click_0_listener() {
      \u0275\u0275restoreView(_r2);
      const ctx_r0 = \u0275\u0275nextContext();
      return \u0275\u0275resetView(ctx_r0.toggleNavigation("mainNavigation"));
    });
    \u0275\u0275element(1, "mat-icon", 21);
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    \u0275\u0275advance();
    \u0275\u0275property("svgIcon", "heroicons_outline:bars-3");
  }
}
function CenteredLayoutComponent_Conditional_16_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "router-outlet");
  }
}
var _CenteredLayoutComponent = class _CenteredLayoutComponent {
  /**
   * Constructor
   */
  constructor(_activatedRoute, _router, _navigationService, _fuseMediaWatcherService, _fuseNavigationService) {
    this._activatedRoute = _activatedRoute;
    this._router = _router;
    this._navigationService = _navigationService;
    this._fuseMediaWatcherService = _fuseMediaWatcherService;
    this._fuseNavigationService = _fuseNavigationService;
    this._unsubscribeAll = new Subject();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Accessors
  // -----------------------------------------------------------------------------------------------------
  /**
   * Getter for current year
   */
  get currentYear() {
    return (/* @__PURE__ */ new Date()).getFullYear();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Lifecycle hooks
  // -----------------------------------------------------------------------------------------------------
  /**
   * On init
   */
  ngOnInit() {
    this._navigationService.navigation$.pipe(takeUntil(this._unsubscribeAll)).subscribe((navigation) => {
      this.navigation = navigation;
    });
    this._fuseMediaWatcherService.onMediaChange$.pipe(takeUntil(this._unsubscribeAll)).subscribe(({ matchingAliases }) => {
      this.isScreenSmall = !matchingAliases.includes("md");
    });
  }
  /**
   * On destroy
   */
  ngOnDestroy() {
    this._unsubscribeAll.next(null);
    this._unsubscribeAll.complete();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Toggle navigation
   *
   * @param name
   */
  toggleNavigation(name) {
    const navigation = this._fuseNavigationService.getComponent(name);
    if (navigation) {
      navigation.toggle();
    }
  }
};
_CenteredLayoutComponent.\u0275fac = function CenteredLayoutComponent_Factory(t) {
  return new (t || _CenteredLayoutComponent)(\u0275\u0275directiveInject(ActivatedRoute), \u0275\u0275directiveInject(Router), \u0275\u0275directiveInject(NavigationService), \u0275\u0275directiveInject(FuseMediaWatcherService), \u0275\u0275directiveInject(FuseNavigationService));
};
_CenteredLayoutComponent.\u0275cmp = /* @__PURE__ */ \u0275\u0275defineComponent({ type: _CenteredLayoutComponent, selectors: [["centered-layout"]], standalone: true, features: [\u0275\u0275StandaloneFeature], decls: 20, vars: 6, consts: [[1, "flex", "w-full", "flex-auto", "justify-center", "bg-gray-200", "dark:bg-card", "sm:p-4", "md:p-8"], [1, "dark", "bg-gray-900", "print:hidden", 3, "mode", "name", "navigation", "opened"], [1, "flex", "min-w-0", "max-w-360", "flex-auto", "flex-col", "items-center", "overflow-hidden", "shadow-2xl", "dark:shadow-none", "sm:rounded-xl"], [1, "bg-card", "relative", "z-49", "flex", "h-16", "w-full", "flex-0", "items-center", "border-b", "px-4", "dark:bg-default", "sm:h-20", "md:px-6", "print:hidden"], ["mat-icon-button", "", 1, "mr-2"], [1, "ml-auto", "flex", "items-center", "space-x-1", "pl-2", "sm:space-x-2"], [1, "hidden", "md:block"], [3, "appearance"], [1, "bg-default", "flex", "w-full", "flex-auto", "flex-col"], [1, "bg-card", "relative", "z-49", "flex", "h-16", "w-full", "flex-0", "items-center", "justify-start", "border-t", "px-6", "dark:bg-default", "sm:h-20", "sm:px-8", "print:hidden"], [1, "text-secondary", "font-medium"], ["fuseVerticalNavigationContentHeader", ""], [1, "flex", "h-20", "items-center", "px-8", "pt-6"], ["src", "images/logo/logo-text-on-dark.svg", 1, "w-30"], [1, "mx-2", "flex", "items-center", "lg:mr-8"], [1, "hidden", "lg:flex"], ["src", "images/logo/logo-text.svg", "alt", "Logo image", 1, "w-24", "dark:hidden"], ["src", "images/logo/logo-text-on-dark.svg", "alt", "Logo image", 1, "hidden", "w-24", "dark:flex"], ["src", "images/logo/logo.svg", "alt", "Logo image", 1, "flex", "w-8", "lg:hidden"], [1, "mr-2", 3, "name", "navigation"], ["mat-icon-button", "", 1, "mr-2", 3, "click"], [3, "svgIcon"]], template: function CenteredLayoutComponent_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "fuse-loading-bar");
    \u0275\u0275elementStart(1, "div", 0);
    \u0275\u0275template(2, CenteredLayoutComponent_Conditional_2_Template, 4, 4, "fuse-vertical-navigation", 1);
    \u0275\u0275elementStart(3, "div", 2)(4, "div", 3);
    \u0275\u0275template(5, CenteredLayoutComponent_Conditional_5_Template, 6, 2)(6, CenteredLayoutComponent_Conditional_6_Template, 2, 1, "button", 4);
    \u0275\u0275elementStart(7, "div", 5);
    \u0275\u0275element(8, "languages")(9, "fuse-fullscreen", 6)(10, "search", 7)(11, "shortcuts")(12, "messages")(13, "notifications")(14, "user");
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(15, "div", 8);
    \u0275\u0275template(16, CenteredLayoutComponent_Conditional_16_Template, 1, 0, "router-outlet");
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(17, "div", 9)(18, "span", 10);
    \u0275\u0275text(19);
    \u0275\u0275elementEnd()()()();
  }
  if (rf & 2) {
    \u0275\u0275advance(2);
    \u0275\u0275conditional(ctx.isScreenSmall ? 2 : -1);
    \u0275\u0275advance(3);
    \u0275\u0275conditional(!ctx.isScreenSmall ? 5 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx.isScreenSmall ? 6 : -1);
    \u0275\u0275advance(4);
    \u0275\u0275property("appearance", "bar");
    \u0275\u0275advance(6);
    \u0275\u0275conditional(true ? 16 : -1);
    \u0275\u0275advance(3);
    \u0275\u0275textInterpolate1("Fuse \xA9 ", ctx.currentYear, "");
  }
}, dependencies: [
  FuseLoadingBarComponent,
  FuseVerticalNavigationComponent,
  FuseHorizontalNavigationComponent,
  MatButtonModule,
  MatIconButton,
  MatIconModule,
  MatIcon,
  LanguagesComponent,
  FuseFullscreenComponent,
  SearchComponent,
  ShortcutsComponent,
  MessagesComponent,
  NotificationsComponent,
  UserComponent,
  RouterOutlet
], encapsulation: 2 });
var CenteredLayoutComponent = _CenteredLayoutComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && \u0275setClassDebugInfo(CenteredLayoutComponent, { className: "CenteredLayoutComponent", filePath: "src\\app\\layout\\layouts\\horizontal\\centered\\centered.component.ts", lineNumber: 44 });
})();

// src/app/layout/common/quick-chat/quick-chat.component.ts
var _c014 = ["messageInput"];
var _c19 = (a0, a1) => ({ "-translate-x-full shadow sm:-translate-x-96 lg:-translate-x-80": a0, "translate-x-0": a1 });
var _c27 = () => ({ wheelPropagation: false });
var _c37 = (a0, a1) => ({ "dark:hover:bg-hover hover:bg-gray-100": a0, "bg-primary-50 dark:bg-hover": a1 });
var _c42 = (a0, a1, a2, a3) => ({ "items-end": a0, "items-start": a1, "mt-0.5": a2, "mt-3": a3 });
var _c5 = (a0, a1) => ({ "bg-blue-500 text-blue-50": a0, "bg-gray-500 text-gray-50": a1 });
var _c6 = (a0, a1) => ({ "-right-1 -mr-px mb-px text-blue-500": a0, "-left-1 -ml-px mb-px -scale-x-1 text-gray-500": a1 });
var _c7 = (a0, a1) => ({ "mr-3": a0, "ml-3": a1 });
function QuickChatComponent_Conditional_3_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 5)(1, "div", 13);
    \u0275\u0275element(2, "mat-icon", 14);
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(3, "div", 15);
    \u0275\u0275text(4, " Team Chat ");
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(5, "button", 16);
    \u0275\u0275element(6, "mat-icon", 17);
    \u0275\u0275elementEnd()();
  }
  if (rf & 2) {
    \u0275\u0275advance(2);
    \u0275\u0275property("svgIcon", "heroicons_outline:chat-bubble-left-right");
    \u0275\u0275advance(4);
    \u0275\u0275property("svgIcon", "heroicons_outline:x-mark");
  }
}
function QuickChatComponent_Conditional_4_Conditional_2_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "img", 19);
  }
  if (rf & 2) {
    const ctx_r1 = \u0275\u0275nextContext(2);
    \u0275\u0275property("src", ctx_r1.chat.contact.avatar, \u0275\u0275sanitizeUrl);
  }
}
function QuickChatComponent_Conditional_4_Conditional_3_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 20);
    \u0275\u0275text(1);
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const ctx_r1 = \u0275\u0275nextContext(2);
    \u0275\u0275advance();
    \u0275\u0275textInterpolate1(" ", ctx_r1.chat.contact.name.charAt(0), " ");
  }
}
function QuickChatComponent_Conditional_4_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 6)(1, "div", 18);
    \u0275\u0275template(2, QuickChatComponent_Conditional_4_Conditional_2_Template, 1, 1, "img", 19)(3, QuickChatComponent_Conditional_4_Conditional_3_Template, 2, 1, "div", 20);
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(4, "div", 21);
    \u0275\u0275text(5);
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(6, "button", 16);
    \u0275\u0275element(7, "mat-icon", 17);
    \u0275\u0275elementEnd()();
  }
  if (rf & 2) {
    const ctx_r1 = \u0275\u0275nextContext();
    \u0275\u0275advance(2);
    \u0275\u0275conditional(ctx_r1.chat.contact.avatar ? 2 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(!ctx_r1.chat.contact.avatar ? 3 : -1);
    \u0275\u0275advance(2);
    \u0275\u0275textInterpolate1(" ", ctx_r1.chat.contact.name, " ");
    \u0275\u0275advance(2);
    \u0275\u0275property("svgIcon", "heroicons_outline:x-mark");
  }
}
function QuickChatComponent_For_9_Conditional_2_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "div", 25);
  }
  if (rf & 2) {
    const chat_r4 = \u0275\u0275nextContext().$implicit;
    const ctx_r1 = \u0275\u0275nextContext();
    \u0275\u0275classProp("ring-primary-50", ctx_r1.selectedChat && ctx_r1.selectedChat.id === chat_r4.id);
  }
}
function QuickChatComponent_For_9_Conditional_3_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "img", 19);
  }
  if (rf & 2) {
    const chat_r4 = \u0275\u0275nextContext().$implicit;
    \u0275\u0275property("src", chat_r4.contact.avatar, \u0275\u0275sanitizeUrl);
  }
}
function QuickChatComponent_For_9_Conditional_4_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 20);
    \u0275\u0275text(1);
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const chat_r4 = \u0275\u0275nextContext().$implicit;
    \u0275\u0275advance();
    \u0275\u0275textInterpolate1(" ", chat_r4.contact.name.charAt(0), " ");
  }
}
function QuickChatComponent_For_9_Template(rf, ctx) {
  if (rf & 1) {
    const _r3 = \u0275\u0275getCurrentView();
    \u0275\u0275elementStart(0, "div", 22);
    \u0275\u0275listener("click", function QuickChatComponent_For_9_Template_div_click_0_listener() {
      const chat_r4 = \u0275\u0275restoreView(_r3).$implicit;
      const ctx_r1 = \u0275\u0275nextContext();
      return \u0275\u0275resetView(ctx_r1.selectChat(chat_r4.id));
    });
    \u0275\u0275elementStart(1, "div", 23);
    \u0275\u0275template(2, QuickChatComponent_For_9_Conditional_2_Template, 1, 2, "div", 24)(3, QuickChatComponent_For_9_Conditional_3_Template, 1, 1, "img", 19)(4, QuickChatComponent_For_9_Conditional_4_Template, 2, 1, "div", 20);
    \u0275\u0275elementEnd()();
  }
  if (rf & 2) {
    const chat_r4 = ctx.$implicit;
    const ctx_r1 = \u0275\u0275nextContext();
    \u0275\u0275property("ngClass", \u0275\u0275pureFunction2(4, _c37, !ctx_r1.selectedChat || ctx_r1.selectedChat.id !== chat_r4.id, ctx_r1.selectedChat && ctx_r1.selectedChat.id === chat_r4.id));
    \u0275\u0275advance(2);
    \u0275\u0275conditional(chat_r4.unreadCount > 0 ? 2 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(chat_r4.contact.avatar ? 3 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(!chat_r4.contact.avatar ? 4 : -1);
  }
}
function QuickChatComponent_Conditional_11_For_3_Conditional_0_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 34);
    \u0275\u0275element(1, "div", 39);
    \u0275\u0275elementStart(2, "div", 40);
    \u0275\u0275text(3);
    \u0275\u0275pipe(4, "date");
    \u0275\u0275elementEnd();
    \u0275\u0275element(5, "div", 39);
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const message_r5 = \u0275\u0275nextContext().$implicit;
    \u0275\u0275advance(3);
    \u0275\u0275textInterpolate1(" ", \u0275\u0275pipeBind2(4, 1, message_r5.createdAt, "longDate"), " ");
  }
}
function QuickChatComponent_Conditional_11_For_3_Conditional_5_ng_container_1_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementContainer(0);
  }
}
function QuickChatComponent_Conditional_11_For_3_Conditional_5_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 36);
    \u0275\u0275template(1, QuickChatComponent_Conditional_11_For_3_Conditional_5_ng_container_1_Template, 1, 0, "ng-container", 41);
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const message_r5 = \u0275\u0275nextContext().$implicit;
    \u0275\u0275nextContext(2);
    const speechBubbleExtension_r6 = \u0275\u0275reference(14);
    \u0275\u0275property("ngClass", \u0275\u0275pureFunction2(2, _c6, message_r5.isMine, !message_r5.isMine));
    \u0275\u0275advance();
    \u0275\u0275property("ngTemplateOutlet", speechBubbleExtension_r6);
  }
}
function QuickChatComponent_Conditional_11_For_3_Conditional_7_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 38);
    \u0275\u0275text(1);
    \u0275\u0275pipe(2, "date");
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const message_r5 = \u0275\u0275nextContext().$implicit;
    \u0275\u0275property("ngClass", \u0275\u0275pureFunction2(5, _c7, message_r5.isMine, !message_r5.isMine));
    \u0275\u0275advance();
    \u0275\u0275textInterpolate1(" ", \u0275\u0275pipeBind2(2, 2, message_r5.createdAt, "HH:mm"), " ");
  }
}
function QuickChatComponent_Conditional_11_For_3_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275template(0, QuickChatComponent_Conditional_11_For_3_Conditional_0_Template, 6, 4, "div", 34);
    \u0275\u0275pipe(1, "date");
    \u0275\u0275pipe(2, "date");
    \u0275\u0275elementStart(3, "div", 28)(4, "div", 35);
    \u0275\u0275template(5, QuickChatComponent_Conditional_11_For_3_Conditional_5_Template, 2, 5, "div", 36);
    \u0275\u0275element(6, "div", 37);
    \u0275\u0275elementEnd();
    \u0275\u0275template(7, QuickChatComponent_Conditional_11_For_3_Conditional_7_Template, 3, 8, "div", 38);
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const message_r5 = ctx.$implicit;
    const \u0275$index_68_r7 = ctx.$index;
    const \u0275$count_68_r8 = ctx.$count;
    const ctx_r1 = \u0275\u0275nextContext(2);
    \u0275\u0275conditional(\u0275$index_68_r7 === 0 || \u0275\u0275pipeBind2(1, 6, ctx_r1.chat.messages[\u0275$index_68_r7 - 1].createdAt, "d") !== \u0275\u0275pipeBind2(2, 9, message_r5.createdAt, "d") ? 0 : -1);
    \u0275\u0275advance(3);
    \u0275\u0275property("ngClass", \u0275\u0275pureFunction4(12, _c42, message_r5.isMine, !message_r5.isMine, \u0275$index_68_r7 > 0 && ctx_r1.chat.messages[\u0275$index_68_r7 - 1].isMine === message_r5.isMine, \u0275$index_68_r7 > 0 && ctx_r1.chat.messages[\u0275$index_68_r7 - 1].isMine !== message_r5.isMine));
    \u0275\u0275advance();
    \u0275\u0275property("ngClass", \u0275\u0275pureFunction2(17, _c5, message_r5.isMine, !message_r5.isMine));
    \u0275\u0275advance();
    \u0275\u0275conditional(\u0275$index_68_r7 === \u0275$count_68_r8 - 1 || ctx_r1.chat.messages[\u0275$index_68_r7 + 1].isMine !== message_r5.isMine ? 5 : -1);
    \u0275\u0275advance();
    \u0275\u0275property("innerHTML", message_r5.value, \u0275\u0275sanitizeHtml);
    \u0275\u0275advance();
    \u0275\u0275conditional(\u0275$index_68_r7 === 0 || \u0275$index_68_r7 === \u0275$count_68_r8 - 1 || ctx_r1.chat.messages[\u0275$index_68_r7 + 1].isMine !== message_r5.isMine || ctx_r1.chat.messages[\u0275$index_68_r7 + 1].createdAt !== message_r5.createdAt ? 7 : -1);
  }
}
function QuickChatComponent_Conditional_11_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 26)(1, "div", 27);
    \u0275\u0275repeaterCreate(2, QuickChatComponent_Conditional_11_For_3_Template, 8, 20, "div", 28, \u0275\u0275componentInstance().trackByFn, true);
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(4, "div", 29)(5, "mat-form-field", 30);
    \u0275\u0275element(6, "textarea", 31, 1);
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(8, "div", 32)(9, "button", 33);
    \u0275\u0275element(10, "mat-icon", 17);
    \u0275\u0275elementEnd()()();
  }
  if (rf & 2) {
    const ctx_r1 = \u0275\u0275nextContext();
    \u0275\u0275advance(2);
    \u0275\u0275repeater(ctx_r1.chat.messages);
    \u0275\u0275advance(3);
    \u0275\u0275property("subscriptSizing", "dynamic");
    \u0275\u0275advance(5);
    \u0275\u0275property("svgIcon", "heroicons_outline:paper-airplane");
  }
}
function QuickChatComponent_Conditional_12_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 12);
    \u0275\u0275element(1, "mat-icon", 42);
    \u0275\u0275elementStart(2, "div", 43);
    \u0275\u0275text(3, " Select a conversation ");
    \u0275\u0275elementEnd()();
  }
  if (rf & 2) {
    \u0275\u0275advance();
    \u0275\u0275property("svgIcon", "heroicons_outline:chat-bubble-bottom-center-text");
  }
}
function QuickChatComponent_ng_template_13_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275namespaceSVG();
    \u0275\u0275elementStart(0, "svg", 44)(1, "g", 45);
    \u0275\u0275element(2, "path", 46);
    \u0275\u0275elementEnd()();
  }
}
var _QuickChatComponent = class _QuickChatComponent {
  /**
   * Constructor
   */
  constructor(_document, _elementRef, _renderer2, _ngZone, _quickChatService, _scrollStrategyOptions) {
    this._document = _document;
    this._elementRef = _elementRef;
    this._renderer2 = _renderer2;
    this._ngZone = _ngZone;
    this._quickChatService = _quickChatService;
    this._scrollStrategyOptions = _scrollStrategyOptions;
    this.opened = false;
    this._scrollStrategy = this._scrollStrategyOptions.block();
    this._unsubscribeAll = new Subject();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Decorated methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Host binding for component classes
   */
  get classList() {
    return {
      "quick-chat-opened": this.opened
    };
  }
  /**
   * Resize on 'input' and 'ngModelChange' events
   *
   * @private
   */
  _resizeMessageInput() {
    this._ngZone.runOutsideAngular(() => {
      setTimeout(() => {
        this.messageInput.nativeElement.style.height = "auto";
        this.messageInput.nativeElement.style.height = `${this.messageInput.nativeElement.scrollHeight}px`;
      });
    });
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Lifecycle hooks
  // -----------------------------------------------------------------------------------------------------
  /**
   * On init
   */
  ngOnInit() {
    this._quickChatService.chat$.pipe(takeUntil(this._unsubscribeAll)).subscribe((chat) => {
      this.chat = chat;
    });
    this._quickChatService.chats$.pipe(takeUntil(this._unsubscribeAll)).subscribe((chats2) => {
      this.chats = chats2;
    });
    this._quickChatService.chat$.pipe(takeUntil(this._unsubscribeAll)).subscribe((chat) => {
      this.selectedChat = chat;
    });
  }
  /**
   * After view init
   */
  ngAfterViewInit() {
    this._mutationObserver = new MutationObserver((mutations) => {
      mutations.forEach((mutation) => {
        const mutationTarget = mutation.target;
        if (mutation.attributeName === "class") {
          if (mutationTarget.classList.contains("cdk-global-scrollblock")) {
            const top = parseInt(mutationTarget.style.top, 10);
            this._renderer2.setStyle(this._elementRef.nativeElement, "margin-top", `${Math.abs(top)}px`);
          } else {
            this._renderer2.setStyle(this._elementRef.nativeElement, "margin-top", null);
          }
        }
      });
    });
    this._mutationObserver.observe(this._document.documentElement, {
      attributes: true,
      attributeFilter: ["class"]
    });
  }
  /**
   * On destroy
   */
  ngOnDestroy() {
    this._mutationObserver.disconnect();
    this._unsubscribeAll.next(null);
    this._unsubscribeAll.complete();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Open the panel
   */
  open() {
    if (this.opened) {
      return;
    }
    this._toggleOpened(true);
  }
  /**
   * Close the panel
   */
  close() {
    if (!this.opened) {
      return;
    }
    this._toggleOpened(false);
  }
  /**
   * Toggle the panel
   */
  toggle() {
    if (this.opened) {
      this.close();
    } else {
      this.open();
    }
  }
  /**
   * Select the chat
   *
   * @param id
   */
  selectChat(id) {
    this._toggleOpened(true);
    this._quickChatService.getChatById(id).subscribe();
  }
  /**
   * Track by function for ngFor loops
   *
   * @param index
   * @param item
   */
  trackByFn(index, item) {
    return item.id || index;
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Private methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Show the backdrop
   *
   * @private
   */
  _showOverlay() {
    this._hideOverlay();
    this._overlay = this._renderer2.createElement("div");
    if (!this._overlay) {
      return;
    }
    this._overlay.classList.add("quick-chat-overlay");
    this._renderer2.appendChild(this._elementRef.nativeElement.parentElement, this._overlay);
    this._scrollStrategy.enable();
    this._overlay.addEventListener("click", () => {
      this.close();
    });
  }
  /**
   * Hide the backdrop
   *
   * @private
   */
  _hideOverlay() {
    if (!this._overlay) {
      return;
    }
    if (this._overlay) {
      this._overlay.parentNode.removeChild(this._overlay);
      this._overlay = null;
    }
    this._scrollStrategy.disable();
  }
  /**
   * Open/close the panel
   *
   * @param open
   * @private
   */
  _toggleOpened(open) {
    this.opened = open;
    if (open) {
      this._showOverlay();
    } else {
      this._hideOverlay();
    }
  }
};
_QuickChatComponent.\u0275fac = function QuickChatComponent_Factory(t) {
  return new (t || _QuickChatComponent)(\u0275\u0275directiveInject(DOCUMENT), \u0275\u0275directiveInject(ElementRef), \u0275\u0275directiveInject(Renderer2), \u0275\u0275directiveInject(NgZone), \u0275\u0275directiveInject(QuickChatService), \u0275\u0275directiveInject(ScrollStrategyOptions));
};
_QuickChatComponent.\u0275cmp = /* @__PURE__ */ \u0275\u0275defineComponent({ type: _QuickChatComponent, selectors: [["quick-chat"]], viewQuery: function QuickChatComponent_Query(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275viewQuery(_c014, 5);
  }
  if (rf & 2) {
    let _t;
    \u0275\u0275queryRefresh(_t = \u0275\u0275loadQuery()) && (ctx.messageInput = _t.first);
  }
}, hostVars: 2, hostBindings: function QuickChatComponent_HostBindings(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275listener("input", function QuickChatComponent_input_HostBindingHandler() {
      return ctx._resizeMessageInput();
    })("ngModelChange", function QuickChatComponent_ngModelChange_HostBindingHandler() {
      return ctx._resizeMessageInput();
    });
  }
  if (rf & 2) {
    \u0275\u0275classMap(ctx.classList);
  }
}, exportAs: ["quickChat"], standalone: true, features: [\u0275\u0275StandaloneFeature], decls: 15, vars: 9, consts: [["speechBubbleExtension", ""], ["messageInput", ""], [1, "fixed", "bottom-0", "top-0", "w-full", "sm:w-96", "lg:sticky", "lg:left-full", "lg:h-screen", "lg:w-16", "lg:shadow"], [1, "bg-card", "flex", "h-full", "w-full", "flex-col", "transition-transform", "duration-400", "ease-drawer", "sm:w-96", 3, "ngClass"], [1, "quick-chat-header", "flex", "flex-0", "cursor-pointer", "items-center", "justify-start", 3, "click"], [1, "flex", "flex-auto", "items-center", "justify-center"], [1, "ml-3", "flex", "flex-auto", "items-center"], [1, "flex", "flex-auto", "overflow-hidden", "border-t"], ["fuseScrollbar", "", 1, "h-full", "w-16", "flex-0", "overflow-y-auto", "overscroll-y-contain", "sm:overflow-hidden", "sm:overscroll-auto", 3, "fuseScrollbarOptions"], [1, "flex-auto"], [1, "flex", "cursor-pointer", "items-center", "px-4", "py-3", 3, "ngClass"], [1, "flex", "flex-auto", "flex-col", "overflow-hidden", "border-l", "bg-gray-50", "dark:bg-transparent"], [1, "flex", "h-full", "w-full", "flex-auto", "flex-col", "items-center", "justify-center", "p-4"], [1, "flex", "w-16", "flex-0", "items-center", "justify-center"], [1, "icon-size-6", 3, "svgIcon"], [1, "text-secondary", "text-lg", "font-medium"], ["mat-icon-button", "", 1, "ml-auto", "mr-4"], [3, "svgIcon"], [1, "relative", "flex", "h-10", "w-10", "flex-0", "items-center", "justify-center"], ["alt", "Contact avatar", 1, "h-full", "w-full", "rounded-full", "object-cover", 3, "src"], [1, "flex", "h-full", "w-full", "items-center", "justify-center", "rounded-full", "bg-gray-200", "text-lg", "uppercase", "text-gray-600", "dark:bg-gray-700", "dark:text-gray-200"], [1, "ml-4", "truncate", "text-lg", "font-medium", "leading-5"], [1, "flex", "cursor-pointer", "items-center", "px-4", "py-3", 3, "click", "ngClass"], [1, "relative", "flex", "h-8", "w-8", "flex-0", "items-center", "justify-center"], [1, "ring-bg-card", "absolute", "bottom-0", "right-0", "-ml-0.5", "h-2", "w-2", "flex-0", "rounded-full", "bg-primary", "text-on-primary", "ring-2", "dark:bg-primary-500", "dark:ring-gray-900", 3, "ring-primary-50"], [1, "ring-bg-card", "absolute", "bottom-0", "right-0", "-ml-0.5", "h-2", "w-2", "flex-0", "rounded-full", "bg-primary", "text-on-primary", "ring-2", "dark:bg-primary-500", "dark:ring-gray-900"], [1, "flex", "flex-col-reverse", "overflow-y-auto", "overscroll-y-contain"], [1, "flex", "flex-auto", "shrink", "flex-col", "p-6"], [1, "flex", "flex-col", 3, "ngClass"], [1, "flex", "items-end", "border-t", "bg-gray-50", "p-4", "dark:bg-transparent"], [1, "fuse-mat-dense", "fuse-mat-rounded", "fuse-mat-bold", "w-full", 3, "subscriptSizing"], ["matInput", "", "cdkTextareaAutosize", ""], [1, "my-px", "ml-4", "flex", "h-11", "items-center"], ["mat-icon-button", ""], [1, "-mx-6", "my-3", "flex", "items-center", "justify-center"], [1, "relative", "max-w-3/4", "rounded-lg", "px-3", "py-2", 3, "ngClass"], [1, "absolute", "bottom-0", "w-3", 3, "ngClass"], [1, "min-w-4", "leading-5", 3, "innerHTML"], [1, "text-secondary", "my-0.5", "text-sm", "font-medium", 3, "ngClass"], [1, "flex-auto", "border-b"], [1, "text-secondary", "mx-4", "flex-0", "text-sm", "font-medium", "leading-5"], [4, "ngTemplateOutlet"], [1, "icon-size-24", 3, "svgIcon"], [1, "text-secondary", "mt-4", "text-center", "text-xl", "font-medium", "tracking-tight"], ["width", "100%", "height", "100%", "viewBox", "0 0 66 66", "xmlns", "http://www.w3.org/2000/svg"], ["id", "Page-1", "stroke", "none", "stroke-width", "1", "fill", "none", "fill-rule", "evenodd"], ["d", "M1.01522827,0.516204834 C-8.83532715,54.3062744 61.7609863,70.5215302 64.8009949,64.3061218 C68.8074951,54.8859711 30.1663208,52.9997559 37.5036011,0.516204834 L1.01522827,0.516204834 Z", "fill", "currentColor", "fill-rule", "nonzero"]], template: function QuickChatComponent_Template(rf, ctx) {
  if (rf & 1) {
    const _r1 = \u0275\u0275getCurrentView();
    \u0275\u0275elementStart(0, "div", 2)(1, "div", 3)(2, "div", 4);
    \u0275\u0275listener("click", function QuickChatComponent_Template_div_click_2_listener() {
      \u0275\u0275restoreView(_r1);
      return \u0275\u0275resetView(ctx.toggle());
    });
    \u0275\u0275template(3, QuickChatComponent_Conditional_3_Template, 7, 2, "div", 5)(4, QuickChatComponent_Conditional_4_Template, 8, 4, "div", 6);
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(5, "div", 7)(6, "div", 8)(7, "div", 9);
    \u0275\u0275repeaterCreate(8, QuickChatComponent_For_9_Template, 5, 7, "div", 10, ctx.trackByFn, true);
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(10, "div", 11);
    \u0275\u0275template(11, QuickChatComponent_Conditional_11_Template, 11, 2)(12, QuickChatComponent_Conditional_12_Template, 4, 1, "div", 12);
    \u0275\u0275elementEnd()()()();
    \u0275\u0275template(13, QuickChatComponent_ng_template_13_Template, 3, 0, "ng-template", null, 0, \u0275\u0275templateRefExtractor);
  }
  if (rf & 2) {
    \u0275\u0275advance();
    \u0275\u0275property("ngClass", \u0275\u0275pureFunction2(5, _c19, ctx.opened, !ctx.opened));
    \u0275\u0275advance(2);
    \u0275\u0275conditional(!ctx.opened || ctx.opened && !ctx.selectedChat ? 3 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx.opened && ctx.selectedChat ? 4 : -1);
    \u0275\u0275advance(2);
    \u0275\u0275property("fuseScrollbarOptions", \u0275\u0275pureFunction0(8, _c27));
    \u0275\u0275advance(2);
    \u0275\u0275repeater(ctx.chats);
    \u0275\u0275advance(3);
    \u0275\u0275conditional(ctx.chat ? 11 : 12);
  }
}, dependencies: [
  NgClass,
  MatIconModule,
  MatIcon,
  MatButtonModule,
  MatIconButton,
  FuseScrollbarDirective,
  NgTemplateOutlet,
  MatFormFieldModule,
  MatFormField,
  MatInputModule,
  MatInput,
  CdkTextareaAutosize,
  TextFieldModule,
  DatePipe
], styles: ["/* src/app/layout/common/quick-chat/quick-chat.component.scss */\nquick-chat {\n  z-index: 399;\n}\nquick-chat > div {\n  overflow: hidden;\n}\nquick-chat.quick-chat-opened > div {\n  overflow: visible;\n}\nquick-chat:not(.quick-chat-opened) > div {\n  overflow: visible;\n  animation: addOverflowHidden 1ms linear 400ms;\n  animation-fill-mode: forwards;\n}\n.quick-chat-header {\n  height: 64px;\n}\nenterprise-layout .quick-chat-header,\nmodern-layout .quick-chat-header {\n  height: 80px !important;\n}\n.quick-chat-overlay {\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  z-index: 299;\n  opacity: 1;\n  background-color: transparent;\n}\n@keyframes addOverflowHidden {\n  0% {\n    overflow: visible;\n  }\n  99% {\n    overflow: visible;\n  }\n  100% {\n    overflow: hidden;\n  }\n}\n/*# sourceMappingURL=quick-chat.component.css.map */\n"], encapsulation: 2 });
var QuickChatComponent = _QuickChatComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && \u0275setClassDebugInfo(QuickChatComponent, { className: "QuickChatComponent", filePath: "src\\app\\layout\\common\\quick-chat\\quick-chat.component.ts", lineNumber: 46 });
})();

// src/app/layout/layouts/horizontal/enterprise/enterprise.component.ts
function EnterpriseLayoutComponent_Conditional_1_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "fuse-vertical-navigation", 1);
    \u0275\u0275elementContainerStart(1, 19);
    \u0275\u0275elementStart(2, "div", 20);
    \u0275\u0275element(3, "img", 21);
    \u0275\u0275elementEnd();
    \u0275\u0275elementContainerEnd();
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const ctx_r1 = \u0275\u0275nextContext();
    \u0275\u0275property("mode", "over")("name", "mainNavigation")("navigation", ctx_r1.navigation.default)("opened", false);
  }
}
function EnterpriseLayoutComponent_Conditional_6_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 6);
    \u0275\u0275element(1, "img", 21);
    \u0275\u0275elementEnd();
  }
}
function EnterpriseLayoutComponent_Conditional_7_Template(rf, ctx) {
  if (rf & 1) {
    const _r3 = \u0275\u0275getCurrentView();
    \u0275\u0275elementStart(0, "button", 22);
    \u0275\u0275listener("click", function EnterpriseLayoutComponent_Conditional_7_Template_button_click_0_listener() {
      \u0275\u0275restoreView(_r3);
      const ctx_r1 = \u0275\u0275nextContext();
      return \u0275\u0275resetView(ctx_r1.toggleNavigation("mainNavigation"));
    });
    \u0275\u0275element(1, "mat-icon", 12);
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    \u0275\u0275advance();
    \u0275\u0275property("svgIcon", "heroicons_outline:bars-3");
  }
}
function EnterpriseLayoutComponent_Conditional_18_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 13)(1, "div", 23);
    \u0275\u0275element(2, "fuse-horizontal-navigation", 24);
    \u0275\u0275elementEnd()();
  }
  if (rf & 2) {
    const ctx_r1 = \u0275\u0275nextContext();
    \u0275\u0275advance(2);
    \u0275\u0275property("name", "mainNavigation")("navigation", ctx_r1.navigation.horizontal);
  }
}
function EnterpriseLayoutComponent_Conditional_21_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "router-outlet");
  }
}
var _EnterpriseLayoutComponent = class _EnterpriseLayoutComponent {
  /**
   * Constructor
   */
  constructor(_activatedRoute, _router, _navigationService, _fuseMediaWatcherService, _fuseNavigationService) {
    this._activatedRoute = _activatedRoute;
    this._router = _router;
    this._navigationService = _navigationService;
    this._fuseMediaWatcherService = _fuseMediaWatcherService;
    this._fuseNavigationService = _fuseNavigationService;
    this._unsubscribeAll = new Subject();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Accessors
  // -----------------------------------------------------------------------------------------------------
  /**
   * Getter for current year
   */
  get currentYear() {
    return (/* @__PURE__ */ new Date()).getFullYear();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Lifecycle hooks
  // -----------------------------------------------------------------------------------------------------
  /**
   * On init
   */
  ngOnInit() {
    this._navigationService.navigation$.pipe(takeUntil(this._unsubscribeAll)).subscribe((navigation) => {
      this.navigation = navigation;
    });
    this._fuseMediaWatcherService.onMediaChange$.pipe(takeUntil(this._unsubscribeAll)).subscribe(({ matchingAliases }) => {
      this.isScreenSmall = !matchingAliases.includes("md");
    });
  }
  /**
   * On destroy
   */
  ngOnDestroy() {
    this._unsubscribeAll.next(null);
    this._unsubscribeAll.complete();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Toggle navigation
   *
   * @param name
   */
  toggleNavigation(name) {
    const navigation = this._fuseNavigationService.getComponent(name);
    if (navigation) {
      navigation.toggle();
    }
  }
};
_EnterpriseLayoutComponent.\u0275fac = function EnterpriseLayoutComponent_Factory(t) {
  return new (t || _EnterpriseLayoutComponent)(\u0275\u0275directiveInject(ActivatedRoute), \u0275\u0275directiveInject(Router), \u0275\u0275directiveInject(NavigationService), \u0275\u0275directiveInject(FuseMediaWatcherService), \u0275\u0275directiveInject(FuseNavigationService));
};
_EnterpriseLayoutComponent.\u0275cmp = /* @__PURE__ */ \u0275\u0275defineComponent({ type: _EnterpriseLayoutComponent, selectors: [["enterprise-layout"]], standalone: true, features: [\u0275\u0275StandaloneFeature], decls: 28, vars: 8, consts: [["quickChat", "quickChat"], [1, "dark", "bg-gray-900", "print:hidden", 3, "mode", "name", "navigation", "opened"], [1, "flex", "w-full", "min-w-0", "flex-auto", "flex-col", "items-center", "bg-gray-200", "dark:bg-card"], [1, "relative", "z-49", "flex", "h-16", "w-full", "flex-0", "flex-col", "justify-center", "overflow-hidden", "shadow", "dark:shadow-none", "sm:h-20", "md:h-36", "print:hidden"], [1, "dark", "relative", "flex", "w-full", "flex-auto", "justify-center", "bg-gray-800", "px-4", "dark:bg-gray-900", "md:px-8"], [1, "flex", "h-16", "w-full", "max-w-360", "items-center", "sm:h-20"], [1, "flex", "items-center"], ["mat-icon-button", ""], [1, "ml-auto", "flex", "items-center", "space-x-0.5", "pl-2", "sm:space-x-2"], [1, "hidden", "md:block"], [3, "appearance"], ["mat-icon-button", "", 1, "lg:hidden", 3, "click"], [3, "svgIcon"], [1, "bg-card", "flex", "flex-auto", "justify-center", "px-4", "dark:bg-gray-700", "md:px-8"], [1, "flex", "w-full", "flex-auto", "justify-center", "sm:p-6", "md:p-8"], [1, "bg-default", "flex", "w-full", "flex-auto", "flex-col", "sm:max-w-360", "sm:overflow-hidden", "sm:rounded-lg", "sm:shadow-lg"], [1, "bg-card", "relative", "z-49", "flex", "w-full", "flex-0", "justify-center", "border-t", "px-6", "md:px-8", "print:hidden"], [1, "flex", "h-14", "w-full", "max-w-360", "items-center", "sm:h-20"], [1, "text-secondary", "font-medium"], ["fuseVerticalNavigationContentHeader", ""], [1, "flex", "h-20", "items-center", "px-8", "pt-6"], ["src", "images/logo/logo-text-on-dark.svg", "alt", "Logo image", 1, "w-24"], ["mat-icon-button", "", 3, "click"], [1, "relative", "flex", "h-16", "w-full", "max-w-360", "items-center"], [1, "-mx-4", 3, "name", "navigation"]], template: function EnterpriseLayoutComponent_Template(rf, ctx) {
  if (rf & 1) {
    const _r1 = \u0275\u0275getCurrentView();
    \u0275\u0275element(0, "fuse-loading-bar");
    \u0275\u0275template(1, EnterpriseLayoutComponent_Conditional_1_Template, 4, 4, "fuse-vertical-navigation", 1);
    \u0275\u0275elementStart(2, "div", 2)(3, "div", 3)(4, "div", 4)(5, "div", 5);
    \u0275\u0275template(6, EnterpriseLayoutComponent_Conditional_6_Template, 2, 0, "div", 6)(7, EnterpriseLayoutComponent_Conditional_7_Template, 2, 1, "button", 7);
    \u0275\u0275elementStart(8, "div", 8);
    \u0275\u0275element(9, "languages")(10, "fuse-fullscreen", 9)(11, "search", 10)(12, "shortcuts")(13, "messages")(14, "notifications");
    \u0275\u0275elementStart(15, "button", 11);
    \u0275\u0275listener("click", function EnterpriseLayoutComponent_Template_button_click_15_listener() {
      \u0275\u0275restoreView(_r1);
      const quickChat_r4 = \u0275\u0275reference(27);
      return \u0275\u0275resetView(quickChat_r4.toggle());
    });
    \u0275\u0275element(16, "mat-icon", 12);
    \u0275\u0275elementEnd();
    \u0275\u0275element(17, "user");
    \u0275\u0275elementEnd()()();
    \u0275\u0275template(18, EnterpriseLayoutComponent_Conditional_18_Template, 3, 2, "div", 13);
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(19, "div", 14)(20, "div", 15);
    \u0275\u0275template(21, EnterpriseLayoutComponent_Conditional_21_Template, 1, 0, "router-outlet");
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(22, "div", 16)(23, "div", 17)(24, "span", 18);
    \u0275\u0275text(25);
    \u0275\u0275elementEnd()()()();
    \u0275\u0275element(26, "quick-chat", null, 0);
  }
  if (rf & 2) {
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx.isScreenSmall ? 1 : -1);
    \u0275\u0275advance(5);
    \u0275\u0275conditional(!ctx.isScreenSmall ? 6 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx.isScreenSmall ? 7 : -1);
    \u0275\u0275advance(4);
    \u0275\u0275property("appearance", "bar");
    \u0275\u0275advance(5);
    \u0275\u0275property("svgIcon", "heroicons_outline:chat-bubble-left-right");
    \u0275\u0275advance(2);
    \u0275\u0275conditional(!ctx.isScreenSmall ? 18 : -1);
    \u0275\u0275advance(3);
    \u0275\u0275conditional(true ? 21 : -1);
    \u0275\u0275advance(4);
    \u0275\u0275textInterpolate1("Fuse \xA9 ", ctx.currentYear, "");
  }
}, dependencies: [
  FuseLoadingBarComponent,
  FuseVerticalNavigationComponent,
  MatButtonModule,
  MatIconButton,
  MatIconModule,
  MatIcon,
  LanguagesComponent,
  FuseFullscreenComponent,
  SearchComponent,
  ShortcutsComponent,
  MessagesComponent,
  NotificationsComponent,
  UserComponent,
  FuseHorizontalNavigationComponent,
  RouterOutlet,
  QuickChatComponent
], encapsulation: 2 });
var EnterpriseLayoutComponent = _EnterpriseLayoutComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && \u0275setClassDebugInfo(EnterpriseLayoutComponent, { className: "EnterpriseLayoutComponent", filePath: "src\\app\\layout\\layouts\\horizontal\\enterprise\\enterprise.component.ts", lineNumber: 46 });
})();

// src/app/layout/layouts/horizontal/material/material.component.ts
function MaterialLayoutComponent_Conditional_1_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "fuse-vertical-navigation", 0);
    \u0275\u0275elementContainerStart(1, 16);
    \u0275\u0275elementStart(2, "div", 17);
    \u0275\u0275element(3, "img", 18);
    \u0275\u0275elementEnd();
    \u0275\u0275elementContainerEnd();
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const ctx_r0 = \u0275\u0275nextContext();
    \u0275\u0275property("mode", "over")("name", "mainNavigation")("navigation", ctx_r0.navigation.default)("opened", false);
  }
}
function MaterialLayoutComponent_Conditional_6_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 5);
    \u0275\u0275element(1, "img", 19)(2, "img", 20);
    \u0275\u0275elementEnd();
  }
}
function MaterialLayoutComponent_Conditional_7_Template(rf, ctx) {
  if (rf & 1) {
    const _r2 = \u0275\u0275getCurrentView();
    \u0275\u0275elementStart(0, "button", 21);
    \u0275\u0275listener("click", function MaterialLayoutComponent_Conditional_7_Template_button_click_0_listener() {
      \u0275\u0275restoreView(_r2);
      const ctx_r0 = \u0275\u0275nextContext();
      return \u0275\u0275resetView(ctx_r0.toggleNavigation("mainNavigation"));
    });
    \u0275\u0275element(1, "mat-icon", 22);
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    \u0275\u0275advance();
    \u0275\u0275property("svgIcon", "heroicons_outline:bars-3");
  }
}
function MaterialLayoutComponent_Conditional_16_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 10);
    \u0275\u0275element(1, "fuse-horizontal-navigation", 23);
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const ctx_r0 = \u0275\u0275nextContext();
    \u0275\u0275advance();
    \u0275\u0275property("name", "mainNavigation")("navigation", ctx_r0.navigation.horizontal);
  }
}
function MaterialLayoutComponent_Conditional_19_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "router-outlet");
  }
}
var _MaterialLayoutComponent = class _MaterialLayoutComponent {
  /**
   * Constructor
   */
  constructor(_activatedRoute, _router, _navigationService, _fuseMediaWatcherService, _fuseNavigationService) {
    this._activatedRoute = _activatedRoute;
    this._router = _router;
    this._navigationService = _navigationService;
    this._fuseMediaWatcherService = _fuseMediaWatcherService;
    this._fuseNavigationService = _fuseNavigationService;
    this._unsubscribeAll = new Subject();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Accessors
  // -----------------------------------------------------------------------------------------------------
  /**
   * Getter for current year
   */
  get currentYear() {
    return (/* @__PURE__ */ new Date()).getFullYear();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Lifecycle hooks
  // -----------------------------------------------------------------------------------------------------
  /**
   * On init
   */
  ngOnInit() {
    this._navigationService.navigation$.pipe(takeUntil(this._unsubscribeAll)).subscribe((navigation) => {
      this.navigation = navigation;
    });
    this._fuseMediaWatcherService.onMediaChange$.pipe(takeUntil(this._unsubscribeAll)).subscribe(({ matchingAliases }) => {
      this.isScreenSmall = !matchingAliases.includes("md");
    });
  }
  /**
   * On destroy
   */
  ngOnDestroy() {
    this._unsubscribeAll.next(null);
    this._unsubscribeAll.complete();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Toggle navigation
   *
   * @param name
   */
  toggleNavigation(name) {
    const navigation = this._fuseNavigationService.getComponent(name);
    if (navigation) {
      navigation.toggle();
    }
  }
};
_MaterialLayoutComponent.\u0275fac = function MaterialLayoutComponent_Factory(t) {
  return new (t || _MaterialLayoutComponent)(\u0275\u0275directiveInject(ActivatedRoute), \u0275\u0275directiveInject(Router), \u0275\u0275directiveInject(NavigationService), \u0275\u0275directiveInject(FuseMediaWatcherService), \u0275\u0275directiveInject(FuseNavigationService));
};
_MaterialLayoutComponent.\u0275cmp = /* @__PURE__ */ \u0275\u0275defineComponent({ type: _MaterialLayoutComponent, selectors: [["material-layout"]], standalone: true, features: [\u0275\u0275StandaloneFeature], decls: 24, vars: 7, consts: [[1, "dark", "bg-gray-900", "print:hidden", 3, "mode", "name", "navigation", "opened"], [1, "flex", "w-full", "min-w-0", "flex-auto", "flex-col", "items-center", "bg-gray-200", "dark:bg-card"], [1, "relative", "z-49", "flex", "w-full", "justify-center", "overflow-hidden", "bg-primary-700", "print:hidden"], [1, "bg-card", "w-full", "max-w-360", "overflow-hidden", "border-b", "sm:m-8", "sm:mb-0", "sm:rounded-t-xl", "sm:py-3", "sm:shadow-2xl", "md:mx-8", "md:mt-12", "md:pb-3", "md:pt-4"], [1, "relative", "flex", "h-16", "flex-0", "flex-auto", "items-center", "px-4", "md:px-6"], [1, "mx-2", "flex", "items-center"], ["mat-icon-button", ""], [1, "ml-auto", "flex", "items-center", "space-x-1", "pl-2", "sm:space-x-2"], [1, "hidden", "md:block"], [3, "appearance"], [1, "relative", "flex", "h-16", "flex-0", "flex-auto", "items-center", "px-4"], [1, "flex", "w-full", "flex-auto", "justify-center", "sm:px-8"], [1, "bg-default", "flex", "w-full", "flex-auto", "flex-col", "sm:max-w-360", "sm:overflow-hidden", "sm:shadow-xl"], [1, "relative", "z-49", "flex", "w-full", "justify-center", "print:hidden"], [1, "bg-card", "flex", "h-14", "w-full", "max-w-360", "items-center", "border-t", "px-6", "dark:bg-default", "sm:h-20", "sm:shadow-xl", "md:px-8"], [1, "text-secondary", "font-medium"], ["fuseVerticalNavigationContentHeader", ""], [1, "flex", "h-20", "items-center", "px-8", "pt-6"], ["src", "images/logo/logo-text-on-dark.svg", "alt", "Logo image", 1, "w-24"], ["src", "images/logo/logo-text.svg", "alt", "Logo image", 1, "w-24", "dark:hidden"], ["src", "images/logo/logo-text-on-dark.svg", "alt", "Logo image", 1, "hidden", "w-24", "dark:flex"], ["mat-icon-button", "", 3, "click"], [3, "svgIcon"], [3, "name", "navigation"]], template: function MaterialLayoutComponent_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "fuse-loading-bar");
    \u0275\u0275template(1, MaterialLayoutComponent_Conditional_1_Template, 4, 4, "fuse-vertical-navigation", 0);
    \u0275\u0275elementStart(2, "div", 1)(3, "div", 2)(4, "div", 3)(5, "div", 4);
    \u0275\u0275template(6, MaterialLayoutComponent_Conditional_6_Template, 3, 0, "div", 5)(7, MaterialLayoutComponent_Conditional_7_Template, 2, 1, "button", 6);
    \u0275\u0275elementStart(8, "div", 7);
    \u0275\u0275element(9, "languages")(10, "fuse-fullscreen", 8)(11, "search", 9)(12, "shortcuts")(13, "messages")(14, "notifications")(15, "user");
    \u0275\u0275elementEnd()();
    \u0275\u0275template(16, MaterialLayoutComponent_Conditional_16_Template, 2, 2, "div", 10);
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(17, "div", 11)(18, "div", 12);
    \u0275\u0275template(19, MaterialLayoutComponent_Conditional_19_Template, 1, 0, "router-outlet");
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(20, "div", 13)(21, "div", 14)(22, "span", 15);
    \u0275\u0275text(23);
    \u0275\u0275elementEnd()()()();
  }
  if (rf & 2) {
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx.isScreenSmall ? 1 : -1);
    \u0275\u0275advance(5);
    \u0275\u0275conditional(!ctx.isScreenSmall ? 6 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx.isScreenSmall ? 7 : -1);
    \u0275\u0275advance(4);
    \u0275\u0275property("appearance", "bar");
    \u0275\u0275advance(5);
    \u0275\u0275conditional(!ctx.isScreenSmall ? 16 : -1);
    \u0275\u0275advance(3);
    \u0275\u0275conditional(true ? 19 : -1);
    \u0275\u0275advance(4);
    \u0275\u0275textInterpolate1("Fuse \xA9 ", ctx.currentYear, "");
  }
}, dependencies: [
  FuseLoadingBarComponent,
  FuseVerticalNavigationComponent,
  MatButtonModule,
  MatIconButton,
  MatIconModule,
  MatIcon,
  LanguagesComponent,
  FuseFullscreenComponent,
  SearchComponent,
  ShortcutsComponent,
  MessagesComponent,
  NotificationsComponent,
  UserComponent,
  FuseHorizontalNavigationComponent,
  RouterOutlet
], encapsulation: 2 });
var MaterialLayoutComponent = _MaterialLayoutComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && \u0275setClassDebugInfo(MaterialLayoutComponent, { className: "MaterialLayoutComponent", filePath: "src\\app\\layout\\layouts\\horizontal\\material\\material.component.ts", lineNumber: 44 });
})();

// src/app/layout/layouts/horizontal/modern/modern.component.ts
function ModernLayoutComponent_Conditional_1_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "fuse-vertical-navigation", 1);
    \u0275\u0275elementContainerStart(1, 13);
    \u0275\u0275elementStart(2, "div", 14);
    \u0275\u0275element(3, "img", 15);
    \u0275\u0275elementEnd();
    \u0275\u0275elementContainerEnd();
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    const ctx_r1 = \u0275\u0275nextContext();
    \u0275\u0275property("mode", "over")("name", "mainNavigation")("navigation", ctx_r1.navigation.default)("opened", false);
  }
}
function ModernLayoutComponent_Conditional_4_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 16)(1, "div", 17);
    \u0275\u0275element(2, "img", 18)(3, "img", 19);
    \u0275\u0275elementEnd();
    \u0275\u0275element(4, "img", 20);
    \u0275\u0275elementEnd();
    \u0275\u0275element(5, "fuse-horizontal-navigation", 21);
  }
  if (rf & 2) {
    const ctx_r1 = \u0275\u0275nextContext();
    \u0275\u0275advance(5);
    \u0275\u0275property("name", "mainNavigation")("navigation", ctx_r1.navigation.horizontal);
  }
}
function ModernLayoutComponent_Conditional_5_Template(rf, ctx) {
  if (rf & 1) {
    const _r3 = \u0275\u0275getCurrentView();
    \u0275\u0275elementStart(0, "button", 22);
    \u0275\u0275listener("click", function ModernLayoutComponent_Conditional_5_Template_button_click_0_listener() {
      \u0275\u0275restoreView(_r3);
      const ctx_r1 = \u0275\u0275nextContext();
      return \u0275\u0275resetView(ctx_r1.toggleNavigation("mainNavigation"));
    });
    \u0275\u0275element(1, "mat-icon", 9);
    \u0275\u0275elementEnd();
  }
  if (rf & 2) {
    \u0275\u0275advance();
    \u0275\u0275property("svgIcon", "heroicons_outline:bars-3");
  }
}
function ModernLayoutComponent_Conditional_17_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "router-outlet");
  }
}
var _ModernLayoutComponent = class _ModernLayoutComponent {
  /**
   * Constructor
   */
  constructor(_activatedRoute, _router, _navigationService, _fuseMediaWatcherService, _fuseNavigationService) {
    this._activatedRoute = _activatedRoute;
    this._router = _router;
    this._navigationService = _navigationService;
    this._fuseMediaWatcherService = _fuseMediaWatcherService;
    this._fuseNavigationService = _fuseNavigationService;
    this._unsubscribeAll = new Subject();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Accessors
  // -----------------------------------------------------------------------------------------------------
  /**
   * Getter for current year
   */
  get currentYear() {
    return (/* @__PURE__ */ new Date()).getFullYear();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Lifecycle hooks
  // -----------------------------------------------------------------------------------------------------
  /**
   * On init
   */
  ngOnInit() {
    this._navigationService.navigation$.pipe(takeUntil(this._unsubscribeAll)).subscribe((navigation) => {
      this.navigation = navigation;
    });
    this._fuseMediaWatcherService.onMediaChange$.pipe(takeUntil(this._unsubscribeAll)).subscribe(({ matchingAliases }) => {
      this.isScreenSmall = !matchingAliases.includes("md");
    });
  }
  /**
   * On destroy
   */
  ngOnDestroy() {
    this._unsubscribeAll.next(null);
    this._unsubscribeAll.complete();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Toggle navigation
   *
   * @param name
   */
  toggleNavigation(name) {
    const navigation = this._fuseNavigationService.getComponent(name);
    if (navigation) {
      navigation.toggle();
    }
  }
};
_ModernLayoutComponent.\u0275fac = function ModernLayoutComponent_Factory(t) {
  return new (t || _ModernLayoutComponent)(\u0275\u0275directiveInject(ActivatedRoute), \u0275\u0275directiveInject(Router), \u0275\u0275directiveInject(NavigationService), \u0275\u0275directiveInject(FuseMediaWatcherService), \u0275\u0275directiveInject(FuseNavigationService));
};
_ModernLayoutComponent.\u0275cmp = /* @__PURE__ */ \u0275\u0275defineComponent({ type: _ModernLayoutComponent, selectors: [["modern-layout"]], standalone: true, features: [\u0275\u0275StandaloneFeature], decls: 23, vars: 7, consts: [["quickChat", "quickChat"], [1, "dark", "bg-gray-900", "print:hidden", 3, "mode", "name", "navigation", "opened"], [1, "flex", "w-full", "min-w-0", "flex-auto", "flex-col"], [1, "bg-card", "relative", "z-49", "flex", "h-16", "w-full", "flex-0", "items-center", "px-4", "shadow", "dark:border-b", "dark:bg-transparent", "dark:shadow-none", "sm:h-20", "md:px-6", "print:hidden"], ["mat-icon-button", ""], [1, "ml-auto", "flex", "items-center", "space-x-0.5", "pl-2", "sm:space-x-2"], [1, "hidden", "md:block"], [3, "appearance"], ["mat-icon-button", "", 1, "lg:hidden", 3, "click"], [3, "svgIcon"], [1, "flex", "w-full", "flex-auto", "flex-col"], [1, "bg-card", "relative", "z-49", "flex", "h-14", "w-full", "flex-0", "items-center", "border-t", "px-4", "dark:bg-transparent", "sm:h-20", "md:px-6", "print:hidden"], [1, "text-secondary", "font-medium"], ["fuseVerticalNavigationContentHeader", ""], [1, "flex", "h-20", "items-center", "px-8", "pt-6"], ["src", "images/logo/logo-text-on-dark.svg", "alt", "Logo image", 1, "w-24"], [1, "mx-2", "flex", "items-center", "lg:mr-8"], [1, "hidden", "lg:flex"], ["src", "images/logo/logo-text.svg", 1, "w-24", "dark:hidden"], ["src", "images/logo/logo-text-on-dark.svg", 1, "hidden", "w-24", "dark:flex"], ["src", "images/logo/logo.svg", 1, "flex", "w-8", "lg:hidden"], [1, "mr-2", 3, "name", "navigation"], ["mat-icon-button", "", 3, "click"]], template: function ModernLayoutComponent_Template(rf, ctx) {
  if (rf & 1) {
    const _r1 = \u0275\u0275getCurrentView();
    \u0275\u0275element(0, "fuse-loading-bar");
    \u0275\u0275template(1, ModernLayoutComponent_Conditional_1_Template, 4, 4, "fuse-vertical-navigation", 1);
    \u0275\u0275elementStart(2, "div", 2)(3, "div", 3);
    \u0275\u0275template(4, ModernLayoutComponent_Conditional_4_Template, 6, 2)(5, ModernLayoutComponent_Conditional_5_Template, 2, 1, "button", 4);
    \u0275\u0275elementStart(6, "div", 5);
    \u0275\u0275element(7, "languages")(8, "fuse-fullscreen", 6)(9, "search", 7)(10, "shortcuts")(11, "messages")(12, "notifications");
    \u0275\u0275elementStart(13, "button", 8);
    \u0275\u0275listener("click", function ModernLayoutComponent_Template_button_click_13_listener() {
      \u0275\u0275restoreView(_r1);
      const quickChat_r4 = \u0275\u0275reference(22);
      return \u0275\u0275resetView(quickChat_r4.toggle());
    });
    \u0275\u0275element(14, "mat-icon", 9);
    \u0275\u0275elementEnd();
    \u0275\u0275element(15, "user");
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(16, "div", 10);
    \u0275\u0275template(17, ModernLayoutComponent_Conditional_17_Template, 1, 0, "router-outlet");
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(18, "div", 11)(19, "span", 12);
    \u0275\u0275text(20);
    \u0275\u0275elementEnd()()();
    \u0275\u0275element(21, "quick-chat", null, 0);
  }
  if (rf & 2) {
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx.isScreenSmall ? 1 : -1);
    \u0275\u0275advance(3);
    \u0275\u0275conditional(!ctx.isScreenSmall ? 4 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx.isScreenSmall ? 5 : -1);
    \u0275\u0275advance(4);
    \u0275\u0275property("appearance", "bar");
    \u0275\u0275advance(5);
    \u0275\u0275property("svgIcon", "heroicons_outline:chat-bubble-left-right");
    \u0275\u0275advance(3);
    \u0275\u0275conditional(true ? 17 : -1);
    \u0275\u0275advance(3);
    \u0275\u0275textInterpolate1("Fuse \xA9 ", ctx.currentYear, "");
  }
}, dependencies: [
  FuseLoadingBarComponent,
  FuseVerticalNavigationComponent,
  FuseHorizontalNavigationComponent,
  MatButtonModule,
  MatIconButton,
  MatIconModule,
  MatIcon,
  LanguagesComponent,
  FuseFullscreenComponent,
  SearchComponent,
  ShortcutsComponent,
  MessagesComponent,
  NotificationsComponent,
  UserComponent,
  RouterOutlet,
  QuickChatComponent
], encapsulation: 2 });
var ModernLayoutComponent = _ModernLayoutComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && \u0275setClassDebugInfo(ModernLayoutComponent, { className: "ModernLayoutComponent", filePath: "src\\app\\layout\\layouts\\horizontal\\modern\\modern.component.ts", lineNumber: 46 });
})();

// src/app/layout/layouts/vertical/classic/classic.component.ts
function ClassicLayoutComponent_Conditional_15_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "router-outlet");
  }
}
var _ClassicLayoutComponent = class _ClassicLayoutComponent {
  /**
   * Constructor
   */
  constructor(_activatedRoute, _router, _navigationService, _fuseMediaWatcherService, _fuseNavigationService, _authService) {
    this._activatedRoute = _activatedRoute;
    this._router = _router;
    this._navigationService = _navigationService;
    this._fuseMediaWatcherService = _fuseMediaWatcherService;
    this._fuseNavigationService = _fuseNavigationService;
    this._authService = _authService;
    this.navigation = { compact: [], default: [], futuristic: [], horizontal: [] };
    this._unsubscribeAll = new Subject();
    this.roleVisibilityMap = {
      "Super Admin": ["2", "2.1", "2.2", "2.3", "2.4", "3", "3.1", "3.2", "3.3", "3.4", "4", "4.1", "5", "5.1", "5.2", "5.3", "5.4", "5.8", "5.9", "6", "6.1", "6.2", "7", "7.1", "8", "8.1", "8.2", "8.3", "8.4", "8.5"],
      "Analista": ["2", "2.1", "2.4", "3", "3.1", "3.2", "3.3", "4", "4.1", "5", "5.8", "8", "8.1", "8.2", "8.3", "8.4", "8.5"],
      "Cliente": ["3", "3.3", "4", "4.1"],
      "Aliado": ["2", "2.4", "8", "8.1", "8.2", "8.3", "8.4", "8.5"],
      "Desembolso": ["2", "2.3"],
      "aliado": ["2", "2.4"],
      "Auditor": ["2", "2.1", "2.2", "2.3", "2.4", "3", "3.1", "3.2", "3.3", "3.4", "4", "4.1", "5", "5.1", "5.2", "5.3", "5.4", "5.8", "5.9", "6", "6.1", "6.2", "7", "7.1", "8", "8.1", "8.2", "8.3", "8.4", "8.5"]
    };
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Accessors
  // -----------------------------------------------------------------------------------------------------
  /**
   * Getter for current year
   */
  get currentYear() {
    return (/* @__PURE__ */ new Date()).getFullYear();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Lifecycle hooks
  // -----------------------------------------------------------------------------------------------------
  /**
   * On init
   */
  ngOnInit() {
    const userRole = this._authService.getRole();
    this._navigationService.navigation$.pipe(takeUntil(this._unsubscribeAll)).subscribe((navigation) => {
      this.navigation = this.filterMenuByRole(navigation.default, this.roleVisibilityMap[userRole]);
      this.navigation = {
        compact: [],
        default: [...this.navigation],
        futuristic: [],
        horizontal: []
      };
    });
    this._fuseMediaWatcherService.onMediaChange$.pipe(takeUntil(this._unsubscribeAll)).subscribe(({ matchingAliases }) => {
      this.isScreenSmall = !matchingAliases.includes("md");
    });
  }
  filterMenuByRole(menu, allowedIds) {
    const filtro = menu.filter((item) => {
      if (allowedIds.includes(item.id)) {
        if (item.children) {
          item.children = this.filterMenuByRole(item.children, allowedIds);
        }
        return true;
      }
      return false;
    });
    return filtro;
  }
  /**
   * On destroy
   */
  ngOnDestroy() {
    this._unsubscribeAll.next(null);
    this._unsubscribeAll.complete();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Toggle navigation
   *
   * @param name
   */
  toggleNavigation(name) {
    const navigation = this._fuseNavigationService.getComponent(name);
    if (navigation) {
      navigation.toggle();
    }
  }
};
_ClassicLayoutComponent.\u0275fac = function ClassicLayoutComponent_Factory(t) {
  return new (t || _ClassicLayoutComponent)(\u0275\u0275directiveInject(ActivatedRoute), \u0275\u0275directiveInject(Router), \u0275\u0275directiveInject(NavigationService), \u0275\u0275directiveInject(FuseMediaWatcherService), \u0275\u0275directiveInject(FuseNavigationService), \u0275\u0275directiveInject(AuthService));
};
_ClassicLayoutComponent.\u0275cmp = /* @__PURE__ */ \u0275\u0275defineComponent({ type: _ClassicLayoutComponent, selectors: [["classic-layout"]], standalone: true, features: [\u0275\u0275StandaloneFeature], decls: 19, vars: 8, consts: [[1, "dark", "bg-crediblue-100", "print:hidden", 3, "mode", "name", "navigation", "opened"], ["fuseVerticalNavigationContentHeader", ""], [1, "flex", "h-20", "items-center", "p-6", "pb-0"], ["src", "images/logo/logo-blanco.svg", "alt", "Logo image", 1, "w-30", "dark:hidden"], ["src", "images/logo/logo-blanco.svg", "alt", "Logo image", 1, "hidden", "w-30", "dark:flex"], [1, "flex", "w-full", "min-w-0", "flex-auto", "flex-col"], [1, "bg-card", "relative", "z-49", "flex", "h-16", "w-full", "flex-0", "items-center", "px-4", "shadow", "dark:border-b", "dark:bg-transparent", "dark:shadow-none", "md:px-6", "print:hidden"], ["mat-icon-button", "", 3, "click"], [3, "svgIcon"], [1, "ml-auto", "flex", "items-center", "space-x-0.5", "pl-2", "sm:space-x-2"], ["mat-icon-button", "", 1, "lg:hidden"], [1, "flex", "flex-auto", "flex-col"], [1, "bg-card", "relative", "z-49", "flex", "h-14", "w-full", "flex-0", "items-center", "justify-start", "border-t", "px-4", "dark:bg-transparent", "md:px-6", "print:hidden"], [1, "text-secondary", "font-medium"]], template: function ClassicLayoutComponent_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "fuse-loading-bar");
    \u0275\u0275elementStart(1, "fuse-vertical-navigation", 0);
    \u0275\u0275elementContainerStart(2, 1);
    \u0275\u0275elementStart(3, "div", 2);
    \u0275\u0275element(4, "img", 3)(5, "img", 4);
    \u0275\u0275elementEnd();
    \u0275\u0275elementContainerEnd();
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(6, "div", 5)(7, "div", 6)(8, "button", 7);
    \u0275\u0275listener("click", function ClassicLayoutComponent_Template_button_click_8_listener() {
      return ctx.toggleNavigation("mainNavigation");
    });
    \u0275\u0275element(9, "mat-icon", 8);
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(10, "div", 9)(11, "button", 10);
    \u0275\u0275element(12, "mat-icon", 8);
    \u0275\u0275elementEnd();
    \u0275\u0275element(13, "user");
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(14, "div", 11);
    \u0275\u0275template(15, ClassicLayoutComponent_Conditional_15_Template, 1, 0, "router-outlet");
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(16, "div", 12)(17, "span", 13);
    \u0275\u0275text(18);
    \u0275\u0275elementEnd()()();
  }
  if (rf & 2) {
    \u0275\u0275advance();
    \u0275\u0275property("mode", ctx.isScreenSmall ? "over" : "side")("name", "mainNavigation")("navigation", ctx.navigation.default)("opened", !ctx.isScreenSmall);
    \u0275\u0275advance(8);
    \u0275\u0275property("svgIcon", "heroicons_outline:bars-3");
    \u0275\u0275advance(3);
    \u0275\u0275property("svgIcon", "heroicons_outline:chat-bubble-left-right");
    \u0275\u0275advance(3);
    \u0275\u0275conditional(true ? 15 : -1);
    \u0275\u0275advance(3);
    \u0275\u0275textInterpolate1("Crediplus \xA9 ", ctx.currentYear, "");
  }
}, dependencies: [
  FuseLoadingBarComponent,
  FuseVerticalNavigationComponent,
  MatButtonModule,
  MatIconButton,
  MatIconModule,
  MatIcon,
  UserComponent,
  RouterOutlet
], encapsulation: 2 });
var ClassicLayoutComponent = _ClassicLayoutComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && \u0275setClassDebugInfo(ClassicLayoutComponent, { className: "ClassicLayoutComponent", filePath: "src\\app\\layout\\layouts\\vertical\\classic\\classic.component.ts", lineNumber: 45 });
})();

// src/app/layout/layouts/vertical/classy/classy.component.ts
function ClassyLayoutComponent_Conditional_11_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "img", 10);
  }
  if (rf & 2) {
    const ctx_r1 = \u0275\u0275nextContext();
    \u0275\u0275property("src", ctx_r1.user.avatar, \u0275\u0275sanitizeUrl);
  }
}
function ClassyLayoutComponent_Conditional_12_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "mat-icon", 11);
  }
  if (rf & 2) {
    \u0275\u0275property("svgIcon", "heroicons_solid:user-circle");
  }
}
function ClassyLayoutComponent_Conditional_34_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "router-outlet");
  }
}
var _ClassyLayoutComponent = class _ClassyLayoutComponent {
  /**
   * Constructor
   */
  constructor(_activatedRoute, _router, _navigationService, _userService, _fuseMediaWatcherService, _fuseNavigationService) {
    this._activatedRoute = _activatedRoute;
    this._router = _router;
    this._navigationService = _navigationService;
    this._userService = _userService;
    this._fuseMediaWatcherService = _fuseMediaWatcherService;
    this._fuseNavigationService = _fuseNavigationService;
    this._unsubscribeAll = new Subject();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Accessors
  // -----------------------------------------------------------------------------------------------------
  /**
   * Getter for current year
   */
  get currentYear() {
    return (/* @__PURE__ */ new Date()).getFullYear();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Lifecycle hooks
  // -----------------------------------------------------------------------------------------------------
  /**
   * On init
   */
  ngOnInit() {
    this._navigationService.navigation$.pipe(takeUntil(this._unsubscribeAll)).subscribe((navigation) => {
      this.navigation = navigation;
    });
    this._userService.user$.pipe(takeUntil(this._unsubscribeAll)).subscribe((user2) => {
      this.user = user2;
    });
    this._fuseMediaWatcherService.onMediaChange$.pipe(takeUntil(this._unsubscribeAll)).subscribe(({ matchingAliases }) => {
      this.isScreenSmall = !matchingAliases.includes("md");
    });
  }
  /**
   * On destroy
   */
  ngOnDestroy() {
    this._unsubscribeAll.next(null);
    this._unsubscribeAll.complete();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Toggle navigation
   *
   * @param name
   */
  toggleNavigation(name) {
    const navigation = this._fuseNavigationService.getComponent(name);
    if (navigation) {
      navigation.toggle();
    }
  }
};
_ClassyLayoutComponent.\u0275fac = function ClassyLayoutComponent_Factory(t) {
  return new (t || _ClassyLayoutComponent)(\u0275\u0275directiveInject(ActivatedRoute), \u0275\u0275directiveInject(Router), \u0275\u0275directiveInject(NavigationService), \u0275\u0275directiveInject(UserService), \u0275\u0275directiveInject(FuseMediaWatcherService), \u0275\u0275directiveInject(FuseNavigationService));
};
_ClassyLayoutComponent.\u0275cmp = /* @__PURE__ */ \u0275\u0275defineComponent({ type: _ClassyLayoutComponent, selectors: [["classy-layout"]], standalone: true, features: [\u0275\u0275StandaloneFeature], decls: 37, vars: 13, consts: [["quickChat", "quickChat"], [1, "dark", "bg-gray-900", "print:hidden", 3, "mode", "name", "navigation", "opened"], ["fuseVerticalNavigationContentHeader", ""], [1, "flex", "w-full", "items-center", "p-4", "pl-6"], [1, "flex", "items-center", "justify-center"], ["src", "images/logo/logo.svg", 1, "w-8"], [1, "ml-auto", "flex", "items-center"], [3, "showAvatar"], [1, "flex", "w-full", "flex-col", "items-center", "p-4"], [1, "relative", "h-24", "w-24"], ["alt", "User avatar", 1, "h-full", "w-full", "rounded-full", 3, "src"], [1, "icon-size-24", 3, "svgIcon"], [1, "mt-6", "flex", "w-full", "flex-col", "items-center", "justify-center"], [1, "w-full", "overflow-hidden", "text-ellipsis", "whitespace-nowrap", "text-center", "font-medium", "leading-normal"], [1, "text-secondary", "mt-0.5", "w-full", "overflow-hidden", "text-ellipsis", "whitespace-nowrap", "text-center", "text-md", "font-medium", "leading-normal"], ["fuseVerticalNavigationContentFooter", ""], [1, "mb-4", "mt-2", "flex", "h-16", "flex-0", "items-center", "justify-center", "pl-2", "pr-6", "opacity-12"], ["src", "images/logo/logo-text-on-dark.svg", 1, "max-w-36"], [1, "flex", "w-full", "min-w-0", "flex-auto", "flex-col"], [1, "bg-card", "relative", "z-49", "flex", "h-16", "w-full", "flex-0", "items-center", "px-4", "shadow", "dark:border-b", "dark:bg-transparent", "dark:shadow-none", "md:px-6", "print:hidden"], ["mat-icon-button", "", 3, "click"], [3, "svgIcon"], [1, "ml-auto", "flex", "items-center", "space-x-0.5", "pl-2", "sm:space-x-2"], [1, "hidden", "md:block"], [3, "appearance"], ["mat-icon-button", "", 1, "lg:hidden", 3, "click"], [1, "flex", "flex-auto", "flex-col"]], template: function ClassyLayoutComponent_Template(rf, ctx) {
  if (rf & 1) {
    const _r1 = \u0275\u0275getCurrentView();
    \u0275\u0275element(0, "fuse-loading-bar");
    \u0275\u0275elementStart(1, "fuse-vertical-navigation", 1);
    \u0275\u0275elementContainerStart(2, 2);
    \u0275\u0275elementStart(3, "div", 3)(4, "div", 4);
    \u0275\u0275element(5, "img", 5);
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(6, "div", 6);
    \u0275\u0275element(7, "notifications")(8, "user", 7);
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(9, "div", 8)(10, "div", 9);
    \u0275\u0275template(11, ClassyLayoutComponent_Conditional_11_Template, 1, 1, "img", 10)(12, ClassyLayoutComponent_Conditional_12_Template, 1, 1, "mat-icon", 11);
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(13, "div", 12)(14, "div", 13);
    \u0275\u0275text(15);
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(16, "div", 14);
    \u0275\u0275text(17);
    \u0275\u0275elementEnd()()();
    \u0275\u0275elementContainerEnd();
    \u0275\u0275elementContainerStart(18, 15);
    \u0275\u0275elementStart(19, "div", 16);
    \u0275\u0275element(20, "img", 17);
    \u0275\u0275elementEnd();
    \u0275\u0275elementContainerEnd();
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(21, "div", 18)(22, "div", 19)(23, "button", 20);
    \u0275\u0275listener("click", function ClassyLayoutComponent_Template_button_click_23_listener() {
      \u0275\u0275restoreView(_r1);
      return \u0275\u0275resetView(ctx.toggleNavigation("mainNavigation"));
    });
    \u0275\u0275element(24, "mat-icon", 21);
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(25, "div", 22);
    \u0275\u0275element(26, "languages")(27, "fuse-fullscreen", 23)(28, "search", 24)(29, "shortcuts")(30, "messages");
    \u0275\u0275elementStart(31, "button", 25);
    \u0275\u0275listener("click", function ClassyLayoutComponent_Template_button_click_31_listener() {
      \u0275\u0275restoreView(_r1);
      const quickChat_r3 = \u0275\u0275reference(36);
      return \u0275\u0275resetView(quickChat_r3.toggle());
    });
    \u0275\u0275element(32, "mat-icon", 21);
    \u0275\u0275elementEnd()()();
    \u0275\u0275elementStart(33, "div", 26);
    \u0275\u0275template(34, ClassyLayoutComponent_Conditional_34_Template, 1, 0, "router-outlet");
    \u0275\u0275elementEnd()();
    \u0275\u0275element(35, "quick-chat", null, 0);
  }
  if (rf & 2) {
    \u0275\u0275advance();
    \u0275\u0275property("mode", ctx.isScreenSmall ? "over" : "side")("name", "mainNavigation")("navigation", ctx.navigation.default)("opened", !ctx.isScreenSmall);
    \u0275\u0275advance(7);
    \u0275\u0275property("showAvatar", false);
    \u0275\u0275advance(3);
    \u0275\u0275conditional(ctx.user.avatar ? 11 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(!ctx.user.avatar ? 12 : -1);
    \u0275\u0275advance(3);
    \u0275\u0275textInterpolate1(" ", ctx.user.name, " ");
    \u0275\u0275advance(2);
    \u0275\u0275textInterpolate1(" ", ctx.user.email, " ");
    \u0275\u0275advance(7);
    \u0275\u0275property("svgIcon", "heroicons_outline:bars-3");
    \u0275\u0275advance(4);
    \u0275\u0275property("appearance", "bar");
    \u0275\u0275advance(4);
    \u0275\u0275property("svgIcon", "heroicons_outline:chat-bubble-left-right");
    \u0275\u0275advance(2);
    \u0275\u0275conditional(true ? 34 : -1);
  }
}, dependencies: [
  FuseLoadingBarComponent,
  FuseVerticalNavigationComponent,
  NotificationsComponent,
  UserComponent,
  MatIconModule,
  MatIcon,
  MatButtonModule,
  MatIconButton,
  LanguagesComponent,
  FuseFullscreenComponent,
  SearchComponent,
  ShortcutsComponent,
  MessagesComponent,
  RouterOutlet,
  QuickChatComponent
], encapsulation: 2 });
var ClassyLayoutComponent = _ClassyLayoutComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && \u0275setClassDebugInfo(ClassyLayoutComponent, { className: "ClassyLayoutComponent", filePath: "src\\app\\layout\\layouts\\vertical\\classy\\classy.component.ts", lineNumber: 46 });
})();

// src/app/layout/layouts/vertical/compact/compact.component.ts
function CompactLayoutComponent_Conditional_20_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "router-outlet");
  }
}
var _CompactLayoutComponent = class _CompactLayoutComponent {
  /**
   * Constructor
   */
  constructor(_activatedRoute, _router, _navigationService, _fuseMediaWatcherService, _fuseNavigationService) {
    this._activatedRoute = _activatedRoute;
    this._router = _router;
    this._navigationService = _navigationService;
    this._fuseMediaWatcherService = _fuseMediaWatcherService;
    this._fuseNavigationService = _fuseNavigationService;
    this._unsubscribeAll = new Subject();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Accessors
  // -----------------------------------------------------------------------------------------------------
  /**
   * Getter for current year
   */
  get currentYear() {
    return (/* @__PURE__ */ new Date()).getFullYear();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Lifecycle hooks
  // -----------------------------------------------------------------------------------------------------
  /**
   * On init
   */
  ngOnInit() {
    this._navigationService.navigation$.pipe(takeUntil(this._unsubscribeAll)).subscribe((navigation) => {
      this.navigation = navigation;
    });
    this._fuseMediaWatcherService.onMediaChange$.pipe(takeUntil(this._unsubscribeAll)).subscribe(({ matchingAliases }) => {
      this.isScreenSmall = !matchingAliases.includes("md");
    });
  }
  /**
   * On destroy
   */
  ngOnDestroy() {
    this._unsubscribeAll.next(null);
    this._unsubscribeAll.complete();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Toggle navigation
   *
   * @param name
   */
  toggleNavigation(name) {
    const navigation = this._fuseNavigationService.getComponent(name);
    if (navigation) {
      navigation.toggle();
    }
  }
};
_CompactLayoutComponent.\u0275fac = function CompactLayoutComponent_Factory(t) {
  return new (t || _CompactLayoutComponent)(\u0275\u0275directiveInject(ActivatedRoute), \u0275\u0275directiveInject(Router), \u0275\u0275directiveInject(NavigationService), \u0275\u0275directiveInject(FuseMediaWatcherService), \u0275\u0275directiveInject(FuseNavigationService));
};
_CompactLayoutComponent.\u0275cmp = /* @__PURE__ */ \u0275\u0275defineComponent({ type: _CompactLayoutComponent, selectors: [["compact-layout"]], standalone: true, features: [\u0275\u0275StandaloneFeature], decls: 26, vars: 10, consts: [["quickChat", "quickChat"], [1, "dark", "bg-gray-900", "print:hidden", 3, "appearance", "mode", "name", "navigation", "opened"], ["fuseVerticalNavigationContentHeader", ""], [1, "mb-4", "mt-3", "flex", "h-20", "items-center", "justify-center"], ["src", "images/logo/logo.svg", "alt", "Logo image", 1, "w-10"], [1, "flex", "w-full", "min-w-0", "flex-auto", "flex-col"], [1, "bg-card", "relative", "z-49", "flex", "h-16", "w-full", "flex-0", "items-center", "px-4", "shadow", "dark:border-b", "dark:bg-transparent", "dark:shadow-none", "md:px-6", "print:hidden"], ["mat-icon-button", "", 3, "click"], [3, "svgIcon"], [1, "ml-auto", "flex", "items-center", "space-x-0.5", "pl-2", "sm:space-x-2"], [1, "hidden", "md:block"], [3, "appearance"], ["mat-icon-button", "", 1, "lg:hidden", 3, "click"], [1, "flex", "flex-auto", "flex-col"], [1, "bg-card", "relative", "z-49", "flex", "h-14", "w-full", "flex-0", "items-center", "justify-start", "border-t", "px-4", "dark:bg-transparent", "md:px-6", "print:hidden"], [1, "text-secondary", "font-medium"]], template: function CompactLayoutComponent_Template(rf, ctx) {
  if (rf & 1) {
    const _r1 = \u0275\u0275getCurrentView();
    \u0275\u0275element(0, "fuse-loading-bar");
    \u0275\u0275elementStart(1, "fuse-vertical-navigation", 1);
    \u0275\u0275elementContainerStart(2, 2);
    \u0275\u0275elementStart(3, "div", 3);
    \u0275\u0275element(4, "img", 4);
    \u0275\u0275elementEnd();
    \u0275\u0275elementContainerEnd();
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(5, "div", 5)(6, "div", 6)(7, "button", 7);
    \u0275\u0275listener("click", function CompactLayoutComponent_Template_button_click_7_listener() {
      \u0275\u0275restoreView(_r1);
      return \u0275\u0275resetView(ctx.toggleNavigation("mainNavigation"));
    });
    \u0275\u0275element(8, "mat-icon", 8);
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(9, "div", 9);
    \u0275\u0275element(10, "languages")(11, "fuse-fullscreen", 10)(12, "search", 11)(13, "shortcuts")(14, "messages")(15, "notifications");
    \u0275\u0275elementStart(16, "button", 12);
    \u0275\u0275listener("click", function CompactLayoutComponent_Template_button_click_16_listener() {
      \u0275\u0275restoreView(_r1);
      const quickChat_r2 = \u0275\u0275reference(25);
      return \u0275\u0275resetView(quickChat_r2.toggle());
    });
    \u0275\u0275element(17, "mat-icon", 8);
    \u0275\u0275elementEnd();
    \u0275\u0275element(18, "user");
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(19, "div", 13);
    \u0275\u0275template(20, CompactLayoutComponent_Conditional_20_Template, 1, 0, "router-outlet");
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(21, "div", 14)(22, "span", 15);
    \u0275\u0275text(23);
    \u0275\u0275elementEnd()()();
    \u0275\u0275element(24, "quick-chat", null, 0);
  }
  if (rf & 2) {
    \u0275\u0275advance();
    \u0275\u0275property("appearance", "compact")("mode", ctx.isScreenSmall ? "over" : "side")("name", "mainNavigation")("navigation", ctx.navigation.compact)("opened", !ctx.isScreenSmall);
    \u0275\u0275advance(7);
    \u0275\u0275property("svgIcon", "heroicons_outline:bars-3");
    \u0275\u0275advance(4);
    \u0275\u0275property("appearance", "bar");
    \u0275\u0275advance(5);
    \u0275\u0275property("svgIcon", "heroicons_outline:chat-bubble-left-right");
    \u0275\u0275advance(3);
    \u0275\u0275conditional(true ? 20 : -1);
    \u0275\u0275advance(3);
    \u0275\u0275textInterpolate1("Fuse \xA9 ", ctx.currentYear, "");
  }
}, dependencies: [
  FuseLoadingBarComponent,
  MatButtonModule,
  MatIconButton,
  MatIconModule,
  MatIcon,
  LanguagesComponent,
  FuseFullscreenComponent,
  SearchComponent,
  ShortcutsComponent,
  MessagesComponent,
  NotificationsComponent,
  UserComponent,
  RouterOutlet,
  QuickChatComponent,
  FuseVerticalNavigationComponent
], encapsulation: 2 });
var CompactLayoutComponent = _CompactLayoutComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && \u0275setClassDebugInfo(CompactLayoutComponent, { className: "CompactLayoutComponent", filePath: "src\\app\\layout\\layouts\\vertical\\compact\\compact.component.ts", lineNumber: 44 });
})();

// src/app/layout/layouts/vertical/dense/dense.component.ts
function DenseLayoutComponent_Conditional_23_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "router-outlet");
  }
}
var _DenseLayoutComponent = class _DenseLayoutComponent {
  /**
   * Constructor
   */
  constructor(_activatedRoute, _router, _navigationService, _fuseMediaWatcherService, _fuseNavigationService) {
    this._activatedRoute = _activatedRoute;
    this._router = _router;
    this._navigationService = _navigationService;
    this._fuseMediaWatcherService = _fuseMediaWatcherService;
    this._fuseNavigationService = _fuseNavigationService;
    this.navigationAppearance = "dense";
    this._unsubscribeAll = new Subject();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Accessors
  // -----------------------------------------------------------------------------------------------------
  /**
   * Getter for current year
   */
  get currentYear() {
    return (/* @__PURE__ */ new Date()).getFullYear();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Lifecycle hooks
  // -----------------------------------------------------------------------------------------------------
  /**
   * On init
   */
  ngOnInit() {
    this._navigationService.navigation$.pipe(takeUntil(this._unsubscribeAll)).subscribe((navigation) => {
      this.navigation = navigation;
    });
    this._fuseMediaWatcherService.onMediaChange$.pipe(takeUntil(this._unsubscribeAll)).subscribe(({ matchingAliases }) => {
      this.isScreenSmall = !matchingAliases.includes("md");
      this.navigationAppearance = this.isScreenSmall ? "default" : "dense";
    });
  }
  /**
   * On destroy
   */
  ngOnDestroy() {
    this._unsubscribeAll.next(null);
    this._unsubscribeAll.complete();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Toggle navigation
   *
   * @param name
   */
  toggleNavigation(name) {
    const navigation = this._fuseNavigationService.getComponent(name);
    if (navigation) {
      navigation.toggle();
    }
  }
  /**
   * Toggle the navigation appearance
   */
  toggleNavigationAppearance() {
    this.navigationAppearance = this.navigationAppearance === "default" ? "dense" : "default";
  }
};
_DenseLayoutComponent.\u0275fac = function DenseLayoutComponent_Factory(t) {
  return new (t || _DenseLayoutComponent)(\u0275\u0275directiveInject(ActivatedRoute), \u0275\u0275directiveInject(Router), \u0275\u0275directiveInject(NavigationService), \u0275\u0275directiveInject(FuseMediaWatcherService), \u0275\u0275directiveInject(FuseNavigationService));
};
_DenseLayoutComponent.\u0275cmp = /* @__PURE__ */ \u0275\u0275defineComponent({ type: _DenseLayoutComponent, selectors: [["dense-layout"]], standalone: true, features: [\u0275\u0275StandaloneFeature], decls: 29, vars: 11, consts: [["quickChat", "quickChat"], [1, "dark", "bg-gray-900", "print:hidden", 3, "appearance", "mode", "name", "navigation", "opened"], ["fuseVerticalNavigationContentHeader", ""], [1, "flex", "h-20", "items-center", "justify-center"], ["src", "images/logo/logo.svg", "alt", "Logo image", 1, "w-8"], [1, "flex", "w-full", "min-w-0", "flex-auto", "flex-col"], [1, "bg-card", "relative", "z-49", "flex", "h-16", "w-full", "flex-0", "items-center", "px-4", "shadow", "dark:border-b", "dark:bg-transparent", "dark:shadow-none", "md:px-6", "print:hidden"], [1, "flex", "items-center", "space-x-2", "pr-2"], ["mat-icon-button", "", 3, "click"], [3, "svgIcon"], ["mat-icon-button", "", 1, "hidden", "md:inline-flex", 3, "click"], [1, "ml-auto", "flex", "items-center", "space-x-0.5", "pl-2", "sm:space-x-2"], [1, "hidden", "md:block"], [3, "appearance"], ["mat-icon-button", "", 1, "lg:hidden", 3, "click"], [1, "flex", "flex-auto", "flex-col"], [1, "bg-card", "relative", "z-49", "flex", "h-14", "w-full", "flex-0", "items-center", "justify-start", "border-t", "px-4", "dark:bg-transparent", "md:px-6", "print:hidden"], [1, "text-secondary", "font-medium"]], template: function DenseLayoutComponent_Template(rf, ctx) {
  if (rf & 1) {
    const _r1 = \u0275\u0275getCurrentView();
    \u0275\u0275element(0, "fuse-loading-bar");
    \u0275\u0275elementStart(1, "fuse-vertical-navigation", 1);
    \u0275\u0275elementContainerStart(2, 2);
    \u0275\u0275elementStart(3, "div", 3);
    \u0275\u0275element(4, "img", 4);
    \u0275\u0275elementEnd();
    \u0275\u0275elementContainerEnd();
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(5, "div", 5)(6, "div", 6)(7, "div", 7)(8, "button", 8);
    \u0275\u0275listener("click", function DenseLayoutComponent_Template_button_click_8_listener() {
      \u0275\u0275restoreView(_r1);
      return \u0275\u0275resetView(ctx.toggleNavigation("mainNavigation"));
    });
    \u0275\u0275element(9, "mat-icon", 9);
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(10, "button", 10);
    \u0275\u0275listener("click", function DenseLayoutComponent_Template_button_click_10_listener() {
      \u0275\u0275restoreView(_r1);
      return \u0275\u0275resetView(ctx.toggleNavigationAppearance());
    });
    \u0275\u0275element(11, "mat-icon", 9);
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(12, "div", 11);
    \u0275\u0275element(13, "languages")(14, "fuse-fullscreen", 12)(15, "search", 13)(16, "shortcuts")(17, "messages")(18, "notifications");
    \u0275\u0275elementStart(19, "button", 14);
    \u0275\u0275listener("click", function DenseLayoutComponent_Template_button_click_19_listener() {
      \u0275\u0275restoreView(_r1);
      const quickChat_r2 = \u0275\u0275reference(28);
      return \u0275\u0275resetView(quickChat_r2.toggle());
    });
    \u0275\u0275element(20, "mat-icon", 9);
    \u0275\u0275elementEnd();
    \u0275\u0275element(21, "user");
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(22, "div", 15);
    \u0275\u0275template(23, DenseLayoutComponent_Conditional_23_Template, 1, 0, "router-outlet");
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(24, "div", 16)(25, "span", 17);
    \u0275\u0275text(26);
    \u0275\u0275elementEnd()()();
    \u0275\u0275element(27, "quick-chat", null, 0);
  }
  if (rf & 2) {
    \u0275\u0275advance();
    \u0275\u0275property("appearance", ctx.navigationAppearance)("mode", ctx.isScreenSmall ? "over" : "side")("name", "mainNavigation")("navigation", ctx.navigation.default)("opened", !ctx.isScreenSmall);
    \u0275\u0275advance(8);
    \u0275\u0275property("svgIcon", "heroicons_outline:bars-3");
    \u0275\u0275advance(2);
    \u0275\u0275property("svgIcon", "heroicons_outline:arrows-right-left");
    \u0275\u0275advance(4);
    \u0275\u0275property("appearance", "bar");
    \u0275\u0275advance(5);
    \u0275\u0275property("svgIcon", "heroicons_outline:chat-bubble-left-right");
    \u0275\u0275advance(3);
    \u0275\u0275conditional(true ? 23 : -1);
    \u0275\u0275advance(3);
    \u0275\u0275textInterpolate1("Fuse \xA9 ", ctx.currentYear, "");
  }
}, dependencies: [
  FuseLoadingBarComponent,
  FuseVerticalNavigationComponent,
  MatButtonModule,
  MatIconButton,
  MatIconModule,
  MatIcon,
  LanguagesComponent,
  FuseFullscreenComponent,
  SearchComponent,
  ShortcutsComponent,
  MessagesComponent,
  NotificationsComponent,
  UserComponent,
  RouterOutlet,
  QuickChatComponent
], encapsulation: 2 });
var DenseLayoutComponent = _DenseLayoutComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && \u0275setClassDebugInfo(DenseLayoutComponent, { className: "DenseLayoutComponent", filePath: "src\\app\\layout\\layouts\\vertical\\dense\\dense.component.ts", lineNumber: 44 });
})();

// src/app/layout/layouts/vertical/futuristic/futuristic.component.ts
function FuturisticLayoutComponent_Conditional_27_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "router-outlet");
  }
}
var _FuturisticLayoutComponent = class _FuturisticLayoutComponent {
  /**
   * Constructor
   */
  constructor(_activatedRoute, _router, _navigationService, _userService, _fuseMediaWatcherService, _fuseNavigationService) {
    this._activatedRoute = _activatedRoute;
    this._router = _router;
    this._navigationService = _navigationService;
    this._userService = _userService;
    this._fuseMediaWatcherService = _fuseMediaWatcherService;
    this._fuseNavigationService = _fuseNavigationService;
    this._unsubscribeAll = new Subject();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Accessors
  // -----------------------------------------------------------------------------------------------------
  /**
   * Getter for current year
   */
  get currentYear() {
    return (/* @__PURE__ */ new Date()).getFullYear();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Lifecycle hooks
  // -----------------------------------------------------------------------------------------------------
  /**
   * On init
   */
  ngOnInit() {
    this._navigationService.navigation$.pipe(takeUntil(this._unsubscribeAll)).subscribe((navigation) => {
      this.navigation = navigation;
    });
    this._userService.user$.pipe(takeUntil(this._unsubscribeAll)).subscribe((user2) => {
      this.user = user2;
    });
    this._fuseMediaWatcherService.onMediaChange$.pipe(takeUntil(this._unsubscribeAll)).subscribe(({ matchingAliases }) => {
      this.isScreenSmall = !matchingAliases.includes("md");
    });
  }
  /**
   * On destroy
   */
  ngOnDestroy() {
    this._unsubscribeAll.next(null);
    this._unsubscribeAll.complete();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Toggle navigation
   *
   * @param name
   */
  toggleNavigation(name) {
    const navigation = this._fuseNavigationService.getComponent(name);
    if (navigation) {
      navigation.toggle();
    }
  }
};
_FuturisticLayoutComponent.\u0275fac = function FuturisticLayoutComponent_Factory(t) {
  return new (t || _FuturisticLayoutComponent)(\u0275\u0275directiveInject(ActivatedRoute), \u0275\u0275directiveInject(Router), \u0275\u0275directiveInject(NavigationService), \u0275\u0275directiveInject(UserService), \u0275\u0275directiveInject(FuseMediaWatcherService), \u0275\u0275directiveInject(FuseNavigationService));
};
_FuturisticLayoutComponent.\u0275cmp = /* @__PURE__ */ \u0275\u0275defineComponent({ type: _FuturisticLayoutComponent, selectors: [["futuristic-layout"]], standalone: true, features: [\u0275\u0275StandaloneFeature], decls: 33, vars: 10, consts: [["quickChat", "quickChat"], [1, "dark", "bg-indigo-800", "text-white", "print:hidden", 3, "mode", "name", "navigation", "opened"], ["fuseVerticalNavigationHeader", ""], [1, "flex", "h-20", "items-center", "p-6", "pb-0"], ["src", "images/logo/logo-text-on-dark.svg", 1, "w-30"], ["fuseVerticalNavigationFooter", ""], [1, "flex", "w-full", "items-center", "border-t", "px-6", "py-8"], [1, "ml-4", "flex", "w-full", "flex-col", "overflow-hidden"], [1, "w-full", "overflow-hidden", "text-ellipsis", "whitespace-nowrap", "leading-normal", "text-current", "opacity-80"], [1, "mt-0.5", "w-full", "overflow-hidden", "text-ellipsis", "whitespace-nowrap", "text-sm", "leading-normal", "text-current", "opacity-50"], [1, "flex", "w-full", "min-w-0", "flex-auto", "flex-col"], [1, "bg-card", "relative", "z-49", "flex", "h-16", "w-full", "flex-0", "items-center", "px-4", "shadow", "dark:border-b", "dark:bg-transparent", "dark:shadow-none", "md:px-6", "print:hidden"], ["mat-icon-button", "", 1, "mr-2", 3, "click"], [3, "svgIcon"], [1, "ml-auto", "flex", "items-center", "space-x-0.5", "pl-2", "sm:space-x-2"], [1, "hidden", "md:block"], [3, "appearance"], ["mat-icon-button", "", 1, "lg:hidden", 3, "click"], [1, "flex", "flex-auto", "flex-col"], [1, "bg-card", "relative", "z-49", "flex", "h-14", "w-full", "flex-0", "items-center", "justify-start", "border-t", "px-4", "dark:bg-transparent", "md:px-6", "print:hidden"], [1, "text-secondary", "font-medium"]], template: function FuturisticLayoutComponent_Template(rf, ctx) {
  if (rf & 1) {
    const _r1 = \u0275\u0275getCurrentView();
    \u0275\u0275element(0, "fuse-loading-bar");
    \u0275\u0275elementStart(1, "fuse-vertical-navigation", 1);
    \u0275\u0275elementContainerStart(2, 2);
    \u0275\u0275elementStart(3, "div", 3);
    \u0275\u0275element(4, "img", 4);
    \u0275\u0275elementEnd();
    \u0275\u0275elementContainerEnd();
    \u0275\u0275elementContainerStart(5, 5);
    \u0275\u0275elementStart(6, "div", 6);
    \u0275\u0275element(7, "user");
    \u0275\u0275elementStart(8, "div", 7)(9, "div", 8);
    \u0275\u0275text(10);
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(11, "div", 9);
    \u0275\u0275text(12, " brian.hughes@company.com ");
    \u0275\u0275elementEnd()()();
    \u0275\u0275elementContainerEnd();
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(13, "div", 10)(14, "div", 11)(15, "button", 12);
    \u0275\u0275listener("click", function FuturisticLayoutComponent_Template_button_click_15_listener() {
      \u0275\u0275restoreView(_r1);
      return \u0275\u0275resetView(ctx.toggleNavigation("mainNavigation"));
    });
    \u0275\u0275element(16, "mat-icon", 13);
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(17, "div", 14);
    \u0275\u0275element(18, "languages")(19, "fuse-fullscreen", 15)(20, "search", 16)(21, "shortcuts")(22, "messages")(23, "notifications");
    \u0275\u0275elementStart(24, "button", 17);
    \u0275\u0275listener("click", function FuturisticLayoutComponent_Template_button_click_24_listener() {
      \u0275\u0275restoreView(_r1);
      const quickChat_r2 = \u0275\u0275reference(32);
      return \u0275\u0275resetView(quickChat_r2.toggle());
    });
    \u0275\u0275element(25, "mat-icon", 13);
    \u0275\u0275elementEnd()()();
    \u0275\u0275elementStart(26, "div", 18);
    \u0275\u0275template(27, FuturisticLayoutComponent_Conditional_27_Template, 1, 0, "router-outlet");
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(28, "div", 19)(29, "span", 20);
    \u0275\u0275text(30);
    \u0275\u0275elementEnd()()();
    \u0275\u0275element(31, "quick-chat", null, 0);
  }
  if (rf & 2) {
    \u0275\u0275advance();
    \u0275\u0275property("mode", ctx.isScreenSmall ? "over" : "side")("name", "mainNavigation")("navigation", ctx.navigation.futuristic)("opened", !ctx.isScreenSmall);
    \u0275\u0275advance(9);
    \u0275\u0275textInterpolate1(" ", ctx.user.name, " ");
    \u0275\u0275advance(6);
    \u0275\u0275property("svgIcon", "heroicons_outline:bars-3");
    \u0275\u0275advance(4);
    \u0275\u0275property("appearance", "bar");
    \u0275\u0275advance(5);
    \u0275\u0275property("svgIcon", "heroicons_outline:chat-bubble-left-right");
    \u0275\u0275advance(2);
    \u0275\u0275conditional(true ? 27 : -1);
    \u0275\u0275advance(3);
    \u0275\u0275textInterpolate1("Fuse \xA9 ", ctx.currentYear, "");
  }
}, dependencies: [
  FuseLoadingBarComponent,
  FuseVerticalNavigationComponent,
  UserComponent,
  MatButtonModule,
  MatIconButton,
  MatIconModule,
  MatIcon,
  LanguagesComponent,
  FuseFullscreenComponent,
  SearchComponent,
  ShortcutsComponent,
  MessagesComponent,
  NotificationsComponent,
  RouterOutlet,
  QuickChatComponent
], encapsulation: 2 });
var FuturisticLayoutComponent = _FuturisticLayoutComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && \u0275setClassDebugInfo(FuturisticLayoutComponent, { className: "FuturisticLayoutComponent", filePath: "src\\app\\layout\\layouts\\vertical\\futuristic\\futuristic.component.ts", lineNumber: 46 });
})();

// src/app/layout/layouts/vertical/thin/thin.component.ts
function ThinLayoutComponent_Conditional_20_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "router-outlet");
  }
}
var _ThinLayoutComponent = class _ThinLayoutComponent {
  /**
   * Constructor
   */
  constructor(_activatedRoute, _router, _navigationService, _fuseMediaWatcherService, _fuseNavigationService) {
    this._activatedRoute = _activatedRoute;
    this._router = _router;
    this._navigationService = _navigationService;
    this._fuseMediaWatcherService = _fuseMediaWatcherService;
    this._fuseNavigationService = _fuseNavigationService;
    this._unsubscribeAll = new Subject();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Accessors
  // -----------------------------------------------------------------------------------------------------
  /**
   * Getter for current year
   */
  get currentYear() {
    return (/* @__PURE__ */ new Date()).getFullYear();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Lifecycle hooks
  // -----------------------------------------------------------------------------------------------------
  /**
   * On init
   */
  ngOnInit() {
    this._navigationService.navigation$.pipe(takeUntil(this._unsubscribeAll)).subscribe((navigation) => {
      this.navigation = navigation;
    });
    this._fuseMediaWatcherService.onMediaChange$.pipe(takeUntil(this._unsubscribeAll)).subscribe(({ matchingAliases }) => {
      this.isScreenSmall = !matchingAliases.includes("md");
    });
  }
  /**
   * On destroy
   */
  ngOnDestroy() {
    this._unsubscribeAll.next(null);
    this._unsubscribeAll.complete();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Toggle navigation
   *
   * @param name
   */
  toggleNavigation(name) {
    const navigation = this._fuseNavigationService.getComponent(name);
    if (navigation) {
      navigation.toggle();
    }
  }
};
_ThinLayoutComponent.\u0275fac = function ThinLayoutComponent_Factory(t) {
  return new (t || _ThinLayoutComponent)(\u0275\u0275directiveInject(ActivatedRoute), \u0275\u0275directiveInject(Router), \u0275\u0275directiveInject(NavigationService), \u0275\u0275directiveInject(FuseMediaWatcherService), \u0275\u0275directiveInject(FuseNavigationService));
};
_ThinLayoutComponent.\u0275cmp = /* @__PURE__ */ \u0275\u0275defineComponent({ type: _ThinLayoutComponent, selectors: [["thin-layout"]], standalone: true, features: [\u0275\u0275StandaloneFeature], decls: 26, vars: 10, consts: [["quickChat", "quickChat"], [1, "bg-card", "dark:bg-gray-900", "print:hidden", 3, "appearance", "mode", "name", "navigation", "opened"], ["fuseVerticalNavigationContentHeader", ""], [1, "flex", "h-20", "items-center", "justify-center"], ["src", "images/logo/logo.svg", "alt", "Logo image", 1, "w-8"], [1, "flex", "w-full", "min-w-0", "flex-auto", "flex-col"], [1, "bg-card", "relative", "z-49", "flex", "h-16", "w-full", "flex-0", "items-center", "px-4", "shadow", "dark:border-b", "dark:bg-transparent", "dark:shadow-none", "md:px-6", "print:hidden"], ["mat-icon-button", "", 1, "mr-2", 3, "click"], [3, "svgIcon"], [1, "ml-auto", "flex", "items-center", "space-x-0.5", "pl-2", "sm:space-x-2"], [1, "hidden", "md:block"], [3, "appearance"], ["mat-icon-button", "", 1, "lg:hidden", 3, "click"], [1, "flex", "flex-auto", "flex-col"], [1, "bg-card", "relative", "z-49", "flex", "h-14", "w-full", "flex-0", "items-center", "justify-start", "border-t", "px-4", "dark:bg-transparent", "md:px-6", "print:hidden"], [1, "text-secondary", "font-medium"]], template: function ThinLayoutComponent_Template(rf, ctx) {
  if (rf & 1) {
    const _r1 = \u0275\u0275getCurrentView();
    \u0275\u0275element(0, "fuse-loading-bar");
    \u0275\u0275elementStart(1, "fuse-vertical-navigation", 1);
    \u0275\u0275elementContainerStart(2, 2);
    \u0275\u0275elementStart(3, "div", 3);
    \u0275\u0275element(4, "img", 4);
    \u0275\u0275elementEnd();
    \u0275\u0275elementContainerEnd();
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(5, "div", 5)(6, "div", 6)(7, "button", 7);
    \u0275\u0275listener("click", function ThinLayoutComponent_Template_button_click_7_listener() {
      \u0275\u0275restoreView(_r1);
      return \u0275\u0275resetView(ctx.toggleNavigation("mainNavigation"));
    });
    \u0275\u0275element(8, "mat-icon", 8);
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(9, "div", 9);
    \u0275\u0275element(10, "languages")(11, "fuse-fullscreen", 10)(12, "search", 11)(13, "shortcuts")(14, "messages")(15, "notifications");
    \u0275\u0275elementStart(16, "button", 12);
    \u0275\u0275listener("click", function ThinLayoutComponent_Template_button_click_16_listener() {
      \u0275\u0275restoreView(_r1);
      const quickChat_r2 = \u0275\u0275reference(25);
      return \u0275\u0275resetView(quickChat_r2.toggle());
    });
    \u0275\u0275element(17, "mat-icon", 8);
    \u0275\u0275elementEnd();
    \u0275\u0275element(18, "user");
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(19, "div", 13);
    \u0275\u0275template(20, ThinLayoutComponent_Conditional_20_Template, 1, 0, "router-outlet");
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(21, "div", 14)(22, "span", 15);
    \u0275\u0275text(23);
    \u0275\u0275elementEnd()()();
    \u0275\u0275element(24, "quick-chat", null, 0);
  }
  if (rf & 2) {
    \u0275\u0275advance();
    \u0275\u0275property("appearance", "thin")("mode", ctx.isScreenSmall ? "over" : "side")("name", "mainNavigation")("navigation", ctx.navigation.compact)("opened", !ctx.isScreenSmall);
    \u0275\u0275advance(7);
    \u0275\u0275property("svgIcon", "heroicons_outline:bars-3");
    \u0275\u0275advance(4);
    \u0275\u0275property("appearance", "bar");
    \u0275\u0275advance(5);
    \u0275\u0275property("svgIcon", "heroicons_outline:chat-bubble-left-right");
    \u0275\u0275advance(3);
    \u0275\u0275conditional(true ? 20 : -1);
    \u0275\u0275advance(3);
    \u0275\u0275textInterpolate1("Fuse \xA9 ", ctx.currentYear, "");
  }
}, dependencies: [
  FuseLoadingBarComponent,
  FuseVerticalNavigationComponent,
  MatButtonModule,
  MatIconButton,
  MatIconModule,
  MatIcon,
  LanguagesComponent,
  FuseFullscreenComponent,
  SearchComponent,
  ShortcutsComponent,
  MessagesComponent,
  NotificationsComponent,
  UserComponent,
  RouterOutlet,
  QuickChatComponent
], encapsulation: 2 });
var ThinLayoutComponent = _ThinLayoutComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && \u0275setClassDebugInfo(ThinLayoutComponent, { className: "ThinLayoutComponent", filePath: "src\\app\\layout\\layouts\\vertical\\thin\\thin.component.ts", lineNumber: 44 });
})();

// src/app/layout/layout.component.ts
function LayoutComponent_Conditional_0_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "empty-layout");
  }
}
function LayoutComponent_Conditional_1_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "centered-layout");
  }
}
function LayoutComponent_Conditional_2_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "enterprise-layout");
  }
}
function LayoutComponent_Conditional_3_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "material-layout");
  }
}
function LayoutComponent_Conditional_4_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "modern-layout");
  }
}
function LayoutComponent_Conditional_5_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "classic-layout");
  }
}
function LayoutComponent_Conditional_6_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "classy-layout");
  }
}
function LayoutComponent_Conditional_7_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "compact-layout");
  }
}
function LayoutComponent_Conditional_8_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "dense-layout");
  }
}
function LayoutComponent_Conditional_9_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "futuristic-layout");
  }
}
function LayoutComponent_Conditional_10_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275element(0, "thin-layout");
  }
}
var _LayoutComponent = class _LayoutComponent {
  /**
   * Constructor
   */
  constructor(_activatedRoute, _document, _renderer2, _router, _fuseConfigService, _fuseMediaWatcherService, _fusePlatformService) {
    this._activatedRoute = _activatedRoute;
    this._document = _document;
    this._renderer2 = _renderer2;
    this._router = _router;
    this._fuseConfigService = _fuseConfigService;
    this._fuseMediaWatcherService = _fuseMediaWatcherService;
    this._fusePlatformService = _fusePlatformService;
    this._unsubscribeAll = new Subject();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Lifecycle hooks
  // -----------------------------------------------------------------------------------------------------
  /**
   * On init
   */
  ngOnInit() {
    combineLatest([
      this._fuseConfigService.config$,
      this._fuseMediaWatcherService.onMediaQueryChange$([
        "(prefers-color-scheme: dark)",
        "(prefers-color-scheme: light)"
      ])
    ]).pipe(takeUntil(this._unsubscribeAll), map(([config, mql]) => {
      const options = {
        scheme: config.scheme,
        theme: config.theme
      };
      if (config.scheme === "auto") {
        options.scheme = mql.breakpoints["(prefers-color-scheme: dark)"] ? "dark" : "light";
      }
      return options;
    })).subscribe((options) => {
      this.scheme = options.scheme;
      this.theme = options.theme;
      this._updateScheme();
      this._updateTheme();
    });
    this._fuseConfigService.config$.pipe(takeUntil(this._unsubscribeAll)).subscribe((config) => {
      this.config = config;
      this._updateLayout();
    });
    this._router.events.pipe(filter((event) => event instanceof NavigationEnd), takeUntil(this._unsubscribeAll)).subscribe(() => {
      this._updateLayout();
    });
    this._renderer2.setAttribute(this._document.querySelector("[ng-version]"), "fuse-version", FUSE_VERSION);
    this._renderer2.addClass(this._document.body, this._fusePlatformService.osName);
  }
  /**
   * On destroy
   */
  ngOnDestroy() {
    this._unsubscribeAll.next(null);
    this._unsubscribeAll.complete();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Private methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Update the selected layout
   */
  _updateLayout() {
    let route = this._activatedRoute;
    while (route.firstChild) {
      route = route.firstChild;
    }
    this.layout = this.config.layout;
    const layoutFromQueryParam = route.snapshot.queryParamMap.get("layout");
    if (layoutFromQueryParam) {
      this.layout = layoutFromQueryParam;
      if (this.config) {
        this.config.layout = layoutFromQueryParam;
      }
    }
    const paths = route.pathFromRoot;
    paths.forEach((path) => {
      if (path.routeConfig && path.routeConfig.data && path.routeConfig.data.layout) {
        this.layout = path.routeConfig.data.layout;
      }
    });
  }
  /**
   * Update the selected scheme
   *
   * @private
   */
  _updateScheme() {
    this._document.body.classList.remove("light", "dark");
    this._document.body.classList.add(this.scheme);
  }
  /**
   * Update the selected theme
   *
   * @private
   */
  _updateTheme() {
    this._document.body.classList.forEach((className) => {
      if (className.startsWith("theme-")) {
        this._document.body.classList.remove(className, className.split("-")[1]);
      }
    });
    this._document.body.classList.add(this.theme);
  }
};
_LayoutComponent.\u0275fac = function LayoutComponent_Factory(t) {
  return new (t || _LayoutComponent)(\u0275\u0275directiveInject(ActivatedRoute), \u0275\u0275directiveInject(DOCUMENT), \u0275\u0275directiveInject(Renderer2), \u0275\u0275directiveInject(Router), \u0275\u0275directiveInject(FuseConfigService), \u0275\u0275directiveInject(FuseMediaWatcherService), \u0275\u0275directiveInject(FusePlatformService));
};
_LayoutComponent.\u0275cmp = /* @__PURE__ */ \u0275\u0275defineComponent({ type: _LayoutComponent, selectors: [["layout"]], standalone: true, features: [\u0275\u0275StandaloneFeature], decls: 11, vars: 11, template: function LayoutComponent_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275template(0, LayoutComponent_Conditional_0_Template, 1, 0, "empty-layout")(1, LayoutComponent_Conditional_1_Template, 1, 0, "centered-layout")(2, LayoutComponent_Conditional_2_Template, 1, 0, "enterprise-layout")(3, LayoutComponent_Conditional_3_Template, 1, 0, "material-layout")(4, LayoutComponent_Conditional_4_Template, 1, 0, "modern-layout")(5, LayoutComponent_Conditional_5_Template, 1, 0, "classic-layout")(6, LayoutComponent_Conditional_6_Template, 1, 0, "classy-layout")(7, LayoutComponent_Conditional_7_Template, 1, 0, "compact-layout")(8, LayoutComponent_Conditional_8_Template, 1, 0, "dense-layout")(9, LayoutComponent_Conditional_9_Template, 1, 0, "futuristic-layout")(10, LayoutComponent_Conditional_10_Template, 1, 0, "thin-layout");
  }
  if (rf & 2) {
    \u0275\u0275conditional(ctx.layout === "empty" ? 0 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx.layout === "centered" ? 1 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx.layout === "enterprise" ? 2 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx.layout === "material" ? 3 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx.layout === "modern" ? 4 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx.layout === "classic" ? 5 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx.layout === "classy" ? 6 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx.layout === "compact" ? 7 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx.layout === "dense" ? 8 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx.layout === "futuristic" ? 9 : -1);
    \u0275\u0275advance();
    \u0275\u0275conditional(ctx.layout === "thin" ? 10 : -1);
  }
}, dependencies: [
  EmptyLayoutComponent,
  CenteredLayoutComponent,
  EnterpriseLayoutComponent,
  MaterialLayoutComponent,
  ModernLayoutComponent,
  ClassicLayoutComponent,
  ClassyLayoutComponent,
  CompactLayoutComponent,
  DenseLayoutComponent,
  FuturisticLayoutComponent,
  ThinLayoutComponent
], styles: ["/* src/app/layout/layout.component.scss */\nlayout {\n  display: flex;\n  flex: 1 1 auto;\n  width: 100%;\n  max-width: 100%;\n  min-width: 0;\n}\nlayout > * {\n  position: relative;\n  display: flex;\n  flex: 1 1 auto;\n  width: 100%;\n}\nlayout router-outlet + * {\n  position: relative;\n  display: flex;\n  flex: 1 1 auto;\n  width: 100%;\n}\n/*# sourceMappingURL=layout.component.css.map */\n"], encapsulation: 2 });
var LayoutComponent = _LayoutComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && \u0275setClassDebugInfo(LayoutComponent, { className: "LayoutComponent", filePath: "src\\app\\layout\\layout.component.ts", lineNumber: 50 });
})();

// src/app/modules/auth/confirmation-required/confirmation-required.component.ts
var _c015 = () => ["/sign-in"];
var _AuthConfirmationRequiredComponent = class _AuthConfirmationRequiredComponent {
  /**
   * Constructor
   */
  constructor() {
  }
};
_AuthConfirmationRequiredComponent.\u0275fac = function AuthConfirmationRequiredComponent_Factory(t) {
  return new (t || _AuthConfirmationRequiredComponent)();
};
_AuthConfirmationRequiredComponent.\u0275cmp = /* @__PURE__ */ \u0275\u0275defineComponent({ type: _AuthConfirmationRequiredComponent, selectors: [["auth-confirmation-required"]], standalone: true, features: [\u0275\u0275StandaloneFeature], decls: 30, vars: 2, consts: [[1, "h-full", "flex", "min-w-0", "flex-auto", "flex-col", "items-center", "sm:flex-row", "sm:justify-center", "md:items-start", "md:justify-start"], [1, "w-full", "px-4", "py-8", "sm:bg-card", "sm:w-auto", "sm:rounded-2xl", "sm:p-12", "sm:shadow", "md:flex", "md:h-full", "md:w-1/2", "md:items-center", "md:justify-end", "md:rounded-none", "md:p-16", "md:shadow-none"], [1, "mx-auto", "w-full", "max-w-80", "sm:mx-0", "sm:w-80"], [1, "w-50"], ["src", "images/logo/logo-azul.svg"], [1, "mt-8", "text-4xl", "font-extrabold", "leading-tight", "tracking-tight"], [1, "mt-4"], [1, "text-secondary", "mt-8", "text-md", "font-medium"], [1, "ml-1", "text-primary-500", "hover:underline", 3, "routerLink"], [1, "relative", "hidden", "h-full", "w-1/2", "flex-auto", "items-center", "justify-center", "overflow-hidden", "bg-gray-800", "p-16", "dark:border-l", "md:flex", "lg:px-28"], ["viewBox", "0 0 960 540", "width", "100%", "height", "100%", "preserveAspectRatio", "xMidYMax slice", "xmlns", "http://www.w3.org/2000/svg", 1, "absolute", "inset-0", "pointer-events-none"], ["fill", "none", "stroke", "currentColor", "stroke-width", "100", 1, "text-gray-700", "opacity-25"], ["r", "234", "cx", "196", "cy", "23"], ["r", "234", "cx", "790", "cy", "491"], ["viewBox", "0 0 220 192", "width", "220", "height", "192", "fill", "none", 1, "absolute", "-top-16", "-right-16", "text-gray-700"], ["id", "837c3e70-6c3a-44e6-8854-cc48c737b659", "x", "0", "y", "0", "width", "20", "height", "20", "patternUnits", "userSpaceOnUse"], ["x", "0", "y", "0", "width", "4", "height", "4", "fill", "currentColor"], ["width", "220", "height", "192", "fill", "url(#837c3e70-6c3a-44e6-8854-cc48c737b659)"], [1, "relative", "z-10", "w-full", "max-w-2xl"], [1, "text-7xl", "font-bold", "leading-none", "text-gray-100"], [1, "mt-6", "text-lg", "leading-6", "tracking-tight", "text-gray-400"]], template: function AuthConfirmationRequiredComponent_Template(rf, ctx) {
  if (rf & 1) {
    \u0275\u0275elementStart(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "div", 3);
    \u0275\u0275element(4, "img", 4);
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(5, "div", 5);
    \u0275\u0275text(6, " Acceso denegado ");
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(7, "div", 6);
    \u0275\u0275text(8, " No cuenta con permisos para ingresar a este modulo, favor comunicarse con el administrador del sistema. ");
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(9, "div", 7)(10, "span");
    \u0275\u0275text(11, "Regresar al");
    \u0275\u0275elementEnd();
    \u0275\u0275elementStart(12, "a", 8);
    \u0275\u0275text(13, "Inicio de sesi\xF3n ");
    \u0275\u0275elementEnd()()()();
    \u0275\u0275elementStart(14, "div", 9);
    \u0275\u0275namespaceSVG();
    \u0275\u0275elementStart(15, "svg", 10)(16, "g", 11);
    \u0275\u0275element(17, "circle", 12)(18, "circle", 13);
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(19, "svg", 14)(20, "defs")(21, "pattern", 15);
    \u0275\u0275element(22, "rect", 16);
    \u0275\u0275elementEnd()();
    \u0275\u0275element(23, "rect", 17);
    \u0275\u0275elementEnd();
    \u0275\u0275namespaceHTML();
    \u0275\u0275elementStart(24, "div", 18)(25, "div", 19)(26, "div");
    \u0275\u0275text(27, "CrediPlus");
    \u0275\u0275elementEnd()();
    \u0275\u0275elementStart(28, "div", 20);
    \u0275\u0275text(29, " Plataforma para gestionar pr\xE9stamos a colaboradores de manera eficiente y segura. Inicia Sesi\xF3n y accede las opciones que tenemos para ti. ");
    \u0275\u0275elementEnd()()()();
  }
  if (rf & 2) {
    \u0275\u0275advance(12);
    \u0275\u0275property("routerLink", \u0275\u0275pureFunction0(1, _c015));
  }
}, dependencies: [RouterLink], encapsulation: 2, data: { animation: fuseAnimations } });
var AuthConfirmationRequiredComponent = _AuthConfirmationRequiredComponent;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && \u0275setClassDebugInfo(AuthConfirmationRequiredComponent, { className: "AuthConfirmationRequiredComponent", filePath: "src\\app\\modules\\auth\\confirmation-required\\confirmation-required.component.ts", lineNumber: 13 });
})();

// src/app/app.routes.ts
var appRoutes = [
  // Redirect empty path to '/example'
  { path: "", pathMatch: "full", redirectTo: "pages" },
  // Redirect signed-in user to the '/example'
  //
  // After the user signs in, the sign-in page will redirect the user to the 'signed-in-redirect'
  // path. Below is another redirection for that path to redirect the user to the desired
  // location. This is a small convenience to keep all main routes together here on this file.
  { path: "signed-in-redirect", pathMatch: "full", redirectTo: "pages" },
  // Auth routes for guests
  {
    path: "",
    canActivate: [NoAuthGuard],
    canActivateChild: [NoAuthGuard],
    component: LayoutComponent,
    data: {
      layout: "empty"
    },
    children: [
      { path: "sign-in", loadChildren: () => import("./chunk-ULEIJURH.js") },
      { path: "sign-up", loadChildren: () => import("./chunk-XUPZZUR7.js") },
      { path: "forgot-password", loadChildren: () => import("./chunk-VDF5OQ6T.js") },
      { path: "reset-password", loadChildren: () => import("./chunk-XWHLYYRC.js") }
    ]
  },
  // Auth routes for authenticated users
  {
    path: "",
    canActivate: [AuthGuard],
    canActivateChild: [AuthGuard],
    component: LayoutComponent,
    data: {
      layout: "empty"
    },
    children: [
      { path: "sign-out", loadChildren: () => import("./chunk-MRF274KI.js") }
    ]
  },
  // Admin routes
  /* {
       path: '',
       canActivate: [AuthGuard],
       canActivateChild: [AuthGuard],
       component: LayoutComponent,
       resolve: {
           initialData: initialDataResolver
       },
       children: [
           {path: 'dashboard', loadChildren: () => import('app/pages/dashboard/dashboard.routes')},
       ]
   },*/
  {
    path: "pages",
    canActivate: [AuthGuard, RoleGuard],
    canActivateChild: [AuthGuard, RoleGuard],
    component: LayoutComponent,
    resolve: {
      initialData: initialDataResolver
    },
    data: {
      roles: ["Super Admin", "Aliado", "Desembolso", "Analista", "Auditor"],
      // Solo accesible para roles específicos
      tipoUsuario: ["EmprasaMaestra", "Empresa Aliada"]
      // Solo para TipoUsuario específico
    },
    children: [
      {
        path: "dashboard",
        loadChildren: () => import("./chunk-NBY4VUPX.js"),
        canActivate: [RoleGuard],
        data: {
          roles: ["legacy"]
        }
      },
      {
        path: "configuracion",
        loadChildren: () => import("./chunk-BV6FTZ5V.js"),
        canActivate: [RoleGuard],
        data: {
          roles: ["Super Admin", "Auditor", "Analista"]
        }
      },
      {
        path: "gestion-creditos",
        loadChildren: () => import("./chunk-GTBXROAS.js"),
        canActivate: [RoleGuard],
        data: {
          roles: ["Super Admin", "Analista", "Aliado", "Desembolso", "Auditor"]
        }
      },
      {
        path: "gestion-trabajadores",
        loadChildren: () => import("./chunk-HTB5E3Z5.js"),
        canActivate: [RoleGuard],
        data: {
          roles: ["Super Admin", "Analista", "Auditor"]
        }
      },
      {
        path: "gestion-cobros",
        loadChildren: () => import("./chunk-LMZ2EJAC.js"),
        canActivate: [RoleGuard],
        data: {
          roles: ["Super Admin", "Analista", "Auditor"]
        }
      },
      {
        path: "gestion-bancos",
        loadChildren: () => import("./chunk-FGVGH46M.js"),
        canActivate: [RoleGuard],
        data: {
          roles: ["Super Admin", "Auditor"]
        }
      },
      {
        path: "gestion-seguridad",
        loadChildren: () => import("./chunk-7DHRUYAN.js"),
        canActivate: [RoleGuard],
        data: {
          roles: ["Super Admin", "Auditor"]
        }
      },
      {
        path: "reportes",
        loadChildren: () => import("./chunk-RTNFQOEE.js"),
        canActivate: [RoleGuard],
        data: {
          roles: ["Super Admin", "Analista", "Cliente", "Aliado", "Trabajador", "Auditor"]
        }
      }
    ]
  },
  {
    path: "not-authorized",
    component: AuthConfirmationRequiredComponent
  }
];

// src/app/core/auth/auth.interceptor.ts
var authInterceptor = (req, next) => {
  const authService = inject(AuthService);
  const router = inject(Router);
  let newReq = req.clone();
  if (authService.accessToken && !AuthUtils.isTokenExpired(authService.accessToken)) {
    newReq = req.clone({
      headers: req.headers.set("Authorization", "Bearer " + authService.accessToken)
    });
  }
  return next(newReq).pipe(catchError((error) => {
    if (error instanceof HttpErrorResponse && error.status === 401) {
      return authService.signInUsingToken().pipe(switchMap((isAuthenticated) => {
        if (isAuthenticated) {
          newReq = req.clone({
            headers: req.headers.set("Authorization", "Bearer " + authService.accessToken)
          });
          return next(newReq);
        } else {
          authService.signOut();
          router.navigate(["/sign-in"]);
          return throwError(error);
        }
      }), catchError((refreshError) => {
        authService.signOut();
        router.navigate(["/sign-in"]);
        return throwError(refreshError);
      }));
    } else {
      return throwError(error);
    }
  }));
};

// src/app/core/auth/auth.provider.ts
var provideAuth = () => {
  return [
    provideHttpClient(withInterceptors([authInterceptor])),
    {
      provide: ENVIRONMENT_INITIALIZER,
      useValue: () => inject(AuthService),
      multi: true
    }
  ];
};

// src/app/core/icons/icons.service.ts
var _IconsService = class _IconsService {
  /**
   * Constructor
   */
  constructor() {
    const domSanitizer = inject(DomSanitizer);
    const matIconRegistry = inject(MatIconRegistry);
    matIconRegistry.addSvgIconSet(domSanitizer.bypassSecurityTrustResourceUrl("icons/material-twotone.svg"));
    matIconRegistry.addSvgIconSetInNamespace("mat_outline", domSanitizer.bypassSecurityTrustResourceUrl("icons/material-outline.svg"));
    matIconRegistry.addSvgIconSetInNamespace("mat_solid", domSanitizer.bypassSecurityTrustResourceUrl("icons/material-solid.svg"));
    matIconRegistry.addSvgIconSetInNamespace("feather", domSanitizer.bypassSecurityTrustResourceUrl("icons/feather.svg"));
    matIconRegistry.addSvgIconSetInNamespace("heroicons_outline", domSanitizer.bypassSecurityTrustResourceUrl("icons/heroicons-outline.svg"));
    matIconRegistry.addSvgIconSetInNamespace("heroicons_solid", domSanitizer.bypassSecurityTrustResourceUrl("icons/heroicons-solid.svg"));
    matIconRegistry.addSvgIconSetInNamespace("heroicons_mini", domSanitizer.bypassSecurityTrustResourceUrl("icons/heroicons-mini.svg"));
  }
};
_IconsService.\u0275fac = function IconsService_Factory(t) {
  return new (t || _IconsService)();
};
_IconsService.\u0275prov = /* @__PURE__ */ \u0275\u0275defineInjectable({ token: _IconsService, factory: _IconsService.\u0275fac, providedIn: "root" });
var IconsService = _IconsService;

// src/app/core/icons/icons.provider.ts
var provideIcons = () => {
  return [
    {
      provide: ENVIRONMENT_INITIALIZER,
      useValue: () => inject(IconsService),
      multi: true
    }
  ];
};

// src/app/mock-api/apps/academy/data.ts
var categories = [
  {
    id: "9a67dff7-3c38-4052-a335-0cef93438ff6",
    title: "Web",
    slug: "web"
  },
  {
    id: "a89672f5-e00d-4be4-9194-cb9d29f82165",
    title: "Firebase",
    slug: "firebase"
  },
  {
    id: "02f42092-bb23-4552-9ddb-cfdcc235d48f",
    title: "Cloud",
    slug: "cloud"
  },
  {
    id: "5648a630-979f-4403-8c41-fc9790dea8cd",
    title: "Android",
    slug: "android"
  }
];
var courses = [
  {
    id: "694e4e5f-f25f-470b-bd0e-26b1d4f64028",
    title: "Basics of Angular",
    slug: "basics-of-angular",
    description: "Introductory course for Angular and framework basics",
    category: "web",
    duration: 30,
    totalSteps: 11,
    updatedAt: "Jun 28, 2021",
    featured: true,
    progress: {
      currentStep: 3,
      completed: 2
    }
  },
  {
    id: "f924007a-2ee9-470b-a316-8d21ed78277f",
    title: "Basics of TypeScript",
    slug: "basics-of-typeScript",
    description: "Beginner course for Typescript and its basics",
    category: "web",
    duration: 60,
    totalSteps: 11,
    updatedAt: "Nov 01, 2021",
    featured: true,
    progress: {
      currentStep: 5,
      completed: 3
    }
  },
  {
    id: "0c06e980-abb5-4ba7-ab65-99a228cab36b",
    title: "Android N: Quick Settings",
    slug: "android-n-quick-settings",
    description: "Step by step guide for Android N: Quick Settings",
    category: "android",
    duration: 120,
    totalSteps: 11,
    updatedAt: "May 08, 2021",
    featured: false,
    progress: {
      currentStep: 10,
      completed: 1
    }
  },
  {
    id: "1b9a9acc-9a36-403e-a1e7-b11780179e38",
    title: "Build an App for the Google Assistant with Firebase",
    slug: "build-an-app-for-the-google-assistant-with-firebase",
    description: "Dive deep into Google Assistant apps using Firebase",
    category: "firebase",
    duration: 30,
    totalSteps: 11,
    updatedAt: "Jan 09, 2021",
    featured: false,
    progress: {
      currentStep: 4,
      completed: 3
    }
  },
  {
    id: "55eb415f-3f4e-4853-a22b-f0ae91331169",
    title: "Keep Sensitive Data Safe and Private",
    slug: "keep-sensitive-data-safe-and-private",
    description: "Learn how to keep your important data safe and private",
    category: "android",
    duration: 45,
    totalSteps: 11,
    updatedAt: "Jan 14, 2021",
    featured: false,
    progress: {
      currentStep: 6,
      completed: 0
    }
  },
  {
    id: "fad2ab23-1011-4028-9a54-e52179ac4a50",
    title: "Manage Your Pivotal Cloud Foundry App's Using Apigee Edge",
    slug: "manage-your-pivotal-cloud-foundry-apps-using-apigee-Edge",
    description: "Introductory course for Pivotal Cloud Foundry App",
    category: "cloud",
    duration: 90,
    totalSteps: 11,
    updatedAt: "Jun 24, 2021",
    featured: false,
    progress: {
      currentStep: 6,
      completed: 0
    }
  },
  {
    id: "c4bc107b-edc4-47a7-a7a8-4fb09732e794",
    title: "Build a PWA Using Workbox",
    slug: "build-a-pwa-using-workbox",
    description: "Step by step guide for building a PWA using Workbox",
    category: "web",
    duration: 120,
    totalSteps: 11,
    updatedAt: "Nov 19, 2021",
    featured: false,
    progress: {
      currentStep: 0,
      completed: 0
    }
  },
  {
    id: "1449f945-d032-460d-98e3-406565a22293",
    title: "Cloud Functions for Firebase",
    slug: "cloud-functions-for-firebase",
    description: "Beginners guide of Firebase Cloud Functions",
    category: "firebase",
    duration: 45,
    totalSteps: 11,
    updatedAt: "Jul 11, 2021",
    featured: false,
    progress: {
      currentStep: 3,
      completed: 1
    }
  },
  {
    id: "f05e08ab-f3e3-4597-a032-6a4b69816f24",
    title: "Building a gRPC Service with Java",
    slug: "building-a-grpc-service-with-java",
    description: "Learn more about building a gRPC Service with Java",
    category: "cloud",
    duration: 30,
    totalSteps: 11,
    updatedAt: "Mar 13, 2021",
    featured: false,
    progress: {
      currentStep: 0,
      completed: 1
    }
  },
  {
    id: "181728f4-87c8-45c5-b9cc-92265bcd2f4d",
    title: "Looking at Campaign Finance with BigQuery",
    slug: "looking-at-campaign-finance-with-bigquery",
    description: "Dive deep into BigQuery: Campaign Finance",
    category: "cloud",
    duration: 60,
    totalSteps: 11,
    updatedAt: "Nov 01, 2021",
    featured: false,
    progress: {
      currentStep: 0,
      completed: 0
    }
  },
  {
    id: "fcbfedbf-6187-4b3b-89d3-1a7cb4e11616",
    title: "Personalize Your iOS App with Firebase User Management",
    slug: "personalize-your-ios-app-with-firebase-user-management",
    description: "Dive deep into User Management on iOS apps using Firebase",
    category: "firebase",
    duration: 90,
    totalSteps: 11,
    updatedAt: "Aug 08, 2021",
    featured: false,
    progress: {
      currentStep: 0,
      completed: 0
    }
  },
  {
    id: "5213f6a1-1dd7-4b1d-b6e9-ffb7af534f28",
    title: "Customize Network Topology with Subnetworks",
    slug: "customize-network-topology-with-subnetworks",
    description: "Dive deep into Network Topology with Subnetworks",
    category: "web",
    duration: 45,
    totalSteps: 11,
    updatedAt: "May 12, 2021",
    featured: false,
    progress: {
      currentStep: 0,
      completed: 0
    }
  },
  {
    id: "02992ac9-d1a3-4167-b70e-8a1d5b5ba253",
    title: "Building Beautiful UIs with Flutter",
    slug: "building-beautiful-uis-with-flutter",
    description: "Dive deep into Flutter's hidden secrets for creating beautiful UIs",
    category: "web",
    duration: 90,
    totalSteps: 11,
    updatedAt: "Sep 18, 2021",
    featured: false,
    progress: {
      currentStep: 8,
      completed: 2
    }
  },
  {
    id: "2139512f-41fb-4a4a-841a-0b4ac034f9b4",
    title: "Firebase Android",
    slug: "firebase-android",
    description: "Beginners guide of Firebase for Android",
    category: "android",
    duration: 45,
    totalSteps: 11,
    updatedAt: "Apr 24, 2021",
    featured: false,
    progress: {
      currentStep: 0,
      completed: 0
    }
  },
  {
    id: "65e0a0e0-d8c0-4117-a3cb-eb74f8e28809",
    title: "Simulating a Thread Network Using OpenThread",
    slug: "simulating-a-thread-network-using-openthread",
    description: "Introductory course for OpenThread and Simulating a Thread Network",
    category: "web",
    duration: 45,
    totalSteps: 11,
    updatedAt: "Jun 05, 2021",
    featured: false,
    progress: {
      currentStep: 0,
      completed: 0
    }
  },
  {
    id: "c202ebc9-9be3-433a-9d38-7003b3ed7b7a",
    title: "Your First Progressive Web App",
    slug: "your-first-progressive-web-app",
    description: "Step by step guide for creating a PWA from scratch",
    category: "web",
    duration: 30,
    totalSteps: 11,
    updatedAt: "Oct 14, 2021",
    featured: false,
    progress: {
      currentStep: 0,
      completed: 0
    }
  },
  {
    id: "980ae7da-9f77-4e30-aa98-1b1ea594e775",
    title: "Launch Cloud Datalab",
    slug: "launch-cloud-datalab",
    description: "From start to finish: Launch Cloud Datalab",
    category: "cloud",
    duration: 60,
    totalSteps: 11,
    updatedAt: "Dec 16, 2021",
    featured: false,
    progress: {
      currentStep: 0,
      completed: 0
    }
  },
  {
    id: "c9748ea9-4117-492c-bdb2-55085b515978",
    title: "Cloud Firestore",
    slug: "cloud-firestore",
    description: "Step by step guide for setting up Cloud Firestore",
    category: "firebase",
    duration: 90,
    totalSteps: 11,
    updatedAt: "Apr 04, 2021",
    featured: false,
    progress: {
      currentStep: 2,
      completed: 0
    }
  }
];
var demoCourseContent = `
<p class="lead">
    Lorem ipsum dolor sit amet, consectetur adipisicing elit. Accusamus aperiam lab et fugiat id magnam minus nemo quam
    voluptatem. Culpa deleniti explica nisi quod soluta.
</p>
<p>
    Alias animi labque, deserunt distinctio eum excepturi fuga iure labore magni molestias mollitia natus, officia pofro
    quis sunt temporibus veritatis voluptatem, voluptatum. Aut blanditiis esse et illum maxim, obcaecati possimus
    voluptate! Accusamus <em>adipisci</em> amet aperiam, assumenda consequuntur fugiat inventore iusto magnam molestias
    natus necessitatibus, nulla pariatur.
</p>
<p>
    Amet distinctio enim itaque minima minus nesciunt recusandae soluta voluptatibus:
</p>
<blockquote>
    <p>
        Ad aliquid amet asperiores lab distinctio doloremque <code>eaque</code>, exercitationem explicabo, minus mollitia
        natus necessitatibus odio omnis pofro rem.
    </p>
</blockquote>
<p>
    Alias architecto asperiores, dignissimos illum ipsam ipsum itaque, natus necessitatibus officiis, perferendis quae
    sed ullam veniam vitae voluptas! Magni, nisi, quis! A <code>accusamus</code> animi commodi, consectetur distinctio
    eaque, eos excepturi illum laboriosam maiores nam natus nulla officiis perspiciatis rem <em>reprehenderit</em> sed
    tenetur veritatis.
</p>
<p>
    Consectetur <code>dicta enim</code> error eveniet expedita, facere in itaque labore <em>natus</em> quasi? Ad consectetur
    eligendi facilis magni quae quis, quo temporibus voluptas voluptate voluptatem!
</p>
<p>
    Adipisci alias animi <code>debitis</code> eos et impedit maiores, modi nam nobis officia optio perspiciatis, rerum.
    Accusantium esse nostrum odit quis quo:
</p>
<pre><code>h1 a {{'{'}}
    display: block;
    width: 300px;
    height: 80px;
{{'}'}}</code></pre>
<p>
    Accusantium aut autem, lab deleniti eaque fugiat fugit id ipsa iste molestiae,
    <a>necessitatibus nemo quasi</a>
    .
</p>
<hr>
<h2>
    Accusantium aspernatur autem enim
</h2>
<p>
    Blanditiis, fugit voluptate! Assumenda blanditiis consectetur, labque cupiditate ducimus eaque earum, fugiat illum
    ipsa, necessitatibus omnis quaerat reiciendis totam. Architecto, <strong>facere</strong> illum molestiae nihil nulla
    quibusdam quidem vel! Atque <em>blanditiis deserunt</em>.
</p>
<p>
    Debitis deserunt doloremque labore laboriosam magni minus odit:
</p>
<ol>
    <li>Asperiores dicta esse maiores nobis officiis.</li>
    <li>Accusamus aliquid debitis dolore illo ipsam molettiae possimus.</li>
    <li>Magnam mollitia pariatur perspiciatis quasi quidem tenetur voluptatem! Adipisci aspernatur assumenda dicta.</li>
</ol>
<p>
    Animi fugit incidunt iure magni maiores molestias.
</p>
<h3>
    Consequatur iusto soluta
</h3>
<p>
    Aliquid asperiores corporis \u2014 deserunt dolorum ducimus eius eligendi explicabo quaerat suscipit voluptas.
</p>
<p>
    Deserunt dolor eos et illum laborum magni molestiae mollitia:
</p>
<blockquote>
    <p>Autem beatae consectetur consequatur, facere, facilis fugiat id illo, impedit numquam optio quis sunt ducimus illo.</p>
</blockquote>
<p>
    Adipisci consequuntur doloribus facere in ipsam maxime molestias pofro quam:
</p>
<figure>
    <img
        src="images/pages/help-center/image-1.jpg"
        alt="">
    <figcaption>
        Accusamus blanditiis labque delectus esse et eum excepturi, impedit ipsam iste maiores minima mollitia, nihil obcaecati
        placeat quaerat qui quidem sint unde!
    </figcaption>
</figure>
<p>
    A beatae lab deleniti explicabo id inventore magni nisi omnis placeat praesentium quibusdam:
</p>
<ul>
    <li>Dolorem eaque laboriosam omnis praesentium.</li>
    <li>Atque debitis delectus distinctio doloremque.</li>
    <li>Fuga illo impedit minima mollitia neque obcaecati.</li>
</ul>
<p>
    Consequ eius eum excepturi explicabo.
</p>
<h2>
    Adipisicing elit atque impedit?
</h2>
<h3>
    Atque distinctio doloremque ea qui quo, repellendus.
</h3>
<p>
    Delectus deserunt explicabo facilis numquam quasi! Laboriosam, magni, quisquam. Aut, blanditiis commodi distinctio, facere fuga
    hic itaque iure labore laborum maxime nemo neque provident quos recusandae sequi veritatis illum inventore iure qui rerum sapiente.
</p>
<h3>
    Accusamus iusto sint aperiam consectetur \u2026
</h3>
<p>
    Aliquid assumenda ipsa nam odit pofro quaerat, quasi recusandae sint! Aut, esse explicabo facilis fugit illum iure magni
    necessitatibus odio quas.
</p>
<ul>
    <li>
        <p><strong>Dolore natus placeat rem atque dignissimos laboriosam.</strong></p>
        <p>
            Amet repudiandae voluptates architecto dignissimos repellendus voluptas dignissimos eveniet itaque maiores natus.
        </p>
        <p>
            Accusamus aliquam debitis delectus dolorem ducimus enim eos, exercitationem fugiat id iusto nostrum quae quos
            recusandae reiciendis rerum sequi temporibus veniam vero? Accusantium culpa, cupiditate ducimus eveniet id maiores modi
            mollitia nisi aliquid dolorum ducimus et illo in.
        </p>
    </li>
    <li>
        <p><strong>Ab amet deleniti dolor, et hic optio placeat.</strong></p>
        <p>
            Accusantium ad alias beatae, consequatur consequuntur eos error eveniet expedita fuga laborum libero maxime nulla pofro
            praesentium rem rerum saepe soluta ullam vero, voluptas? Architecto at debitis, doloribus harum iure libero natus odio
            optio soluta veritatis voluptate.
        </p>
    </li>
    <li>
        <p><strong>At aut consectetur nam necessitatibus neque nesciunt.</strong></p>
        <p>
            Aut dignissimos labore nobis nostrum optio! Dolor id minima velit voluptatibus. Aut consequuntur eum exercitationem
            fuga, harum id impedit molestiae natus neque numquam perspiciatis quam rem voluptatum.
        </p>
    </li>
</ul>
<p>
    Animi aperiam autem labque dolore enim ex expedita harum hic id impedit ipsa laborum modi mollitia non perspiciatis quae ratione.
</p>
<h2>
    Alias eos excepturi facilis fugit.
</h2>
<p>
    Alias asperiores, aspernatur corporis
    <a>delectus</a>
    est
    <a>facilis</a>
    inventore dolore
    ipsa nobis nostrum officia quia, veritatis vero! At dolore est nesciunt numquam quam. Ab animi <em>architecto</em> aut, dignissimos
    eos est eum explicabo.
</p>
<p>
    Adipisci autem consequuntur <code>labque cupiditate</code> dolor ducimus fuga neque nesciunt:
</p>
<pre><code>module.exports = {{'{'}}
    purge: [],
    theme: {{'{'}}
        extend: {{'{}'}},
    },
    variants: {{'{}'}},
    plugins: [],
{{'}'}}</code></pre>
<p>
    Aliquid aspernatur eius fugit hic iusto.
</p>
<h3>
    Dolorum ducimus expedita?
</h3>
<p>
    Culpa debitis explicabo maxime minus quaerat reprehenderit temporibus! Asperiores, cupiditate ducimus esse est expedita fuga hic
    ipsam necessitatibus placeat possimus? Amet animi aut consequuntur earum eveniet.
</p>
<ol>
    <li>
        <strong>Aspernatur at beatae corporis debitis.</strong>
        <ul>
            <li>
                Aperiam assumenda commodi lab dicta eius, \u201Cfugit ipsam\u201C itaque iure molestiae nihil numquam, officia omnis quia
                repellendus sapiente sed.
            </li>
            <li>
                Nulla odio quod saepe accusantium, adipisci autem blanditiis lab doloribus.
            </li>
            <li>
                Explicabo facilis iusto molestiae nisi nostrum obcaecati officia.
            </li>
        </ul>
    </li>
    <li>
        <strong>Nobis odio officiis optio quae quis quisquam quos rem.</strong>
        <ul>
            <li>Modi pariatur quod totam. Deserunt doloribus eveniet, expedita.</li>
            <li>Ad beatae dicta et fugit libero optio quaerat rem repellendus./</li>
            <li>Architecto atque consequuntur corporis id iste magni.</li>
        </ul>
    </li>
    <li>
        <strong>Deserunt non placeat unde veniam veritatis? Odio quod.</strong>
        <ul>
            <li>Inventore iure magni quod repellendus tempora. Magnam neque, quia. Adipisci amet.</li>
            <li>Consectetur adipisicing elit.</li>
            <li>labque eum expedita illo inventore iusto laboriosam nesciunt non, odio provident.</li>
        </ul>
    </li>
</ol>
<p>
    A aliquam architecto consequatur labque dicta doloremque <code>&lt;li&gt;</code> doloribus, ducimus earum, est <code>&lt;p&gt;</code>
    eveniet explicabo fuga fugit ipsum minima minus molestias nihil nisi non qui sunt vel voluptatibus? A dolorum illum nihil quidem.
</p>
<ul>
    <li>
        <p>
            <strong>Laboriosam nesciunt obcaecati optio qui.</strong>
        </p>
        <p>
            Doloremque magni molestias reprehenderit.
        </p>
        <ul>
            <li>Accusamus aperiam blanditiis <code>&lt;p&gt;</code> commodi</li>
            <li>Dolorum ea explicabo fugiat in ipsum</li>
        </ul>
    </li>
    <li>
        <p>
            <strong>Commodi dolor dolorem dolores eum expedita libero.</strong>
        </p>
        <p>
            Accusamus alias consectetur dolores et, excepturi fuga iusto possimus.
        </p>
        <ul>
            <li>
                <p>
                    Accusantium ad alias atque aut autem consequuntur deserunt dignissimos eaque iure <code>&lt;p&gt;</code> maxime.
                </p>
                <p>
                    Dolorum in nisi numquam omnis quam sapiente sit vero.
                </p>
            </li>
            <li>
                <p>
                    Adipisci lab in nisi odit soluta sunt vitae commodi excepturi.
                </p>
            </li>
        </ul>
    </li>
    <li>
        <p>
            Assumenda deserunt distinctio dolor iste mollitia nihil non?
        </p>
    </li>
</ul>
<p>
    Consectetur adipisicing elit dicta dolor iste.
</p>
<h2>
    Consectetur ea natus officia omnis reprehenderit.
</h2>
<p>
    Distinctio impedit quaerat sed! Accusamus
    <a>aliquam aspernatur enim expedita explicabo</a>
    . Libero molestiae
    odio quasi unde ut? Ab exercitationem id numquam odio quisquam!
</p>
<p>
    Explicabo facilis nemo quidem natus tempore:
</p>
<table class="table table-striped table-bordered">
    <thead>
        <tr>
            <th>Wrestler</th>
            <th>Origin</th>
            <th>Finisher</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>Bret \u201CThe Hitman\u201D Hart</td>
            <td>Calgary, AB</td>
            <td>Sharpshooter</td>
        </tr>
        <tr>
            <td>Stone Cold Steve Austin</td>
            <td>Austin, TX</td>
            <td>Stone Cold Stunner</td>
        </tr>
        <tr>
            <td>Randy Savage</td>
            <td>Sarasota, FL</td>
            <td>Elbow Drop</td>
        </tr>
        <tr>
            <td>Vader</td>
            <td>Boulder, CO</td>
            <td>Vader Bomb</td>
        </tr>
        <tr>
            <td>Razor Ramon</td>
            <td>Chuluota, FL</td>
            <td>Razor\u2019s Edge</td>
        </tr>
    </tbody>
</table>
<p>
    A aliquid autem lab doloremque, ea earum eum fuga fugit illo ipsa minus natus nisi <code>&lt;span&gt;</code> obcaecati pariatur
    perferendis pofro <code>suscipit tempore</code>.
</p>
<h3>
    Ad alias atque culpa <code>illum</code> earum optio
</h3>
<p>
    Architecto consequatur eveniet illo in iure laborum minus omnis quibusdam sequi temporibus? Ab aliquid <em>\u201Catque dolores molestiae
    nemo perferendis\u201D</em> reprehenderit saepe.
</p>
<p>
    Accusantium aliquid eligendi est fuga natus, <code>quos</code> vel? Adipisci aperiam asperiores aspernatur consectetur cupiditate
    <a><code>@distinctio/doloribus</code></a>
    et exercitationem expedita, facere facilis illum, impedit inventore
    ipsa iure iusto magnam, magni minus nesciunt non officia possimus quod reiciendis.
</p>
<h4>
    Cupiditate explicabo <code>hic</code> maiores
</h4>
<p>
    Aliquam amet consequuntur distinctio <code>ea</code> est <code>excepturi</code> facere illum maiores nisi nobis non odit officiis
    quisquam, similique tempora temporibus, tenetur ullam <code>voluptates</code> adipisci aperiam deleniti <code>doloremque</code>
    ducimus <code>eos</code>.
</p>
<p>
    Ducimus qui quo tempora. lab enim explicabo <code>hic</code> inventore qui soluta voluptates voluptatum? Asperiores consectetur
    delectus dolorem fugiat ipsa pariatur, quas <code>quos</code> repellendus <em>repudiandae</em> sunt aut blanditiis.
</p>
<h3>
    Asperiores aspernatur autem error praesentium quidem.
</h3>
<h4>
    Ad blanditiis commodi, doloribus id iste <code>repudiandae</code> vero vitae.
</h4>
<p>
    Atque consectetur lab debitis enim est et, facere fugit impedit, possimus quaerat quibusdam.
</p>
<p>
    Dolorem nihil placeat quibusdam veniam? Amet architecto at consequatur eligendi eveniet excepturi hic illo impedit in iste magni maxime
    modi nisi nulla odio placeat quidem, quos rem repellat similique suscipit voluptate voluptates nobis omnis quo repellendus.
</p>
<p>
    Assumenda, eum, minima! Autem consectetur fugiat iste sit! Nobis omnis quo repellendus.
</p>
`;
var demoCourseSteps = [
  {
    order: 0,
    title: "Introduction",
    subtitle: "Introducing the library and how it works",
    content: `<h2 class="text-2xl sm:text-3xl">Introduction</h1> ${demoCourseContent}`
  },
  {
    order: 1,
    title: "Get the sample code",
    subtitle: "Where to find the sample code and how to access it",
    content: `<h2 class="text-2xl sm:text-3xl">Get the sample code</h1> ${demoCourseContent}`
  },
  {
    order: 2,
    title: "Create a Firebase project and Set up your app",
    subtitle: "How to create a basic Firebase project and how to run it locally",
    content: `<h2 class="text-2xl sm:text-3xl">Create a Firebase project and Set up your app</h1> ${demoCourseContent}`
  },
  {
    order: 3,
    title: "Install the Firebase Command Line Interface",
    subtitle: "Setting up the Firebase CLI to access command line tools",
    content: `<h2 class="text-2xl sm:text-3xl">Install the Firebase Command Line Interface</h1> ${demoCourseContent}`
  },
  {
    order: 4,
    title: "Deploy and run the web app",
    subtitle: "How to build, push and run the project remotely",
    content: `<h2 class="text-2xl sm:text-3xl">Deploy and run the web app</h1> ${demoCourseContent}`
  },
  {
    order: 5,
    title: "The Functions Directory",
    subtitle: "Introducing the Functions and Functions Directory",
    content: `<h2 class="text-2xl sm:text-3xl">The Functions Directory</h1> ${demoCourseContent}`
  },
  {
    order: 6,
    title: "Import the Cloud Functions and Firebase Admin modules",
    subtitle: "Create your first Function and run it to administer your app",
    content: `<h2 class="text-2xl sm:text-3xl">Import the Cloud Functions and Firebase Admin modules</h1> ${demoCourseContent}`
  },
  {
    order: 7,
    title: "Welcome New Users",
    subtitle: "How to create a welcome message for the new users",
    content: `<h2 class="text-2xl sm:text-3xl">Welcome New Users</h1> ${demoCourseContent}`
  },
  {
    order: 8,
    title: "Images moderation",
    subtitle: "How to moderate images; crop, resize, optimize",
    content: `<h2 class="text-2xl sm:text-3xl">Images moderation</h1> ${demoCourseContent}`
  },
  {
    order: 9,
    title: "New Message Notifications",
    subtitle: "How to create and push a notification to a user",
    content: `<h2 class="text-2xl sm:text-3xl">New Message Notifications</h1> ${demoCourseContent}`
  },
  {
    order: 10,
    title: "Congratulations!",
    subtitle: "Nice work, you have created your first application",
    content: `<h2 class="text-2xl sm:text-3xl">Congratulations!</h1> ${demoCourseContent}`
  }
];

// src/app/mock-api/apps/academy/api.ts
var _AcademyMockApi = class _AcademyMockApi {
  /**
   * Constructor
   */
  constructor(_fuseMockApiService) {
    this._fuseMockApiService = _fuseMockApiService;
    this._categories = categories;
    this._courses = courses;
    this._demoCourseSteps = demoCourseSteps;
    this.registerHandlers();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Register Mock API handlers
   */
  registerHandlers() {
    this._fuseMockApiService.onGet("api/apps/academy/categories").reply(() => {
      const categories3 = cloneDeep_default(this._categories);
      categories3.sort((a, b) => a.title.localeCompare(b.title));
      return [200, categories3];
    });
    this._fuseMockApiService.onGet("api/apps/academy/courses").reply(() => {
      const courses2 = cloneDeep_default(this._courses);
      return [200, courses2];
    });
    this._fuseMockApiService.onGet("api/apps/academy/courses/course").reply(({ request }) => {
      const id = request.params.get("id");
      const courses2 = cloneDeep_default(this._courses);
      const steps = cloneDeep_default(this._demoCourseSteps);
      const course = courses2.find((item) => item.id === id);
      if (course) {
        course.steps = steps;
      }
      return [200, course];
    });
  }
};
_AcademyMockApi.\u0275fac = function AcademyMockApi_Factory(t) {
  return new (t || _AcademyMockApi)(\u0275\u0275inject(FuseMockApiService));
};
_AcademyMockApi.\u0275prov = /* @__PURE__ */ \u0275\u0275defineInjectable({ token: _AcademyMockApi, factory: _AcademyMockApi.\u0275fac, providedIn: "root" });
var AcademyMockApi = _AcademyMockApi;

// src/app/mock-api/apps/chat/data.ts
var now = DateTime.now();
var _attachments = {
  media: [
    "images/cards/01-320x200.jpg",
    "images/cards/02-320x200.jpg",
    "images/cards/03-320x200.jpg",
    "images/cards/04-320x200.jpg",
    "images/cards/05-320x200.jpg",
    "images/cards/06-320x200.jpg",
    "images/cards/07-320x200.jpg",
    "images/cards/08-320x200.jpg"
  ],
  docs: [],
  links: []
};
var messages = [
  {
    id: "e6b2b82f-b199-4a60-9696-5f3e40d2715d",
    chatId: "",
    contactId: "me",
    value: "Hi!",
    createdAt: now.minus({ week: 1 }).set({
      hour: 18,
      minute: 56
    }).toISO()
  },
  {
    id: "eb82cf4b-fa93-4bf4-a88a-99e987ddb7ea",
    chatId: "",
    contactId: "",
    value: "Hey, dude!",
    createdAt: now.minus({ week: 1 }).set({
      hour: 19,
      minute: 4
    }).toISO()
  },
  {
    id: "3cf9b2a6-ae54-47db-97b2-ee139a8f84e5",
    chatId: "",
    contactId: "",
    value: "Long time no see.",
    createdAt: now.minus({ week: 1 }).set({
      hour: 19,
      minute: 4
    }).toISO()
  },
  {
    id: "2ab91b0f-fafb-45f3-88df-7efaff29134b",
    chatId: "",
    contactId: "me",
    value: "Yeah, man... Things were quite busy for me and my family.",
    createdAt: now.minus({ week: 1 }).set({
      hour: 19,
      minute: 6
    }).toISO()
  },
  {
    id: "10e81481-378f-49ac-b06b-7c59dcc639ae",
    chatId: "",
    contactId: "",
    value: "What's up? Anything I can help with?",
    createdAt: now.minus({ week: 1 }).set({
      hour: 19,
      minute: 6
    }).toISO()
  },
  {
    id: "3b334e72-6605-4ebd-a4f6-3850067048de",
    chatId: "",
    contactId: "me",
    value: "We've been on the move, changed 3 places over 4 months",
    createdAt: now.minus({ week: 1 }).set({
      hour: 19,
      minute: 7
    }).toISO()
  },
  {
    id: "25998113-3a96-4dd0-a7b9-4d2bb58db3f3",
    chatId: "",
    contactId: "",
    value: "Wow! That's crazy! \u{1F92F} What happened?",
    createdAt: now.minus({ week: 1 }).set({
      hour: 19,
      minute: 7
    }).toISO()
  },
  {
    id: "30adb3da-0e4f-487e-aec2-6d9f31e097f6",
    chatId: "",
    contactId: "me",
    value: "You know I got a job in that big software company. First move was because of that.",
    createdAt: now.minus({ week: 1 }).set({
      hour: 19,
      minute: 8
    }).toISO()
  },
  {
    id: "c0d6fd6e-d294-4845-8751-e84b8f2c4d3b",
    chatId: "",
    contactId: "me",
    value: "Then they decided to re-locate me after a month",
    createdAt: now.minus({ week: 1 }).set({
      hour: 19,
      minute: 8
    }).toISO()
  },
  {
    id: "8d3c442b-62fa-496f-bffa-210ff5c1866b",
    chatId: "",
    contactId: "me",
    value: "Which was an absolute pain because we just set up everything, house, kids school and all that.",
    createdAt: now.minus({ week: 1 }).set({
      hour: 19,
      minute: 8
    }).toISO()
  },
  {
    id: "3cf26ef0-e81f-4698-ac39-487454413332",
    chatId: "",
    contactId: "me",
    value: "So we moved the second time.",
    createdAt: now.minus({ week: 1 }).set({
      hour: 19,
      minute: 9
    }).toISO()
  },
  {
    id: "415151b9-9ee9-40a4-a4ad-2d88146bc71b",
    chatId: "",
    contactId: "",
    value: "It's crazy!",
    createdAt: now.minus({ week: 1 }).set({
      hour: 19,
      minute: 9
    }).toISO()
  },
  {
    id: "d6f29648-c85c-4dfb-a6ff-6b7ebc40c993",
    chatId: "",
    contactId: "me",
    value: "Then this virus thing happened and just after a week we moved in, they decided the whole department will be working remotely.",
    createdAt: now.minus({ week: 1 }).set({
      hour: 19,
      minute: 10
    }).toISO()
  },
  {
    id: "5329c20d-6754-47ec-af8c-660c72be3528",
    chatId: "",
    contactId: "me",
    value: "And then we decided to move back our first location because, you know, everything was already setup so that's the third time.",
    createdAt: now.minus({ week: 1 }).set({
      hour: 19,
      minute: 10
    }).toISO()
  },
  {
    id: "26f2ccbf-aef7-4b49-88df-f6b59381110a",
    chatId: "",
    contactId: "",
    value: "Ohh dude, I'm really sorry you had to go through all that in such a short period of time",
    createdAt: now.minus({ week: 1 }).set({
      hour: 19,
      minute: 11
    }).toISO()
  },
  {
    id: "ea7662d5-7b72-4c19-ad6c-f80320541001",
    chatId: "",
    contactId: "",
    value: "\u{1F615}",
    createdAt: now.minus({ week: 1 }).set({
      hour: 19,
      minute: 11
    }).toISO()
  },
  {
    id: "3a2d3a0e-839b-46e7-86ae-ca0826ecda7c",
    chatId: "",
    contactId: "me",
    value: "Thanks, man! It was good catching up with you.",
    createdAt: now.minus({ week: 1 }).set({
      hour: 19,
      minute: 11
    }).toISO()
  },
  {
    id: "562e3524-15b7-464a-bbf6-9b2582e5e0ee",
    chatId: "",
    contactId: "",
    value: "Yeah dude. Hit me again next week so we can grab a coffee, remotely!",
    createdAt: now.minus({ week: 1 }).set({
      hour: 19,
      minute: 12
    }).toISO()
  },
  {
    id: "9269c775-bad5-46e1-b33b-2de8704ec1d6",
    chatId: "",
    contactId: "me",
    value: ":) Sure, man! See you next week!",
    createdAt: now.minus({ week: 1 }).set({
      hour: 19,
      minute: 12
    }).toISO()
  },
  {
    id: "779a27f2-bece-41c6-b9ca-c422570aee68",
    chatId: "",
    contactId: "",
    value: "See you later!",
    createdAt: now.minus({ week: 1 }).set({
      hour: 19,
      minute: 12
    }).toISO()
  },
  {
    id: "bab8ca0e-b8e5-4375-807b-1c91fca25a5d",
    chatId: "",
    contactId: "me",
    value: "Hey! Are you available right now? How about if we grab that coffee today? Remotely, of course :)",
    createdAt: now.set({
      hour: 12,
      minute: 45
    }).toISO()
  },
  {
    id: "8445a84d-599d-4e2d-a31c-5f4f29ad2b4c",
    chatId: "",
    contactId: "",
    value: "Hi!",
    createdAt: now.set({
      hour: 12,
      minute: 56
    }).toISO()
  },
  {
    id: "9f506742-50da-4350-af9d-61e53392fa08",
    chatId: "",
    contactId: "",
    value: "Sure thing! I'm gonna call you in 5, is it okay?",
    createdAt: now.set({
      hour: 12,
      minute: 56
    }).toISO()
  },
  {
    id: "ca8523d8-faed-45f7-af09-f6bd5c3f3875",
    chatId: "",
    contactId: "me",
    value: "Awesome! Call me in 5 minutes..",
    createdAt: now.set({
      hour: 12,
      minute: 58
    }).toISO()
  },
  {
    id: "39944b00-1ffe-4ffb-8ca6-13c292812e06",
    chatId: "",
    contactId: "",
    value: "\u{1F44D}\u{1F3FB}",
    createdAt: now.set({
      hour: 13,
      minute: 0
    }).toISO()
  }
];
var chats = [
  {
    id: "ff6bc7f1-449a-4419-af62-b89ce6cae0aa",
    contactId: "9d3f0e7f-dcbd-4e56-a5e8-87b8154e9edf",
    unreadCount: 2,
    muted: false,
    lastMessage: "See you tomorrow!",
    lastMessageAt: "26/04/2021"
  },
  {
    id: "4459a3f0-b65e-4df2-8c37-6ec72fcc4b31",
    contactId: "16b9e696-ea95-4dd8-86c4-3caf705a1dc6",
    unreadCount: 0,
    muted: false,
    lastMessage: "See you tomorrow!",
    lastMessageAt: "26/04/2021"
  },
  {
    id: "f73a5a34-a723-4b35-8439-5289e0164c83",
    contactId: "bf172879-423a-4fd6-8df3-6d1938bbfe1f",
    unreadCount: 1,
    muted: false,
    lastMessage: "See you tomorrow!",
    lastMessageAt: "26/04/2021"
  },
  {
    id: "747f101c-0371-4ca3-9f20-cb913a80fe89",
    contactId: "abd9e78b-9e96-428f-b3ff-4d934c401bee",
    unreadCount: 0,
    muted: true,
    lastMessage: "See you tomorrow!",
    lastMessageAt: "26/04/2021"
  },
  {
    id: "b3facfc4-dfc2-4ac2-b55d-cb70b3e68419",
    contactId: "6519600a-5eaa-45f8-8bed-c46fddb3b26a",
    unreadCount: 0,
    muted: false,
    lastMessage: "See you tomorrow!",
    lastMessageAt: "26/04/2021"
  },
  {
    id: "e3127982-9e53-4611-ac27-eb70c84be4aa",
    contactId: "b62359fd-f2a8-46e6-904e-31052d1cd675",
    unreadCount: 0,
    muted: false,
    lastMessage: "See you tomorrow!",
    lastMessageAt: "26/04/2021"
  },
  {
    id: "a30351f3-bfa6-4ce3-b13a-82748fe0edee",
    contactId: "2c37ed00-427a-46d7-8f8f-d711c768d1ee",
    unreadCount: 0,
    muted: false,
    lastMessage: "See you tomorrow!",
    lastMessageAt: "26/04/2021"
  },
  {
    id: "5636c0ba-fa47-42ca-9160-27340583041e",
    contactId: "b8258ccf-48b5-46a2-9c95-e0bd7580c645",
    unreadCount: 0,
    muted: false,
    lastMessage: "See you tomorrow!",
    lastMessageAt: "26/04/2021"
  },
  {
    id: "feddd91a-51af-48d8-99b0-cd99ee060a36",
    contactId: "e2946946-b4b5-4fd7-bab4-62c38cdff2f1",
    unreadCount: 0,
    muted: false,
    lastMessage: "See you tomorrow!",
    lastMessageAt: "26/04/2021"
  },
  {
    id: "89421c2f-1751-4040-b09b-4a4268db47b9",
    contactId: "12148fa2-e0a4-49fb-b3c5-daeecdb5180a",
    unreadCount: 0,
    muted: true,
    lastMessage: "See you tomorrow!",
    lastMessageAt: "26/04/2021"
  },
  {
    id: "ffbbfdb4-0485-44aa-8521-5ce1eda3fd2f",
    contactId: "81fdc48c-5572-4123-8a73-71b7892120de",
    muted: false,
    lastMessage: "See you tomorrow!",
    lastMessageAt: "26/04/2021"
  },
  {
    id: "a477baea-df90-4e2f-b108-7791bcd50bc8",
    contactId: "a9a9f382-e4c3-42fb-9fe9-65aa534732b5",
    unreadCount: 0,
    muted: false,
    lastMessage: "See you tomorrow!",
    lastMessageAt: "26/04/2021"
  },
  {
    id: "450840c8-aa0b-47a4-b6ca-b864ad9a3a88",
    contactId: "7e8e1f1e-d19f-45c7-86bd-6fef599dae71",
    unreadCount: 0,
    muted: false,
    lastMessage: "See you tomorrow!",
    lastMessageAt: "26/04/2021"
  },
  {
    id: "427270f0-841c-47f9-912c-3fd8139db5e6",
    contactId: "8141dd08-3a6e-4770-912c-59d0ed06dde6",
    unreadCount: 0,
    muted: false,
    lastMessage: "See you tomorrow!",
    lastMessageAt: "26/04/2021"
  },
  {
    id: "491b2918-e71e-4017-919e-0ba009afd003",
    contactId: "114642a2-ccb7-4cb1-ad2b-5e9b6a0c1d2e",
    unreadCount: 0,
    muted: false,
    lastMessage: "See you tomorrow!",
    lastMessageAt: "26/04/2021"
  }
];
var contacts = [
  {
    id: "cd5fa417-b667-482d-b208-798d9da3213c",
    avatar: "images/avatars/male-01.jpg",
    name: "Dejesus Michael",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "dejesusmichael@mail.org",
          label: "Personal"
        },
        {
          email: "michael.dejesus@vitricomp.io",
          label: "Work"
        }
      ],
      phoneNumbers: [
        {
          country: "bs",
          phoneNumber: "984 531 2468",
          label: "Mobile"
        },
        {
          country: "bs",
          phoneNumber: "806 470 2693",
          label: "Work"
        }
      ],
      title: "Track Service Worker",
      company: "Vitricomp",
      birthday: "1975-01-10T12:00:00.000Z",
      address: "279 Independence Avenue, Calvary, Guam, PO4127"
    },
    attachments: _attachments
  },
  {
    id: "beec5287-ed50-4504-858a-5dc3f8ce6935",
    avatar: null,
    name: "Dena Molina",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "denamolina@mail.us",
          label: "Personal"
        },
        {
          email: "molina.dena@envire.tv",
          label: "Work"
        }
      ],
      phoneNumbers: [
        {
          country: "io",
          phoneNumber: "934 537 3180",
          label: "Mobile"
        }
      ],
      title: "Weather Analyst",
      company: "Envire",
      birthday: "1994-12-05T12:00:00.000Z",
      address: "856 Woodside Avenue, Alfarata, Iowa, PO4992"
    },
    attachments: _attachments
  },
  {
    id: "9d3f0e7f-dcbd-4e56-a5e8-87b8154e9edf",
    avatar: "images/avatars/male-02.jpg",
    name: "Bernard Langley",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "bernardlangley@mail.com",
          label: "Personal"
        },
        {
          email: "langley.bernard@boilcat.name",
          label: "Work"
        }
      ],
      phoneNumbers: [
        {
          country: "md",
          phoneNumber: "893 548 2862",
          label: "Mobile"
        }
      ],
      title: "Electromedical Equipment Technician",
      company: "Boilcat",
      birthday: "1988-05-26T12:00:00.000Z",
      address: "943 Adler Place, Hamilton, South Dakota, PO5592"
    },
    attachments: _attachments
  },
  {
    id: "42a5da95-5e6d-42fd-a09d-de755d123a47",
    background: "images/cards/16-640x480.jpg",
    name: "Mclaughlin Steele",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "mclaughlinsteele@mail.me",
          label: "Personal"
        },
        {
          email: "steele.mclaughlin@accel.info",
          label: "Work"
        }
      ],
      phoneNumbers: [
        {
          country: "va",
          phoneNumber: "830 484 3813",
          label: "Mobile"
        },
        {
          country: "va",
          phoneNumber: "999 475 2789",
          label: "Work"
        },
        {
          country: "va",
          phoneNumber: "933 406 3598",
          label: "Home"
        }
      ],
      company: "Accel",
      birthday: "1968-08-13T12:00:00.000Z",
      address: "334 Sandford Street, Savage, Virgin Islands, PO1858"
    },
    attachments: _attachments
  },
  {
    id: "a7806ced-03f1-4197-8b30-00bdd463366b",
    avatar: "images/avatars/male-04.jpg",
    name: "Marsh Cochran",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "marshcochran@mail.biz",
          label: "Personal"
        }
      ],
      phoneNumbers: [
        {
          country: "tz",
          phoneNumber: "864 401 3980",
          label: "Mobile"
        },
        {
          country: "tz",
          phoneNumber: "956 546 2589",
          label: "Work"
        }
      ],
      title: "Fundraising Director",
      company: "Xsports",
      birthday: "1983-12-22T12:00:00.000Z",
      address: "487 Hamilton Walk, Bergoo, American Samoa, PO5616"
    },
    attachments: _attachments
  },
  {
    id: "f4ad15d9-5a24-463a-88ea-6189d6bb3a53",
    avatar: "images/avatars/male-05.jpg",
    name: "Parrish Austin",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "parrishaustin@mail.co.uk",
          label: "Personal"
        },
        {
          email: "austin.parrish@insource.net",
          label: "Work"
        }
      ],
      phoneNumbers: [
        {
          country: "lv",
          phoneNumber: "834 426 3574",
          label: "Mobile"
        },
        {
          country: "lv",
          phoneNumber: "816 573 3694",
          label: "Work"
        },
        {
          country: "lv",
          phoneNumber: "967 515 2009",
          label: "Home"
        }
      ],
      title: "Motor Winder",
      company: "Insource",
      birthday: "1963-08-24T12:00:00.000Z",
      address: "610 Harbor Lane, Cascades, Minnesota, PO8639"
    },
    attachments: _attachments
  },
  {
    id: "780d0111-5e5c-4694-8d1d-0ea421971fbf",
    avatar: "images/avatars/female-02.jpg",
    name: "Laverne Dodson",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "lavernedodson@mail.ca",
          label: "Personal"
        }
      ],
      phoneNumbers: [
        {
          country: "ar",
          phoneNumber: "964 417 2318",
          label: "Mobile"
        },
        {
          country: "ar",
          phoneNumber: "830 410 2506",
          label: "Work"
        }
      ],
      title: "Television News Producer",
      company: "Lovepad",
      birthday: "1973-09-25T12:00:00.000Z",
      address: "428 Newport Street, Neahkahnie, Arkansas, PO8324"
    },
    attachments: _attachments
  },
  {
    id: "bf172879-423a-4fd6-8df3-6d1938bbfe1f",
    avatar: "images/avatars/male-06.jpg",
    name: "Edwards Mckenzie",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "edwardsmckenzie@mail.org",
          label: "Personal"
        },
        {
          email: "mckenzie.edwards@bugsall.io",
          label: "Work"
        }
      ],
      phoneNumbers: [
        {
          country: "pe",
          phoneNumber: "934 519 2903",
          label: "Mobile"
        },
        {
          country: "pe",
          phoneNumber: "989 489 3662",
          label: "Work"
        },
        {
          country: "pe",
          phoneNumber: "813 461 2790",
          label: "Home"
        }
      ],
      title: "Legal Assistant",
      company: "Bugsall",
      birthday: "1988-07-27T12:00:00.000Z",
      address: "384 Polhemus Place, Dalton, Palau, PO6038"
    },
    attachments: _attachments
  },
  {
    id: "1eaa3213-ece2-4ba6-8e15-eb36ca388f50",
    avatar: "images/avatars/female-03.jpg",
    name: "Trudy Berg",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "trudyberg@mail.us",
          label: "Personal"
        },
        {
          email: "berg.trudy@satiance.tv",
          label: "Work"
        }
      ],
      phoneNumbers: [
        {
          country: "ls",
          phoneNumber: "912 539 2770",
          label: "Mobile"
        }
      ],
      title: "Meteorologist",
      company: "Satiance",
      birthday: "1989-12-15T12:00:00.000Z",
      address: "945 Jerome Avenue, Riceville, North Carolina, PO1625"
    },
    attachments: _attachments
  },
  {
    id: "abd9e78b-9e96-428f-b3ff-4d934c401bee",
    avatar: "images/avatars/female-04.jpg",
    name: "Elsie Melendez",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "elsiemelendez@mail.com",
          label: "Personal"
        },
        {
          email: "melendez.elsie@chillium.name",
          label: "Work"
        }
      ],
      phoneNumbers: [
        {
          country: "tg",
          phoneNumber: "907 515 3007",
          label: "Mobile"
        },
        {
          country: "tg",
          phoneNumber: "967 534 2803",
          label: "Work"
        }
      ],
      title: "Fundraising Director",
      company: "Chillium",
      birthday: "1980-06-28T12:00:00.000Z",
      address: "428 Varanda Place, Veyo, Oklahoma, PO6188"
    },
    attachments: _attachments
  },
  {
    id: "efae92cc-3bd1-4c6a-a395-b6760c69bd55",
    avatar: "images/avatars/male-07.jpg",
    name: "Lamb Underwood",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "lambunderwood@mail.me",
          label: "Personal"
        }
      ],
      phoneNumbers: [
        {
          country: "pf",
          phoneNumber: "855 517 2767",
          label: "Mobile"
        },
        {
          country: "pf",
          phoneNumber: "906 442 3593",
          label: "Work"
        },
        {
          country: "pf",
          phoneNumber: "905 402 2121",
          label: "Home"
        }
      ],
      title: "Legal Assistant",
      company: "Exotechno",
      birthday: "1990-07-26T12:00:00.000Z",
      address: "609 Greenpoint Avenue, Beason, Vermont, PO5229"
    },
    attachments: _attachments
  },
  {
    id: "bde636a7-c3d2-4bff-939a-aab11df1516b",
    avatar: null,
    name: "Tessa Valdez",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "tessavaldez@mail.info",
          label: "Personal"
        }
      ],
      phoneNumbers: [
        {
          country: "dz",
          phoneNumber: "892 430 2631",
          label: "Mobile"
        },
        {
          country: "dz",
          phoneNumber: "997 525 2354",
          label: "Work"
        },
        {
          country: "dz",
          phoneNumber: "907 472 2857",
          label: "Home"
        }
      ],
      title: "Banker Mason",
      company: "Securia",
      birthday: "1994-01-10T12:00:00.000Z",
      address: "183 Crosby Avenue, Blanco, Mississippi, PO3463"
    },
    attachments: _attachments
  },
  {
    id: "6519600a-5eaa-45f8-8bed-c46fddb3b26a",
    background: "images/cards/24-640x480.jpg",
    name: "Mcleod Wagner",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "mcleodwagner@mail.biz",
          label: "Personal"
        }
      ],
      phoneNumbers: [
        {
          country: "at",
          phoneNumber: "977 590 2773",
          label: "Mobile"
        },
        {
          country: "at",
          phoneNumber: "828 496 3813",
          label: "Work"
        },
        {
          country: "at",
          phoneNumber: "831 432 2512",
          label: "Home"
        }
      ],
      company: "Inrt",
      birthday: "1980-12-03T12:00:00.000Z",
      address: "736 Glen Street, Kaka, West Virginia, PO9350"
    },
    attachments: _attachments
  },
  {
    id: "6d80a6f6-2884-4ac4-9c73-06b82c220017",
    avatar: "images/avatars/female-06.jpg",
    name: "Kristie Hall",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "kristiehall@mail.co.uk",
          label: "Personal"
        },
        {
          email: "hall.kristie@austech.net",
          label: "Work"
        }
      ],
      phoneNumbers: [
        {
          country: "tn",
          phoneNumber: "841 530 3641",
          label: "Mobile"
        },
        {
          country: "tn",
          phoneNumber: "941 410 3743",
          label: "Work"
        },
        {
          country: "tn",
          phoneNumber: "938 599 3850",
          label: "Home"
        }
      ],
      title: "Electromedical Equipment Technician",
      company: "Austech",
      birthday: "1975-08-31T12:00:00.000Z",
      address: "547 Revere Place, Hoehne, New Hampshire, PO2125"
    },
    attachments: _attachments
  },
  {
    id: "35190d23-036e-44ef-b545-cc744c626edd",
    avatar: "images/avatars/female-07.jpg",
    name: "Shannon Kennedy",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "shannonkennedy@mail.ca",
          label: "Personal"
        }
      ],
      phoneNumbers: [
        {
          country: "gb",
          phoneNumber: "899 508 2992",
          label: "Mobile"
        },
        {
          country: "gb",
          phoneNumber: "834 499 3354",
          label: "Work"
        },
        {
          country: "gb",
          phoneNumber: "834 526 3388",
          label: "Home"
        }
      ],
      title: "Gas Meter Mechanic",
      company: "Eventix",
      birthday: "1994-09-07T12:00:00.000Z",
      address: "480 Chase Court, Edinburg, Kansas, PO5357"
    },
    attachments: _attachments
  },
  {
    id: "b018c194-68ec-4915-ab56-e9f3bd2d98db",
    avatar: "images/avatars/female-08.jpg",
    name: "Martha Swanson",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "marthaswanson@mail.org",
          label: "Personal"
        },
        {
          email: "swanson.martha@sequitur.io",
          label: "Work"
        }
      ],
      phoneNumbers: [
        {
          country: "gb",
          phoneNumber: "844 480 3309",
          label: "Mobile"
        },
        {
          country: "gb",
          phoneNumber: "981 591 3239",
          label: "Work"
        },
        {
          country: "gb",
          phoneNumber: "923 484 3147",
          label: "Home"
        }
      ],
      title: "Short Story Writer",
      company: "Sequitur",
      birthday: "1993-12-31T12:00:00.000Z",
      address: "595 Howard Place, Convent, Rhode Island, PO6993"
    },
    attachments: _attachments
  },
  {
    id: "b7c355e9-e003-467e-82d2-4f6978c1a696",
    avatar: "images/avatars/female-09.jpg",
    name: "Jacklyn Morgan",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "jacklynmorgan@mail.us",
          label: "Personal"
        },
        {
          email: "morgan.jacklyn@shopabout.tv",
          label: "Work"
        }
      ],
      phoneNumbers: [
        {
          country: "so",
          phoneNumber: "974 542 2061",
          label: "Mobile"
        }
      ],
      title: "Animal Sitter",
      company: "Shopabout",
      birthday: "1976-09-30T12:00:00.000Z",
      address: "971 Conover Street, Statenville, Louisiana, PO6622"
    },
    attachments: _attachments
  },
  {
    id: "cfa07b7c-93d1-42e7-9592-493d9efc78ae",
    avatar: "images/avatars/female-10.jpg",
    name: "Tonya Bowers",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "tonyabowers@mail.com",
          label: "Personal"
        },
        {
          email: "bowers.tonya@tourmania.name",
          label: "Work"
        }
      ],
      phoneNumbers: [
        {
          country: "tv",
          phoneNumber: "922 585 2914",
          label: "Mobile"
        },
        {
          country: "tv",
          phoneNumber: "913 538 2961",
          label: "Work"
        }
      ],
      title: "Track Service Worker",
      company: "Tourmania",
      birthday: "1976-06-14T12:00:00.000Z",
      address: "197 Marconi Place, Welda, Delaware, PO6061"
    },
    attachments: _attachments
  },
  {
    id: "00feeb63-c83a-4655-a37e-a07da10cfa1c",
    avatar: "images/avatars/female-11.jpg",
    name: "Latonya Cruz",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "latonyacruz@mail.me",
          label: "Personal"
        }
      ],
      phoneNumbers: [
        {
          country: "tm",
          phoneNumber: "981 508 2080",
          label: "Mobile"
        },
        {
          country: "tm",
          phoneNumber: "817 425 2052",
          label: "Work"
        },
        {
          country: "tm",
          phoneNumber: "939 434 3805",
          label: "Home"
        }
      ],
      title: "Motor Winder",
      company: "Zilch",
      birthday: "1967-11-28T12:00:00.000Z",
      address: "775 Dahill Road, Iberia, California, PO2169"
    },
    attachments: _attachments
  },
  {
    id: "142abf21-e635-4a7d-9330-e57f66adcdbe",
    avatar: "images/avatars/female-12.jpg",
    name: "Evangelina Mcclain",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "evangelinamcclain@mail.info",
          label: "Personal"
        }
      ],
      phoneNumbers: [
        {
          country: "ck",
          phoneNumber: "992 583 3187",
          label: "Mobile"
        },
        {
          country: "ck",
          phoneNumber: "881 472 3297",
          label: "Work"
        },
        {
          country: "ck",
          phoneNumber: "846 477 3596",
          label: "Home"
        }
      ],
      title: "Congressional Representative",
      company: "Straloy",
      birthday: "1976-02-15T12:00:00.000Z",
      address: "305 Columbia Street, Dupuyer, Puerto Rico, PO8744"
    },
    attachments: _attachments
  },
  {
    id: "e4f255a3-b5dd-45a7-975f-c399604a399a",
    avatar: "images/avatars/male-09.jpg",
    name: "Herring Gonzales",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "herringgonzales@mail.biz",
          label: "Personal"
        }
      ],
      phoneNumbers: [
        {
          country: "ai",
          phoneNumber: "995 411 2513",
          label: "Mobile"
        },
        {
          country: "ai",
          phoneNumber: "839 492 2760",
          label: "Work"
        }
      ],
      title: "Gas Meter Mechanic",
      company: "Cubix",
      birthday: "1995-02-16T12:00:00.000Z",
      address: "195 Brooklyn Road, Jeff, Marshall Islands, PO2943"
    },
    attachments: _attachments
  },
  {
    id: "ab4f712d-d712-41a8-b567-be4c66c349a3",
    avatar: "images/avatars/female-13.jpg",
    name: "Alyce Cash",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "alycecash@mail.co.uk",
          label: "Personal"
        }
      ],
      phoneNumbers: [
        {
          country: "ht",
          phoneNumber: "969 499 3077",
          label: "Mobile"
        },
        {
          country: "ht",
          phoneNumber: "907 513 2784",
          label: "Work"
        }
      ],
      title: "Weather Analyst",
      company: "Qnekt",
      birthday: "1973-12-19T12:00:00.000Z",
      address: "964 Henry Street, Eureka, Indiana, PO1035"
    },
    attachments: _attachments
  },
  {
    id: "5d067800-c301-46c6-a7f7-28dc89d9a554",
    avatar: null,
    name: "Kristine Pacheco",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "kristinepacheco@mail.net",
          label: "Personal"
        },
        {
          email: "pacheco.kristine@vurbo.ca",
          label: "Work"
        }
      ],
      phoneNumbers: [
        {
          country: "mm",
          phoneNumber: "977 516 2492",
          label: "Mobile"
        }
      ],
      title: "Short Story Writer",
      company: "Vurbo",
      birthday: "1985-10-22T12:00:00.000Z",
      address: "622 Dodworth Street, Rose, Arizona, PO9530"
    },
    attachments: _attachments
  },
  {
    id: "c500255a-1173-47d0-a0e4-4944d48fc12a",
    avatar: "images/avatars/male-10.jpg",
    name: "English Haney",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "englishhaney@mail.org",
          label: "Personal"
        }
      ],
      phoneNumbers: [
        {
          country: "lb",
          phoneNumber: "989 567 3834",
          label: "Mobile"
        }
      ],
      title: "Meteorologist",
      company: "Photobin",
      birthday: "1969-09-05T12:00:00.000Z",
      address: "579 Pooles Lane, Belleview, Montana, PO4106"
    },
    attachments: _attachments
  },
  {
    id: "b62359fd-f2a8-46e6-904e-31052d1cd675",
    avatar: "images/avatars/male-11.jpg",
    name: "Joseph Strickland",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "josephstrickland@mail.io",
          label: "Personal"
        },
        {
          email: "strickland.joseph@bytrex.us",
          label: "Work"
        }
      ],
      phoneNumbers: [
        {
          country: "jo",
          phoneNumber: "990 450 2729",
          label: "Mobile"
        }
      ],
      title: "Hotel Manager",
      company: "Bytrex",
      birthday: "1991-09-08T12:00:00.000Z",
      address: "844 Ellery Street, Hondah, Texas, PO1272"
    },
    attachments: _attachments
  },
  {
    id: "16b9e696-ea95-4dd8-86c4-3caf705a1dc6",
    avatar: "images/avatars/male-12.jpg",
    name: "Nunez Faulkner",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "nunezfaulkner@mail.tv",
          label: "Personal"
        }
      ],
      phoneNumbers: [
        {
          country: "xk",
          phoneNumber: "909 552 3327",
          label: "Mobile"
        }
      ],
      title: "Hotel Manager",
      company: "Buzzopia",
      birthday: "1982-01-23T12:00:00.000Z",
      address: "614 Herkimer Court, Darrtown, Nebraska, PO9308"
    },
    attachments: _attachments
  },
  {
    id: "19662ecf-0686-4aad-a46c-24b552eb2ff5",
    avatar: "images/avatars/female-15.jpg",
    name: "Juana Morrow",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "juanamorrow@mail.com",
          label: "Personal"
        }
      ],
      phoneNumbers: [
        {
          country: "ee",
          phoneNumber: "868 438 3943",
          label: "Mobile"
        }
      ],
      title: "Meteorologist",
      company: "Lyria",
      birthday: "1992-03-29T12:00:00.000Z",
      address: "663 Drew Street, Juntura, Georgia, PO9857"
    },
    attachments: _attachments
  },
  {
    id: "26dfe954-8bf3-45ee-b285-1d0a88c8d3ea",
    avatar: "images/avatars/male-13.jpg",
    name: "Lara Gaines",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "laragaines@mail.name",
          label: "Personal"
        }
      ],
      phoneNumbers: [
        {
          country: "mr",
          phoneNumber: "891 498 2043",
          label: "Mobile"
        }
      ],
      title: "Electromedical Equipment Technician",
      company: "Acruex",
      birthday: "1961-06-07T12:00:00.000Z",
      address: "762 Troutman Street, Drummond, Oregon, PO6973"
    },
    attachments: _attachments
  },
  {
    id: "d6462af2-c488-4de7-9b26-3845bd2983f9",
    avatar: "images/avatars/male-14.jpg",
    name: "Johnston Riddle",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "johnstonriddle@mail.me",
          label: "Personal"
        }
      ],
      phoneNumbers: [
        {
          country: "bt",
          phoneNumber: "979 541 2691",
          label: "Mobile"
        },
        {
          country: "bt",
          phoneNumber: "909 407 3887",
          label: "Work"
        },
        {
          country: "bt",
          phoneNumber: "864 557 3128",
          label: "Home"
        }
      ],
      title: "Hotel Manager",
      company: "Xleen",
      birthday: "1972-09-13T12:00:00.000Z",
      address: "674 Bryant Street, Grahamtown, Federated States Of Micronesia, PO2757"
    },
    attachments: _attachments
  },
  {
    id: "a1723c04-69fe-4573-a135-6645658afe76",
    avatar: null,
    name: "Vargas Gardner",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "vargasgardner@mail.info",
          label: "Personal"
        },
        {
          email: "gardner.vargas@cosmosis.biz",
          label: "Work"
        }
      ],
      phoneNumbers: [
        {
          country: "bi",
          phoneNumber: "855 456 2754",
          label: "Mobile"
        }
      ],
      title: "Bindery Machine Operator",
      company: "Cosmosis",
      birthday: "1979-10-21T12:00:00.000Z",
      address: "869 Seton Place, Chemung, Maine, PO8109"
    },
    attachments: _attachments
  },
  {
    id: "823e6166-c0c8-4373-9270-8a0d17489a08",
    avatar: "images/avatars/male-16.jpg",
    name: "Mccall Day",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "mccallday@mail.co.uk",
          label: "Personal"
        }
      ],
      phoneNumbers: [
        {
          country: "se",
          phoneNumber: "993 504 3286",
          label: "Mobile"
        },
        {
          country: "se",
          phoneNumber: "924 434 2238",
          label: "Work"
        },
        {
          country: "se",
          phoneNumber: "816 466 2634",
          label: "Home"
        }
      ],
      title: "Historiographer",
      company: "Nipaz",
      birthday: "1964-03-05T12:00:00.000Z",
      address: "854 Hanover Place, Harleigh, New Jersey, PO9459"
    },
    attachments: _attachments
  },
  {
    id: "2c37ed00-427a-46d7-8f8f-d711c768d1ee",
    avatar: "images/avatars/male-17.jpg",
    name: "Silva Foster",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "silvafoster@mail.net",
          label: "Personal"
        }
      ],
      phoneNumbers: [
        {
          country: "bn",
          phoneNumber: "916 511 3837",
          label: "Mobile"
        },
        {
          country: "bn",
          phoneNumber: "949 564 3247",
          label: "Work"
        }
      ],
      title: "Insurance Analyst",
      company: "Extrawear",
      birthday: "1980-04-29T12:00:00.000Z",
      address: "137 Bridge Street, Sisquoc, District Of Columbia, PO4105"
    },
    attachments: _attachments
  },
  {
    id: "944764c0-b261-4428-9188-bbd3022d66a8",
    avatar: "images/avatars/female-16.jpg",
    name: "Cathryn Snider",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "cathrynsnider@mail.ca",
          label: "Personal"
        },
        {
          email: "snider.cathryn@phormula.org",
          label: "Work"
        }
      ],
      phoneNumbers: [
        {
          country: "na",
          phoneNumber: "896 471 3036",
          label: "Mobile"
        },
        {
          country: "na",
          phoneNumber: "851 491 3567",
          label: "Work"
        },
        {
          country: "na",
          phoneNumber: "805 487 2016",
          label: "Home"
        }
      ],
      title: "Short Story Writer",
      company: "Phormula",
      birthday: "1981-06-09T12:00:00.000Z",
      address: "528 Glenmore Avenue, Elrama, Illinois, PO2952"
    },
    attachments: _attachments
  },
  {
    id: "f2b3c756-5ad2-4d4b-aee5-b32c91457128",
    avatar: null,
    name: "Mooney Cantrell",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "mooneycantrell@mail.io",
          label: "Personal"
        }
      ],
      phoneNumbers: [
        {
          country: "bh",
          phoneNumber: "915 577 3020",
          label: "Mobile"
        },
        {
          country: "bh",
          phoneNumber: "923 431 3594",
          label: "Work"
        }
      ],
      title: "Fundraising Director",
      company: "Crustatia",
      birthday: "1968-12-07T12:00:00.000Z",
      address: "277 Coventry Road, Fairforest, Nevada, PO6031"
    },
    attachments: _attachments
  },
  {
    id: "54b1c201-4b2b-4be0-ad70-a6413e9628cd",
    avatar: "images/avatars/female-17.jpg",
    name: "Saundra Murphy",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "saundramurphy@mail.us",
          label: "Personal"
        }
      ],
      phoneNumbers: [
        {
          country: "mt",
          phoneNumber: "902 529 2999",
          label: "Mobile"
        }
      ],
      title: "Dental Laboratory Worker",
      company: "Zilencio",
      birthday: "1983-11-07T12:00:00.000Z",
      address: "557 Monroe Street, Mayfair, Maryland, PO7200"
    },
    attachments: _attachments
  },
  {
    id: "faf979c7-a13b-445a-b30a-08845f5fa90e",
    avatar: "images/avatars/female-18.jpg",
    name: "Enid Sparks",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "enidsparks@mail.tv",
          label: "Personal"
        }
      ],
      phoneNumbers: [
        {
          country: "bh",
          phoneNumber: "813 410 3258",
          label: "Mobile"
        },
        {
          country: "bh",
          phoneNumber: "877 501 2767",
          label: "Work"
        }
      ],
      title: "Historiographer",
      company: "Skybold",
      birthday: "1984-05-04T12:00:00.000Z",
      address: "219 Village Court, Keyport, Alabama, PO7776"
    },
    attachments: _attachments
  },
  {
    id: "2bfa2be5-7688-48d5-b5ac-dc0d9ac97f14",
    avatar: null,
    name: "Nadia Mcknight",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "nadiamcknight@mail.com",
          label: "Personal"
        }
      ],
      phoneNumbers: [
        {
          country: "tk",
          phoneNumber: "943 511 2203",
          label: "Mobile"
        },
        {
          country: "tk",
          phoneNumber: "817 578 2993",
          label: "Work"
        }
      ],
      title: "Legal Assistant",
      company: "Pearlesex",
      birthday: "1973-10-06T12:00:00.000Z",
      address: "448 Berriman Street, Reinerton, Washington, PO6704"
    },
    attachments: _attachments
  },
  {
    id: "77a4383b-b5a5-4943-bc46-04c3431d1566",
    avatar: "images/avatars/male-19.jpg",
    name: "Best Blackburn",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "bestblackburn@mail.name",
          label: "Personal"
        },
        {
          email: "blackburn.best@beadzza.me",
          label: "Work"
        }
      ],
      phoneNumbers: [
        {
          country: "gl",
          phoneNumber: "814 498 3701",
          label: "Mobile"
        }
      ],
      title: "Hotel Manager",
      company: "Beadzza",
      birthday: "1987-06-07T12:00:00.000Z",
      address: "578 Tampa Court, Wescosville, Ohio, PO4108"
    },
    attachments: _attachments
  },
  {
    id: "8bb0f597-673a-47ca-8c77-2f83219cb9af",
    avatar: null,
    name: "Duncan Carver",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "duncancarver@mail.info",
          label: "Personal"
        }
      ],
      phoneNumbers: [
        {
          country: "jm",
          phoneNumber: "968 547 2111",
          label: "Mobile"
        },
        {
          country: "jm",
          phoneNumber: "968 433 3120",
          label: "Work"
        },
        {
          country: "jm",
          phoneNumber: "905 425 2777",
          label: "Home"
        }
      ],
      title: "Historiographer",
      company: "Hotcakes",
      birthday: "1980-09-15T12:00:00.000Z",
      address: "931 Bristol Street, Why, South Carolina, PO9700"
    },
    attachments: _attachments
  },
  {
    id: "c318e31f-1d74-49c5-8dae-2bc5805e2fdb",
    avatar: "images/avatars/male-01.jpg",
    name: "Martin Richards",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "martinrichards@mail.biz",
          label: "Personal"
        }
      ],
      phoneNumbers: [
        {
          country: "mg",
          phoneNumber: "902 500 2668",
          label: "Mobile"
        },
        {
          country: "mg",
          phoneNumber: "947 559 2919",
          label: "Work"
        },
        {
          country: "mg",
          phoneNumber: "934 434 3768",
          label: "Home"
        }
      ],
      title: "Dental Laboratory Worker",
      company: "Overfork",
      birthday: "1977-04-12T12:00:00.000Z",
      address: "268 Hutchinson Court, Drytown, Florida, PO3041"
    },
    attachments: _attachments
  },
  {
    id: "0a8bc517-631a-4a93-aacc-000fa2e8294c",
    avatar: "images/avatars/female-20.jpg",
    name: "Candice Munoz",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "candicemunoz@mail.co.uk",
          label: "Personal"
        }
      ],
      phoneNumbers: [
        {
          country: "fm",
          phoneNumber: "838 562 2769",
          label: "Mobile"
        }
      ],
      title: "Legal Assistant",
      company: "Eclipto",
      birthday: "1976-09-09T12:00:00.000Z",
      address: "946 Remsen Street, Caroline, New Mexico, PO3247"
    },
    attachments: _attachments
  },
  {
    id: "a4c9945a-757b-40b0-8942-d20e0543cabd",
    avatar: "images/avatars/female-01.jpg",
    name: "Vickie Mosley",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "vickiemosley@mail.net",
          label: "Personal"
        }
      ],
      phoneNumbers: [
        {
          country: "tr",
          phoneNumber: "939 555 3054",
          label: "Mobile"
        },
        {
          country: "tr",
          phoneNumber: "852 486 2053",
          label: "Work"
        }
      ],
      title: "Bindery Machine Operator",
      company: "Strozen",
      birthday: "1989-06-21T12:00:00.000Z",
      address: "397 Vandalia Avenue, Rockingham, Michigan, PO8089"
    },
    attachments: _attachments
  },
  {
    id: "b8258ccf-48b5-46a2-9c95-e0bd7580c645",
    avatar: "images/avatars/female-02.jpg",
    name: "Tina Harris",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "tinaharris@mail.ca",
          label: "Personal"
        }
      ],
      phoneNumbers: [
        {
          country: "gp",
          phoneNumber: "933 464 2431",
          label: "Mobile"
        },
        {
          country: "gp",
          phoneNumber: "894 535 3609",
          label: "Work"
        }
      ],
      title: "Short Story Writer",
      company: "Gallaxia",
      birthday: "1976-09-10T12:00:00.000Z",
      address: "821 Beverly Road, Tyro, Colorado, PO4248"
    },
    attachments: _attachments
  },
  {
    id: "f004ea79-98fc-436c-9ba5-6cfe32fe583d",
    avatar: "images/avatars/male-02.jpg",
    name: "Holt Manning",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "holtmanning@mail.org",
          label: "Personal"
        },
        {
          email: "manning.holt@idetica.io",
          label: "Work"
        }
      ],
      phoneNumbers: [
        {
          country: "nz",
          phoneNumber: "822 531 2600",
          label: "Mobile"
        },
        {
          country: "nz",
          phoneNumber: "922 549 2094",
          label: "Work"
        }
      ],
      title: "Fundraising Director",
      company: "Idetica",
      birthday: "1973-11-08T12:00:00.000Z",
      address: "364 Porter Avenue, Delshire, Missouri, PO8911"
    },
    attachments: _attachments
  },
  {
    id: "8b69fe2d-d7cc-4a3d-983d-559173e37d37",
    background: "images/cards/28-640x480.jpg",
    name: "Misty Ramsey",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "mistyramsey@mail.us",
          label: "Personal"
        }
      ],
      phoneNumbers: [
        {
          country: "kp",
          phoneNumber: "990 457 2106",
          label: "Mobile"
        },
        {
          country: "kp",
          phoneNumber: "918 550 2946",
          label: "Work"
        }
      ],
      company: "Grupoli",
      birthday: "1969-08-10T12:00:00.000Z",
      address: "101 Sackett Street, Naomi, Tennessee, PO6335"
    },
    attachments: _attachments
  },
  {
    id: "cdcc62e4-1520-4ccc-803d-52868c7e01ba",
    avatar: "images/avatars/female-04.jpg",
    name: "Dee Alvarado",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "deealvarado@mail.tv",
          label: "Personal"
        }
      ],
      phoneNumbers: [
        {
          country: "nu",
          phoneNumber: "855 445 2483",
          label: "Mobile"
        },
        {
          country: "nu",
          phoneNumber: "858 415 2860",
          label: "Work"
        },
        {
          country: "nu",
          phoneNumber: "968 587 2752",
          label: "Home"
        }
      ],
      title: "Dental Laboratory Worker",
      company: "Tsunamia",
      birthday: "1996-06-17T12:00:00.000Z",
      address: "956 Pierrepont Street, Crumpler, Hawaii, PO3299"
    },
    attachments: _attachments
  },
  {
    id: "e2946946-b4b5-4fd7-bab4-62c38cdff2f1",
    avatar: "images/avatars/female-05.jpg",
    name: "Samantha Jacobson",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "samanthajacobson@mail.com",
          label: "Personal"
        }
      ],
      phoneNumbers: [
        {
          country: "es",
          phoneNumber: "879 591 3327",
          label: "Mobile"
        }
      ],
      title: "Dental Laboratory Worker",
      company: "Emoltra",
      birthday: "1972-02-04T12:00:00.000Z",
      address: "384 Love Lane, Dyckesville, New York, PO4115"
    },
    attachments: _attachments
  },
  {
    id: "fdc77706-6ba2-4397-b2f8-a9a0b6495153",
    avatar: "images/avatars/female-06.jpg",
    name: "Rhea Landry",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "rhealandry@mail.name",
          label: "Personal"
        }
      ],
      phoneNumbers: [
        {
          country: "jp",
          phoneNumber: "906 579 3698",
          label: "Mobile"
        },
        {
          country: "jp",
          phoneNumber: "841 475 2681",
          label: "Work"
        }
      ],
      title: "Electromedical Equipment Technician",
      company: "Comtent",
      birthday: "1988-05-22T12:00:00.000Z",
      address: "725 Arlington Avenue, Mathews, Wyoming, PO4562"
    },
    attachments: _attachments
  },
  {
    id: "12148fa2-e0a4-49fb-b3c5-daeecdb5180a",
    avatar: "images/avatars/female-07.jpg",
    name: "Olga Rhodes",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "olgarhodes@mail.me",
          label: "Personal"
        },
        {
          email: "rhodes.olga@moreganic.info",
          label: "Work"
        }
      ],
      phoneNumbers: [
        {
          country: "tl",
          phoneNumber: "971 514 3366",
          label: "Mobile"
        },
        {
          country: "tl",
          phoneNumber: "807 480 2033",
          label: "Work"
        },
        {
          country: "tl",
          phoneNumber: "810 528 3783",
          label: "Home"
        }
      ],
      title: "Pastry Baker",
      company: "Moreganic",
      birthday: "1971-08-13T12:00:00.000Z",
      address: "253 Beard Street, Staples, Massachusetts, PO8089"
    },
    attachments: _attachments
  },
  {
    id: "07dd64eb-8b8f-4765-a16c-8db083c45096",
    avatar: "images/avatars/female-08.jpg",
    name: "Lorraine Pennington",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "lorrainepennington@mail.biz",
          label: "Personal"
        }
      ],
      phoneNumbers: [
        {
          country: "fm",
          phoneNumber: "932 404 3308",
          label: "Mobile"
        },
        {
          country: "fm",
          phoneNumber: "979 550 3200",
          label: "Work"
        },
        {
          country: "fm",
          phoneNumber: "868 557 3568",
          label: "Home"
        }
      ],
      title: "Electromedical Equipment Technician",
      company: "Marvane",
      birthday: "1967-06-10T12:00:00.000Z",
      address: "962 Whitney Avenue, Sussex, North Dakota, PO5796"
    },
    attachments: _attachments
  },
  {
    id: "81fdc48c-5572-4123-8a73-71b7892120de",
    avatar: "images/avatars/female-09.jpg",
    name: "Earlene Rosales",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "earlenerosales@mail.co.uk",
          label: "Personal"
        },
        {
          email: "rosales.earlene@softmicro.net",
          label: "Work"
        }
      ],
      phoneNumbers: [
        {
          country: "ki",
          phoneNumber: "927 589 3619",
          label: "Mobile"
        }
      ],
      title: "Historiographer",
      company: "Softmicro",
      birthday: "1960-11-13T12:00:00.000Z",
      address: "981 Kingston Avenue, Topaz, Connecticut, PO6866"
    },
    attachments: _attachments
  },
  {
    id: "f8bbf6be-d49a-41a3-bb80-3d51df84c12b",
    avatar: "images/avatars/female-10.jpg",
    name: "Marcia Hatfield",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "marciahatfield@mail.ca",
          label: "Personal"
        },
        {
          email: "hatfield.marcia@datagen.org",
          label: "Work"
        }
      ],
      phoneNumbers: [
        {
          country: "no",
          phoneNumber: "883 432 3718",
          label: "Mobile"
        },
        {
          country: "no",
          phoneNumber: "934 516 2135",
          label: "Work"
        },
        {
          country: "no",
          phoneNumber: "923 596 3843",
          label: "Home"
        }
      ],
      title: "Track Service Worker",
      company: "Datagen",
      birthday: "1980-02-26T12:00:00.000Z",
      address: "802 Preston Court, Waikele, Pennsylvania, PO7421"
    },
    attachments: _attachments
  },
  {
    id: "cd482941-3eaf-4560-ac37-56a9296025df",
    avatar: "images/avatars/female-11.jpg",
    name: "Liliana Ayala",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "lilianaayala@mail.io",
          label: "Personal"
        }
      ],
      phoneNumbers: [
        {
          country: "bd",
          phoneNumber: "936 590 2412",
          label: "Mobile"
        }
      ],
      title: "Insurance Analyst",
      company: "Pharmex",
      birthday: "1988-04-27T12:00:00.000Z",
      address: "935 Guider Avenue, Kipp, Wisconsin, PO5282"
    },
    attachments: _attachments
  },
  {
    id: "22f18d47-ff8d-440e-888d-a1747c093052",
    avatar: "images/avatars/female-12.jpg",
    name: "Alice Harding",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "aliceharding@mail.us",
          label: "Personal"
        }
      ],
      phoneNumbers: [
        {
          country: "sx",
          phoneNumber: "881 472 3113",
          label: "Mobile"
        },
        {
          country: "sx",
          phoneNumber: "974 548 3124",
          label: "Work"
        },
        {
          country: "sx",
          phoneNumber: "800 518 3615",
          label: "Home"
        }
      ],
      title: "Track Service Worker",
      company: "Futurity",
      birthday: "1985-09-17T12:00:00.000Z",
      address: "387 Holt Court, Thomasville, Alaska, PO2867"
    },
    attachments: _attachments
  },
  {
    id: "a9a9f382-e4c3-42fb-9fe9-65aa534732b5",
    avatar: "images/avatars/female-13.jpg",
    name: "Francisca Perkins",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "franciscaperkins@mail.tv",
          label: "Personal"
        },
        {
          email: "perkins.francisca@overplex.com",
          label: "Work"
        }
      ],
      phoneNumbers: [
        {
          country: "au",
          phoneNumber: "830 430 3437",
          label: "Mobile"
        },
        {
          country: "au",
          phoneNumber: "868 538 2886",
          label: "Work"
        }
      ],
      title: "Dental Laboratory Worker",
      company: "Overplex",
      birthday: "1966-08-14T12:00:00.000Z",
      address: "733 Delmonico Place, Belvoir, Virginia, PO7102"
    },
    attachments: _attachments
  },
  {
    id: "0222b24b-c288-48d1-b356-0f087fa172f8",
    avatar: null,
    name: "Warren Gates",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "warrengates@mail.name",
          label: "Personal"
        },
        {
          email: "gates.warren@qualitex.me",
          label: "Work"
        }
      ],
      phoneNumbers: [
        {
          country: "gt",
          phoneNumber: "847 513 2248",
          label: "Mobile"
        },
        {
          country: "gt",
          phoneNumber: "866 591 3665",
          label: "Work"
        },
        {
          country: "gt",
          phoneNumber: "877 539 3840",
          label: "Home"
        }
      ],
      title: "Banker Mason",
      company: "Qualitex",
      birthday: "1977-02-23T12:00:00.000Z",
      address: "713 Fane Court, Lemoyne, Kentucky, PO3601"
    },
    attachments: _attachments
  },
  {
    id: "0630f1ca-cdb9-405d-b134-68f733334089",
    avatar: "images/avatars/female-14.jpg",
    name: "Maryann Mcintyre",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "maryannmcintyre@mail.info",
          label: "Personal"
        },
        {
          email: "mcintyre.maryann@aquafire.biz",
          label: "Work"
        }
      ],
      phoneNumbers: [
        {
          country: "bf",
          phoneNumber: "861 419 2752",
          label: "Mobile"
        },
        {
          country: "bf",
          phoneNumber: "935 553 3031",
          label: "Work"
        }
      ],
      title: "Fundraising Director",
      company: "Aquafire",
      birthday: "1963-04-07T12:00:00.000Z",
      address: "698 Brooklyn Avenue, Dixonville, Utah, PO2712"
    },
    attachments: _attachments
  },
  {
    id: "999c24f3-7bb8-4a01-85ca-2fca7863c57e",
    avatar: "images/avatars/female-15.jpg",
    name: "Sharon Marshall",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "sharonmarshall@mail.co.uk",
          label: "Personal"
        },
        {
          email: "marshall.sharon@utara.net",
          label: "Work"
        }
      ],
      phoneNumbers: [
        {
          country: "fo",
          phoneNumber: "947 441 2999",
          label: "Mobile"
        },
        {
          country: "fo",
          phoneNumber: "984 441 2615",
          label: "Work"
        },
        {
          country: "fo",
          phoneNumber: "824 541 2714",
          label: "Home"
        }
      ],
      title: "Legal Assistant",
      company: "Utara",
      birthday: "1960-01-26T12:00:00.000Z",
      address: "923 Ivan Court, Hatteras, Idaho, PO7573"
    },
    attachments: _attachments
  },
  {
    id: "7e8e1f1e-d19f-45c7-86bd-6fef599dae71",
    avatar: "images/avatars/female-16.jpg",
    name: "Margo Witt",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "margowitt@mail.ca",
          label: "Personal"
        },
        {
          email: "witt.margo@norsul.org",
          label: "Work"
        }
      ],
      phoneNumbers: [
        {
          country: "ao",
          phoneNumber: "992 596 3391",
          label: "Mobile"
        },
        {
          country: "ao",
          phoneNumber: "950 489 2505",
          label: "Work"
        },
        {
          country: "ao",
          phoneNumber: "891 540 2231",
          label: "Home"
        }
      ],
      title: "Television News Producer",
      company: "Norsul",
      birthday: "1975-08-31T12:00:00.000Z",
      address: "539 Rockaway Avenue, Whitmer, Guam, PO4871"
    },
    attachments: _attachments
  },
  {
    id: "bedcb6a2-da83-4631-866a-77d10d239477",
    avatar: "images/avatars/male-04.jpg",
    name: "Alvarado Turner",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "alvaradoturner@mail.io",
          label: "Personal"
        }
      ],
      phoneNumbers: [
        {
          country: "lv",
          phoneNumber: "961 537 3956",
          label: "Mobile"
        }
      ],
      title: "Fundraising Director",
      company: "Geologix",
      birthday: "1985-12-08T12:00:00.000Z",
      address: "233 Willmohr Street, Cressey, Iowa, PO1962"
    },
    attachments: _attachments
  },
  {
    id: "66f9de1b-f842-4d4c-bb59-f97e91db0462",
    avatar: "images/avatars/male-05.jpg",
    name: "Maldonado Rodriquez",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "maldonadorodriquez@mail.us",
          label: "Personal"
        },
        {
          email: "rodriquez.maldonado@zentility.tv",
          label: "Work"
        }
      ],
      phoneNumbers: [
        {
          country: "et",
          phoneNumber: "811 502 3398",
          label: "Mobile"
        },
        {
          country: "et",
          phoneNumber: "877 402 2443",
          label: "Work"
        },
        {
          country: "et",
          phoneNumber: "949 536 3451",
          label: "Home"
        }
      ],
      title: "Dental Laboratory Worker",
      company: "Zentility",
      birthday: "1993-06-01T12:00:00.000Z",
      address: "916 Cobek Court, Morningside, South Dakota, PO2019"
    },
    attachments: _attachments
  },
  {
    id: "9cb0ea57-3461-4182-979b-593b0c1ec6c3",
    avatar: "images/avatars/male-06.jpg",
    name: "Tran Duke",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "tranduke@mail.com",
          label: "Personal"
        },
        {
          email: "duke.tran@splinx.name",
          label: "Work"
        }
      ],
      phoneNumbers: [
        {
          country: "si",
          phoneNumber: "837 503 2254",
          label: "Mobile"
        },
        {
          country: "si",
          phoneNumber: "893 405 3190",
          label: "Work"
        },
        {
          country: "si",
          phoneNumber: "931 402 3874",
          label: "Home"
        }
      ],
      title: "Legal Assistant",
      company: "Splinx",
      birthday: "1976-04-27T12:00:00.000Z",
      address: "405 Canarsie Road, Richville, Virgin Islands, PO2744"
    },
    attachments: _attachments
  },
  {
    id: "2fb89a90-5622-4b5b-8df3-d49b85905392",
    avatar: null,
    name: "Estela Lyons",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "estelalyons@mail.me",
          label: "Personal"
        }
      ],
      phoneNumbers: [
        {
          country: "vg",
          phoneNumber: "864 459 3205",
          label: "Mobile"
        },
        {
          country: "vg",
          phoneNumber: "886 524 2880",
          label: "Work"
        },
        {
          country: "vg",
          phoneNumber: "815 484 3420",
          label: "Home"
        }
      ],
      title: "Animal Sitter",
      company: "Gonkle",
      birthday: "1968-03-11T12:00:00.000Z",
      address: "540 Metrotech Courtr, Garfield, American Samoa, PO2290"
    },
    attachments: _attachments
  },
  {
    id: "8141dd08-3a6e-4770-912c-59d0ed06dde6",
    avatar: null,
    name: "Madeleine Fletcher",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "madeleinefletcher@mail.info",
          label: "Personal"
        },
        {
          email: "fletcher.madeleine@genmom.biz",
          label: "Work"
        }
      ],
      phoneNumbers: [
        {
          country: "uy",
          phoneNumber: "898 554 3354",
          label: "Mobile"
        }
      ],
      title: "Fundraising Director",
      company: "Genmom",
      birthday: "1970-07-15T12:00:00.000Z",
      address: "825 Cherry Street, Foscoe, Minnesota, PO7290"
    },
    attachments: _attachments
  },
  {
    id: "7585015c-ada2-4f88-998d-9646865d1ad2",
    avatar: "images/avatars/male-07.jpg",
    name: "Meyer Roach",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "meyerroach@mail.co.uk",
          label: "Personal"
        }
      ],
      phoneNumbers: [
        {
          country: "uz",
          phoneNumber: "891 543 2053",
          label: "Mobile"
        },
        {
          country: "uz",
          phoneNumber: "842 564 3671",
          label: "Work"
        },
        {
          country: "uz",
          phoneNumber: "992 491 3514",
          label: "Home"
        }
      ],
      title: "Electromedical Equipment Technician",
      company: "Zentime",
      birthday: "1968-10-16T12:00:00.000Z",
      address: "315 Albemarle Road, Allison, Arkansas, PO6008"
    },
    attachments: _attachments
  },
  {
    id: "32c73a6a-67f2-48a9-b2a1-b23da83187bb",
    avatar: null,
    name: "Bolton Obrien",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "boltonobrien@mail.net",
          label: "Personal"
        },
        {
          email: "obrien.bolton@enersol.ca",
          label: "Work"
        }
      ],
      phoneNumbers: [
        {
          country: "tn",
          phoneNumber: "860 472 2458",
          label: "Mobile"
        },
        {
          country: "tn",
          phoneNumber: "887 499 3580",
          label: "Work"
        }
      ],
      title: "Banker Mason",
      company: "Enersol",
      birthday: "1968-09-08T12:00:00.000Z",
      address: "818 Aviation Road, Geyserville, Palau, PO9655"
    },
    attachments: _attachments
  },
  {
    id: "114642a2-ccb7-4cb1-ad2b-5e9b6a0c1d2e",
    avatar: "images/avatars/male-09.jpg",
    name: "Barber Johnson",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "barberjohnson@mail.org",
          label: "Personal"
        }
      ],
      phoneNumbers: [
        {
          country: "az",
          phoneNumber: "928 567 2521",
          label: "Mobile"
        },
        {
          country: "az",
          phoneNumber: "898 515 2048",
          label: "Work"
        },
        {
          country: "az",
          phoneNumber: "935 495 3348",
          label: "Home"
        }
      ],
      title: "Talent Manager",
      company: "Zounds",
      birthday: "1967-03-02T12:00:00.000Z",
      address: "386 Vernon Avenue, Dragoon, North Carolina, PO4559"
    },
    attachments: _attachments
  },
  {
    id: "310ece7d-dbb0-45d6-9e69-14c24e50fe3d",
    avatar: "images/avatars/male-10.jpg",
    name: "Cervantes Kramer",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "cervanteskramer@mail.io",
          label: "Personal"
        }
      ],
      phoneNumbers: [
        {
          country: "vg",
          phoneNumber: "998 498 2507",
          label: "Mobile"
        },
        {
          country: "vg",
          phoneNumber: "856 477 3445",
          label: "Work"
        }
      ],
      title: "Motor Winder",
      company: "Xeronk",
      birthday: "1992-09-04T12:00:00.000Z",
      address: "238 Rochester Avenue, Lydia, Oklahoma, PO3914"
    },
    attachments: _attachments
  },
  {
    id: "dcc673f6-de59-4715-94ed-8f64663d449b",
    avatar: "images/avatars/female-19.jpg",
    name: "Megan Suarez",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "megansuarez@mail.us",
          label: "Personal"
        }
      ],
      phoneNumbers: [
        {
          country: "bb",
          phoneNumber: "875 422 2053",
          label: "Mobile"
        },
        {
          country: "bb",
          phoneNumber: "861 487 2597",
          label: "Work"
        },
        {
          country: "bb",
          phoneNumber: "873 414 3953",
          label: "Home"
        }
      ],
      title: "Bindery Machine Operator",
      company: "Cemention",
      birthday: "1984-09-08T12:00:00.000Z",
      address: "112 Tillary Street, Camptown, Vermont, PO8827"
    },
    attachments: _attachments
  },
  {
    id: "3e4ca731-d39b-4ad9-b6e0-f84e67f4b74a",
    background: "images/cards/26-640x480.jpg",
    name: "Ofelia Ratliff",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "ofeliaratliff@mail.tv",
          label: "Personal"
        }
      ],
      phoneNumbers: [
        {
          country: "vu",
          phoneNumber: "978 546 3699",
          label: "Mobile"
        },
        {
          country: "vu",
          phoneNumber: "892 551 2229",
          label: "Work"
        },
        {
          country: "vu",
          phoneNumber: "949 495 3479",
          label: "Home"
        }
      ],
      company: "Buzzmaker",
      birthday: "1988-11-11T12:00:00.000Z",
      address: "951 Hampton Avenue, Bartonsville, Mississippi, PO4232"
    },
    attachments: _attachments
  },
  {
    id: "2012d4a5-19e4-444d-aaff-1d8b1d853650",
    avatar: "images/avatars/female-01.jpg",
    name: "Laurel Parker",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "laurelparker@mail.com",
          label: "Personal"
        }
      ],
      phoneNumbers: [
        {
          country: "lu",
          phoneNumber: "805 502 3677",
          label: "Mobile"
        },
        {
          country: "lu",
          phoneNumber: "925 527 2973",
          label: "Work"
        },
        {
          country: "lu",
          phoneNumber: "975 495 2977",
          label: "Home"
        }
      ],
      title: "Fundraising Director",
      company: "Omnigog",
      birthday: "1987-05-17T12:00:00.000Z",
      address: "157 Woodhull Street, Rutherford, West Virginia, PO6646"
    },
    attachments: _attachments
  },
  {
    id: "012b8219-74bf-447c-af2c-66904d90a956",
    avatar: "images/avatars/female-02.jpg",
    name: "Tracy Delacruz",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "tracydelacruz@mail.name",
          label: "Personal"
        },
        {
          email: "delacruz.tracy@shepard.me",
          label: "Work"
        }
      ],
      phoneNumbers: [
        {
          country: "co",
          phoneNumber: "974 428 2886",
          label: "Mobile"
        }
      ],
      title: "Bindery Machine Operator",
      company: "Shepard",
      birthday: "1963-08-10T12:00:00.000Z",
      address: "604 Merit Court, Wyano, New Hampshire, PO1641"
    },
    attachments: _attachments
  },
  {
    id: "8b1befd2-66a7-4981-ae52-77f01b382d18",
    avatar: "images/avatars/female-03.jpg",
    name: "Jeannette Stanton",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "jeannettestanton@mail.info",
          label: "Personal"
        },
        {
          email: "stanton.jeannette@zentury.biz",
          label: "Work"
        }
      ],
      phoneNumbers: [
        {
          country: "dz",
          phoneNumber: "947 561 3783",
          label: "Mobile"
        },
        {
          country: "dz",
          phoneNumber: "917 463 3737",
          label: "Work"
        },
        {
          country: "dz",
          phoneNumber: "835 510 2059",
          label: "Home"
        }
      ],
      title: "Hotel Manager",
      company: "Zentury",
      birthday: "1975-09-02T12:00:00.000Z",
      address: "100 Menahan Street, Snyderville, Kansas, PO1006"
    },
    attachments: _attachments
  },
  {
    id: "844668c3-5e20-4fed-9e3a-7d274f696e61",
    avatar: "images/avatars/female-04.jpg",
    name: "Johnnie Cleveland",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "johnniecleveland@mail.co.uk",
          label: "Personal"
        },
        {
          email: "cleveland.johnnie@viasia.net",
          label: "Work"
        }
      ],
      phoneNumbers: [
        {
          country: "au",
          phoneNumber: "947 468 2942",
          label: "Mobile"
        }
      ],
      title: "Fundraising Director",
      company: "Viasia",
      birthday: "1986-03-15T12:00:00.000Z",
      address: "283 Albany Avenue, Jennings, Rhode Island, PO1646"
    },
    attachments: _attachments
  },
  {
    id: "5a01e870-8be1-45a5-b58a-ec09c06e8f28",
    avatar: "images/avatars/female-05.jpg",
    name: "Staci Hyde",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "stacihyde@mail.ca",
          label: "Personal"
        }
      ],
      phoneNumbers: [
        {
          country: "id",
          phoneNumber: "944 525 2944",
          label: "Mobile"
        },
        {
          country: "id",
          phoneNumber: "877 500 2506",
          label: "Work"
        }
      ],
      title: "Banker Mason",
      company: "Zilla",
      birthday: "1975-04-22T12:00:00.000Z",
      address: "560 Dooley Street, Ellerslie, Louisiana, PO1005"
    },
    attachments: _attachments
  },
  {
    id: "5ac1f193-f150-45f9-bfe4-b7b4e1a83ff9",
    avatar: "images/avatars/female-06.jpg",
    name: "Angela Gallagher",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "angelagallagher@mail.org",
          label: "Personal"
        }
      ],
      phoneNumbers: [
        {
          country: "et",
          phoneNumber: "996 514 3856",
          label: "Mobile"
        },
        {
          country: "et",
          phoneNumber: "903 539 2049",
          label: "Work"
        },
        {
          country: "et",
          phoneNumber: "938 463 3685",
          label: "Home"
        }
      ],
      title: "Electromedical Equipment Technician",
      company: "Zenolux",
      birthday: "1965-08-02T12:00:00.000Z",
      address: "445 Remsen Avenue, Ruckersville, Delaware, PO2712"
    },
    attachments: _attachments
  },
  {
    id: "995df091-d78a-4bb7-840c-ba6a7d14a1bd",
    avatar: "images/avatars/male-11.jpg",
    name: "Hutchinson Levy",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "hutchinsonlevy@mail.io",
          label: "Personal"
        }
      ],
      phoneNumbers: [
        {
          country: "et",
          phoneNumber: "970 546 3452",
          label: "Mobile"
        },
        {
          country: "et",
          phoneNumber: "894 438 2430",
          label: "Work"
        }
      ],
      title: "Congressional Representative",
      company: "Zytrek",
      birthday: "1978-03-22T12:00:00.000Z",
      address: "911 Lois Avenue, Epworth, California, PO6557"
    },
    attachments: _attachments
  },
  {
    id: "7184be71-a28f-4f2b-8c45-15f78cf2f825",
    avatar: "images/avatars/female-05.jpg",
    name: "Alissa Nelson",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "alissanelson@mail.us",
          label: "Personal"
        }
      ],
      phoneNumbers: [
        {
          country: "lu",
          phoneNumber: "893 600 2639",
          label: "Mobile"
        }
      ],
      title: "Bindery Machine Operator",
      company: "Emtrak",
      birthday: "1993-10-19T12:00:00.000Z",
      address: "514 Sutter Avenue, Shindler, Puerto Rico, PO3862"
    },
    attachments: _attachments
  },
  {
    id: "325d508c-ca49-42bf-b0d5-c4a6b8da3d5c",
    avatar: null,
    name: "Oliver Head",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "oliverhead@mail.tv",
          label: "Personal"
        }
      ],
      phoneNumbers: [
        {
          country: "bn",
          phoneNumber: "977 528 3294",
          label: "Mobile"
        }
      ],
      title: "Meteorologist",
      company: "Rameon",
      birthday: "1967-01-05T12:00:00.000Z",
      address: "569 Clermont Avenue, Movico, Marshall Islands, PO7293"
    },
    attachments: _attachments
  },
  {
    id: "c674b6e1-b846-4bba-824b-0b4df0cdec48",
    avatar: "images/avatars/male-13.jpg",
    name: "Duran Barr",
    about: "Hi there! I'm using FuseChat.",
    details: {
      emails: [
        {
          email: "duranbarr@mail.com",
          label: "Personal"
        },
        {
          email: "barr.duran@hinway.name",
          label: "Work"
        }
      ],
      phoneNumbers: [
        {
          country: "sr",
          phoneNumber: "857 457 2508",
          label: "Mobile"
        },
        {
          country: "sr",
          phoneNumber: "887 522 2146",
          label: "Work"
        },
        {
          country: "sr",
          phoneNumber: "947 574 3174",
          label: "Home"
        }
      ],
      title: "Insurance Analyst",
      company: "Hinway",
      birthday: "1977-11-06T12:00:00.000Z",
      address: "103 Chestnut Avenue, Glenbrook, Indiana, PO2578"
    },
    attachments: _attachments
  }
];
var profile = {
  id: "cfaad35d-07a3-4447-a6c3-d8c3d54fd5df",
  name: "Brian Hughes",
  email: "hughes.brian@company.com",
  avatar: "images/avatars/brian-hughes.jpg",
  about: "Hi there! I'm using FuseChat."
};

// src/app/mock-api/apps/chat/api.ts
var _ChatMockApi = class _ChatMockApi {
  /**
   * Constructor
   */
  constructor(_fuseMockApiService) {
    this._fuseMockApiService = _fuseMockApiService;
    this._chats = chats;
    this._contacts = contacts;
    this._messages = messages;
    this._profile = profile;
    this.registerHandlers();
    this._chats = this._chats.map((chat) => __spreadProps(__spreadValues({}, chat), {
      // Get the actual contact object from the id and attach it to the chat
      contact: this._contacts.find((contact) => contact.id === chat.contactId),
      // Since we use same set of messages on all chats, we assign them here.
      messages: this._messages.map((message) => __spreadProps(__spreadValues({}, message), {
        chatId: chat.id,
        contactId: message.contactId === "me" ? this._profile.id : chat.contactId,
        isMine: message.contactId === "me"
      }))
    }));
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Register Mock API handlers
   */
  registerHandlers() {
    this._fuseMockApiService.onGet("api/apps/chat/chats").reply(() => {
      const chats2 = cloneDeep_default(this._chats);
      return [200, chats2];
    });
    this._fuseMockApiService.onGet("api/apps/chat/chat").reply(({ request }) => {
      const id = request.params.get("id");
      const chats2 = cloneDeep_default(this._chats);
      const chat = chats2.find((item) => item.id === id);
      return [200, chat];
    });
    this._fuseMockApiService.onPatch("api/apps/chat/chat").reply(({ request }) => {
      const id = request.body.id;
      const chat = cloneDeep_default(request.body.chat);
      let updatedChat = null;
      this._chats.forEach((item, index, chats2) => {
        if (item.id === id) {
          chats2[index] = assign_default({}, chats2[index], chat);
          updatedChat = chats2[index];
        }
      });
      return [200, updatedChat];
    });
    this._fuseMockApiService.onGet("api/apps/chat/contacts").reply(() => {
      let contacts3 = cloneDeep_default(this._contacts);
      contacts3.sort((a, b) => a.name.localeCompare(b.name));
      contacts3 = contacts3.map((contact) => omit_default(contact, ["details", "attachments"]));
      return [200, contacts3];
    });
    this._fuseMockApiService.onGet("api/apps/chat/contact").reply(({ request }) => {
      const id = request.params.get("id");
      const contacts3 = cloneDeep_default(this._contacts);
      const contact = contacts3.find((item) => item.id === id);
      return [200, contact];
    });
    this._fuseMockApiService.onGet("api/apps/chat/profile").reply(() => {
      const profile2 = cloneDeep_default(this._profile);
      return [200, profile2];
    });
  }
};
_ChatMockApi.\u0275fac = function ChatMockApi_Factory(t) {
  return new (t || _ChatMockApi)(\u0275\u0275inject(FuseMockApiService));
};
_ChatMockApi.\u0275prov = /* @__PURE__ */ \u0275\u0275defineInjectable({ token: _ChatMockApi, factory: _ChatMockApi.\u0275fac, providedIn: "root" });
var ChatMockApi = _ChatMockApi;

// src/app/mock-api/apps/contacts/data.ts
var contacts2 = [
  {
    id: "cd5fa417-b667-482d-b208-798d9da3213c",
    avatar: "images/avatars/male-01.jpg",
    background: "images/cards/14-640x480.jpg",
    name: "Dejesus Michael",
    emails: [
      {
        email: "dejesusmichael@mail.org",
        label: "Personal"
      },
      {
        email: "michael.dejesus@vitricomp.io",
        label: "Work"
      }
    ],
    phoneNumbers: [
      {
        country: "bs",
        phoneNumber: "984 531 2468",
        label: "Mobile"
      },
      {
        country: "bs",
        phoneNumber: "806 470 2693",
        label: "Work"
      }
    ],
    title: "Track Service Worker",
    company: "Vitricomp",
    birthday: "1975-01-10T12:00:00.000Z",
    address: "279 Independence Avenue, Calvary, Guam, PO4127",
    notes: "<p>Do incididunt cillum duis eu pariatur enim proident minim officia amet proident consequat consequat qui consequat magna magna occaecat aliquip culpa pariatur velit nisi nostrud irure eu ullamco exercitation sint.</p><p>Cillum deserunt laborum laborum quis nisi enim et aliquip labore excepteur in excepteur labore amet in ipsum ipsum nostrud deserunt lorem nisi voluptate dolor minim enim ut eu cupidatat enim.</p>",
    tags: ["56ddbd47-4078-4ddd-8448-73c5e88d5f59"]
  },
  {
    id: "beec5287-ed50-4504-858a-5dc3f8ce6935",
    avatar: null,
    background: null,
    name: "Dena Molina",
    emails: [
      {
        email: "denamolina@mail.us",
        label: "Personal"
      },
      {
        email: "molina.dena@envire.tv",
        label: "Work"
      }
    ],
    phoneNumbers: [
      {
        country: "io",
        phoneNumber: "934 537 3180",
        label: "Mobile"
      }
    ],
    title: "Weather Analyst",
    company: "Envire",
    birthday: "1994-12-05T12:00:00.000Z",
    address: "856 Woodside Avenue, Alfarata, Iowa, PO4992",
    notes: "<p>Consequat duis ullamco sint elit pariatur esse dolore nostrud consequat lorem duis sunt veniam ipsum exercitation eiusmod consequat nisi quis voluptate quis officia irure fugiat ex duis eu amet ex.</p><p>Irure est nisi dolor culpa sunt nulla irure lorem adipisicing non do consequat deserunt et ea eu non reprehenderit fugiat ex elit nulla sunt quis voluptate enim nulla aliquip veniam.</p>",
    tags: ["56ddbd47-4078-4ddd-8448-73c5e88d5f59"]
  },
  {
    id: "9d3f0e7f-dcbd-4e56-a5e8-87b8154e9edf",
    avatar: "images/avatars/male-02.jpg",
    background: "images/cards/15-640x480.jpg",
    name: "Bernard Langley",
    emails: [
      {
        email: "bernardlangley@mail.com",
        label: "Personal"
      },
      {
        email: "langley.bernard@boilcat.name",
        label: "Work"
      }
    ],
    phoneNumbers: [
      {
        country: "md",
        phoneNumber: "893 548 2862",
        label: "Mobile"
      }
    ],
    title: "Electromedical Equipment Technician",
    company: "Boilcat",
    birthday: "1988-05-26T12:00:00.000Z",
    address: "943 Adler Place, Hamilton, South Dakota, PO5592",
    notes: "<p>Est amet in adipisicing ex excepteur ullamco est lorem adipisicing veniam reprehenderit elit commodo cillum commodo eu officia fugiat id reprehenderit sunt mollit eiusmod dolor fugiat ad do esse aliquip.</p><p>Mollit amet adipisicing enim est est commodo sint et eu nulla in laboris ipsum aliqua elit aliqua adipisicing ea nulla nulla consectetur velit laborum labore ullamco eu sit consectetur velit.</p>",
    tags: ["c31e9e5d-e0cb-4574-a13f-8a6ee5ff8309"]
  },
  {
    id: "42a5da95-5e6d-42fd-a09d-de755d123a47",
    avatar: "images/avatars/male-03.jpg",
    background: "images/cards/16-640x480.jpg",
    name: "Mclaughlin Steele",
    emails: [
      {
        email: "mclaughlinsteele@mail.me",
        label: "Personal"
      },
      {
        email: "steele.mclaughlin@accel.info",
        label: "Work"
      }
    ],
    phoneNumbers: [
      {
        country: "va",
        phoneNumber: "830 484 3813",
        label: "Mobile"
      },
      {
        country: "va",
        phoneNumber: "999 475 2789",
        label: "Work"
      },
      {
        country: "va",
        phoneNumber: "933 406 3598",
        label: "Home"
      }
    ],
    company: "Accel",
    birthday: "1968-08-13T12:00:00.000Z",
    address: "334 Sandford Street, Savage, Virgin Islands, PO1858",
    notes: "<p>Consequat eu aliquip dolor non consequat laborum ad non labore cillum consectetur quis dolore do ea nulla incididunt proident ea eiusmod in do qui eiusmod et irure dolor ea adipisicing.</p><p>Reprehenderit occaecat nostrud ad aliquip commodo amet velit id ut minim dolor mollit mollit in eiusmod voluptate lorem nisi labore culpa elit proident laborum ipsum occaecat esse sint nostrud esse.</p>",
    tags: ["56ddbd47-4078-4ddd-8448-73c5e88d5f59"]
  },
  {
    id: "a7806ced-03f1-4197-8b30-00bdd463366b",
    avatar: "images/avatars/male-04.jpg",
    background: "images/cards/17-640x480.jpg",
    name: "Marsh Cochran",
    emails: [
      {
        email: "marshcochran@mail.biz",
        label: "Personal"
      }
    ],
    phoneNumbers: [
      {
        country: "tz",
        phoneNumber: "864 401 3980",
        label: "Mobile"
      },
      {
        country: "tz",
        phoneNumber: "956 546 2589",
        label: "Work"
      }
    ],
    title: "Fundraising Director",
    company: "Xsports",
    birthday: "1983-12-22T12:00:00.000Z",
    address: "487 Hamilton Walk, Bergoo, American Samoa, PO5616",
    notes: "<p>Id eiusmod deserunt amet lorem commodo consequat nostrud magna aliquip ex et pariatur labore non elit ad ad nulla culpa reprehenderit enim magna aliqua enim pariatur occaecat sint do lorem.</p><p>Adipisicing ut est nulla nisi cupidatat consequat aliqua et esse in voluptate amet eiusmod ut esse ea do irure commodo aute culpa amet consequat id adipisicing et incididunt ut duis.</p>",
    tags: ["2026ce08-d08f-4b4f-9506-b10cdb5b104f"]
  },
  {
    id: "f4ad15d9-5a24-463a-88ea-6189d6bb3a53",
    avatar: "images/avatars/male-05.jpg",
    background: "images/cards/18-640x480.jpg",
    name: "Parrish Austin",
    emails: [
      {
        email: "parrishaustin@mail.co.uk",
        label: "Personal"
      },
      {
        email: "austin.parrish@insource.net",
        label: "Work"
      }
    ],
    phoneNumbers: [
      {
        country: "lv",
        phoneNumber: "834 426 3574",
        label: "Mobile"
      },
      {
        country: "lv",
        phoneNumber: "816 573 3694",
        label: "Work"
      },
      {
        country: "lv",
        phoneNumber: "967 515 2009",
        label: "Home"
      }
    ],
    title: "Motor Winder",
    company: "Insource",
    birthday: "1963-08-24T12:00:00.000Z",
    address: "610 Harbor Lane, Cascades, Minnesota, PO8639",
    notes: "<p>Cillum enim eiusmod dolor aliqua ipsum exercitation sint aliqua lorem dolore id velit sint velit labore cupidatat minim cupidatat elit est magna eu proident eiusmod non pariatur est esse pariatur.</p><p>Sint do enim officia velit pariatur excepteur commodo adipisicing labore elit velit velit id exercitation excepteur veniam reprehenderit sint nulla duis ad incididunt cillum in in labore laboris magna esse.</p>",
    tags: ["c31e9e5d-e0cb-4574-a13f-8a6ee5ff8309"]
  },
  {
    id: "780d0111-5e5c-4694-8d1d-0ea421971fbf",
    avatar: "images/avatars/female-02.jpg",
    background: "images/cards/19-640x480.jpg",
    name: "Laverne Dodson",
    emails: [
      {
        email: "lavernedodson@mail.ca",
        label: "Personal"
      }
    ],
    phoneNumbers: [
      {
        country: "ar",
        phoneNumber: "964 417 2318",
        label: "Mobile"
      },
      {
        country: "ar",
        phoneNumber: "830 410 2506",
        label: "Work"
      }
    ],
    title: "Television News Producer",
    company: "Lovepad",
    birthday: "1973-09-25T12:00:00.000Z",
    address: "428 Newport Street, Neahkahnie, Arkansas, PO8324",
    notes: "<p>Incididunt lorem proident est anim amet nulla do nulla ea anim ullamco ea amet voluptate laboris do elit elit consequat in esse in dolor enim irure ut irure ad commodo.</p><p>Aliqua dolore nulla sunt ad nostrud aute labore occaecat non amet nulla adipisicing sint eu lorem velit sint do sint adipisicing esse adipisicing anim culpa quis dolor non magna ea.</p>",
    tags: ["a8991c76-2fda-4bbd-a718-df13d6478847"]
  },
  {
    id: "bf172879-423a-4fd6-8df3-6d1938bbfe1f",
    avatar: "images/avatars/male-06.jpg",
    background: "images/cards/20-640x480.jpg",
    name: "Edwards Mckenzie",
    emails: [
      {
        email: "edwardsmckenzie@mail.org",
        label: "Personal"
      },
      {
        email: "mckenzie.edwards@bugsall.io",
        label: "Work"
      }
    ],
    phoneNumbers: [
      {
        country: "pe",
        phoneNumber: "934 519 2903",
        label: "Mobile"
      },
      {
        country: "pe",
        phoneNumber: "989 489 3662",
        label: "Work"
      },
      {
        country: "pe",
        phoneNumber: "813 461 2790",
        label: "Home"
      }
    ],
    title: "Legal Assistant",
    company: "Bugsall",
    birthday: "1988-07-27T12:00:00.000Z",
    address: "384 Polhemus Place, Dalton, Palau, PO6038",
    notes: "<p>Eu veniam consectetur eiusmod anim sint anim consectetur do consectetur aliqua cillum proident fugiat do in aliqua ipsum id consequat commodo qui officia adipisicing ullamco occaecat laboris proident incididunt exercitation.</p><p>Velit ullamco magna aute proident irure ut magna ullamco labore dolor deserunt deserunt tempor fugiat ex ullamco do sunt veniam reprehenderit officia elit duis sint ut proident pariatur est reprehenderit.</p>",
    tags: ["3eaab175-ec0d-4db7-bc3b-efc633c769be"]
  },
  {
    id: "1eaa3213-ece2-4ba6-8e15-eb36ca388f50",
    avatar: "images/avatars/female-03.jpg",
    background: "images/cards/21-640x480.jpg",
    name: "Trudy Berg",
    emails: [
      {
        email: "trudyberg@mail.us",
        label: "Personal"
      },
      {
        email: "berg.trudy@satiance.tv",
        label: "Work"
      }
    ],
    phoneNumbers: [
      {
        country: "ls",
        phoneNumber: "912 539 2770",
        label: "Mobile"
      }
    ],
    title: "Meteorologist",
    company: "Satiance",
    birthday: "1989-12-15T12:00:00.000Z",
    address: "945 Jerome Avenue, Riceville, North Carolina, PO1625",
    notes: "<p>Excepteur ullamco aute aliqua reprehenderit ullamco do anim ut ut veniam et ut et ut commodo aliqua consequat occaecat fugiat dolor labore proident ipsum ad culpa est cillum aliqua reprehenderit.</p><p>Amet aliqua sint laboris in aute nostrud voluptate tempor ea tempor laborum tempor culpa dolore aliqua nulla dolore ad enim id cupidatat nostrud nostrud amet non velit id fugiat lorem.</p>",
    tags: ["65930b5a-5d2a-4303-b11f-865d69e6fdb5"]
  },
  {
    id: "abd9e78b-9e96-428f-b3ff-4d934c401bee",
    avatar: "images/avatars/female-04.jpg",
    background: "images/cards/22-640x480.jpg",
    name: "Elsie Melendez",
    emails: [
      {
        email: "elsiemelendez@mail.com",
        label: "Personal"
      },
      {
        email: "melendez.elsie@chillium.name",
        label: "Work"
      }
    ],
    phoneNumbers: [
      {
        country: "tg",
        phoneNumber: "907 515 3007",
        label: "Mobile"
      },
      {
        country: "tg",
        phoneNumber: "967 534 2803",
        label: "Work"
      }
    ],
    title: "Fundraising Director",
    company: "Chillium",
    birthday: "1980-06-28T12:00:00.000Z",
    address: "428 Varanda Place, Veyo, Oklahoma, PO6188",
    notes: "<p>Laboris commodo consequat duis dolor ullamco nisi sunt ipsum nisi elit dolore aute sint tempor qui ad sit aliqua laboris consequat dolore aliqua est deserunt irure cillum tempor ut veniam.</p><p>Eiusmod nulla ex esse in deserunt consectetur non qui cillum reprehenderit magna sit ipsum lorem aute consequat sint magna id laboris velit adipisicing non ipsum ipsum sint velit ex non.</p>",
    tags: ["3eaab175-ec0d-4db7-bc3b-efc633c769be"]
  },
  {
    id: "efae92cc-3bd1-4c6a-a395-b6760c69bd55",
    avatar: "images/avatars/male-07.jpg",
    background: "images/cards/23-640x480.jpg",
    name: "Lamb Underwood",
    emails: [
      {
        email: "lambunderwood@mail.me",
        label: "Personal"
      }
    ],
    phoneNumbers: [
      {
        country: "pf",
        phoneNumber: "855 517 2767",
        label: "Mobile"
      },
      {
        country: "pf",
        phoneNumber: "906 442 3593",
        label: "Work"
      },
      {
        country: "pf",
        phoneNumber: "905 402 2121",
        label: "Home"
      }
    ],
    title: "Legal Assistant",
    company: "Exotechno",
    birthday: "1990-07-26T12:00:00.000Z",
    address: "609 Greenpoint Avenue, Beason, Vermont, PO5229",
    notes: "<p>Exercitation tempor laboris dolor deserunt nulla et nisi ullamco minim duis sint nulla sint deserunt irure excepteur nostrud ipsum duis enim sit exercitation eiusmod tempor commodo excepteur mollit cupidatat fugiat.</p><p>Deserunt est dolore nulla laborum consequat veniam elit lorem do exercitation incididunt ea ad laboris lorem ipsum ex incididunt nostrud ipsum laborum et nostrud minim aute velit incididunt quis quis.</p>",
    tags: ["3eaab175-ec0d-4db7-bc3b-efc633c769be"]
  },
  {
    id: "bde636a7-c3d2-4bff-939a-aab11df1516b",
    avatar: null,
    background: null,
    name: "Tessa Valdez",
    emails: [
      {
        email: "tessavaldez@mail.info",
        label: "Personal"
      }
    ],
    phoneNumbers: [
      {
        country: "dz",
        phoneNumber: "892 430 2631",
        label: "Mobile"
      },
      {
        country: "dz",
        phoneNumber: "997 525 2354",
        label: "Work"
      },
      {
        country: "dz",
        phoneNumber: "907 472 2857",
        label: "Home"
      }
    ],
    title: "Banker Mason",
    company: "Securia",
    birthday: "1994-01-10T12:00:00.000Z",
    address: "183 Crosby Avenue, Blanco, Mississippi, PO3463",
    notes: "<p>Mollit qui amet in esse ipsum nostrud cupidatat occaecat proident aliquip non mollit commodo ex labore enim culpa dolor aute occaecat cillum sit excepteur tempor culpa nostrud nulla qui commodo.</p><p>Labore nulla id excepteur non velit adipisicing tempor reprehenderit cillum sint do consectetur laboris ut proident pariatur quis aute ad dolor quis labore labore nostrud sunt elit proident enim aliqua.</p>",
    tags: ["cbde2486-5033-4e09-838e-e901b108cd41"]
  },
  {
    id: "6519600a-5eaa-45f8-8bed-c46fddb3b26a",
    avatar: "images/avatars/male-08.jpg",
    background: "images/cards/24-640x480.jpg",
    name: "Mcleod Wagner",
    emails: [
      {
        email: "mcleodwagner@mail.biz",
        label: "Personal"
      }
    ],
    phoneNumbers: [
      {
        country: "at",
        phoneNumber: "977 590 2773",
        label: "Mobile"
      },
      {
        country: "at",
        phoneNumber: "828 496 3813",
        label: "Work"
      },
      {
        country: "at",
        phoneNumber: "831 432 2512",
        label: "Home"
      }
    ],
    company: "Inrt",
    birthday: "1980-12-03T12:00:00.000Z",
    address: "736 Glen Street, Kaka, West Virginia, PO9350",
    notes: "<p>Laboris consequat est anim quis quis eiusmod ipsum non quis fugiat anim culpa non elit mollit pariatur veniam nisi irure velit dolore dolor proident nisi deserunt culpa nisi et laborum.</p><p>Eiusmod eu esse ipsum voluptate excepteur ipsum et proident cupidatat sint sunt aliquip lorem culpa esse et dolor fugiat sit est id consectetur sint et ea pariatur occaecat nulla irure.</p>",
    tags: ["56ddbd47-4078-4ddd-8448-73c5e88d5f59"]
  },
  {
    id: "6d80a6f6-2884-4ac4-9c73-06b82c220017",
    avatar: "images/avatars/female-06.jpg",
    background: "images/cards/25-640x480.jpg",
    name: "Kristie Hall",
    emails: [
      {
        email: "kristiehall@mail.co.uk",
        label: "Personal"
      },
      {
        email: "hall.kristie@austech.net",
        label: "Work"
      }
    ],
    phoneNumbers: [
      {
        country: "tn",
        phoneNumber: "841 530 3641",
        label: "Mobile"
      },
      {
        country: "tn",
        phoneNumber: "941 410 3743",
        label: "Work"
      },
      {
        country: "tn",
        phoneNumber: "938 599 3850",
        label: "Home"
      }
    ],
    title: "Electromedical Equipment Technician",
    company: "Austech",
    birthday: "1975-08-31T12:00:00.000Z",
    address: "547 Revere Place, Hoehne, New Hampshire, PO2125",
    notes: "<p>Duis incididunt minim nisi sit qui dolor aliquip quis ipsum id amet occaecat sit ullamco minim velit est eiusmod anim proident consectetur non reprehenderit ea reprehenderit dolore in nisi eiusmod.</p><p>Ut commodo aliqua non ut proident velit et commodo voluptate eu mollit dolor veniam ipsum velit aute esse est adipisicing id aliqua nostrud nostrud nisi enim officia eiusmod in enim.</p>",
    tags: ["56ddbd47-4078-4ddd-8448-73c5e88d5f59"]
  },
  {
    id: "35190d23-036e-44ef-b545-cc744c626edd",
    avatar: "images/avatars/female-07.jpg",
    background: "images/cards/26-640x480.jpg",
    name: "Shannon Kennedy",
    emails: [
      {
        email: "shannonkennedy@mail.ca",
        label: "Personal"
      }
    ],
    phoneNumbers: [
      {
        country: "gb",
        phoneNumber: "899 508 2992",
        label: "Mobile"
      },
      {
        country: "gb",
        phoneNumber: "834 499 3354",
        label: "Work"
      },
      {
        country: "gb",
        phoneNumber: "834 526 3388",
        label: "Home"
      }
    ],
    title: "Gas Meter Mechanic",
    company: "Eventix",
    birthday: "1994-09-07T12:00:00.000Z",
    address: "480 Chase Court, Edinburg, Kansas, PO5357",
    notes: "<p>Lorem ex amet anim anim qui consequat ullamco consectetur et voluptate in velit dolore culpa pariatur amet enim ut non magna duis qui excepteur esse ullamco velit fugiat aute dolor.</p><p>Reprehenderit ullamco veniam sit laborum nulla sunt excepteur eiusmod anim eu ullamco tempor est qui adipisicing sit fugiat voluptate minim non incididunt quis ipsum et exercitation officia laborum incididunt nostrud.</p>",
    tags: ["a8991c76-2fda-4bbd-a718-df13d6478847"]
  },
  {
    id: "b018c194-68ec-4915-ab56-e9f3bd2d98db",
    avatar: "images/avatars/female-08.jpg",
    background: "images/cards/27-640x480.jpg",
    name: "Martha Swanson",
    emails: [
      {
        email: "marthaswanson@mail.org",
        label: "Personal"
      },
      {
        email: "swanson.martha@sequitur.io",
        label: "Work"
      }
    ],
    phoneNumbers: [
      {
        country: "gb",
        phoneNumber: "844 480 3309",
        label: "Mobile"
      },
      {
        country: "gb",
        phoneNumber: "981 591 3239",
        label: "Work"
      },
      {
        country: "gb",
        phoneNumber: "923 484 3147",
        label: "Home"
      }
    ],
    title: "Short Story Writer",
    company: "Sequitur",
    birthday: "1993-12-31T12:00:00.000Z",
    address: "595 Howard Place, Convent, Rhode Island, PO6993",
    notes: "<p>Lorem nostrud cillum non cillum nisi eu labore anim ipsum consequat consectetur sunt ipsum ipsum ad culpa laborum in ea exercitation quis voluptate velit id elit labore cillum cillum consectetur.</p><p>Ullamco ullamco nostrud aute pariatur nulla officia proident magna laborum dolor reprehenderit ullamco in reprehenderit veniam aliqua elit magna voluptate amet ut minim in labore irure culpa consequat sit pariatur.</p>",
    tags: ["a8991c76-2fda-4bbd-a718-df13d6478847"]
  },
  {
    id: "b7c355e9-e003-467e-82d2-4f6978c1a696",
    avatar: "images/avatars/female-09.jpg",
    background: "images/cards/28-640x480.jpg",
    name: "Jacklyn Morgan",
    emails: [
      {
        email: "jacklynmorgan@mail.us",
        label: "Personal"
      },
      {
        email: "morgan.jacklyn@shopabout.tv",
        label: "Work"
      }
    ],
    phoneNumbers: [
      {
        country: "so",
        phoneNumber: "974 542 2061",
        label: "Mobile"
      }
    ],
    title: "Animal Sitter",
    company: "Shopabout",
    birthday: "1976-09-30T12:00:00.000Z",
    address: "971 Conover Street, Statenville, Louisiana, PO6622",
    notes: "<p>Pariatur fugiat labore aliquip aute in adipisicing veniam et consequat magna nulla laboris eiusmod eu esse cupidatat ipsum amet sint est anim lorem consequat eiusmod sit aliquip consequat nisi duis.</p><p>Est esse excepteur non amet reprehenderit cillum ullamco ex excepteur laboris excepteur dolor magna enim consequat lorem commodo ipsum elit ea veniam non quis id nisi esse tempor enim ut.</p>",
    tags: ["3eaab175-ec0d-4db7-bc3b-efc633c769be"]
  },
  {
    id: "cfa07b7c-93d1-42e7-9592-493d9efc78ae",
    avatar: "images/avatars/female-10.jpg",
    background: "images/cards/29-640x480.jpg",
    name: "Tonya Bowers",
    emails: [
      {
        email: "tonyabowers@mail.com",
        label: "Personal"
      },
      {
        email: "bowers.tonya@tourmania.name",
        label: "Work"
      }
    ],
    phoneNumbers: [
      {
        country: "tv",
        phoneNumber: "922 585 2914",
        label: "Mobile"
      },
      {
        country: "tv",
        phoneNumber: "913 538 2961",
        label: "Work"
      }
    ],
    title: "Track Service Worker",
    company: "Tourmania",
    birthday: "1976-06-14T12:00:00.000Z",
    address: "197 Marconi Place, Welda, Delaware, PO6061",
    notes: "<p>Aliqua ea dolor est enim ipsum esse pariatur tempor nulla excepteur aliquip irure fugiat reprehenderit adipisicing ex tempor proident voluptate dolore ea dolore nostrud id incididunt culpa in do occaecat.</p><p>Aute fugiat magna velit enim in duis duis elit ipsum excepteur reprehenderit do ipsum qui cillum aliquip ut occaecat do ea et adipisicing cupidatat voluptate non elit ad aliqua ad.</p>",
    tags: ["2026ce08-d08f-4b4f-9506-b10cdb5b104f"]
  },
  {
    id: "00feeb63-c83a-4655-a37e-a07da10cfa1c",
    avatar: "images/avatars/female-11.jpg",
    background: "images/cards/30-640x480.jpg",
    name: "Latonya Cruz",
    emails: [
      {
        email: "latonyacruz@mail.me",
        label: "Personal"
      }
    ],
    phoneNumbers: [
      {
        country: "tm",
        phoneNumber: "981 508 2080",
        label: "Mobile"
      },
      {
        country: "tm",
        phoneNumber: "817 425 2052",
        label: "Work"
      },
      {
        country: "tm",
        phoneNumber: "939 434 3805",
        label: "Home"
      }
    ],
    title: "Motor Winder",
    company: "Zilch",
    birthday: "1967-11-28T12:00:00.000Z",
    address: "775 Dahill Road, Iberia, California, PO2169",
    notes: "<p>Ut occaecat tempor deserunt proident enim ex ullamco ex aliquip mollit aute reprehenderit in occaecat anim aliquip ea laboris anim laboris do non aute aute ea laboris magna sunt sit.</p><p>Ullamco in in minim culpa eiusmod amet consequat consequat magna nisi cillum occaecat irure officia voluptate et eu duis officia nostrud culpa non eiusmod anim sint et anim enim voluptate.</p>",
    tags: ["c31e9e5d-e0cb-4574-a13f-8a6ee5ff8309"]
  },
  {
    id: "142abf21-e635-4a7d-9330-e57f66adcdbe",
    avatar: "images/avatars/female-12.jpg",
    background: "images/cards/31-640x480.jpg",
    name: "Evangelina Mcclain",
    emails: [
      {
        email: "evangelinamcclain@mail.info",
        label: "Personal"
      }
    ],
    phoneNumbers: [
      {
        country: "ck",
        phoneNumber: "992 583 3187",
        label: "Mobile"
      },
      {
        country: "ck",
        phoneNumber: "881 472 3297",
        label: "Work"
      },
      {
        country: "ck",
        phoneNumber: "846 477 3596",
        label: "Home"
      }
    ],
    title: "Congressional Representative",
    company: "Straloy",
    birthday: "1976-02-15T12:00:00.000Z",
    address: "305 Columbia Street, Dupuyer, Puerto Rico, PO8744",
    notes: "<p>Proident nulla culpa magna nostrud do aliqua ullamco sit culpa ullamco eu amet culpa laborum enim fugiat non ad quis esse pariatur exercitation lorem incididunt exercitation aliquip labore minim adipisicing.</p><p>Sint ea voluptate tempor irure consequat aute laboris exercitation id minim voluptate aliquip tempor occaecat elit incididunt laboris enim labore sit aute sunt cillum ipsum ad laboris nostrud dolor excepteur.</p>",
    tags: ["2026ce08-d08f-4b4f-9506-b10cdb5b104f"]
  },
  {
    id: "e4f255a3-b5dd-45a7-975f-c399604a399a",
    avatar: "images/avatars/male-09.jpg",
    background: "images/cards/32-640x480.jpg",
    name: "Herring Gonzales",
    emails: [
      {
        email: "herringgonzales@mail.biz",
        label: "Personal"
      }
    ],
    phoneNumbers: [
      {
        country: "ai",
        phoneNumber: "995 411 2513",
        label: "Mobile"
      },
      {
        country: "ai",
        phoneNumber: "839 492 2760",
        label: "Work"
      }
    ],
    title: "Gas Meter Mechanic",
    company: "Cubix",
    birthday: "1995-02-16T12:00:00.000Z",
    address: "195 Brooklyn Road, Jeff, Marshall Islands, PO2943",
    notes: "<p>Ex nulla nisi do cillum consequat amet incididunt eu minim eu ut excepteur ad anim minim aliquip ullamco fugiat labore esse aliquip ea incididunt incididunt nisi officia consectetur dolore minim.</p><p>Et dolor consectetur anim deserunt laborum eu lorem et in nisi et officia nostrud fugiat deserunt aute irure ullamco officia fugiat voluptate exercitation ut deserunt officia nostrud tempor velit pariatur.</p>",
    tags: ["56ddbd47-4078-4ddd-8448-73c5e88d5f59"]
  },
  {
    id: "ab4f712d-d712-41a8-b567-be4c66c349a3",
    avatar: "images/avatars/female-13.jpg",
    background: "images/cards/33-640x480.jpg",
    name: "Alyce Cash",
    emails: [
      {
        email: "alycecash@mail.co.uk",
        label: "Personal"
      }
    ],
    phoneNumbers: [
      {
        country: "ht",
        phoneNumber: "969 499 3077",
        label: "Mobile"
      },
      {
        country: "ht",
        phoneNumber: "907 513 2784",
        label: "Work"
      }
    ],
    title: "Weather Analyst",
    company: "Qnekt",
    birthday: "1973-12-19T12:00:00.000Z",
    address: "964 Henry Street, Eureka, Indiana, PO1035",
    notes: "<p>Non proident pariatur nostrud dolor incididunt occaecat amet officia sunt magna anim dolor labore culpa ut laborum id incididunt officia amet mollit anim ea proident laboris non incididunt incididunt sint.</p><p>Nulla minim consectetur nostrud magna anim irure consectetur labore cupidatat laborum reprehenderit et et adipisicing in qui elit ipsum reprehenderit esse nisi non ipsum exercitation sunt eu elit velit fugiat.</p>",
    tags: ["c31e9e5d-e0cb-4574-a13f-8a6ee5ff8309"]
  },
  {
    id: "5d067800-c301-46c6-a7f7-28dc89d9a554",
    avatar: null,
    background: null,
    name: "Kristine Pacheco",
    emails: [
      {
        email: "kristinepacheco@mail.net",
        label: "Personal"
      },
      {
        email: "pacheco.kristine@vurbo.ca",
        label: "Work"
      }
    ],
    phoneNumbers: [
      {
        country: "mm",
        phoneNumber: "977 516 2492",
        label: "Mobile"
      }
    ],
    title: "Short Story Writer",
    company: "Vurbo",
    birthday: "1985-10-22T12:00:00.000Z",
    address: "622 Dodworth Street, Rose, Arizona, PO9530",
    notes: "<p>Lorem laboris excepteur magna pariatur occaecat voluptate pariatur cillum exercitation anim enim elit laborum reprehenderit laboris ad velit ut ipsum irure id ullamco minim sint ipsum occaecat esse tempor ea.</p><p>Pariatur non labore cillum consectetur aute voluptate sint adipisicing nisi laborum culpa nisi elit et amet dolor incididunt velit ex laboris ea reprehenderit eiusmod qui esse veniam labore ea sit.</p>",
    tags: ["2026ce08-d08f-4b4f-9506-b10cdb5b104f"]
  },
  {
    id: "c500255a-1173-47d0-a0e4-4944d48fc12a",
    avatar: "images/avatars/male-10.jpg",
    background: "images/cards/34-640x480.jpg",
    name: "English Haney",
    emails: [
      {
        email: "englishhaney@mail.org",
        label: "Personal"
      }
    ],
    phoneNumbers: [
      {
        country: "lb",
        phoneNumber: "989 567 3834",
        label: "Mobile"
      }
    ],
    title: "Meteorologist",
    company: "Photobin",
    birthday: "1969-09-05T12:00:00.000Z",
    address: "579 Pooles Lane, Belleview, Montana, PO4106",
    notes: "<p>Incididunt labore sunt ullamco in deserunt dolore labore voluptate adipisicing eu id duis eiusmod elit ea ad cillum culpa excepteur labore fugiat excepteur ea culpa labore sit id dolor ullamco.</p><p>Eu eu ex dolore proident nostrud et minim lorem nulla lorem nulla duis velit voluptate nisi cillum anim minim amet dolore officia id cillum in cupidatat ipsum veniam velit dolor.</p>",
    tags: ["56ddbd47-4078-4ddd-8448-73c5e88d5f59"]
  },
  {
    id: "b62359fd-f2a8-46e6-904e-31052d1cd675",
    avatar: "images/avatars/male-11.jpg",
    background: "images/cards/35-640x480.jpg",
    name: "Joseph Strickland",
    emails: [
      {
        email: "josephstrickland@mail.io",
        label: "Personal"
      },
      {
        email: "strickland.joseph@bytrex.us",
        label: "Work"
      }
    ],
    phoneNumbers: [
      {
        country: "jo",
        phoneNumber: "990 450 2729",
        label: "Mobile"
      }
    ],
    title: "Hotel Manager",
    company: "Bytrex",
    birthday: "1991-09-08T12:00:00.000Z",
    address: "844 Ellery Street, Hondah, Texas, PO1272",
    notes: "<p>Excepteur consequat magna laborum dolore ut laborum ea excepteur ad officia mollit exercitation sunt tempor amet ex ipsum aliquip cillum mollit amet laborum voluptate ipsum sit esse duis eiusmod adipisicing.</p><p>Non tempor ad pariatur adipisicing excepteur est pariatur aute et velit lorem ut est eu voluptate pariatur ea consectetur excepteur sunt reprehenderit id irure aliqua tempor anim id voluptate culpa.</p>",
    tags: ["3eaab175-ec0d-4db7-bc3b-efc633c769be"]
  },
  {
    id: "16b9e696-ea95-4dd8-86c4-3caf705a1dc6",
    avatar: "images/avatars/male-12.jpg",
    background: "images/cards/36-640x480.jpg",
    name: "Nunez Faulkner",
    emails: [
      {
        email: "nunezfaulkner@mail.tv",
        label: "Personal"
      }
    ],
    phoneNumbers: [
      {
        country: "xk",
        phoneNumber: "909 552 3327",
        label: "Mobile"
      }
    ],
    title: "Hotel Manager",
    company: "Buzzopia",
    birthday: "1982-01-23T12:00:00.000Z",
    address: "614 Herkimer Court, Darrtown, Nebraska, PO9308",
    notes: "<p>Culpa labore ullamco veniam est ullamco ipsum culpa excepteur esse esse aliqua nulla ullamco nulla amet consequat tempor aute exercitation do eu do ullamco elit excepteur est anim nisi excepteur.</p><p>Cillum eiusmod cupidatat officia ipsum ullamco adipisicing cillum adipisicing sint exercitation non enim consectetur est esse tempor fugiat sit eiusmod in exercitation enim quis duis dolor amet consequat pariatur dolor.</p>",
    tags: ["a8991c76-2fda-4bbd-a718-df13d6478847"]
  },
  {
    id: "19662ecf-0686-4aad-a46c-24b552eb2ff5",
    avatar: "images/avatars/female-15.jpg",
    background: "images/cards/14-640x480.jpg",
    name: "Juana Morrow",
    emails: [
      {
        email: "juanamorrow@mail.com",
        label: "Personal"
      }
    ],
    phoneNumbers: [
      {
        country: "ee",
        phoneNumber: "868 438 3943",
        label: "Mobile"
      }
    ],
    title: "Meteorologist",
    company: "Lyria",
    birthday: "1992-03-29T12:00:00.000Z",
    address: "663 Drew Street, Juntura, Georgia, PO9857",
    notes: "<p>Mollit et amet qui incididunt officia anim est in consectetur qui anim qui labore ea mollit veniam adipisicing ex magna commodo mollit adipisicing sunt commodo laboris labore aliquip deserunt est.</p><p>Cupidatat ut cillum anim reprehenderit ea magna enim fugiat proident anim esse lorem lorem commodo cupidatat pariatur qui commodo nulla aliqua nisi labore in adipisicing minim excepteur do eu amet.</p>",
    tags: ["cbde2486-5033-4e09-838e-e901b108cd41"]
  },
  {
    id: "26dfe954-8bf3-45ee-b285-1d0a88c8d3ea",
    avatar: "images/avatars/male-13.jpg",
    background: "images/cards/15-640x480.jpg",
    name: "Lara Gaines",
    emails: [
      {
        email: "laragaines@mail.name",
        label: "Personal"
      }
    ],
    phoneNumbers: [
      {
        country: "mr",
        phoneNumber: "891 498 2043",
        label: "Mobile"
      }
    ],
    title: "Electromedical Equipment Technician",
    company: "Acruex",
    birthday: "1961-06-07T12:00:00.000Z",
    address: "762 Troutman Street, Drummond, Oregon, PO6973",
    notes: "<p>Laboris dolor incididunt eiusmod deserunt officia labore eu est nulla velit id ex veniam qui fugiat velit irure reprehenderit dolor proident aliquip culpa nisi magna occaecat do nostrud cillum lorem.</p><p>Sit consequat laboris culpa quis laborum lorem ullamco occaecat labore duis ea et consequat pariatur reprehenderit excepteur excepteur exercitation sunt enim amet adipisicing laborum incididunt dolor aliquip culpa ea laboris.</p>",
    tags: ["65930b5a-5d2a-4303-b11f-865d69e6fdb5"]
  },
  {
    id: "d6462af2-c488-4de7-9b26-3845bd2983f9",
    avatar: "images/avatars/male-14.jpg",
    background: "images/cards/16-640x480.jpg",
    name: "Johnston Riddle",
    emails: [
      {
        email: "johnstonriddle@mail.me",
        label: "Personal"
      }
    ],
    phoneNumbers: [
      {
        country: "bt",
        phoneNumber: "979 541 2691",
        label: "Mobile"
      },
      {
        country: "bt",
        phoneNumber: "909 407 3887",
        label: "Work"
      },
      {
        country: "bt",
        phoneNumber: "864 557 3128",
        label: "Home"
      }
    ],
    title: "Hotel Manager",
    company: "Xleen",
    birthday: "1972-09-13T12:00:00.000Z",
    address: "674 Bryant Street, Grahamtown, Federated States Of Micronesia, PO2757",
    notes: "<p>Velit consequat elit anim qui eu elit aliquip consectetur aliqua cupidatat lorem laboris dolor qui ad laborum adipisicing adipisicing consequat et nostrud ullamco consequat dolore deserunt irure do aliquip non.</p><p>Ipsum commodo voluptate qui ex ullamco amet do ex dolore quis cupidatat ut anim sunt dolore excepteur anim do dolor aliqua ex aute esse eiusmod sint laborum consequat laboris cillum.</p>",
    tags: ["a8991c76-2fda-4bbd-a718-df13d6478847"]
  },
  {
    id: "a1723c04-69fe-4573-a135-6645658afe76",
    avatar: null,
    background: null,
    name: "Vargas Gardner",
    emails: [
      {
        email: "vargasgardner@mail.info",
        label: "Personal"
      },
      {
        email: "gardner.vargas@cosmosis.biz",
        label: "Work"
      }
    ],
    phoneNumbers: [
      {
        country: "bi",
        phoneNumber: "855 456 2754",
        label: "Mobile"
      }
    ],
    title: "Bindery Machine Operator",
    company: "Cosmosis",
    birthday: "1979-10-21T12:00:00.000Z",
    address: "869 Seton Place, Chemung, Maine, PO8109",
    notes: "<p>Amet non anim ex ullamco pariatur ullamco laboris eiusmod ut magna nisi amet incididunt sunt anim nisi qui ut ex sunt adipisicing consequat deserunt qui mollit duis anim quis veniam.</p><p>Magna ut id duis qui ea proident quis officia lorem commodo et et proident dolore qui quis incididunt nulla incididunt ut aliqua veniam est adipisicing adipisicing reprehenderit ad velit incididunt.</p>",
    tags: ["cbde2486-5033-4e09-838e-e901b108cd41"]
  },
  {
    id: "823e6166-c0c8-4373-9270-8a0d17489a08",
    avatar: "images/avatars/male-16.jpg",
    background: "images/cards/17-640x480.jpg",
    name: "Mccall Day",
    emails: [
      {
        email: "mccallday@mail.co.uk",
        label: "Personal"
      }
    ],
    phoneNumbers: [
      {
        country: "se",
        phoneNumber: "993 504 3286",
        label: "Mobile"
      },
      {
        country: "se",
        phoneNumber: "924 434 2238",
        label: "Work"
      },
      {
        country: "se",
        phoneNumber: "816 466 2634",
        label: "Home"
      }
    ],
    title: "Historiographer",
    company: "Nipaz",
    birthday: "1964-03-05T12:00:00.000Z",
    address: "854 Hanover Place, Harleigh, New Jersey, PO9459",
    notes: "<p>Ea occaecat nisi cillum officia in velit ipsum reprehenderit ex fugiat fugiat ad velit pariatur ullamco sint in elit quis aute id cupidatat nostrud quis culpa aliquip id officia excepteur.</p><p>Ea ut consequat sit ullamco do pariatur quis officia ad ipsum quis nisi in nulla incididunt esse pariatur amet qui ullamco consectetur dolor voluptate sit qui mollit reprehenderit reprehenderit amet.</p>",
    tags: ["65930b5a-5d2a-4303-b11f-865d69e6fdb5"]
  },
  {
    id: "2c37ed00-427a-46d7-8f8f-d711c768d1ee",
    avatar: "images/avatars/male-17.jpg",
    background: "images/cards/18-640x480.jpg",
    name: "Silva Foster",
    emails: [
      {
        email: "silvafoster@mail.net",
        label: "Personal"
      }
    ],
    phoneNumbers: [
      {
        country: "bn",
        phoneNumber: "916 511 3837",
        label: "Mobile"
      },
      {
        country: "bn",
        phoneNumber: "949 564 3247",
        label: "Work"
      }
    ],
    title: "Insurance Analyst",
    company: "Extrawear",
    birthday: "1980-04-29T12:00:00.000Z",
    address: "137 Bridge Street, Sisquoc, District Of Columbia, PO4105",
    notes: "<p>Ipsum velit est do velit do deserunt cupidatat officia duis laborum veniam sunt in ex reprehenderit esse ex ad aute anim duis ut sunt reprehenderit occaecat ut nostrud eu minim.</p><p>Aliqua consequat adipisicing adipisicing aliquip voluptate fugiat eu amet nostrud id proident non nisi fugiat velit nostrud ea officia non laboris magna cillum exercitation culpa eiusmod mollit fugiat et lorem.</p>",
    tags: ["cbde2486-5033-4e09-838e-e901b108cd41"]
  },
  {
    id: "944764c0-b261-4428-9188-bbd3022d66a8",
    avatar: "images/avatars/female-16.jpg",
    background: "images/cards/19-640x480.jpg",
    name: "Cathryn Snider",
    emails: [
      {
        email: "cathrynsnider@mail.ca",
        label: "Personal"
      },
      {
        email: "snider.cathryn@phormula.org",
        label: "Work"
      }
    ],
    phoneNumbers: [
      {
        country: "na",
        phoneNumber: "896 471 3036",
        label: "Mobile"
      },
      {
        country: "na",
        phoneNumber: "851 491 3567",
        label: "Work"
      },
      {
        country: "na",
        phoneNumber: "805 487 2016",
        label: "Home"
      }
    ],
    title: "Short Story Writer",
    company: "Phormula",
    birthday: "1981-06-09T12:00:00.000Z",
    address: "528 Glenmore Avenue, Elrama, Illinois, PO2952",
    notes: "<p>Ea enim exercitation lorem excepteur officia nulla culpa culpa nisi veniam quis non duis exercitation labore commodo et occaecat reprehenderit ex velit exercitation commodo cupidatat amet veniam mollit magna consectetur.</p><p>Voluptate consectetur eu id eiusmod anim reprehenderit incididunt duis veniam tempor cillum ea esse tempor do laborum dolore sint ea duis incididunt in do aliqua voluptate incididunt officia excepteur do.</p>",
    tags: ["56ddbd47-4078-4ddd-8448-73c5e88d5f59"]
  },
  {
    id: "f2b3c756-5ad2-4d4b-aee5-b32c91457128",
    avatar: null,
    background: null,
    name: "Mooney Cantrell",
    emails: [
      {
        email: "mooneycantrell@mail.io",
        label: "Personal"
      }
    ],
    phoneNumbers: [
      {
        country: "bh",
        phoneNumber: "915 577 3020",
        label: "Mobile"
      },
      {
        country: "bh",
        phoneNumber: "923 431 3594",
        label: "Work"
      }
    ],
    title: "Fundraising Director",
    company: "Crustatia",
    birthday: "1968-12-07T12:00:00.000Z",
    address: "277 Coventry Road, Fairforest, Nevada, PO6031",
    notes: "<p>Lorem mollit dolore nostrud sunt id anim veniam labore duis eiusmod duis fugiat aliqua occaecat do labore culpa consectetur consectetur sunt amet tempor incididunt tempor esse sunt id elit non.</p><p>Laborum mollit ullamco quis ad culpa nisi sit nisi veniam minim adipisicing sint eiusmod velit amet minim aliquip nulla eiusmod nulla laboris quis proident in adipisicing aute et ea anim.</p>",
    tags: ["2026ce08-d08f-4b4f-9506-b10cdb5b104f"]
  },
  {
    id: "54b1c201-4b2b-4be0-ad70-a6413e9628cd",
    avatar: "images/avatars/female-17.jpg",
    background: "images/cards/20-640x480.jpg",
    name: "Saundra Murphy",
    emails: [
      {
        email: "saundramurphy@mail.us",
        label: "Personal"
      }
    ],
    phoneNumbers: [
      {
        country: "mt",
        phoneNumber: "902 529 2999",
        label: "Mobile"
      }
    ],
    title: "Dental Laboratory Worker",
    company: "Zilencio",
    birthday: "1983-11-07T12:00:00.000Z",
    address: "557 Monroe Street, Mayfair, Maryland, PO7200",
    notes: "<p>Fugiat mollit sunt aliquip consectetur ipsum ut aliqua id ex laboris labore id elit nulla irure id aute pariatur do officia proident eiusmod proident reprehenderit dolor non dolor laborum nulla.</p><p>Pariatur reprehenderit incididunt voluptate enim aliqua laborum anim veniam pariatur irure exercitation non dolore velit et ex culpa lorem ipsum mollit eu sint duis aliquip elit amet consectetur velit minim.</p>",
    tags: ["56ddbd47-4078-4ddd-8448-73c5e88d5f59"]
  },
  {
    id: "faf979c7-a13b-445a-b30a-08845f5fa90e",
    avatar: "images/avatars/female-18.jpg",
    background: "images/cards/21-640x480.jpg",
    name: "Enid Sparks",
    emails: [
      {
        email: "enidsparks@mail.tv",
        label: "Personal"
      }
    ],
    phoneNumbers: [
      {
        country: "bh",
        phoneNumber: "813 410 3258",
        label: "Mobile"
      },
      {
        country: "bh",
        phoneNumber: "877 501 2767",
        label: "Work"
      }
    ],
    title: "Historiographer",
    company: "Skybold",
    birthday: "1984-05-04T12:00:00.000Z",
    address: "219 Village Court, Keyport, Alabama, PO7776",
    notes: "<p>Velit enim anim est aliqua consequat exercitation velit quis magna est incididunt ipsum minim minim nulla adipisicing ad eiusmod id veniam eiusmod sit elit est pariatur velit ea laborum anim.</p><p>Ad lorem ea nisi irure id consequat ullamco nisi nostrud dolore officia ipsum veniam velit minim pariatur culpa culpa esse minim adipisicing sit labore commodo aute excepteur non do in.</p>",
    tags: ["cbde2486-5033-4e09-838e-e901b108cd41"]
  },
  {
    id: "2bfa2be5-7688-48d5-b5ac-dc0d9ac97f14",
    avatar: null,
    background: null,
    name: "Nadia Mcknight",
    emails: [
      {
        email: "nadiamcknight@mail.com",
        label: "Personal"
      }
    ],
    phoneNumbers: [
      {
        country: "tk",
        phoneNumber: "943 511 2203",
        label: "Mobile"
      },
      {
        country: "tk",
        phoneNumber: "817 578 2993",
        label: "Work"
      }
    ],
    title: "Legal Assistant",
    company: "Pearlesex",
    birthday: "1973-10-06T12:00:00.000Z",
    address: "448 Berriman Street, Reinerton, Washington, PO6704",
    notes: "<p>Esse sint lorem exercitation velit tempor tempor voluptate nulla proident excepteur magna tempor consectetur aliquip qui nisi mollit cupidatat est adipisicing ipsum sint et excepteur sit labore velit dolore labore.</p><p>Duis nisi adipisicing lorem do excepteur magna consequat labore magna ut consectetur eu enim occaecat id nulla laboris minim officia est id nisi mollit ullamco irure ut dolore esse aliqua.</p>",
    tags: ["cbde2486-5033-4e09-838e-e901b108cd41"]
  },
  {
    id: "77a4383b-b5a5-4943-bc46-04c3431d1566",
    avatar: "images/avatars/male-19.jpg",
    background: "images/cards/22-640x480.jpg",
    name: "Best Blackburn",
    emails: [
      {
        email: "bestblackburn@mail.name",
        label: "Personal"
      },
      {
        email: "blackburn.best@beadzza.me",
        label: "Work"
      }
    ],
    phoneNumbers: [
      {
        country: "gl",
        phoneNumber: "814 498 3701",
        label: "Mobile"
      }
    ],
    title: "Hotel Manager",
    company: "Beadzza",
    birthday: "1987-06-07T12:00:00.000Z",
    address: "578 Tampa Court, Wescosville, Ohio, PO4108",
    notes: "<p>Lorem do deserunt nulla nostrud incididunt et laboris labore eu nisi ut ullamco veniam deserunt do non labore commodo amet aliquip exercitation ea occaecat amet non eiusmod ut minim fugiat.</p><p>Esse eu ex irure pariatur qui cillum labore nulla quis officia consequat commodo consequat fugiat culpa nostrud labore eu adipisicing magna irure aliquip est amet irure eiusmod esse reprehenderit mollit.</p>",
    tags: ["3eaab175-ec0d-4db7-bc3b-efc633c769be"]
  },
  {
    id: "8bb0f597-673a-47ca-8c77-2f83219cb9af",
    avatar: null,
    background: null,
    name: "Duncan Carver",
    emails: [
      {
        email: "duncancarver@mail.info",
        label: "Personal"
      }
    ],
    phoneNumbers: [
      {
        country: "jm",
        phoneNumber: "968 547 2111",
        label: "Mobile"
      },
      {
        country: "jm",
        phoneNumber: "968 433 3120",
        label: "Work"
      },
      {
        country: "jm",
        phoneNumber: "905 425 2777",
        label: "Home"
      }
    ],
    title: "Historiographer",
    company: "Hotcakes",
    birthday: "1980-09-15T12:00:00.000Z",
    address: "931 Bristol Street, Why, South Carolina, PO9700",
    notes: "<p>Dolore laboris aute officia reprehenderit cupidatat aliquip duis labore aliquip officia est nostrud nisi voluptate eiusmod ad aute et ea cillum aliqua elit ipsum officia cillum laborum minim labore sit.</p><p>Exercitation labore ut pariatur occaecat ullamco non occaecat aliqua amet nostrud aliquip ipsum ad do ullamco enim laborum commodo minim elit ut quis laboris elit laborum proident sunt ullamco sit.</p>",
    tags: ["56ddbd47-4078-4ddd-8448-73c5e88d5f59"]
  },
  {
    id: "c318e31f-1d74-49c5-8dae-2bc5805e2fdb",
    avatar: "images/avatars/male-01.jpg",
    background: "images/cards/23-640x480.jpg",
    name: "Martin Richards",
    emails: [
      {
        email: "martinrichards@mail.biz",
        label: "Personal"
      }
    ],
    phoneNumbers: [
      {
        country: "mg",
        phoneNumber: "902 500 2668",
        label: "Mobile"
      },
      {
        country: "mg",
        phoneNumber: "947 559 2919",
        label: "Work"
      },
      {
        country: "mg",
        phoneNumber: "934 434 3768",
        label: "Home"
      }
    ],
    title: "Dental Laboratory Worker",
    company: "Overfork",
    birthday: "1977-04-12T12:00:00.000Z",
    address: "268 Hutchinson Court, Drytown, Florida, PO3041",
    notes: "<p>Eu ipsum nisi eu lorem cupidatat mollit exercitation elit ea culpa enim qui culpa ad aliqua exercitation tempor nulla excepteur fugiat ipsum quis amet occaecat adipisicing ullamco duis dolore occaecat.</p><p>Non eu et elit ea labore lorem adipisicing voluptate incididunt ut officia aute minim incididunt lorem qui adipisicing mollit magna nisi consectetur cillum sit exercitation eiusmod qui eu nisi sunt.</p>",
    tags: ["a8991c76-2fda-4bbd-a718-df13d6478847"]
  },
  {
    id: "0a8bc517-631a-4a93-aacc-000fa2e8294c",
    avatar: "images/avatars/female-20.jpg",
    background: "images/cards/24-640x480.jpg",
    name: "Candice Munoz",
    emails: [
      {
        email: "candicemunoz@mail.co.uk",
        label: "Personal"
      }
    ],
    phoneNumbers: [
      {
        country: "fm",
        phoneNumber: "838 562 2769",
        label: "Mobile"
      }
    ],
    title: "Legal Assistant",
    company: "Eclipto",
    birthday: "1976-09-09T12:00:00.000Z",
    address: "946 Remsen Street, Caroline, New Mexico, PO3247",
    notes: "<p>Amet dolore elit irure in commodo in et eu eu nulla labore elit sunt et nisi quis officia nostrud et mollit dolor aute fugiat sunt reprehenderit quis sint minim ipsum.</p><p>Laboris ut sunt nisi aute incididunt reprehenderit mollit culpa velit exercitation reprehenderit irure id sunt officia magna est ea labore consectetur incididunt cillum qui tempor ea ullamco quis pariatur aliquip.</p>",
    tags: ["56ddbd47-4078-4ddd-8448-73c5e88d5f59"]
  },
  {
    id: "a4c9945a-757b-40b0-8942-d20e0543cabd",
    avatar: "images/avatars/female-01.jpg",
    background: "images/cards/25-640x480.jpg",
    name: "Vickie Mosley",
    emails: [
      {
        email: "vickiemosley@mail.net",
        label: "Personal"
      }
    ],
    phoneNumbers: [
      {
        country: "tr",
        phoneNumber: "939 555 3054",
        label: "Mobile"
      },
      {
        country: "tr",
        phoneNumber: "852 486 2053",
        label: "Work"
      }
    ],
    title: "Bindery Machine Operator",
    company: "Strozen",
    birthday: "1989-06-21T12:00:00.000Z",
    address: "397 Vandalia Avenue, Rockingham, Michigan, PO8089",
    notes: "<p>Velit sunt sunt commodo ex amet laboris voluptate eu lorem aliqua minim occaecat cupidatat aliqua ipsum nisi velit id reprehenderit exercitation velit fugiat minim nisi deserunt voluptate anim cillum commodo.</p><p>Cillum velit nostrud cupidatat ex sit culpa deserunt cillum cupidatat cillum aute cupidatat exercitation ullamco sunt incididunt non magna sint lorem et incididunt laborum culpa qui sint sunt duis fugiat.</p>",
    tags: ["cbde2486-5033-4e09-838e-e901b108cd41"]
  },
  {
    id: "b8258ccf-48b5-46a2-9c95-e0bd7580c645",
    avatar: "images/avatars/female-02.jpg",
    background: "images/cards/26-640x480.jpg",
    name: "Tina Harris",
    emails: [
      {
        email: "tinaharris@mail.ca",
        label: "Personal"
      }
    ],
    phoneNumbers: [
      {
        country: "gp",
        phoneNumber: "933 464 2431",
        label: "Mobile"
      },
      {
        country: "gp",
        phoneNumber: "894 535 3609",
        label: "Work"
      }
    ],
    title: "Short Story Writer",
    company: "Gallaxia",
    birthday: "1976-09-10T12:00:00.000Z",
    address: "821 Beverly Road, Tyro, Colorado, PO4248",
    notes: "<p>Incididunt non est consequat qui sit sunt aliquip sit quis minim laboris ullamco est culpa velit culpa cupidatat veniam incididunt non quis elit reprehenderit et officia cillum magna aliqua occaecat.</p><p>Cupidatat amet incididunt id pariatur minim veniam id dolor nisi labore cillum ea officia cupidatat do culpa aliqua consequat deserunt aliquip sit ea excepteur eiusmod labore tempor reprehenderit commodo exercitation.</p>",
    tags: ["56ddbd47-4078-4ddd-8448-73c5e88d5f59"]
  },
  {
    id: "f004ea79-98fc-436c-9ba5-6cfe32fe583d",
    avatar: "images/avatars/male-02.jpg",
    background: "images/cards/27-640x480.jpg",
    name: "Holt Manning",
    emails: [
      {
        email: "holtmanning@mail.org",
        label: "Personal"
      },
      {
        email: "manning.holt@idetica.io",
        label: "Work"
      }
    ],
    phoneNumbers: [
      {
        country: "nz",
        phoneNumber: "822 531 2600",
        label: "Mobile"
      },
      {
        country: "nz",
        phoneNumber: "922 549 2094",
        label: "Work"
      }
    ],
    title: "Fundraising Director",
    company: "Idetica",
    birthday: "1973-11-08T12:00:00.000Z",
    address: "364 Porter Avenue, Delshire, Missouri, PO8911",
    notes: "<p>Velit fugiat minim sit nisi esse laboris ad velit proident non et cillum labore sint excepteur nisi eu amet voluptate duis duis id enim ea anim adipisicing consectetur id consectetur.</p><p>Ex eiusmod id magna in non lorem sunt sunt officia do adipisicing officia mollit occaecat sunt laborum aliquip adipisicing ullamco in sit proident et quis incididunt pariatur fugiat mollit anim.</p>",
    tags: ["65930b5a-5d2a-4303-b11f-865d69e6fdb5"]
  },
  {
    id: "8b69fe2d-d7cc-4a3d-983d-559173e37d37",
    avatar: "images/avatars/female-03.jpg",
    background: "images/cards/28-640x480.jpg",
    name: "Misty Ramsey",
    emails: [
      {
        email: "mistyramsey@mail.us",
        label: "Personal"
      }
    ],
    phoneNumbers: [
      {
        country: "kp",
        phoneNumber: "990 457 2106",
        label: "Mobile"
      },
      {
        country: "kp",
        phoneNumber: "918 550 2946",
        label: "Work"
      }
    ],
    company: "Grupoli",
    birthday: "1969-08-10T12:00:00.000Z",
    address: "101 Sackett Street, Naomi, Tennessee, PO6335",
    notes: "<p>Ut cupidatat sint minim consectetur cupidatat aute ut anim consequat fugiat laboris quis sint sit nulla irure nulla officia eiusmod consequat ex quis ad ex ullamco et ut labore tempor.</p><p>Deserunt minim dolore voluptate aute aliqua est elit mollit ut ut consequat in esse est do ex officia nostrud aute id fugiat reprehenderit quis cillum fugiat id fugiat minim tempor.</p>",
    tags: ["cbde2486-5033-4e09-838e-e901b108cd41"]
  },
  {
    id: "cdcc62e4-1520-4ccc-803d-52868c7e01ba",
    avatar: "images/avatars/female-04.jpg",
    background: "images/cards/29-640x480.jpg",
    name: "Dee Alvarado",
    emails: [
      {
        email: "deealvarado@mail.tv",
        label: "Personal"
      }
    ],
    phoneNumbers: [
      {
        country: "nu",
        phoneNumber: "855 445 2483",
        label: "Mobile"
      },
      {
        country: "nu",
        phoneNumber: "858 415 2860",
        label: "Work"
      },
      {
        country: "nu",
        phoneNumber: "968 587 2752",
        label: "Home"
      }
    ],
    title: "Dental Laboratory Worker",
    company: "Tsunamia",
    birthday: "1996-06-17T12:00:00.000Z",
    address: "956 Pierrepont Street, Crumpler, Hawaii, PO3299",
    notes: "<p>Esse excepteur ad aliquip amet elit reprehenderit ut nostrud magna ex esse dolore magna excepteur irure esse incididunt sunt enim laborum ex mollit magna elit quis ullamco aute minim veniam.</p><p>Duis id ullamco laboris elit ea ea dolore tempor est eu esse aliqua quis quis ut laborum mollit cillum proident deserunt fugiat ipsum elit exercitation quis mollit eiusmod officia non.</p>",
    tags: ["56ddbd47-4078-4ddd-8448-73c5e88d5f59"]
  },
  {
    id: "e2946946-b4b5-4fd7-bab4-62c38cdff2f1",
    avatar: "images/avatars/female-05.jpg",
    background: "images/cards/30-640x480.jpg",
    name: "Samantha Jacobson",
    emails: [
      {
        email: "samanthajacobson@mail.com",
        label: "Personal"
      }
    ],
    phoneNumbers: [
      {
        country: "es",
        phoneNumber: "879 591 3327",
        label: "Mobile"
      }
    ],
    title: "Dental Laboratory Worker",
    company: "Emoltra",
    birthday: "1972-02-04T12:00:00.000Z",
    address: "384 Love Lane, Dyckesville, New York, PO4115",
    notes: "<p>Consectetur eu et ea anim magna occaecat anim labore velit nulla non magna laboris duis sit adipisicing commodo laboris consequat id quis aliqua est culpa quis in ex est culpa.</p><p>Sunt qui excepteur reprehenderit nostrud voluptate eu laborum laborum id esse occaecat irure esse elit magna tempor ad est elit non labore tempor laborum deserunt voluptate cupidatat excepteur sunt sint.</p>",
    tags: ["a8991c76-2fda-4bbd-a718-df13d6478847"]
  },
  {
    id: "fdc77706-6ba2-4397-b2f8-a9a0b6495153",
    avatar: "images/avatars/female-06.jpg",
    background: "images/cards/31-640x480.jpg",
    name: "Rhea Landry",
    emails: [
      {
        email: "rhealandry@mail.name",
        label: "Personal"
      }
    ],
    phoneNumbers: [
      {
        country: "jp",
        phoneNumber: "906 579 3698",
        label: "Mobile"
      },
      {
        country: "jp",
        phoneNumber: "841 475 2681",
        label: "Work"
      }
    ],
    title: "Electromedical Equipment Technician",
    company: "Comtent",
    birthday: "1988-05-22T12:00:00.000Z",
    address: "725 Arlington Avenue, Mathews, Wyoming, PO4562",
    notes: "<p>Eiusmod ullamco laboris tempor reprehenderit culpa non sunt ea consequat velit id ipsum commodo eiusmod exercitation laboris aliqua magna reprehenderit culpa tempor mollit pariatur consectetur amet aliqua cillum voluptate exercitation.</p><p>Qui cillum consectetur qui proident adipisicing id qui esse aute velit excepteur pariatur ea excepteur sunt velit nostrud esse mollit sint ex irure sunt aliquip velit consequat minim do officia.</p>",
    tags: ["c31e9e5d-e0cb-4574-a13f-8a6ee5ff8309"]
  },
  {
    id: "12148fa2-e0a4-49fb-b3c5-daeecdb5180a",
    avatar: "images/avatars/female-07.jpg",
    background: "images/cards/32-640x480.jpg",
    name: "Olga Rhodes",
    emails: [
      {
        email: "olgarhodes@mail.me",
        label: "Personal"
      },
      {
        email: "rhodes.olga@moreganic.info",
        label: "Work"
      }
    ],
    phoneNumbers: [
      {
        country: "tl",
        phoneNumber: "971 514 3366",
        label: "Mobile"
      },
      {
        country: "tl",
        phoneNumber: "807 480 2033",
        label: "Work"
      },
      {
        country: "tl",
        phoneNumber: "810 528 3783",
        label: "Home"
      }
    ],
    title: "Pastry Baker",
    company: "Moreganic",
    birthday: "1971-08-13T12:00:00.000Z",
    address: "253 Beard Street, Staples, Massachusetts, PO8089",
    notes: "<p>Proident est est et in commodo incididunt anim fugiat laboris pariatur eu enim dolor eiusmod dolor voluptate officia eiusmod excepteur culpa aute do do anim pariatur irure incididunt incididunt est.</p><p>Sint duis mollit dolor laborum ex non esse consequat anim et qui est nostrud incididunt fugiat anim veniam sunt cupidatat ut voluptate commodo non ex tempor ullamco magna culpa culpa.</p>",
    tags: ["65930b5a-5d2a-4303-b11f-865d69e6fdb5"]
  },
  {
    id: "07dd64eb-8b8f-4765-a16c-8db083c45096",
    avatar: "images/avatars/female-08.jpg",
    background: "images/cards/33-640x480.jpg",
    name: "Lorraine Pennington",
    emails: [
      {
        email: "lorrainepennington@mail.biz",
        label: "Personal"
      }
    ],
    phoneNumbers: [
      {
        country: "fm",
        phoneNumber: "932 404 3308",
        label: "Mobile"
      },
      {
        country: "fm",
        phoneNumber: "979 550 3200",
        label: "Work"
      },
      {
        country: "fm",
        phoneNumber: "868 557 3568",
        label: "Home"
      }
    ],
    title: "Electromedical Equipment Technician",
    company: "Marvane",
    birthday: "1967-06-10T12:00:00.000Z",
    address: "962 Whitney Avenue, Sussex, North Dakota, PO5796",
    notes: "<p>Nulla nisi officia quis aliquip voluptate mollit ut anim eu et quis tempor incididunt consectetur exercitation cupidatat in nisi exercitation est culpa nostrud sit elit sit sunt do ipsum eu.</p><p>Enim voluptate ad ullamco tempor voluptate culpa et ut ullamco eu consequat est esse excepteur est nostrud velit enim culpa dolore non quis occaecat eiusmod velit ex mollit tempor labore.</p>",
    tags: ["c31e9e5d-e0cb-4574-a13f-8a6ee5ff8309"]
  },
  {
    id: "81fdc48c-5572-4123-8a73-71b7892120de",
    avatar: "images/avatars/female-09.jpg",
    background: "images/cards/34-640x480.jpg",
    name: "Earlene Rosales",
    emails: [
      {
        email: "earlenerosales@mail.co.uk",
        label: "Personal"
      },
      {
        email: "rosales.earlene@softmicro.net",
        label: "Work"
      }
    ],
    phoneNumbers: [
      {
        country: "ki",
        phoneNumber: "927 589 3619",
        label: "Mobile"
      }
    ],
    title: "Historiographer",
    company: "Softmicro",
    birthday: "1960-11-13T12:00:00.000Z",
    address: "981 Kingston Avenue, Topaz, Connecticut, PO6866",
    notes: "<p>Adipisicing fugiat magna eiusmod consectetur id commodo incididunt ullamco ut sint minim nulla in do aute in sit pariatur irure dolor magna pariatur ad officia excepteur duis ullamco dolor sunt.</p><p>Dolor laborum proident voluptate eu esse lorem adipisicing enim consectetur veniam nisi pariatur aliquip sit laborum sunt adipisicing anim labore eiusmod nostrud irure irure nisi ipsum dolor aliquip ex exercitation.</p>",
    tags: ["3eaab175-ec0d-4db7-bc3b-efc633c769be"]
  },
  {
    id: "f8bbf6be-d49a-41a3-bb80-3d51df84c12b",
    avatar: "images/avatars/female-10.jpg",
    background: "images/cards/35-640x480.jpg",
    name: "Marcia Hatfield",
    emails: [
      {
        email: "marciahatfield@mail.ca",
        label: "Personal"
      },
      {
        email: "hatfield.marcia@datagen.org",
        label: "Work"
      }
    ],
    phoneNumbers: [
      {
        country: "no",
        phoneNumber: "883 432 3718",
        label: "Mobile"
      },
      {
        country: "no",
        phoneNumber: "934 516 2135",
        label: "Work"
      },
      {
        country: "no",
        phoneNumber: "923 596 3843",
        label: "Home"
      }
    ],
    title: "Track Service Worker",
    company: "Datagen",
    birthday: "1980-02-26T12:00:00.000Z",
    address: "802 Preston Court, Waikele, Pennsylvania, PO7421",
    notes: "<p>Aliqua sint aute in cillum deserunt enim fugiat tempor est pariatur irure commodo commodo deserunt eu nulla laboris enim occaecat incididunt voluptate enim est reprehenderit qui anim veniam sint adipisicing.</p><p>Commodo veniam occaecat ex et laborum minim fugiat sunt commodo velit dolor labore excepteur fugiat ipsum eiusmod in esse ex nulla deserunt minim consectetur in est sunt eu commodo fugiat.</p>",
    tags: ["65930b5a-5d2a-4303-b11f-865d69e6fdb5"]
  },
  {
    id: "cd482941-3eaf-4560-ac37-56a9296025df",
    avatar: "images/avatars/female-11.jpg",
    background: "images/cards/36-640x480.jpg",
    name: "Liliana Ayala",
    emails: [
      {
        email: "lilianaayala@mail.io",
        label: "Personal"
      }
    ],
    phoneNumbers: [
      {
        country: "bd",
        phoneNumber: "936 590 2412",
        label: "Mobile"
      }
    ],
    title: "Insurance Analyst",
    company: "Pharmex",
    birthday: "1988-04-27T12:00:00.000Z",
    address: "935 Guider Avenue, Kipp, Wisconsin, PO5282",
    notes: "<p>Magna et culpa cillum sint labore consequat aute aliqua amet ea consequat ut ullamco nisi commodo lorem enim amet dolor sit nisi dolor do sit lorem cillum esse reprehenderit ut.</p><p>Quis veniam anim nulla adipisicing veniam fugiat elit duis pariatur anim irure adipisicing elit labore eu aute exercitation qui exercitation commodo exercitation ipsum tempor non et ex eu aute proident.</p>",
    tags: ["a8991c76-2fda-4bbd-a718-df13d6478847"]
  },
  {
    id: "22f18d47-ff8d-440e-888d-a1747c093052",
    avatar: "images/avatars/female-12.jpg",
    background: "images/cards/14-640x480.jpg",
    name: "Alice Harding",
    emails: [
      {
        email: "aliceharding@mail.us",
        label: "Personal"
      }
    ],
    phoneNumbers: [
      {
        country: "sx",
        phoneNumber: "881 472 3113",
        label: "Mobile"
      },
      {
        country: "sx",
        phoneNumber: "974 548 3124",
        label: "Work"
      },
      {
        country: "sx",
        phoneNumber: "800 518 3615",
        label: "Home"
      }
    ],
    title: "Track Service Worker",
    company: "Futurity",
    birthday: "1985-09-17T12:00:00.000Z",
    address: "387 Holt Court, Thomasville, Alaska, PO2867",
    notes: "<p>Adipisicing exercitation dolor nisi ipsum nostrud anim dolore sint veniam consequat lorem sit ex commodo nostrud occaecat elit magna magna commodo incididunt laborum ad irure pariatur et sit ullamco adipisicing.</p><p>Ullamco in dolore amet est quis consectetur fugiat non nisi incididunt id laborum adipisicing dolor proident velit ut quis aliquip dolore id anim sit adipisicing nisi incididunt enim amet pariatur.</p>",
    tags: ["cbde2486-5033-4e09-838e-e901b108cd41"]
  },
  {
    id: "a9a9f382-e4c3-42fb-9fe9-65aa534732b5",
    avatar: "images/avatars/female-13.jpg",
    background: "images/cards/15-640x480.jpg",
    name: "Francisca Perkins",
    emails: [
      {
        email: "franciscaperkins@mail.tv",
        label: "Personal"
      },
      {
        email: "perkins.francisca@overplex.com",
        label: "Work"
      }
    ],
    phoneNumbers: [
      {
        country: "au",
        phoneNumber: "830 430 3437",
        label: "Mobile"
      },
      {
        country: "au",
        phoneNumber: "868 538 2886",
        label: "Work"
      }
    ],
    title: "Dental Laboratory Worker",
    company: "Overplex",
    birthday: "1966-08-14T12:00:00.000Z",
    address: "733 Delmonico Place, Belvoir, Virginia, PO7102",
    notes: "<p>Voluptate nisi adipisicing ex magna mollit non cillum dolor in magna duis exercitation irure elit duis eiusmod deserunt lorem nulla sunt laboris quis voluptate ullamco labore adipisicing quis minim ipsum.</p><p>Id ut esse elit proident mollit nulla exercitation magna voluptate sit eiusmod labore velit commodo exercitation dolore anim est eiusmod occaecat et consequat eiusmod culpa ipsum deserunt lorem non incididunt.</p>",
    tags: ["2026ce08-d08f-4b4f-9506-b10cdb5b104f"]
  },
  {
    id: "0222b24b-c288-48d1-b356-0f087fa172f8",
    avatar: null,
    background: null,
    name: "Warren Gates",
    emails: [
      {
        email: "warrengates@mail.name",
        label: "Personal"
      },
      {
        email: "gates.warren@qualitex.me",
        label: "Work"
      }
    ],
    phoneNumbers: [
      {
        country: "gt",
        phoneNumber: "847 513 2248",
        label: "Mobile"
      },
      {
        country: "gt",
        phoneNumber: "866 591 3665",
        label: "Work"
      },
      {
        country: "gt",
        phoneNumber: "877 539 3840",
        label: "Home"
      }
    ],
    title: "Banker Mason",
    company: "Qualitex",
    birthday: "1977-02-23T12:00:00.000Z",
    address: "713 Fane Court, Lemoyne, Kentucky, PO3601",
    notes: "<p>Sint tempor consectetur ullamco ullamco consequat exercitation ea occaecat eiusmod cupidatat anim pariatur nisi pariatur excepteur ut labore anim excepteur sit eu consequat do enim pariatur et dolore in irure.</p><p>Commodo ut non minim sunt nisi tempor culpa duis anim ipsum qui irure lorem est voluptate voluptate officia occaecat lorem labore elit officia laboris mollit et eiusmod esse laborum nisi.</p>",
    tags: ["cbde2486-5033-4e09-838e-e901b108cd41"]
  },
  {
    id: "0630f1ca-cdb9-405d-b134-68f733334089",
    avatar: "images/avatars/female-14.jpg",
    background: "images/cards/16-640x480.jpg",
    name: "Maryann Mcintyre",
    emails: [
      {
        email: "maryannmcintyre@mail.info",
        label: "Personal"
      },
      {
        email: "mcintyre.maryann@aquafire.biz",
        label: "Work"
      }
    ],
    phoneNumbers: [
      {
        country: "bf",
        phoneNumber: "861 419 2752",
        label: "Mobile"
      },
      {
        country: "bf",
        phoneNumber: "935 553 3031",
        label: "Work"
      }
    ],
    title: "Fundraising Director",
    company: "Aquafire",
    birthday: "1963-04-07T12:00:00.000Z",
    address: "698 Brooklyn Avenue, Dixonville, Utah, PO2712",
    notes: "<p>Pariatur velit ea ad quis elit pariatur consectetur eiusmod veniam non incididunt ex ex et nulla voluptate fugiat esse sit dolore voluptate in dolor nulla laborum irure consequat sit pariatur.</p><p>Dolore ex officia incididunt pariatur ea amet sunt enim aute labore cupidatat laboris eiusmod enim lorem labore nostrud ea consectetur et eu sunt exercitation dolore consequat fugiat anim in exercitation.</p>",
    tags: ["a8991c76-2fda-4bbd-a718-df13d6478847"]
  },
  {
    id: "999c24f3-7bb8-4a01-85ca-2fca7863c57e",
    avatar: "images/avatars/female-15.jpg",
    background: "images/cards/17-640x480.jpg",
    name: "Sharon Marshall",
    emails: [
      {
        email: "sharonmarshall@mail.co.uk",
        label: "Personal"
      },
      {
        email: "marshall.sharon@utara.net",
        label: "Work"
      }
    ],
    phoneNumbers: [
      {
        country: "fo",
        phoneNumber: "947 441 2999",
        label: "Mobile"
      },
      {
        country: "fo",
        phoneNumber: "984 441 2615",
        label: "Work"
      },
      {
        country: "fo",
        phoneNumber: "824 541 2714",
        label: "Home"
      }
    ],
    title: "Legal Assistant",
    company: "Utara",
    birthday: "1960-01-26T12:00:00.000Z",
    address: "923 Ivan Court, Hatteras, Idaho, PO7573",
    notes: "<p>Est duis sint ullamco nulla do tempor do dolore laboris in sint ad duis est eu consequat nisi esse irure tempor sunt pariatur qui mollit ipsum quis esse ex ipsum.</p><p>Dolore anim irure quis ipsum adipisicing sint et incididunt aute nisi minim aliquip consectetur duis tempor laborum nostrud exercitation do mollit irure anim lorem non excepteur commodo laborum dolore dolor.</p>",
    tags: ["3eaab175-ec0d-4db7-bc3b-efc633c769be"]
  },
  {
    id: "7e8e1f1e-d19f-45c7-86bd-6fef599dae71",
    avatar: "images/avatars/female-16.jpg",
    background: "images/cards/18-640x480.jpg",
    name: "Margo Witt",
    emails: [
      {
        email: "margowitt@mail.ca",
        label: "Personal"
      },
      {
        email: "witt.margo@norsul.org",
        label: "Work"
      }
    ],
    phoneNumbers: [
      {
        country: "ao",
        phoneNumber: "992 596 3391",
        label: "Mobile"
      },
      {
        country: "ao",
        phoneNumber: "950 489 2505",
        label: "Work"
      },
      {
        country: "ao",
        phoneNumber: "891 540 2231",
        label: "Home"
      }
    ],
    title: "Television News Producer",
    company: "Norsul",
    birthday: "1975-08-31T12:00:00.000Z",
    address: "539 Rockaway Avenue, Whitmer, Guam, PO4871",
    notes: "<p>Sunt quis officia elit laborum excepteur consequat amet cillum labore deserunt cillum cillum labore exercitation minim laboris anim incididunt voluptate minim duis enim eu duis veniam labore nisi culpa duis.</p><p>Pariatur irure sunt et commodo reprehenderit consectetur duis et ullamco fugiat occaecat culpa enim incididunt officia minim aliqua sit amet do dolore pariatur fugiat et adipisicing labore dolor id dolore.</p>",
    tags: ["56ddbd47-4078-4ddd-8448-73c5e88d5f59"]
  },
  {
    id: "bedcb6a2-da83-4631-866a-77d10d239477",
    avatar: "images/avatars/male-04.jpg",
    background: "images/cards/19-640x480.jpg",
    name: "Alvarado Turner",
    emails: [
      {
        email: "alvaradoturner@mail.io",
        label: "Personal"
      }
    ],
    phoneNumbers: [
      {
        country: "lv",
        phoneNumber: "961 537 3956",
        label: "Mobile"
      }
    ],
    title: "Fundraising Director",
    company: "Geologix",
    birthday: "1985-12-08T12:00:00.000Z",
    address: "233 Willmohr Street, Cressey, Iowa, PO1962",
    notes: "<p>In amet voluptate ad eiusmod cupidatat nulla sunt eu amet occaecat qui cillum occaecat tempor minim nostrud ullamco amet elit aliquip est nisi officia lorem occaecat ea lorem officia veniam.</p><p>Nulla tempor id excepteur irure do do veniam eiusmod esse ipsum sint dolore commodo enim officia nulla nulla proident in dolor et aliquip sit nulla sit proident duis aute deserunt.</p>",
    tags: ["56ddbd47-4078-4ddd-8448-73c5e88d5f59"]
  },
  {
    id: "66f9de1b-f842-4d4c-bb59-f97e91db0462",
    avatar: "images/avatars/male-05.jpg",
    background: "images/cards/20-640x480.jpg",
    name: "Maldonado Rodriquez",
    emails: [
      {
        email: "maldonadorodriquez@mail.us",
        label: "Personal"
      },
      {
        email: "rodriquez.maldonado@zentility.tv",
        label: "Work"
      }
    ],
    phoneNumbers: [
      {
        country: "et",
        phoneNumber: "811 502 3398",
        label: "Mobile"
      },
      {
        country: "et",
        phoneNumber: "877 402 2443",
        label: "Work"
      },
      {
        country: "et",
        phoneNumber: "949 536 3451",
        label: "Home"
      }
    ],
    title: "Dental Laboratory Worker",
    company: "Zentility",
    birthday: "1993-06-01T12:00:00.000Z",
    address: "916 Cobek Court, Morningside, South Dakota, PO2019",
    notes: "<p>Laboris consequat labore nisi aute voluptate minim amet nulla elit tempor dolor nulla do et consequat esse dolore fugiat laboris deserunt velit minim laboris voluptate enim ut non laboris nisi.</p><p>Magna pariatur voluptate veniam nostrud irure magna pariatur ut quis reprehenderit voluptate aute duis sunt laboris consequat lorem eu pariatur nulla incididunt quis lorem consectetur ex lorem commodo magna dolore.</p>",
    tags: ["c31e9e5d-e0cb-4574-a13f-8a6ee5ff8309"]
  },
  {
    id: "9cb0ea57-3461-4182-979b-593b0c1ec6c3",
    avatar: "images/avatars/male-06.jpg",
    background: "images/cards/21-640x480.jpg",
    name: "Tran Duke",
    emails: [
      {
        email: "tranduke@mail.com",
        label: "Personal"
      },
      {
        email: "duke.tran@splinx.name",
        label: "Work"
      }
    ],
    phoneNumbers: [
      {
        country: "si",
        phoneNumber: "837 503 2254",
        label: "Mobile"
      },
      {
        country: "si",
        phoneNumber: "893 405 3190",
        label: "Work"
      },
      {
        country: "si",
        phoneNumber: "931 402 3874",
        label: "Home"
      }
    ],
    title: "Legal Assistant",
    company: "Splinx",
    birthday: "1976-04-27T12:00:00.000Z",
    address: "405 Canarsie Road, Richville, Virgin Islands, PO2744",
    notes: "<p>Occaecat do excepteur non ipsum labore consequat id eu sunt minim aliquip elit occaecat velit ut aute cupidatat irure ex eiusmod fugiat ea ea cupidatat nulla dolor labore consectetur amet.</p><p>Mollit enim dolore deserunt tempor aliqua velit nostrud nostrud id consectetur lorem in enim excepteur nisi laborum ex commodo sint ea et culpa lorem esse culpa ad officia do amet.</p>",
    tags: ["3eaab175-ec0d-4db7-bc3b-efc633c769be"]
  },
  {
    id: "2fb89a90-5622-4b5b-8df3-d49b85905392",
    avatar: null,
    background: null,
    name: "Estela Lyons",
    emails: [
      {
        email: "estelalyons@mail.me",
        label: "Personal"
      }
    ],
    phoneNumbers: [
      {
        country: "vg",
        phoneNumber: "864 459 3205",
        label: "Mobile"
      },
      {
        country: "vg",
        phoneNumber: "886 524 2880",
        label: "Work"
      },
      {
        country: "vg",
        phoneNumber: "815 484 3420",
        label: "Home"
      }
    ],
    title: "Animal Sitter",
    company: "Gonkle",
    birthday: "1968-03-11T12:00:00.000Z",
    address: "540 Metrotech Courtr, Garfield, American Samoa, PO2290",
    notes: "<p>Ullamco dolore ipsum exercitation officia dolore sit consequat nisi consequat occaecat et ipsum veniam anim tempor pariatur sunt in adipisicing aliqua non dolor laborum veniam nisi dolore quis sunt incididunt.</p><p>Incididunt ullamco sunt magna reprehenderit velit dolor qui anim eiusmod nostrud commodo exercitation velit incididunt exercitation nulla ad aute eiusmod est amet exercitation est nostrud sit esse esse ad irure.</p>",
    tags: ["2026ce08-d08f-4b4f-9506-b10cdb5b104f"]
  },
  {
    id: "8141dd08-3a6e-4770-912c-59d0ed06dde6",
    avatar: null,
    background: null,
    name: "Madeleine Fletcher",
    emails: [
      {
        email: "madeleinefletcher@mail.info",
        label: "Personal"
      },
      {
        email: "fletcher.madeleine@genmom.biz",
        label: "Work"
      }
    ],
    phoneNumbers: [
      {
        country: "uy",
        phoneNumber: "898 554 3354",
        label: "Mobile"
      }
    ],
    title: "Fundraising Director",
    company: "Genmom",
    birthday: "1970-07-15T12:00:00.000Z",
    address: "825 Cherry Street, Foscoe, Minnesota, PO7290",
    notes: "<p>Fugiat in exercitation nostrud labore labore irure ex magna ex aliquip veniam sit irure irure deserunt occaecat tempor cillum aliqua dolore ea tempor dolore laboris est amet quis consequat quis.</p><p>Esse officia velit consectetur ullamco ea pariatur mollit sit consectetur sint mollit commodo anim anim ea amet consectetur eiusmod aliqua excepteur elit laborum magna non fugiat nisi pariatur ut velit.</p>",
    tags: ["56ddbd47-4078-4ddd-8448-73c5e88d5f59"]
  },
  {
    id: "7585015c-ada2-4f88-998d-9646865d1ad2",
    avatar: "images/avatars/male-07.jpg",
    background: "images/cards/22-640x480.jpg",
    name: "Meyer Roach",
    emails: [
      {
        email: "meyerroach@mail.co.uk",
        label: "Personal"
      }
    ],
    phoneNumbers: [
      {
        country: "uz",
        phoneNumber: "891 543 2053",
        label: "Mobile"
      },
      {
        country: "uz",
        phoneNumber: "842 564 3671",
        label: "Work"
      },
      {
        country: "uz",
        phoneNumber: "992 491 3514",
        label: "Home"
      }
    ],
    title: "Electromedical Equipment Technician",
    company: "Zentime",
    birthday: "1968-10-16T12:00:00.000Z",
    address: "315 Albemarle Road, Allison, Arkansas, PO6008",
    notes: "<p>Eiusmod deserunt aliqua dolore ipsum cillum veniam minim dolore nulla aute aliqua voluptate labore sint cillum excepteur nulla nostrud do cupidatat eu adipisicing reprehenderit deserunt elit qui mollit adipisicing eu.</p><p>Proident commodo magna eu voluptate eiusmod aliqua laborum eu ea elit quis ullamco ullamco magna minim enim amet dolore sit lorem aliqua officia amet officia non magna enim cillum sit.</p>",
    tags: ["c31e9e5d-e0cb-4574-a13f-8a6ee5ff8309"]
  },
  {
    id: "32c73a6a-67f2-48a9-b2a1-b23da83187bb",
    avatar: null,
    background: null,
    name: "Bolton Obrien",
    emails: [
      {
        email: "boltonobrien@mail.net",
        label: "Personal"
      },
      {
        email: "obrien.bolton@enersol.ca",
        label: "Work"
      }
    ],
    phoneNumbers: [
      {
        country: "tn",
        phoneNumber: "860 472 2458",
        label: "Mobile"
      },
      {
        country: "tn",
        phoneNumber: "887 499 3580",
        label: "Work"
      }
    ],
    title: "Banker Mason",
    company: "Enersol",
    birthday: "1968-09-08T12:00:00.000Z",
    address: "818 Aviation Road, Geyserville, Palau, PO9655",
    notes: "<p>Cupidatat lorem tempor commodo do eu ea dolor eiusmod do nisi occaecat fugiat labore non esse aliquip ullamco laboris adipisicing pariatur nostrud enim minim do fugiat culpa exercitation lorem duis.</p><p>Pariatur cupidatat tempor est et nostrud in amet aliquip sint nulla amet ea lorem irure sint sit ea aliquip voluptate id laboris fugiat cillum cillum dolore deserunt fugiat ad tempor.</p>",
    tags: ["a8991c76-2fda-4bbd-a718-df13d6478847"]
  },
  {
    id: "114642a2-ccb7-4cb1-ad2b-5e9b6a0c1d2e",
    avatar: "images/avatars/male-09.jpg",
    background: "images/cards/23-640x480.jpg",
    name: "Barber Johnson",
    emails: [
      {
        email: "barberjohnson@mail.org",
        label: "Personal"
      }
    ],
    phoneNumbers: [
      {
        country: "az",
        phoneNumber: "928 567 2521",
        label: "Mobile"
      },
      {
        country: "az",
        phoneNumber: "898 515 2048",
        label: "Work"
      },
      {
        country: "az",
        phoneNumber: "935 495 3348",
        label: "Home"
      }
    ],
    title: "Talent Manager",
    company: "Zounds",
    birthday: "1967-03-02T12:00:00.000Z",
    address: "386 Vernon Avenue, Dragoon, North Carolina, PO4559",
    notes: "<p>Esse amet ex duis esse aliqua non tempor ullamco dolore et aliquip nisi pariatur qui laborum id consequat tempor sint eiusmod exercitation velit aliquip occaecat tempor nisi aute magna sint.</p><p>Deserunt veniam voluptate dolore eiusmod eu consequat dolor sit pariatur laboris anim excepteur consequat nulla officia exercitation magna sint ea excepteur qui eu officia pariatur culpa sint elit nulla officia.</p>",
    tags: ["56ddbd47-4078-4ddd-8448-73c5e88d5f59"]
  },
  {
    id: "310ece7d-dbb0-45d6-9e69-14c24e50fe3d",
    avatar: "images/avatars/male-10.jpg",
    background: "images/cards/24-640x480.jpg",
    name: "Cervantes Kramer",
    emails: [
      {
        email: "cervanteskramer@mail.io",
        label: "Personal"
      }
    ],
    phoneNumbers: [
      {
        country: "vg",
        phoneNumber: "998 498 2507",
        label: "Mobile"
      },
      {
        country: "vg",
        phoneNumber: "856 477 3445",
        label: "Work"
      }
    ],
    title: "Motor Winder",
    company: "Xeronk",
    birthday: "1992-09-04T12:00:00.000Z",
    address: "238 Rochester Avenue, Lydia, Oklahoma, PO3914",
    notes: "<p>Excepteur do ullamco voluptate deserunt tempor ullamco enim non incididunt adipisicing sunt sint sit qui occaecat occaecat id laboris et duis amet reprehenderit cupidatat aliquip dolore ea eu ea nulla.</p><p>Cillum nulla deserunt laboris eu sint dolor non laboris cupidatat aute nisi amet mollit ipsum cillum excepteur consequat tempor exercitation consequat nostrud ipsum qui excepteur eiusmod nostrud laboris pariatur sint.</p>",
    tags: ["a8991c76-2fda-4bbd-a718-df13d6478847"]
  },
  {
    id: "dcc673f6-de59-4715-94ed-8f64663d449b",
    avatar: "images/avatars/female-19.jpg",
    background: "images/cards/25-640x480.jpg",
    name: "Megan Suarez",
    emails: [
      {
        email: "megansuarez@mail.us",
        label: "Personal"
      }
    ],
    phoneNumbers: [
      {
        country: "bb",
        phoneNumber: "875 422 2053",
        label: "Mobile"
      },
      {
        country: "bb",
        phoneNumber: "861 487 2597",
        label: "Work"
      },
      {
        country: "bb",
        phoneNumber: "873 414 3953",
        label: "Home"
      }
    ],
    title: "Bindery Machine Operator",
    company: "Cemention",
    birthday: "1984-09-08T12:00:00.000Z",
    address: "112 Tillary Street, Camptown, Vermont, PO8827",
    notes: "<p>Pariatur tempor laborum deserunt commodo eiusmod adipisicing amet anim irure fugiat laboris velit do velit elit aute deserunt officia fugiat nulla ullamco est elit veniam officia sit veniam velit commodo.</p><p>Laboris duis eu adipisicing esse fugiat voluptate enim sint in voluptate lorem laboris eiusmod commodo nostrud dolor qui incididunt non fugiat culpa aliquip minim voluptate lorem sint sunt velit eiusmod.</p>",
    tags: ["65930b5a-5d2a-4303-b11f-865d69e6fdb5"]
  },
  {
    id: "3e4ca731-d39b-4ad9-b6e0-f84e67f4b74a",
    avatar: "images/avatars/female-20.jpg",
    background: "images/cards/26-640x480.jpg",
    name: "Ofelia Ratliff",
    emails: [
      {
        email: "ofeliaratliff@mail.tv",
        label: "Personal"
      }
    ],
    phoneNumbers: [
      {
        country: "vu",
        phoneNumber: "978 546 3699",
        label: "Mobile"
      },
      {
        country: "vu",
        phoneNumber: "892 551 2229",
        label: "Work"
      },
      {
        country: "vu",
        phoneNumber: "949 495 3479",
        label: "Home"
      }
    ],
    company: "Buzzmaker",
    birthday: "1988-11-11T12:00:00.000Z",
    address: "951 Hampton Avenue, Bartonsville, Mississippi, PO4232",
    notes: "<p>Ad lorem id irure aute ipsum ex occaecat commodo dolore eu dolor exercitation anim quis officia deserunt lorem sunt officia eu sit aliquip laborum id duis aliqua quis aute magna.</p><p>Do do lorem est amet aliqua ex excepteur nisi cupidatat esse consequat ipsum in ad eiusmod proident cupidatat dolore anim ut pariatur sint do elit incididunt officia adipisicing amet eu.</p>",
    tags: ["a8991c76-2fda-4bbd-a718-df13d6478847"]
  },
  {
    id: "2012d4a5-19e4-444d-aaff-1d8b1d853650",
    avatar: "images/avatars/female-01.jpg",
    background: "images/cards/27-640x480.jpg",
    name: "Laurel Parker",
    emails: [
      {
        email: "laurelparker@mail.com",
        label: "Personal"
      }
    ],
    phoneNumbers: [
      {
        country: "lu",
        phoneNumber: "805 502 3677",
        label: "Mobile"
      },
      {
        country: "lu",
        phoneNumber: "925 527 2973",
        label: "Work"
      },
      {
        country: "lu",
        phoneNumber: "975 495 2977",
        label: "Home"
      }
    ],
    title: "Fundraising Director",
    company: "Omnigog",
    birthday: "1987-05-17T12:00:00.000Z",
    address: "157 Woodhull Street, Rutherford, West Virginia, PO6646",
    notes: "<p>Duis laboris consectetur et anim eiusmod laborum aute mollit ut officia ipsum dolore eiusmod ex eu elit officia est amet aliquip ullamco veniam proident id aliquip duis qui voluptate fugiat.</p><p>Sunt aliquip nulla amet sint culpa laboris quis proident qui veniam excepteur ullamco irure non eu occaecat est enim ut velit dolore sit tempor cillum reprehenderit proident velit lorem ad.</p>",
    tags: ["2026ce08-d08f-4b4f-9506-b10cdb5b104f"]
  },
  {
    id: "012b8219-74bf-447c-af2c-66904d90a956",
    avatar: "images/avatars/female-02.jpg",
    background: "images/cards/28-640x480.jpg",
    name: "Tracy Delacruz",
    emails: [
      {
        email: "tracydelacruz@mail.name",
        label: "Personal"
      },
      {
        email: "delacruz.tracy@shepard.me",
        label: "Work"
      }
    ],
    phoneNumbers: [
      {
        country: "co",
        phoneNumber: "974 428 2886",
        label: "Mobile"
      }
    ],
    title: "Bindery Machine Operator",
    company: "Shepard",
    birthday: "1963-08-10T12:00:00.000Z",
    address: "604 Merit Court, Wyano, New Hampshire, PO1641",
    notes: "<p>Dolor anim fugiat aliquip eiusmod lorem nisi adipisicing ea deserunt est quis non sit nulla voluptate deserunt magna eiusmod irure labore fugiat consectetur laboris velit voluptate exercitation aute magna sit.</p><p>Sunt ullamco quis qui ea ullamco quis sit ex nisi deserunt fugiat qui culpa minim proident dolor veniam lorem nulla amet do dolor proident sunt ex incididunt ipsum cillum non.</p>",
    tags: ["c31e9e5d-e0cb-4574-a13f-8a6ee5ff8309"]
  },
  {
    id: "8b1befd2-66a7-4981-ae52-77f01b382d18",
    avatar: "images/avatars/female-03.jpg",
    background: "images/cards/29-640x480.jpg",
    name: "Jeannette Stanton",
    emails: [
      {
        email: "jeannettestanton@mail.info",
        label: "Personal"
      },
      {
        email: "stanton.jeannette@zentury.biz",
        label: "Work"
      }
    ],
    phoneNumbers: [
      {
        country: "dz",
        phoneNumber: "947 561 3783",
        label: "Mobile"
      },
      {
        country: "dz",
        phoneNumber: "917 463 3737",
        label: "Work"
      },
      {
        country: "dz",
        phoneNumber: "835 510 2059",
        label: "Home"
      }
    ],
    title: "Hotel Manager",
    company: "Zentury",
    birthday: "1975-09-02T12:00:00.000Z",
    address: "100 Menahan Street, Snyderville, Kansas, PO1006",
    notes: "<p>Sint anim sint tempor proident irure proident exercitation dolor enim in sint non occaecat tempor mollit dolore ea labore ipsum sunt in incididunt proident excepteur id in velit et quis.</p><p>Amet mollit ut nostrud cupidatat ut culpa irure in ex occaecat aute aliqua tempor incididunt elit nulla irure aliqua ea do amet ex elit incididunt minim eu fugiat elit pariatur.</p>",
    tags: ["56ddbd47-4078-4ddd-8448-73c5e88d5f59"]
  },
  {
    id: "844668c3-5e20-4fed-9e3a-7d274f696e61",
    avatar: "images/avatars/female-04.jpg",
    background: "images/cards/30-640x480.jpg",
    name: "Johnnie Cleveland",
    emails: [
      {
        email: "johnniecleveland@mail.co.uk",
        label: "Personal"
      },
      {
        email: "cleveland.johnnie@viasia.net",
        label: "Work"
      }
    ],
    phoneNumbers: [
      {
        country: "au",
        phoneNumber: "947 468 2942",
        label: "Mobile"
      }
    ],
    title: "Fundraising Director",
    company: "Viasia",
    birthday: "1986-03-15T12:00:00.000Z",
    address: "283 Albany Avenue, Jennings, Rhode Island, PO1646",
    notes: "<p>Id est dolore nostrud consectetur ullamco aliquip dolore nisi consectetur cupidatat consectetur ut lorem exercitation laborum est culpa qui aliquip fugiat fugiat laborum minim sint sit laborum elit consectetur occaecat.</p><p>Cillum eu aliquip ex enim dolore enim ea pariatur elit voluptate in eu magna eu voluptate est cupidatat aliqua cupidatat ex eu dolor voluptate velit fugiat ipsum labore labore aliqua.</p>",
    tags: ["65930b5a-5d2a-4303-b11f-865d69e6fdb5"]
  },
  {
    id: "5a01e870-8be1-45a5-b58a-ec09c06e8f28",
    avatar: "images/avatars/female-05.jpg",
    background: "images/cards/31-640x480.jpg",
    name: "Staci Hyde",
    emails: [
      {
        email: "stacihyde@mail.ca",
        label: "Personal"
      }
    ],
    phoneNumbers: [
      {
        country: "id",
        phoneNumber: "944 525 2944",
        label: "Mobile"
      },
      {
        country: "id",
        phoneNumber: "877 500 2506",
        label: "Work"
      }
    ],
    title: "Banker Mason",
    company: "Zilla",
    birthday: "1975-04-22T12:00:00.000Z",
    address: "560 Dooley Street, Ellerslie, Louisiana, PO1005",
    notes: "<p>Pariatur esse ex laborum ex dolor laborum proident enim consectetur occaecat magna adipisicing magna dolore officia aute et dolor aliquip enim adipisicing culpa reprehenderit aliqua officia qui pariatur aliquip occaecat.</p><p>Excepteur est nisi officia eiusmod et duis mollit labore minim duis officia lorem ipsum duis deserunt cupidatat excepteur nostrud incididunt non cillum fugiat adipisicing anim consectetur nostrud aliquip labore cupidatat.</p>",
    tags: ["56ddbd47-4078-4ddd-8448-73c5e88d5f59"]
  },
  {
    id: "5ac1f193-f150-45f9-bfe4-b7b4e1a83ff9",
    avatar: "images/avatars/female-06.jpg",
    background: "images/cards/32-640x480.jpg",
    name: "Angela Gallagher",
    emails: [
      {
        email: "angelagallagher@mail.org",
        label: "Personal"
      }
    ],
    phoneNumbers: [
      {
        country: "et",
        phoneNumber: "996 514 3856",
        label: "Mobile"
      },
      {
        country: "et",
        phoneNumber: "903 539 2049",
        label: "Work"
      },
      {
        country: "et",
        phoneNumber: "938 463 3685",
        label: "Home"
      }
    ],
    title: "Electromedical Equipment Technician",
    company: "Zenolux",
    birthday: "1965-08-02T12:00:00.000Z",
    address: "445 Remsen Avenue, Ruckersville, Delaware, PO2712",
    notes: "<p>Pariatur do nisi labore culpa minim aliquip excepteur voluptate id id aute eu aliquip adipisicing nulla laboris consectetur dolore ullamco ut exercitation fugiat excepteur veniam ex cillum cupidatat ad adipisicing.</p><p>Dolor culpa dolor magna incididunt voluptate sunt amet dolor cillum ut nostrud nisi quis ex pariatur enim dolore sunt sunt cupidatat id non lorem magna esse amet commodo minim id.</p>",
    tags: ["cbde2486-5033-4e09-838e-e901b108cd41"]
  },
  {
    id: "995df091-d78a-4bb7-840c-ba6a7d14a1bd",
    avatar: "images/avatars/male-11.jpg",
    background: "images/cards/33-640x480.jpg",
    name: "Hutchinson Levy",
    emails: [
      {
        email: "hutchinsonlevy@mail.io",
        label: "Personal"
      }
    ],
    phoneNumbers: [
      {
        country: "et",
        phoneNumber: "970 546 3452",
        label: "Mobile"
      },
      {
        country: "et",
        phoneNumber: "894 438 2430",
        label: "Work"
      }
    ],
    title: "Congressional Representative",
    company: "Zytrek",
    birthday: "1978-03-22T12:00:00.000Z",
    address: "911 Lois Avenue, Epworth, California, PO6557",
    notes: "<p>Veniam deserunt aliquip culpa commodo et est ea cillum ea pariatur reprehenderit dolore adipisicing voluptate dolor eiusmod tempor exercitation reprehenderit nostrud labore nostrud do nulla commodo officia qui culpa ea.</p><p>Velit deserunt do ut esse tempor minim cupidatat amet qui consequat enim duis elit veniam sunt sit aliquip irure cillum irure sunt officia incididunt cupidatat commodo amet non qui anim.</p>",
    tags: ["65930b5a-5d2a-4303-b11f-865d69e6fdb5"]
  },
  {
    id: "7184be71-a28f-4f2b-8c45-15f78cf2f825",
    avatar: "images/avatars/female-05.jpg",
    background: "images/cards/34-640x480.jpg",
    name: "Alissa Nelson",
    emails: [
      {
        email: "alissanelson@mail.us",
        label: "Personal"
      }
    ],
    phoneNumbers: [
      {
        country: "lu",
        phoneNumber: "893 600 2639",
        label: "Mobile"
      }
    ],
    title: "Bindery Machine Operator",
    company: "Emtrak",
    birthday: "1993-10-19T12:00:00.000Z",
    address: "514 Sutter Avenue, Shindler, Puerto Rico, PO3862",
    notes: "<p>Ullamco ut aute reprehenderit velit incididunt veniam consequat ut ipsum sint laborum duis officia pariatur mollit enim nulla reprehenderit dolor aliquip labore ex aute in sunt dolor nulla reprehenderit dolor.</p><p>Ad enim ex non minim commodo culpa culpa ex est anim aute adipisicing proident ut ex et aliquip amet exercitation lorem tempor laborum quis reprehenderit veniam proident ullamco id eiusmod.</p>",
    tags: ["3eaab175-ec0d-4db7-bc3b-efc633c769be"]
  },
  {
    id: "325d508c-ca49-42bf-b0d5-c4a6b8da3d5c",
    avatar: null,
    background: null,
    name: "Oliver Head",
    emails: [
      {
        email: "oliverhead@mail.tv",
        label: "Personal"
      }
    ],
    phoneNumbers: [
      {
        country: "bn",
        phoneNumber: "977 528 3294",
        label: "Mobile"
      }
    ],
    title: "Meteorologist",
    company: "Rameon",
    birthday: "1967-01-05T12:00:00.000Z",
    address: "569 Clermont Avenue, Movico, Marshall Islands, PO7293",
    notes: "<p>Duis laborum magna ipsum officia cillum ea ut commodo anim exercitation incididunt id ipsum nisi consectetur aute officia culpa anim in veniam ad officia consequat qui ullamco ea laboris ad.</p><p>Ad ea excepteur ea veniam nostrud est labore ea consectetur laboris cupidatat aute pariatur aute mollit dolor do deserunt nisi mollit fugiat qui officia ullamco est officia est ullamco consequat.</p>",
    tags: ["65930b5a-5d2a-4303-b11f-865d69e6fdb5"]
  },
  {
    id: "c674b6e1-b846-4bba-824b-0b4df0cdec48",
    avatar: "images/avatars/male-13.jpg",
    background: "images/cards/35-640x480.jpg",
    name: "Duran Barr",
    emails: [
      {
        email: "duranbarr@mail.com",
        label: "Personal"
      },
      {
        email: "barr.duran@hinway.name",
        label: "Work"
      }
    ],
    phoneNumbers: [
      {
        country: "sr",
        phoneNumber: "857 457 2508",
        label: "Mobile"
      },
      {
        country: "sr",
        phoneNumber: "887 522 2146",
        label: "Work"
      },
      {
        country: "sr",
        phoneNumber: "947 574 3174",
        label: "Home"
      }
    ],
    title: "Insurance Analyst",
    company: "Hinway",
    birthday: "1977-11-06T12:00:00.000Z",
    address: "103 Chestnut Avenue, Glenbrook, Indiana, PO2578",
    notes: "<p>Ad ipsum occaecat dolore ullamco labore ex sint est pariatur aliquip ea do esse do est dolore duis excepteur esse irure eiusmod pariatur elit nostrud laboris ad ex nostrud nostrud.</p><p>Occaecat proident magna elit ullamco ea incididunt fugiat est nulla reprehenderit in veniam esse qui minim aliqua tempor excepteur dolor et tempor occaecat in veniam esse qui exercitation laborum esse.</p>",
    tags: ["a8991c76-2fda-4bbd-a718-df13d6478847"]
  }
];
var countries = [
  {
    id: "19430ee3-b0fe-4987-a7c8-74453ad5504d",
    iso: "af",
    name: "Afghanistan",
    code: "+93",
    flagImagePos: "-1px -3180px"
  },
  {
    id: "6c6b5c5c-97d5-4881-b5e1-e05b8f739ee7",
    iso: "al",
    name: "Albania",
    code: "+355",
    flagImagePos: "-1px -1310px"
  },
  {
    id: "d1f3941f-075e-4777-a5fd-8b196d98cd5a",
    iso: "dz",
    name: "Algeria",
    code: "+213",
    flagImagePos: "-1px -681px"
  },
  {
    id: "0dc3d1b8-f7f3-4c3d-8493-0d8b5a679910",
    iso: "as",
    name: "American Samoa",
    code: "+1",
    flagImagePos: "-1px -2058px"
  },
  {
    id: "e2e88578-b410-499f-aa59-9bb8da13c781",
    iso: "ad",
    name: "Andorra",
    code: "+376",
    flagImagePos: "-1px -766px"
  },
  {
    id: "4446885b-b391-4b84-866f-2b36603053c4",
    iso: "ao",
    name: "Angola",
    code: "+244",
    flagImagePos: "-1px -2636px"
  },
  {
    id: "07024099-a3db-4881-a628-24e8c0ba2508",
    iso: "ai",
    name: "Anguilla",
    code: "+1",
    flagImagePos: "-1px -2687px"
  },
  {
    id: "26be08bc-d87a-4134-9fb0-73b6a5b47cea",
    iso: "ag",
    name: "Antigua & Barbuda",
    code: "+1",
    flagImagePos: "-1px -1140px"
  },
  {
    id: "53c77399-494e-49df-9e3a-587b536c033e",
    iso: "ar",
    name: "Argentina",
    code: "+54",
    flagImagePos: "-1px -3282px"
  },
  {
    id: "9f5753c4-e9e4-4975-86b4-9eb9f4f484de",
    iso: "am",
    name: "Armenia",
    code: "+374",
    flagImagePos: "-1px -205px"
  },
  {
    id: "f1bbb833-5c47-4e17-b8c3-1d492107dc86",
    iso: "aw",
    name: "Aruba",
    code: "+297",
    flagImagePos: "-1px -1021px"
  },
  {
    id: "dc7e3322-8bd5-4c49-932d-a8e50bd1f9ad",
    iso: "ac",
    name: "Ascension Island",
    code: "+247",
    flagImagePos: "-1px -86px"
  },
  {
    id: "4505ba35-afa5-47ef-a6c7-9b57f1dcd187",
    iso: "au",
    name: "Australia",
    code: "+61",
    flagImagePos: "-1px -2279px"
  },
  {
    id: "57b3cd1f-d5d6-403b-8137-fbeeacaf136a",
    iso: "at",
    name: "Austria",
    code: "+43",
    flagImagePos: "-1px -1735px"
  },
  {
    id: "11cbde08-3c33-422c-bf4b-85561595ffb5",
    iso: "az",
    name: "Azerbaijan",
    code: "+994",
    flagImagePos: "-1px -1599px"
  },
  {
    id: "48c1e060-e685-4e91-8de8-725f42576e6c",
    iso: "bs",
    name: "Bahamas",
    code: "+1",
    flagImagePos: "-1px -460px"
  },
  {
    id: "ee23ffb8-9540-4630-948e-ceba52fa54ce",
    iso: "bh",
    name: "Bahrain",
    code: "+973",
    flagImagePos: "-1px -1956px"
  },
  {
    id: "b5f37cb6-7870-4ed9-8f92-3864bd870062",
    iso: "bd",
    name: "Bangladesh",
    code: "+880",
    flagImagePos: "-1px -2364px"
  },
  {
    id: "92de9080-f709-493e-a9fa-d23b3d4093d4",
    iso: "bb",
    name: "Barbados",
    code: "+1",
    flagImagePos: "-1px -2075px"
  },
  {
    id: "a2f4ff04-86b8-4bc0-952f-686bfe99c07f",
    iso: "by",
    name: "Belarus",
    code: "+375",
    flagImagePos: "-1px -1412px"
  },
  {
    id: "2025b6b3-1287-4b4c-8b13-36deb44e5751",
    iso: "be",
    name: "Belgium",
    code: "+32",
    flagImagePos: "-1px -1px"
  },
  {
    id: "70d82950-3eca-496f-866d-d99c136260e5",
    iso: "bz",
    name: "Belize",
    code: "+501",
    flagImagePos: "-1px -613px"
  },
  {
    id: "dc0bedf5-e197-46b4-af21-c2e495b15768",
    iso: "bj",
    name: "Benin",
    code: "+229",
    flagImagePos: "-1px -1684px"
  },
  {
    id: "aeee4f9d-99a1-4c6b-826c-f3c0ff707dce",
    iso: "bm",
    name: "Bermuda",
    code: "+1",
    flagImagePos: "-1px -2585px"
  },
  {
    id: "73b80fa7-50d0-4fd5-8d26-24baade525a2",
    iso: "bt",
    name: "Bhutan",
    code: "+975",
    flagImagePos: "-1px -2483px"
  },
  {
    id: "571bf396-810b-4fc4-9ffc-c9e4db9d3bef",
    iso: "bo",
    name: "Bolivia",
    code: "+591",
    flagImagePos: "-1px -2177px"
  },
  {
    id: "cbfbf28b-b79b-4b7d-a2e9-37a2000aa15b",
    iso: "ba",
    name: "Bosnia & Herzegovina",
    code: "+387",
    flagImagePos: "-1px -2092px"
  },
  {
    id: "f929da82-915c-4ac8-ba13-aa1b44174c71",
    iso: "bw",
    name: "Botswana",
    code: "+267",
    flagImagePos: "-1px -3724px"
  },
  {
    id: "2dea0689-0548-400c-a58f-ebcd6373cd07",
    iso: "br",
    name: "Brazil",
    code: "+55",
    flagImagePos: "-1px -1004px"
  },
  {
    id: "d2c2c16f-15f8-467b-8c42-a02babe5362b",
    iso: "io",
    name: "British Indian Ocean Territory",
    code: "+246",
    flagImagePos: "-1px -86px"
  },
  {
    id: "1d90db23-ca7c-4d23-a995-9b2a8021f4ad",
    iso: "vg",
    name: "British Virgin Islands",
    code: "+1",
    flagImagePos: "-1px -1854px"
  },
  {
    id: "f16aebb2-cdae-4af2-aba5-f66f34d6ac3a",
    iso: "bn",
    name: "Brunei",
    code: "+673",
    flagImagePos: "-1px -2228px"
  },
  {
    id: "499d6ee6-8f8b-4a5b-bb92-9cce9d1c6546",
    iso: "bg",
    name: "Bulgaria",
    code: "+359",
    flagImagePos: "-1px -3537px"
  },
  {
    id: "67e2986b-98d0-44c3-b08f-6cbba8b14ff8",
    iso: "bf",
    name: "Burkina Faso",
    code: "+226",
    flagImagePos: "-1px -953px"
  },
  {
    id: "fea611f2-4aa3-427f-86e1-657e8aef24a8",
    iso: "bi",
    name: "Burundi",
    code: "+257",
    flagImagePos: "-1px -2551px"
  },
  {
    id: "3b959360-3d04-4018-afdf-a392afa1881d",
    iso: "kh",
    name: "Cambodia",
    code: "+855",
    flagImagePos: "-1px -290px"
  },
  {
    id: "9336ba3b-01be-4b84-82b5-f02395856ac5",
    iso: "cm",
    name: "Cameroon",
    code: "+237",
    flagImagePos: "-1px -2806px"
  },
  {
    id: "36a159b0-f33e-4481-85b0-751bdd9ea79d",
    iso: "ca",
    name: "Canada",
    code: "+1",
    flagImagePos: "-1px -1803px"
  },
  {
    id: "a3038010-382e-436e-b61d-e4b923aa1cb3",
    iso: "cv",
    name: "Cape Verde",
    code: "+238",
    flagImagePos: "-1px -3639px"
  },
  {
    id: "dd898165-12a9-4c90-a3e4-012149c0feac",
    iso: "bq",
    name: "Caribbean Netherlands",
    code: "+599",
    flagImagePos: "-1px -3741px"
  },
  {
    id: "a1f30091-26da-481a-a84f-2638b2d7c14d",
    iso: "ky",
    name: "Cayman Islands",
    code: "+1",
    flagImagePos: "-1px -375px"
  },
  {
    id: "469b4a79-8a1a-4428-b7bd-4665202b7292",
    iso: "cf",
    name: "Central African Republic",
    code: "+236",
    flagImagePos: "-1px -2466px"
  },
  {
    id: "a9c2fa4b-c22a-41bd-9735-b4adeadab7f7",
    iso: "td",
    name: "Chad",
    code: "+235",
    flagImagePos: "-1px -1055px"
  },
  {
    id: "f0825f0d-e086-49e0-846e-9e4784bf872c",
    iso: "cl",
    name: "Chile",
    code: "+56",
    flagImagePos: "-1px -1752px"
  },
  {
    id: "89d3f07d-446e-459d-b168-595af96d708f",
    iso: "cn",
    name: "China",
    code: "+86",
    flagImagePos: "-1px -1072px"
  },
  {
    id: "903801ce-2f83-4df8-a380-9dc6df6c35cf",
    iso: "co",
    name: "Colombia",
    code: "+57",
    flagImagePos: "-1px -409px"
  },
  {
    id: "55d7d2be-8273-4770-844c-1ef87524cd27",
    iso: "km",
    name: "Comoros",
    code: "+269",
    flagImagePos: "-1px -1871px"
  },
  {
    id: "a5b00b2f-01de-4c0d-914f-fe05c92c8f43",
    iso: "cg",
    name: "Congo - Brazzaville",
    code: "+242",
    flagImagePos: "-1px -2398px"
  },
  {
    id: "58e07572-21b9-4630-a17c-a51c0ade4b8a",
    iso: "cd",
    name: "Congo - Kinshasa",
    code: "+243",
    flagImagePos: "-1px -1990px"
  },
  {
    id: "5a09d08e-b6ab-4084-8350-1d97d504c222",
    iso: "ck",
    name: "Cook Islands",
    code: "+682",
    flagImagePos: "-1px -3112px"
  },
  {
    id: "760f2b33-0822-4ad9-83cf-b497dcf273bb",
    iso: "cr",
    name: "Costa Rica",
    code: "+506",
    flagImagePos: "-1px -2857px"
  },
  {
    id: "489db55f-6316-4f43-a1c7-a0921e16743a",
    iso: "ci",
    name: "C\xF4te d\u2019Ivoire",
    code: "+225",
    flagImagePos: "-1px -2194px"
  },
  {
    id: "398c1d99-7ee4-44cd-9c2a-067acba2c8fb",
    iso: "hr",
    name: "Croatia",
    code: "+385",
    flagImagePos: "-1px -1174px"
  },
  {
    id: "572da7dc-8463-4797-ad84-7fcf8f53bb80",
    iso: "cu",
    name: "Cuba",
    code: "+53",
    flagImagePos: "-1px -987px"
  },
  {
    id: "572674e5-b0d4-4206-8310-70f4656e65e2",
    iso: "cw",
    name: "Cura\xE7ao",
    code: "+599",
    flagImagePos: "-1px -3758px"
  },
  {
    id: "ac1e2a9d-a888-427e-9ad3-a0cbb27e603a",
    iso: "cy",
    name: "Cyprus",
    code: "+357",
    flagImagePos: "-1px -732px"
  },
  {
    id: "075ce3fd-83e7-472a-89cb-8b5e224102c4",
    iso: "cz",
    name: "Czechia",
    code: "+420",
    flagImagePos: "-1px -3095px"
  },
  {
    id: "4cde631a-97e9-4fc2-9465-9d9a433ca5c1",
    iso: "dk",
    name: "Denmark",
    code: "+45",
    flagImagePos: "-1px -1820px"
  },
  {
    id: "1b9c40a6-bf03-4759-b6ab-8edefafd8b44",
    iso: "dj",
    name: "Djibouti",
    code: "+253",
    flagImagePos: "-1px -2874px"
  },
  {
    id: "f5eec2ba-1a0b-465c-b3e5-9bd8458d0704",
    iso: "dm",
    name: "Dominica",
    code: "+1",
    flagImagePos: "-1px -3350px"
  },
  {
    id: "cb6921fc-df2a-4a97-8a34-4d901ac1e994",
    iso: "do",
    name: "Dominican Republic",
    code: "+1",
    flagImagePos: "-1px -2007px"
  },
  {
    id: "7d6641f1-ef97-4bee-b1b8-0f54fea35aeb",
    iso: "ec",
    name: "Ecuador",
    code: "+593",
    flagImagePos: "-1px -1531px"
  },
  {
    id: "dfeb30b9-b4b8-4931-9334-c3961b7843a6",
    iso: "eg",
    name: "Egypt",
    code: "+20",
    flagImagePos: "-1px -3027px"
  },
  {
    id: "7d9f7158-7206-491f-a614-6a3e7e6af354",
    iso: "sv",
    name: "El Salvador",
    code: "+503",
    flagImagePos: "-1px -2160px"
  },
  {
    id: "bcdbebc2-a51d-4891-93b0-52b463d0841d",
    iso: "gq",
    name: "Equatorial Guinea",
    code: "+240",
    flagImagePos: "-1px -1973px"
  },
  {
    id: "53c2c225-f321-406f-b377-7c8b6720bcb4",
    iso: "er",
    name: "Eritrea",
    code: "+291",
    flagImagePos: "-1px -936px"
  },
  {
    id: "ba0e995a-17a8-48ff-88e6-54ff8207b038",
    iso: "ee",
    name: "Estonia",
    code: "+372",
    flagImagePos: "-1px -3333px"
  },
  {
    id: "abe9af9b-91da-4bba-9adf-a496bf414719",
    iso: "sz",
    name: "Eswatini",
    code: "+268",
    flagImagePos: "-1px -3129px"
  },
  {
    id: "e993ecc8-732a-4446-8ab1-144c084f3192",
    iso: "et",
    name: "Ethiopia",
    code: "+251",
    flagImagePos: "-1px -3367px"
  },
  {
    id: "6c7aae9d-e18d-4d09-8467-7bb99d925768",
    iso: "fk",
    name: "Falkland Islands (Islas Malvinas)",
    code: "+500",
    flagImagePos: "-1px -3809px"
  },
  {
    id: "92e704eb-9573-4d91-b932-2b1eddaacb3e",
    iso: "fo",
    name: "Faroe Islands",
    code: "+298",
    flagImagePos: "-1px -1429px"
  },
  {
    id: "561c079c-69c2-4e62-b947-5cd76783a67c",
    iso: "fj",
    name: "Fiji",
    code: "+679",
    flagImagePos: "-1px -2500px"
  },
  {
    id: "3f31a88e-c7ed-47fa-9aae-2058be7cbe09",
    iso: "fi",
    name: "Finland",
    code: "+358",
    flagImagePos: "-1px -2568px"
  },
  {
    id: "4c8ba1fc-0203-4a8f-8321-4dda4a0c6732",
    iso: "fr",
    name: "France",
    code: "+33",
    flagImagePos: "-1px -324px"
  },
  {
    id: "198074d5-67a2-4fd3-b13d-429a394b6371",
    iso: "gf",
    name: "French Guiana",
    code: "+594",
    flagImagePos: "-1px -324px"
  },
  {
    id: "2f5ff3d1-745e-48a1-b4e8-a377b22af812",
    iso: "pf",
    name: "French Polynesia",
    code: "+689",
    flagImagePos: "-1px -2262px"
  },
  {
    id: "a8b80121-5529-4cfe-83fb-6b1f6c81abcb",
    iso: "ga",
    name: "Gabon",
    code: "+241",
    flagImagePos: "-1px -1157px"
  },
  {
    id: "c9bc7d57-7883-4f63-bc6e-5dcc3db8612d",
    iso: "gm",
    name: "Gambia",
    code: "+220",
    flagImagePos: "-1px -817px"
  },
  {
    id: "1fc146d8-cebe-4ef1-bb0f-30bd0870ccf9",
    iso: "ge",
    name: "Georgia",
    code: "+995",
    flagImagePos: "-1px -1123px"
  },
  {
    id: "e74ac4b1-0b4b-4630-bac0-2e53e270b363",
    iso: "de",
    name: "Germany",
    code: "+49",
    flagImagePos: "-1px -3452px"
  },
  {
    id: "adda89c9-4b47-4552-85c4-668f2cef2dbd",
    iso: "gh",
    name: "Ghana",
    code: "+233",
    flagImagePos: "-1px -2891px"
  },
  {
    id: "962a059b-a5ac-4e2f-9405-5c418cadb6b0",
    iso: "gi",
    name: "Gibraltar",
    code: "+350",
    flagImagePos: "-1px -341px"
  },
  {
    id: "0acd0dae-0f39-4c23-be1d-c0295539d8c4",
    iso: "gr",
    name: "Greece",
    code: "+30",
    flagImagePos: "-1px -188px"
  },
  {
    id: "7529a6e4-8a6a-4c27-885e-ff0c5e15e515",
    iso: "gl",
    name: "Greenland",
    code: "+299",
    flagImagePos: "-1px -2347px"
  },
  {
    id: "416ba85d-f860-48dc-9c60-32602c07e266",
    iso: "gd",
    name: "Grenada",
    code: "+1",
    flagImagePos: "-1px -3316px"
  },
  {
    id: "f43f1f96-1fb1-4e5e-b818-71e60e501fd4",
    iso: "gp",
    name: "Guadeloupe",
    code: "+590",
    flagImagePos: "-1px -511px"
  },
  {
    id: "e29122da-20cf-4d24-bc68-93f9c3296730",
    iso: "gu",
    name: "Guam",
    code: "+1",
    flagImagePos: "-1px -3265px"
  },
  {
    id: "8a24ff28-dcae-4846-b0c1-18cfcb04de06",
    iso: "gt",
    name: "Guatemala",
    code: "+502",
    flagImagePos: "-1px -1208px"
  },
  {
    id: "b617a005-be15-49c8-9533-c0376681a564",
    iso: "gn",
    name: "Guinea",
    code: "+224",
    flagImagePos: "-1px -3520px"
  },
  {
    id: "d9913e74-e340-4a4f-bf4b-aaaf1747364b",
    iso: "gw",
    name: "Guinea-Bissau",
    code: "+245",
    flagImagePos: "-1px -2602px"
  },
  {
    id: "c8245da4-cd4f-4818-a41e-42afec6faa9a",
    iso: "gy",
    name: "Guyana",
    code: "+592",
    flagImagePos: "-1px -1038px"
  },
  {
    id: "c598961d-3040-4dbb-8934-6d8eb4b9be97",
    iso: "ht",
    name: "Haiti",
    code: "+509",
    flagImagePos: "-1px -392px"
  },
  {
    id: "f51aadf1-3c7a-4d24-b8fb-69c7e05243e4",
    iso: "hn",
    name: "Honduras",
    code: "+504",
    flagImagePos: "-1px -2959px"
  },
  {
    id: "a621dbe5-fb11-4f7f-9a8d-2330bd20c563",
    iso: "hk",
    name: "Hong Kong",
    code: "+852",
    flagImagePos: "-1px -3707px"
  },
  {
    id: "a113fe26-d409-4ab7-b27c-0e8ac112071f",
    iso: "hu",
    name: "Hungary",
    code: "+36",
    flagImagePos: "-1px -902px"
  },
  {
    id: "6430b612-4071-4614-bfdb-408fbb0b8fa4",
    iso: "is",
    name: "Iceland",
    code: "+354",
    flagImagePos: "-1px -2704px"
  },
  {
    id: "4cce1334-df1f-4b11-9f15-a4faaac3d0db",
    iso: "in",
    name: "India",
    code: "+91",
    flagImagePos: "-1px -2245px"
  },
  {
    id: "54969b2f-6aa9-4a58-850d-b4779ef3038e",
    iso: "id",
    name: "Indonesia",
    code: "+62",
    flagImagePos: "-1px -2653px"
  },
  {
    id: "cb631628-5854-44d2-9dbc-47cdf9c9ea5e",
    iso: "ir",
    name: "Iran",
    code: "+98",
    flagImagePos: "-1px -2738px"
  },
  {
    id: "21a50cc1-954c-49c2-8296-696f1f57b79e",
    iso: "iq",
    name: "Iraq",
    code: "+964",
    flagImagePos: "-1px -851px"
  },
  {
    id: "3e17cb8a-9c44-4c75-b417-556546ceebff",
    iso: "ie",
    name: "Ireland",
    code: "+353",
    flagImagePos: "-1px -2670px"
  },
  {
    id: "0a15f5a3-7571-478a-9fcd-6cbd6563e08c",
    iso: "il",
    name: "Israel",
    code: "+972",
    flagImagePos: "-1px -426px"
  },
  {
    id: "2cbab786-d79b-4ea1-ab26-0553c5e423d3",
    iso: "it",
    name: "Italy",
    code: "+39",
    flagImagePos: "-1px -154px"
  },
  {
    id: "33a67cd8-0858-46c3-b833-4fd395d2daa4",
    iso: "jm",
    name: "Jamaica",
    code: "+1",
    flagImagePos: "-1px -2296px"
  },
  {
    id: "5edf8bb6-6a29-44ee-b5f2-7d7cbf61f971",
    iso: "jp",
    name: "Japan",
    code: "+81",
    flagImagePos: "-1px -528px"
  },
  {
    id: "879b69bb-3f8f-484f-a767-7fdeef6bae15",
    iso: "jo",
    name: "Jordan",
    code: "+962",
    flagImagePos: "-1px -1905px"
  },
  {
    id: "4217e52c-2835-4c7b-87d3-e290c4fa6074",
    iso: "kz",
    name: "Kazakhstan",
    code: "+7",
    flagImagePos: "-1px -1565px"
  },
  {
    id: "934b172d-4427-47f6-8648-6411652be23d",
    iso: "ke",
    name: "Kenya",
    code: "+254",
    flagImagePos: "-1px -3605px"
  },
  {
    id: "2358e177-3956-4bcf-a954-56275e90e28d",
    iso: "ki",
    name: "Kiribati",
    code: "+686",
    flagImagePos: "-1px -477px"
  },
  {
    id: "98e8fae8-cd1b-419f-813b-ee348b51d843",
    iso: "xk",
    name: "Kosovo",
    code: "+383",
    flagImagePos: "-1px -3860px"
  },
  {
    id: "5376f774-4fcb-47dc-b118-e48d34b030ef",
    iso: "kw",
    name: "Kuwait",
    code: "+965",
    flagImagePos: "-1px -3435px"
  },
  {
    id: "9bc380c4-5840-4d26-a615-310cd817ae94",
    iso: "kg",
    name: "Kyrgyzstan",
    code: "+996",
    flagImagePos: "-1px -2143px"
  },
  {
    id: "3278e7f0-176b-4352-9e38-df59b052b91f",
    iso: "la",
    name: "Laos",
    code: "+856",
    flagImagePos: "-1px -562px"
  },
  {
    id: "e2ba5fad-f531-467c-b195-a6cd90136e19",
    iso: "lv",
    name: "Latvia",
    code: "+371",
    flagImagePos: "-1px -2619px"
  },
  {
    id: "49f74ca5-9ff1-44af-8e9c-59e1c4704e83",
    iso: "lb",
    name: "Lebanon",
    code: "+961",
    flagImagePos: "-1px -1616px"
  },
  {
    id: "d94b6d96-17c1-4de8-abc3-3e14873b62c0",
    iso: "ls",
    name: "Lesotho",
    code: "+266",
    flagImagePos: "-1px -3010px"
  },
  {
    id: "e35005f8-285e-4fe5-9cda-def721d9cc7b",
    iso: "lr",
    name: "Liberia",
    code: "+231",
    flagImagePos: "-1px -2823px"
  },
  {
    id: "60788779-78f0-4b2b-8ad8-c7e4bbde10b5",
    iso: "ly",
    name: "Libya",
    code: "+218",
    flagImagePos: "-1px -137px"
  },
  {
    id: "f24ad4ea-454a-4d40-a1f1-db188ec0b75e",
    iso: "li",
    name: "Liechtenstein",
    code: "+423",
    flagImagePos: "-1px -1276px"
  },
  {
    id: "f6709b72-4150-4cde-a37b-e6eb95f5bd1d",
    iso: "lt",
    name: "Lithuania",
    code: "+370",
    flagImagePos: "-1px -1446px"
  },
  {
    id: "0d0c1a84-f645-4ffe-87d2-9a7bb4f88bbc",
    iso: "lu",
    name: "Luxembourg",
    code: "+352",
    flagImagePos: "-1px -1922px"
  },
  {
    id: "5b3fdebe-a4ed-47c6-88c3-d867d3a79bf0",
    iso: "mo",
    name: "Macao",
    code: "+853",
    flagImagePos: "-1px -3554px"
  },
  {
    id: "6a84f456-bc77-4b76-8651-e2a0994f3278",
    iso: "mg",
    name: "Madagascar",
    code: "+261",
    flagImagePos: "-1px -1667px"
  },
  {
    id: "2a5d5baf-1db7-4606-a330-227834c77098",
    iso: "mw",
    name: "Malawi",
    code: "+265",
    flagImagePos: "-1px -2942px"
  },
  {
    id: "f2b32090-6d8d-40db-ba50-a63037926508",
    iso: "my",
    name: "Malaysia",
    code: "+60",
    flagImagePos: "-1px -2517px"
  },
  {
    id: "51c7830c-0c76-44ed-bcdf-be75688e1d0c",
    iso: "mv",
    name: "Maldives",
    code: "+960",
    flagImagePos: "-1px -800px"
  },
  {
    id: "ea7a2274-0542-4bbb-b629-aa63bef97442",
    iso: "ml",
    name: "Mali",
    code: "+223",
    flagImagePos: "-1px -3469px"
  },
  {
    id: "6f70796e-8f64-4a1a-ac2a-990d7d502db3",
    iso: "mt",
    name: "Malta",
    code: "+356",
    flagImagePos: "-1px -2041px"
  },
  {
    id: "c60f429e-0d4f-42cf-96f9-e7dc4fdcd5ee",
    iso: "mh",
    name: "Marshall Islands",
    code: "+692",
    flagImagePos: "-1px -1463px"
  },
  {
    id: "e8afae89-e5b0-4551-bbd4-bbfcee50c8ad",
    iso: "mq",
    name: "Martinique",
    code: "+596",
    flagImagePos: "-1px -239px"
  },
  {
    id: "361afc7c-ee94-464b-b5cb-f059ecd79e99",
    iso: "mr",
    name: "Mauritania",
    code: "+222",
    flagImagePos: "-1px -307px"
  },
  {
    id: "bce43b5e-d2f7-47ca-b5c9-9ae72ba67bda",
    iso: "mu",
    name: "Mauritius",
    code: "+230",
    flagImagePos: "-1px -2993px"
  },
  {
    id: "d153dc32-4821-4f05-a5c8-564d003da5e1",
    iso: "mx",
    name: "Mexico",
    code: "+52",
    flagImagePos: "-1px -2755px"
  },
  {
    id: "80f9f386-231f-4d96-b950-5f6b6edbeb63",
    iso: "fm",
    name: "Micronesia",
    code: "+691",
    flagImagePos: "-1px -2313px"
  },
  {
    id: "a1d89e32-4b91-4519-b0d9-7d61299394ef",
    iso: "md",
    name: "Moldova",
    code: "+373",
    flagImagePos: "-1px -3690px"
  },
  {
    id: "0afeb22c-c106-479b-af45-1380fb8b404c",
    iso: "mc",
    name: "Monaco",
    code: "+377",
    flagImagePos: "-1px -1191px"
  },
  {
    id: "a18d0204-7c4a-425c-a33e-cbfac01be162",
    iso: "mn",
    name: "Mongolia",
    code: "+976",
    flagImagePos: "-1px -3503px"
  },
  {
    id: "260479fc-0410-4ccd-a963-e06c9f059bdb",
    iso: "me",
    name: "Montenegro",
    code: "+382",
    flagImagePos: "-1px -2976px"
  },
  {
    id: "a66872f1-ba90-420f-8f55-f0fbb10abce1",
    iso: "ms",
    name: "Montserrat",
    code: "+1",
    flagImagePos: "-1px -749px"
  },
  {
    id: "8fd1ba13-cb1a-488d-b715-01724d56d9dd",
    iso: "ma",
    name: "Morocco",
    code: "+212",
    flagImagePos: "-1px -3214px"
  },
  {
    id: "5d26fba4-6d15-4cd4-a23f-9034d952e580",
    iso: "mz",
    name: "Mozambique",
    code: "+258",
    flagImagePos: "-1px -834px"
  },
  {
    id: "f9c12031-14dc-495f-b150-28dddce17e3f",
    iso: "mm",
    name: "Myanmar (Burma)",
    code: "+95",
    flagImagePos: "-1px -18px"
  },
  {
    id: "6e21e956-2740-4058-a758-3b249f628a7b",
    iso: "na",
    name: "Namibia",
    code: "+264",
    flagImagePos: "-1px -2534px"
  },
  {
    id: "4a07dd5a-9341-4b06-969f-4bcd9c32e2a0",
    iso: "nr",
    name: "Nauru",
    code: "+674",
    flagImagePos: "-1px -2330px"
  },
  {
    id: "9d7121ce-1445-4c84-9401-ddc703d9dedb",
    iso: "np",
    name: "Nepal",
    code: "+977",
    flagImagePos: "-1px -120px"
  },
  {
    id: "31fbb24d-7c38-4ca8-b385-48d76a0685e3",
    iso: "nl",
    name: "Netherlands",
    code: "+31",
    flagImagePos: "-1px -1888px"
  },
  {
    id: "18071cc2-c457-4b4f-9217-2519a0b52c25",
    iso: "nc",
    name: "New Caledonia",
    code: "+687",
    flagImagePos: "-1px -1650px"
  },
  {
    id: "c4b0e7d1-08b2-421b-8ff6-913020cbf271",
    iso: "nz",
    name: "New Zealand",
    code: "+64",
    flagImagePos: "-1px -2024px"
  },
  {
    id: "25719230-2c64-4525-96c4-d4427dd2e40b",
    iso: "ni",
    name: "Nicaragua",
    code: "+505",
    flagImagePos: "-1px -171px"
  },
  {
    id: "a1090a0b-7f89-4d75-8c92-e460da9103ab",
    iso: "ne",
    name: "Niger",
    code: "+227",
    flagImagePos: "-1px -715px"
  },
  {
    id: "6869e4bb-32b8-43ff-84d1-67d9ee832e1f",
    iso: "ng",
    name: "Nigeria",
    code: "+234",
    flagImagePos: "-1px -3418px"
  },
  {
    id: "52b3ae35-196a-4e22-81e2-67b816a32d0e",
    iso: "nu",
    name: "Niue",
    code: "+683",
    flagImagePos: "-1px -2840px"
  },
  {
    id: "9f4e45d4-c7e1-4ba9-84d0-e712e7213c95",
    iso: "nf",
    name: "Norfolk Island",
    code: "+672",
    flagImagePos: "-1px -256px"
  },
  {
    id: "2db1b02c-631e-40a0-94d8-f1e567b1f705",
    iso: "kp",
    name: "North Korea",
    code: "+850",
    flagImagePos: "-1px -2415px"
  },
  {
    id: "92621b3f-55f5-42bb-8604-d0302e355e31",
    iso: "mk",
    name: "North Macedonia",
    code: "+389",
    flagImagePos: "-1px -1769px"
  },
  {
    id: "3cee8ab2-5cb3-43ea-b8ab-7016187d33e9",
    iso: "mp",
    name: "Northern Mariana Islands",
    code: "+1",
    flagImagePos: "-1px -919px"
  },
  {
    id: "77683fad-f106-4a94-a629-9562650edb35",
    iso: "no",
    name: "Norway",
    code: "+47",
    flagImagePos: "-1px -1089px"
  },
  {
    id: "09090411-ef9b-44f3-aeb9-65b5e338b8d6",
    iso: "om",
    name: "Oman",
    code: "+968",
    flagImagePos: "-1px -3384px"
  },
  {
    id: "18d4f06b-233b-4398-a9f8-6b4a4eaf6c71",
    iso: "pk",
    name: "Pakistan",
    code: "+92",
    flagImagePos: "-1px -2772px"
  },
  {
    id: "b1da5023-aab9-431c-921c-4f3e12b1aa7a",
    iso: "pw",
    name: "Palau",
    code: "+680",
    flagImagePos: "-1px -273px"
  },
  {
    id: "e6442ab2-ac99-4a02-9d7c-fd878e50de8a",
    iso: "ps",
    name: "Palestine",
    code: "+970",
    flagImagePos: "-1px -1548px"
  },
  {
    id: "6bb10fb5-8b4a-4136-a82e-6be6c017ab76",
    iso: "pa",
    name: "Panama",
    code: "+507",
    flagImagePos: "-1px -1106px"
  },
  {
    id: "b070a014-2ce4-4939-a868-951bd1e70923",
    iso: "pg",
    name: "Papua New Guinea",
    code: "+675",
    flagImagePos: "-1px -1939px"
  },
  {
    id: "5e23c743-ce7d-4abc-9dd4-44a700b29090",
    iso: "py",
    name: "Paraguay",
    code: "+595",
    flagImagePos: "-1px -3231px"
  },
  {
    id: "1a83f99d-91b3-438d-a576-5bf0f05fdd12",
    iso: "pe",
    name: "Peru",
    code: "+51",
    flagImagePos: "-1px -1225px"
  },
  {
    id: "667c9699-46b9-40f9-a41f-2c52826bb3cb",
    iso: "ph",
    name: "Philippines",
    code: "+63",
    flagImagePos: "-1px -2432px"
  },
  {
    id: "b84030ab-3193-4aa2-aef2-d4d21997e536",
    iso: "pl",
    name: "Poland",
    code: "+48",
    flagImagePos: "-1px -1514px"
  },
  {
    id: "e26d0064-6173-42ab-b761-bf8c639199fa",
    iso: "pt",
    name: "Portugal",
    code: "+351",
    flagImagePos: "-1px -664px"
  },
  {
    id: "0fd9770d-2a91-4b81-8633-f465bc151e16",
    iso: "pr",
    name: "Puerto Rico",
    code: "+1",
    flagImagePos: "-1px -596px"
  },
  {
    id: "f866eeeb-e64f-4123-ab63-c16e0a00d029",
    iso: "qa",
    name: "Qatar",
    code: "+974",
    flagImagePos: "-1px -579px"
  },
  {
    id: "c3a3fb54-5731-4a28-96bd-4190cfeeaff0",
    iso: "re",
    name: "R\xE9union",
    code: "+262",
    flagImagePos: "-1px -324px"
  },
  {
    id: "a6a48809-7e33-42c8-a25a-56ccdd7ccdfe",
    iso: "ro",
    name: "Romania",
    code: "+40",
    flagImagePos: "-1px -885px"
  },
  {
    id: "9556d1e9-3d02-4c5b-a0ce-97a2fd55c74a",
    iso: "ru",
    name: "Russia",
    code: "+7",
    flagImagePos: "-1px -868px"
  },
  {
    id: "6f7f0a97-e8b5-455d-bace-6953de7324eb",
    iso: "rw",
    name: "Rwanda",
    code: "+250",
    flagImagePos: "-1px -3673px"
  },
  {
    id: "e251cad5-7655-48f7-9892-6edf04a14fd7",
    iso: "ws",
    name: "Samoa",
    code: "+685",
    flagImagePos: "-1px -3163px"
  },
  {
    id: "f1cfec8c-a960-43b3-8e11-2cad72b4fff8",
    iso: "sm",
    name: "San Marino",
    code: "+378",
    flagImagePos: "-1px -2908px"
  },
  {
    id: "c5301260-13dc-4012-9678-2b57a5e409ae",
    iso: "st",
    name: "S\xE3o Tom\xE9 & Pr\xEDncipe",
    code: "+239",
    flagImagePos: "-1px -3299px"
  },
  {
    id: "02599f80-225a-451b-8c25-03b8993f88ac",
    iso: "sa",
    name: "Saudi Arabia",
    code: "+966",
    flagImagePos: "-1px -52px"
  },
  {
    id: "a54c3469-9668-4063-bfa0-04c450b43d3e",
    iso: "sn",
    name: "Senegal",
    code: "+221",
    flagImagePos: "-1px -2925px"
  },
  {
    id: "687ea07b-a7df-4778-b802-b040676fa56c",
    iso: "rs",
    name: "Serbia",
    code: "+381",
    flagImagePos: "-1px -3401px"
  },
  {
    id: "d010fb25-7044-4055-9c60-25bc89d83f64",
    iso: "sc",
    name: "Seychelles",
    code: "+248",
    flagImagePos: "-1px -1327px"
  },
  {
    id: "0c46a1e9-fcd8-4e7e-bbb1-ef3bfa83539b",
    iso: "sl",
    name: "Sierra Leone",
    code: "+232",
    flagImagePos: "-1px -970px"
  },
  {
    id: "e724edb6-9df4-42fb-bc1e-417996aa3020",
    iso: "sg",
    name: "Singapore",
    code: "+65",
    flagImagePos: "-1px -35px"
  },
  {
    id: "7478814a-dc3f-41ff-9341-da7e07ba8499",
    iso: "sx",
    name: "Sint Maarten",
    code: "+1",
    flagImagePos: "-1px -3826px"
  },
  {
    id: "b1a34e32-38dd-4a38-b63a-7133baf1417a",
    iso: "sk",
    name: "Slovakia",
    code: "+421",
    flagImagePos: "-1px -3044px"
  },
  {
    id: "1c1689a5-580b-411f-9283-b1e8333b351e",
    iso: "si",
    name: "Slovenia",
    code: "+386",
    flagImagePos: "-1px -1582px"
  },
  {
    id: "4b1c6a42-90b0-49ea-b968-8c95b871f0ec",
    iso: "sb",
    name: "Solomon Islands",
    code: "+677",
    flagImagePos: "-1px -1361px"
  },
  {
    id: "7ec9fdff-8ae6-4a14-b55e-6262d46bc3ef",
    iso: "so",
    name: "Somalia",
    code: "+252",
    flagImagePos: "-1px -1786px"
  },
  {
    id: "5e62f404-3e2c-4d63-ad7b-ab0755903842",
    iso: "za",
    name: "South Africa",
    code: "+27",
    flagImagePos: "-1px -3248px"
  },
  {
    id: "31966c2a-7d24-4ebc-8e02-392e4f04f12b",
    iso: "kr",
    name: "South Korea",
    code: "+82",
    flagImagePos: "-1px -3078px"
  },
  {
    id: "1b7ba825-bf7d-42c0-bb73-81f10a4009bf",
    iso: "ss",
    name: "South Sudan",
    code: "+211",
    flagImagePos: "-1px -3775px"
  },
  {
    id: "55c4137b-e437-4e80-bc8f-7857cd7c9364",
    iso: "es",
    name: "Spain",
    code: "+34",
    flagImagePos: "-1px -1480px"
  },
  {
    id: "fce4c284-e6a1-4e8c-96ca-6edf09e8a401",
    iso: "lk",
    name: "Sri Lanka",
    code: "+94",
    flagImagePos: "-1px -3622px"
  },
  {
    id: "0ae719a5-ae43-45d0-b669-66976a050ef1",
    iso: "bl",
    name: "St. Barth\xE9lemy",
    code: "+590",
    flagImagePos: "-1px -324px"
  },
  {
    id: "a588cc85-32a4-45ff-ba69-627105dab27a",
    iso: "sh",
    name: "St. Helena",
    code: "+290",
    flagImagePos: "-1px -630px"
  },
  {
    id: "f065aa7c-8d9e-419c-bbf0-9a97011cf272",
    iso: "kn",
    name: "St. Kitts & Nevis",
    code: "+1",
    flagImagePos: "-1px -103px"
  },
  {
    id: "9ea73bcc-2bf5-4ad9-9b39-de33de125f98",
    iso: "lc",
    name: "St. Lucia",
    code: "+1",
    flagImagePos: "-1px -1837px"
  },
  {
    id: "86a5a0e8-bfd4-480e-9bc0-7b88b2248a57",
    iso: "mf",
    name: "St. Martin",
    code: "+590",
    flagImagePos: "-1px -86px"
  },
  {
    id: "540857ba-923a-4656-a19f-cb3914825ecc",
    iso: "pm",
    name: "St. Pierre & Miquelon",
    code: "+508",
    flagImagePos: "-1px -1378px"
  },
  {
    id: "d381eb44-e77a-4dbd-abbb-224d7158e96d",
    iso: "vc",
    name: "St. Vincent & Grenadines",
    code: "+1",
    flagImagePos: "-1px -3588px"
  },
  {
    id: "7015db62-072d-49a2-8320-7587ec8b952f",
    iso: "sd",
    name: "Sudan",
    code: "+249",
    flagImagePos: "-1px -443px"
  },
  {
    id: "d7bbb285-aa4e-4a92-8613-8d2645c351ee",
    iso: "sr",
    name: "Suriname",
    code: "+597",
    flagImagePos: "-1px -3656px"
  },
  {
    id: "78978092-7be3-4ec8-b201-068089035cff",
    iso: "se",
    name: "Sweden",
    code: "+46",
    flagImagePos: "-1px -494px"
  },
  {
    id: "9f3fbec3-b58a-4b5a-9c4b-3997398c4148",
    iso: "ch",
    name: "Switzerland",
    code: "+41",
    flagImagePos: "-1px -1718px"
  },
  {
    id: "7ce0562c-fdc4-444c-bba3-02239c3c17da",
    iso: "sy",
    name: "Syria",
    code: "+963",
    flagImagePos: "-1px -2449px"
  },
  {
    id: "2d57a4a1-3f5a-41a2-a320-74a8f0db92e5",
    iso: "tw",
    name: "Taiwan",
    code: "+886",
    flagImagePos: "-1px -647px"
  },
  {
    id: "e1f747c5-4e91-487b-8265-8f70b3430849",
    iso: "tj",
    name: "Tajikistan",
    code: "+992",
    flagImagePos: "-1px -222px"
  },
  {
    id: "f07e257c-e049-4046-b031-f4348fb1734a",
    iso: "tz",
    name: "Tanzania",
    code: "+255",
    flagImagePos: "-1px -3146px"
  },
  {
    id: "684a0dde-5b5f-4072-98a4-46fc8de09556",
    iso: "th",
    name: "Thailand",
    code: "+66",
    flagImagePos: "-1px -1242px"
  },
  {
    id: "0376e29f-d9dd-4449-aa4e-d47353c16873",
    iso: "tl",
    name: "Timor-Leste",
    code: "+670",
    flagImagePos: "-1px -3843px"
  },
  {
    id: "fd647814-fc64-4724-bba7-4cd4da26c11e",
    iso: "tg",
    name: "Togo",
    code: "+228",
    flagImagePos: "-1px -783px"
  },
  {
    id: "ed271b14-39ee-4403-9be6-b54ac89b0ed3",
    iso: "tk",
    name: "Tokelau",
    code: "+690",
    flagImagePos: "-1px -3792px"
  },
  {
    id: "e2b83ecb-5a79-4ca0-9860-4baeae0380bb",
    iso: "to",
    name: "Tonga",
    code: "+676",
    flagImagePos: "-1px -1395px"
  },
  {
    id: "33bca09c-cc33-4680-929b-191ccbbc959a",
    iso: "tt",
    name: "Trinidad & Tobago",
    code: "+1",
    flagImagePos: "-1px -545px"
  },
  {
    id: "ab25c5da-7698-4b96-af34-5d20523915d9",
    iso: "tn",
    name: "Tunisia",
    code: "+216",
    flagImagePos: "-1px -698px"
  },
  {
    id: "784ac645-bc50-4b35-b5fb-effd72f99749",
    iso: "tr",
    name: "Turkey",
    code: "+90",
    flagImagePos: "-1px -2126px"
  },
  {
    id: "9a3b8bd3-bc73-4251-a068-a4842365e91a",
    iso: "tm",
    name: "Turkmenistan",
    code: "+993",
    flagImagePos: "-1px -3486px"
  },
  {
    id: "361bcad4-44d1-41fb-9bbf-39ea0fb87d49",
    iso: "tc",
    name: "Turks & Caicos Islands",
    code: "+1",
    flagImagePos: "-1px -1701px"
  },
  {
    id: "26fb1484-c756-4592-8523-99af9c870bb5",
    iso: "tv",
    name: "Tuvalu",
    code: "+688",
    flagImagePos: "-1px -358px"
  },
  {
    id: "cdb8455e-4eda-48f7-b30a-63c20838a364",
    iso: "vi",
    name: "U.S. Virgin Islands",
    code: "+1",
    flagImagePos: "-1px -2381px"
  },
  {
    id: "f47476cc-3da6-4377-83c9-33ab9f5293d1",
    iso: "ug",
    name: "Uganda",
    code: "+256",
    flagImagePos: "-1px -1497px"
  },
  {
    id: "5fcb791a-91be-416a-895d-0502fc509838",
    iso: "ua",
    name: "Ukraine",
    code: "+380",
    flagImagePos: "-1px -2721px"
  },
  {
    id: "7c8e1ced-0dd7-42b6-880b-19b3486d11e5",
    iso: "ae",
    name: "United Arab Emirates",
    code: "+971",
    flagImagePos: "-1px -3061px"
  },
  {
    id: "9f1362e7-e87c-4123-ade8-e5cfa6e99c09",
    iso: "gb",
    name: "United Kingdom",
    code: "+44",
    flagImagePos: "-1px -86px"
  },
  {
    id: "f9033267-9df0-46e4-9f79-c8b022e5c835",
    iso: "us",
    name: "United States",
    code: "+1",
    flagImagePos: "-1px -69px"
  },
  {
    id: "2cab7122-ec9a-48ac-8415-392b4f67ae51",
    iso: "uy",
    name: "Uruguay",
    code: "+598",
    flagImagePos: "-1px -3571px"
  },
  {
    id: "f442740c-94c3-4f2f-afb2-c7c279224b5f",
    iso: "uz",
    name: "Uzbekistan",
    code: "+998",
    flagImagePos: "-1px -1293px"
  },
  {
    id: "e6774547-6ab1-41a2-8107-201f913937b2",
    iso: "vu",
    name: "Vanuatu",
    code: "+678",
    flagImagePos: "-1px -1633px"
  },
  {
    id: "d600d6b0-e21f-4b6e-9036-0435a6ac2ea6",
    iso: "va",
    name: "Vatican City",
    code: "+39",
    flagImagePos: "-1px -3197px"
  },
  {
    id: "b8e0072d-498b-4bb4-a5b6-354d4200f882",
    iso: "ve",
    name: "Venezuela",
    code: "+58",
    flagImagePos: "-1px -1344px"
  },
  {
    id: "15dc081a-4690-42e9-a40d-b3bcea3173fc",
    iso: "vn",
    name: "Vietnam",
    code: "+84",
    flagImagePos: "-1px -1259px"
  },
  {
    id: "4452a787-5f31-4eb7-b14c-ae3175564ae5",
    iso: "wf",
    name: "Wallis & Futuna",
    code: "+681",
    flagImagePos: "-1px -324px"
  },
  {
    id: "237c9f8d-3b6c-4b70-af72-8a58a7154144",
    iso: "ye",
    name: "Yemen",
    code: "+967",
    flagImagePos: "-1px -2211px"
  },
  {
    id: "02a76f62-3078-472a-bd42-edb759cf3079",
    iso: "zm",
    name: "Zambia",
    code: "+260",
    flagImagePos: "-1px -2109px"
  },
  {
    id: "10e8e117-6832-4d3f-9b05-f66832c2f5ec",
    iso: "zw",
    name: "Zimbabwe",
    code: "+263",
    flagImagePos: "-1px -2789px"
  }
];
var tags = [
  {
    id: "c31e9e5d-e0cb-4574-a13f-8a6ee5ff8309",
    title: "Work"
  },
  {
    id: "a8991c76-2fda-4bbd-a718-df13d6478847",
    title: "Friend"
  },
  {
    id: "56ddbd47-4078-4ddd-8448-73c5e88d5f59",
    title: "Family"
  },
  {
    id: "2026ce08-d08f-4b4f-9506-b10cdb5b104f",
    title: "High School"
  },
  {
    id: "65930b5a-5d2a-4303-b11f-865d69e6fdb5",
    title: "College"
  },
  {
    id: "3eaab175-ec0d-4db7-bc3b-efc633c769be",
    title: "Baseball Team"
  },
  {
    id: "cbde2486-5033-4e09-838e-e901b108cd41",
    title: "Band"
  }
];

// src/app/mock-api/apps/contacts/api.ts
var _ContactsMockApi = class _ContactsMockApi {
  /**
   * Constructor
   */
  constructor(_fuseMockApiService) {
    this._fuseMockApiService = _fuseMockApiService;
    this._contacts = contacts2;
    this._countries = countries;
    this._tags = tags;
    this.registerHandlers();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Register Mock API handlers
   */
  registerHandlers() {
    this._fuseMockApiService.onGet("api/apps/contacts/all").reply(() => {
      const contacts3 = cloneDeep_default(this._contacts);
      contacts3.sort((a, b) => a.name.localeCompare(b.name));
      return [200, contacts3];
    });
    this._fuseMockApiService.onGet("api/apps/contacts/search").reply(({ request }) => {
      const query = request.params.get("query");
      let contacts3 = cloneDeep_default(this._contacts);
      if (query) {
        contacts3 = contacts3.filter((contact) => contact.name && contact.name.toLowerCase().includes(query.toLowerCase()));
      }
      contacts3.sort((a, b) => a.name.localeCompare(b.name));
      return [200, contacts3];
    });
    this._fuseMockApiService.onGet("api/apps/contacts/contact").reply(({ request }) => {
      const id = request.params.get("id");
      const contacts3 = cloneDeep_default(this._contacts);
      const contact = contacts3.find((item) => item.id === id);
      return [200, contact];
    });
    this._fuseMockApiService.onPost("api/apps/contacts/contact").reply(() => {
      const newContact = {
        id: FuseMockApiUtils.guid(),
        avatar: null,
        name: "New Contact",
        emails: [],
        phoneNumbers: [],
        job: {
          title: "",
          company: ""
        },
        birthday: null,
        address: null,
        notes: null,
        tags: []
      };
      this._contacts.unshift(newContact);
      return [200, newContact];
    });
    this._fuseMockApiService.onPatch("api/apps/contacts/contact").reply(({ request }) => {
      const id = request.body.id;
      const contact = cloneDeep_default(request.body.contact);
      let updatedContact = null;
      this._contacts.forEach((item, index, contacts3) => {
        if (item.id === id) {
          contacts3[index] = assign_default({}, contacts3[index], contact);
          updatedContact = contacts3[index];
        }
      });
      return [200, updatedContact];
    });
    this._fuseMockApiService.onDelete("api/apps/contacts/contact").reply(({ request }) => {
      const id = request.params.get("id");
      this._contacts.forEach((item, index) => {
        if (item.id === id) {
          this._contacts.splice(index, 1);
        }
      });
      return [200, true];
    });
    this._fuseMockApiService.onGet("api/apps/contacts/countries").reply(() => [200, cloneDeep_default(this._countries)]);
    this._fuseMockApiService.onGet("api/apps/contacts/tags").reply(() => [200, cloneDeep_default(this._tags)]);
    this._fuseMockApiService.onPost("api/apps/contacts/tag").reply(({ request }) => {
      const newTag = cloneDeep_default(request.body.tag);
      newTag.id = FuseMockApiUtils.guid();
      this._tags.unshift(newTag);
      return [200, newTag];
    });
    this._fuseMockApiService.onPatch("api/apps/contacts/tag").reply(({ request }) => {
      const id = request.body.id;
      const tag = cloneDeep_default(request.body.tag);
      let updatedTag = null;
      this._tags.forEach((item, index, tags4) => {
        if (item.id === id) {
          tags4[index] = assign_default({}, tags4[index], tag);
          updatedTag = tags4[index];
        }
      });
      return [200, updatedTag];
    });
    this._fuseMockApiService.onDelete("api/apps/contacts/tag").reply(({ request }) => {
      const id = request.params.get("id");
      this._tags.forEach((item, index) => {
        if (item.id === id) {
          this._tags.splice(index, 1);
        }
      });
      const contactsWithTag = this._contacts.filter((contact) => contact.tags.indexOf(id) > -1);
      contactsWithTag.forEach((contact) => {
        contact.tags.splice(contact.tags.indexOf(id), 1);
      });
      return [200, true];
    });
    const readAsDataURL = (file) => (
      // Return a new promise
      new Promise((resolve, reject) => {
        const reader = new FileReader();
        reader.onload = () => {
          resolve(reader.result);
        };
        reader.onerror = (e) => {
          reject(e);
        };
        reader.readAsDataURL(file);
      })
    );
    this._fuseMockApiService.onPost("api/apps/contacts/avatar").reply(({ request }) => {
      const id = request.body.id;
      const avatar = request.body.avatar;
      let updatedContact = null;
      return from(readAsDataURL(avatar)).pipe(map((path) => {
        this._contacts.forEach((item, index, contacts3) => {
          if (item.id === id) {
            contacts3[index].avatar = path;
            updatedContact = contacts3[index];
          }
        });
        return [200, updatedContact];
      }));
    });
  }
};
_ContactsMockApi.\u0275fac = function ContactsMockApi_Factory(t) {
  return new (t || _ContactsMockApi)(\u0275\u0275inject(FuseMockApiService));
};
_ContactsMockApi.\u0275prov = /* @__PURE__ */ \u0275\u0275defineInjectable({ token: _ContactsMockApi, factory: _ContactsMockApi.\u0275fac, providedIn: "root" });
var ContactsMockApi = _ContactsMockApi;

// src/app/mock-api/apps/ecommerce/inventory/data.ts
var categories2 = [
  {
    id: "b899ec30-b85a-40ab-bb1f-18a596d5c6de",
    parentId: null,
    name: "Mens",
    slug: "mens"
  },
  {
    id: "07986d93-d4eb-4de1-9448-2538407f7254",
    parentId: null,
    name: "Ladies",
    slug: "ladies"
  },
  {
    id: "ad12aa94-3863-47f8-acab-a638ef02a3e9",
    parentId: null,
    name: "Unisex",
    slug: "unisex"
  }
];
var brands = [
  {
    id: "e1789f32-9475-43e7-9256-451d2e3a2282",
    name: "Benton",
    slug: "benton"
  },
  {
    id: "61d52c2a-8947-4a2c-8c35-f36baef45b96",
    name: "Capmia",
    slug: "capmia"
  },
  {
    id: "f9987124-7ada-4b93-bef7-35280b3ddbd7",
    name: "Lara",
    slug: "lara"
  },
  {
    id: "5913ee46-a497-41db-a118-ee506011529f",
    name: "Premera",
    slug: "premera"
  },
  {
    id: "2c4d98d8-f334-4125-9596-862515f5526b",
    name: "Zeon",
    slug: "zeon"
  }
];
var tags2 = [
  {
    id: "167190fa-51b4-45fc-a742-8ce1b33d24ea",
    title: "mens"
  },
  {
    id: "3baea410-a7d6-4916-b79a-bdce50c37f95",
    title: "ladies"
  },
  {
    id: "8ec8f60d-552f-4216-9f11-462b95b1d306",
    title: "unisex"
  },
  {
    id: "8837b93f-388b-43cc-851d-4ca8f23f3a61",
    title: "44mm"
  },
  {
    id: "8f868ddb-d4a2-461d-bc3b-d7c8668687c3",
    title: "40mm"
  },
  {
    id: "2300ac48-f268-466a-b765-8b878b6e14a7",
    title: "5 ATM"
  },
  {
    id: "0b11b742-3125-4d75-9a6f-84af7fde1969",
    title: "10 ATM"
  },
  {
    id: "0fc39efd-f640-41f8-95a5-3f1d749df200",
    title: "automatic"
  },
  {
    id: "7d6dd47e-7472-4f8b-93d4-46c114c44533",
    title: "chronograph"
  },
  {
    id: "b1286f3a-e2d0-4237-882b-f0efc0819ec3",
    title: "watch"
  }
];
var vendors = [
  {
    id: "987dd10a-43b1-49f9-bfd9-05bb2dbc7029",
    name: "Evel",
    slug: "evel"
  },
  {
    id: "998b0c07-abfd-4ba3-8de1-7563ef3c4d57",
    name: "Mivon",
    slug: "mivon"
  },
  {
    id: "05ebb527-d733-46a9-acfb-a4e4ec960024",
    name: "Neogen",
    slug: "neogen"
  }
];
var products = [
  {
    id: "7eb7c859-1347-4317-96b6-9476a7e2ba3c",
    category: "b899ec30-b85a-40ab-bb1f-18a596d5c6de",
    name: "Capmia Mens Chronograph Watch 44mm 5 ATM",
    description: "Consequat esse in culpa commodo anim. Et ullamco anim amet est. Sunt dolore ex occaecat officia anim. In sit minim laborum nostrud. Consequat ex do velit voluptate do exercitation est adipisicing quis velit.",
    tags: [
      "167190fa-51b4-45fc-a742-8ce1b33d24ea",
      "7d6dd47e-7472-4f8b-93d4-46c114c44533",
      "8837b93f-388b-43cc-851d-4ca8f23f3a61",
      "2300ac48-f268-466a-b765-8b878b6e14a7",
      "b1286f3a-e2d0-4237-882b-f0efc0819ec3"
    ],
    sku: "ETV-2425",
    barcode: "8346201275534",
    brand: "61d52c2a-8947-4a2c-8c35-f36baef45b96",
    vendor: "998b0c07-abfd-4ba3-8de1-7563ef3c4d57",
    stock: 30,
    reserved: 5,
    cost: 450.18,
    basePrice: 1036,
    taxPercent: 30,
    price: 1346.8,
    weight: 0.61,
    thumbnail: "images/apps/ecommerce/products/watch-01-thumb.jpg",
    images: [
      "images/apps/ecommerce/products/watch-01-01.jpg",
      "images/apps/ecommerce/products/watch-01-02.jpg",
      "images/apps/ecommerce/products/watch-01-03.jpg"
    ],
    active: true
  },
  {
    id: "00b0292f-3d50-4669-a0c4-7a9d85efc98d",
    category: "07986d93-d4eb-4de1-9448-2538407f7254",
    name: "Zeon Ladies Chronograph Watch 40mm 10 ATM",
    description: "Nulla duis dolor fugiat culpa proident. Duis anim est excepteur occaecat adipisicing occaecat. Labore id laborum non elit proident est veniam officia eu. Labore aliqua nisi duis sint ex consequat nostrud excepteur duis ex incididunt adipisicing.",
    tags: [
      "3baea410-a7d6-4916-b79a-bdce50c37f95",
      "7d6dd47e-7472-4f8b-93d4-46c114c44533",
      "8f868ddb-d4a2-461d-bc3b-d7c8668687c3",
      "0b11b742-3125-4d75-9a6f-84af7fde1969",
      "b1286f3a-e2d0-4237-882b-f0efc0819ec3"
    ],
    sku: "ATH-7573",
    barcode: "8278968055700",
    brand: "2c4d98d8-f334-4125-9596-862515f5526b",
    vendor: "05ebb527-d733-46a9-acfb-a4e4ec960024",
    stock: 37,
    reserved: 2,
    cost: 723.55,
    basePrice: 1686,
    taxPercent: 30,
    price: 2191.8,
    weight: 0.79,
    thumbnail: "images/apps/ecommerce/products/watch-02-thumb.jpg",
    images: [
      "images/apps/ecommerce/products/watch-02-01.jpg",
      "images/apps/ecommerce/products/watch-02-02.jpg",
      "images/apps/ecommerce/products/watch-02-03.jpg"
    ],
    active: true
  },
  {
    id: "3f34e2fb-95bf-4f61-be28-956d2c7e4eb2",
    category: "b899ec30-b85a-40ab-bb1f-18a596d5c6de",
    name: "Benton Mens Automatic Watch 44mm 5 ATM",
    description: "Velit irure deserunt aliqua officia. Eiusmod quis sunt magna laboris aliquip non dolor consequat cupidatat dolore esse. Consectetur mollit officia laborum fugiat nulla duis ad excepteur do aliqua fugiat. Fugiat non laboris exercitation ipsum in incididunt.",
    tags: [
      "167190fa-51b4-45fc-a742-8ce1b33d24ea",
      "0fc39efd-f640-41f8-95a5-3f1d749df200",
      "8837b93f-388b-43cc-851d-4ca8f23f3a61",
      "2300ac48-f268-466a-b765-8b878b6e14a7",
      "b1286f3a-e2d0-4237-882b-f0efc0819ec3"
    ],
    sku: "ADH-1921",
    barcode: "8808746892183",
    brand: "e1789f32-9475-43e7-9256-451d2e3a2282",
    vendor: "987dd10a-43b1-49f9-bfd9-05bb2dbc7029",
    stock: 30,
    reserved: 3,
    cost: 390.63,
    basePrice: 950,
    taxPercent: 10,
    price: 1045,
    weight: 0.76,
    thumbnail: null,
    images: [
      "images/apps/ecommerce/products/watch-03-01.jpg",
      "images/apps/ecommerce/products/watch-03-02.jpg",
      "images/apps/ecommerce/products/watch-03-03.jpg"
    ],
    active: false
  },
  {
    id: "8fcce528-d878-4cc8-99f7-bd3451ed5405",
    category: "b899ec30-b85a-40ab-bb1f-18a596d5c6de",
    name: "Capmia Mens Chronograph Watch 44mm 10 ATM",
    description: "Velit nisi proident cupidatat exercitation occaecat et adipisicing nostrud id ex nostrud sint. Qui fugiat velit minim amet reprehenderit voluptate velit exercitation proident Lorem nisi culpa. Commodo quis officia officia eiusmod mollit aute fugiat duis quis minim culpa in. Exercitation laborum fugiat ex excepteur officia reprehenderit magna ipsum. Laboris dolore nostrud id labore sint consectetur aliqua tempor ea aute do.",
    tags: [
      "167190fa-51b4-45fc-a742-8ce1b33d24ea",
      "7d6dd47e-7472-4f8b-93d4-46c114c44533",
      "8837b93f-388b-43cc-851d-4ca8f23f3a61",
      "0b11b742-3125-4d75-9a6f-84af7fde1969",
      "b1286f3a-e2d0-4237-882b-f0efc0819ec3"
    ],
    sku: "EAP-7752",
    barcode: "8866355574164",
    brand: "61d52c2a-8947-4a2c-8c35-f36baef45b96",
    vendor: "987dd10a-43b1-49f9-bfd9-05bb2dbc7029",
    stock: 37,
    reserved: 4,
    cost: 395.37,
    basePrice: 839,
    taxPercent: 30,
    price: 1090.7,
    weight: 0.62,
    thumbnail: "images/apps/ecommerce/products/watch-04-thumb.jpg",
    images: [
      "images/apps/ecommerce/products/watch-04-01.jpg",
      "images/apps/ecommerce/products/watch-04-02.jpg",
      "images/apps/ecommerce/products/watch-04-03.jpg"
    ],
    active: true
  },
  {
    id: "91d96e18-d3f5-4c32-a8bf-1fc525cb92c0",
    category: "07986d93-d4eb-4de1-9448-2538407f7254",
    name: "Benton Ladies Automatic Watch 40mm 5 ATM",
    description: "Pariatur proident labore commodo consequat qui et. Ad labore fugiat consectetur ea magna dolore mollit consequat reprehenderit laborum ad mollit eiusmod. Esse laboris voluptate ullamco occaecat labore esse laboris enim ipsum aliquip ipsum. Ea ea proident eu enim anim mollit non consequat enim nulla.",
    tags: [
      "3baea410-a7d6-4916-b79a-bdce50c37f95",
      "0fc39efd-f640-41f8-95a5-3f1d749df200",
      "8f868ddb-d4a2-461d-bc3b-d7c8668687c3",
      "2300ac48-f268-466a-b765-8b878b6e14a7",
      "b1286f3a-e2d0-4237-882b-f0efc0819ec3"
    ],
    sku: "ADP-5745",
    barcode: "8390590339828",
    brand: "e1789f32-9475-43e7-9256-451d2e3a2282",
    vendor: "05ebb527-d733-46a9-acfb-a4e4ec960024",
    stock: 12,
    reserved: 3,
    cost: 442.61,
    basePrice: 961,
    taxPercent: 20,
    price: 1153.2,
    weight: 0.67,
    thumbnail: "images/apps/ecommerce/products/watch-05-thumb.jpg",
    images: [
      "images/apps/ecommerce/products/watch-05-01.jpg",
      "images/apps/ecommerce/products/watch-05-02.jpg",
      "images/apps/ecommerce/products/watch-05-03.jpg"
    ],
    active: false
  },
  {
    id: "d7a47d7c-4cdf-4319-bbaa-37ade38c622c",
    category: "b899ec30-b85a-40ab-bb1f-18a596d5c6de",
    name: "Benton Mens Chronograph Watch 44mm 10 ATM",
    description: "Nulla enim reprehenderit proident ut Lorem laborum cillum eiusmod est ex anim. Nisi non non laboris excepteur ullamco elit do duis anim esse labore aliqua adipisicing velit. Deserunt magna exercitation cillum amet.",
    tags: [
      "167190fa-51b4-45fc-a742-8ce1b33d24ea",
      "7d6dd47e-7472-4f8b-93d4-46c114c44533",
      "8837b93f-388b-43cc-851d-4ca8f23f3a61",
      "0b11b742-3125-4d75-9a6f-84af7fde1969",
      "b1286f3a-e2d0-4237-882b-f0efc0819ec3"
    ],
    sku: "ATV-2569",
    barcode: "8238990048137",
    brand: "e1789f32-9475-43e7-9256-451d2e3a2282",
    vendor: "987dd10a-43b1-49f9-bfd9-05bb2dbc7029",
    stock: 36,
    reserved: 2,
    cost: 563.43,
    basePrice: 1370,
    taxPercent: 30,
    price: 1781,
    weight: 0.62,
    thumbnail: "images/apps/ecommerce/products/watch-06-thumb.jpg",
    images: [
      "images/apps/ecommerce/products/watch-06-01.jpg",
      "images/apps/ecommerce/products/watch-06-02.jpg",
      "images/apps/ecommerce/products/watch-06-03.jpg"
    ],
    active: true
  },
  {
    id: "ecf0b3df-38c3-45dc-972b-c509a3dc053e",
    category: "b899ec30-b85a-40ab-bb1f-18a596d5c6de",
    name: "Benton Mens Chronograph Watch 44mm 10 ATM",
    description: "Esse culpa ut ullamco dolore quis adipisicing. Minim veniam quis magna officia non. In pariatur nostrud nisi eiusmod minim anim id. Commodo ex incididunt dolor ad id aliqua incididunt minim in Lorem reprehenderit. Commodo ullamco consectetur aliqua Lorem cupidatat esse veniam consectetur sint veniam duis commodo.",
    tags: [
      "167190fa-51b4-45fc-a742-8ce1b33d24ea",
      "7d6dd47e-7472-4f8b-93d4-46c114c44533",
      "8837b93f-388b-43cc-851d-4ca8f23f3a61",
      "0b11b742-3125-4d75-9a6f-84af7fde1969",
      "b1286f3a-e2d0-4237-882b-f0efc0819ec3"
    ],
    sku: "EAH-2563",
    barcode: "8638426908385",
    brand: "e1789f32-9475-43e7-9256-451d2e3a2282",
    vendor: "987dd10a-43b1-49f9-bfd9-05bb2dbc7029",
    stock: 35,
    reserved: 5,
    cost: 705.26,
    basePrice: 1721,
    taxPercent: 20,
    price: 2065.2,
    weight: 0.67,
    thumbnail: "images/apps/ecommerce/products/watch-07-thumb.jpg",
    images: [
      "images/apps/ecommerce/products/watch-07-01.jpg",
      "images/apps/ecommerce/products/watch-07-02.jpg",
      "images/apps/ecommerce/products/watch-07-03.jpg"
    ],
    active: false
  },
  {
    id: "5765080a-aaee-40b9-86be-c18b9d79c73c",
    category: "ad12aa94-3863-47f8-acab-a638ef02a3e9",
    name: "Benton Unisex Automatic Watch 40mm 10 ATM",
    description: "Anim duis nisi ut ex amet reprehenderit cillum consequat pariatur ipsum elit voluptate excepteur non. Anim enim proident laboris pariatur mollit quis incididunt labore. Incididunt tempor aliquip ex labore ad consequat cillum est sunt anim dolor. Dolore adipisicing non nulla cillum Lorem deserunt. Nostrud incididunt amet sint velit.",
    tags: [
      "8ec8f60d-552f-4216-9f11-462b95b1d306",
      "0fc39efd-f640-41f8-95a5-3f1d749df200",
      "8f868ddb-d4a2-461d-bc3b-d7c8668687c3",
      "0b11b742-3125-4d75-9a6f-84af7fde1969",
      "b1286f3a-e2d0-4237-882b-f0efc0819ec3"
    ],
    sku: "ATH-6399",
    barcode: "8881883828441",
    brand: "e1789f32-9475-43e7-9256-451d2e3a2282",
    vendor: "05ebb527-d733-46a9-acfb-a4e4ec960024",
    stock: 17,
    reserved: 5,
    cost: 624.12,
    basePrice: 1448,
    taxPercent: 10,
    price: 1592.8,
    weight: 0.55,
    thumbnail: "images/apps/ecommerce/products/watch-08-thumb.jpg",
    images: [
      "images/apps/ecommerce/products/watch-08-01.jpg",
      "images/apps/ecommerce/products/watch-08-02.jpg",
      "images/apps/ecommerce/products/watch-08-03.jpg"
    ],
    active: false
  },
  {
    id: "6e71be88-b225-474c-91e5-111ced7d6220",
    category: "07986d93-d4eb-4de1-9448-2538407f7254",
    name: "Premera Ladies Chronograph Watch 40mm 5 ATM",
    description: "Velit fugiat adipisicing ut quis anim deserunt ex culpa nostrud laborum. Consectetur duis velit esse commodo voluptate magna dolor in enim exercitation. Ea aliquip cupidatat aute dolor tempor magna id laboris nulla eiusmod ut amet. Veniam irure ex incididunt officia commodo eiusmod nostrud ad consequat commodo ad voluptate.",
    tags: [
      "3baea410-a7d6-4916-b79a-bdce50c37f95",
      "7d6dd47e-7472-4f8b-93d4-46c114c44533",
      "8f868ddb-d4a2-461d-bc3b-d7c8668687c3",
      "2300ac48-f268-466a-b765-8b878b6e14a7",
      "b1286f3a-e2d0-4237-882b-f0efc0819ec3"
    ],
    sku: "ELH-2495",
    barcode: "8268777127281",
    brand: "5913ee46-a497-41db-a118-ee506011529f",
    vendor: "05ebb527-d733-46a9-acfb-a4e4ec960024",
    stock: 49,
    reserved: 5,
    cost: 738.91,
    basePrice: 1848,
    taxPercent: 30,
    price: 2402.4,
    weight: 0.54,
    thumbnail: "images/apps/ecommerce/products/watch-09-thumb.jpg",
    images: [
      "images/apps/ecommerce/products/watch-09-01.jpg",
      "images/apps/ecommerce/products/watch-09-02.jpg",
      "images/apps/ecommerce/products/watch-09-03.jpg"
    ],
    active: false
  },
  {
    id: "51242500-6983-4a78-bff3-d278eb4e3a57",
    category: "b899ec30-b85a-40ab-bb1f-18a596d5c6de",
    name: "Lara Mens Automatic Watch 44mm 10 ATM",
    description: "Enim laboris ut non elit dolore est consectetur. Duis irure minim elit velit anim incididunt minim ipsum ullamco ad dolore sunt. Proident aute proident velit elit ex reprehenderit ut. Lorem laborum excepteur elit proident sunt ipsum incididunt id do. Occaecat proident proident qui aute officia cupidatat aliqua aliqua nostrud proident laboris est ad qui. Magna eiusmod amet ut pariatur esse nisi aliquip deserunt minim ad et ea occaecat. Sunt enim cupidatat id eiusmod ea aute quis excepteur irure commodo dolore excepteur.",
    tags: [
      "167190fa-51b4-45fc-a742-8ce1b33d24ea",
      "0fc39efd-f640-41f8-95a5-3f1d749df200",
      "8837b93f-388b-43cc-851d-4ca8f23f3a61",
      "0b11b742-3125-4d75-9a6f-84af7fde1969",
      "b1286f3a-e2d0-4237-882b-f0efc0819ec3"
    ],
    sku: "ATT-6019",
    barcode: "8452763551765",
    brand: "f9987124-7ada-4b93-bef7-35280b3ddbd7",
    vendor: "998b0c07-abfd-4ba3-8de1-7563ef3c4d57",
    stock: 24,
    reserved: 4,
    cost: 688.89,
    basePrice: 1502,
    taxPercent: 8,
    price: 1622.16,
    weight: 0.76,
    thumbnail: "images/apps/ecommerce/products/watch-10-thumb.jpg",
    images: [
      "images/apps/ecommerce/products/watch-10-01.jpg",
      "images/apps/ecommerce/products/watch-10-02.jpg",
      "images/apps/ecommerce/products/watch-10-03.jpg"
    ],
    active: true
  },
  {
    id: "844a4395-233f-4ffb-85bd-7baa0e490a88",
    category: "b899ec30-b85a-40ab-bb1f-18a596d5c6de",
    name: "Lara Mens Chronograph Watch 44mm 5 ATM",
    description: "Labore irure qui sunt consectetur. Elit nulla id cillum duis. Nulla nulla eu occaecat eiusmod duis irure id do esse. Ad eu incididunt voluptate amet nostrud ullamco mollit dolore occaecat cupidatat nisi reprehenderit. Proident fugiat laborum sit velit ea voluptate.",
    tags: [
      "167190fa-51b4-45fc-a742-8ce1b33d24ea",
      "7d6dd47e-7472-4f8b-93d4-46c114c44533",
      "8837b93f-388b-43cc-851d-4ca8f23f3a61",
      "2300ac48-f268-466a-b765-8b878b6e14a7",
      "b1286f3a-e2d0-4237-882b-f0efc0819ec3"
    ],
    sku: "ADH-2335",
    barcode: "8385907318041",
    brand: "f9987124-7ada-4b93-bef7-35280b3ddbd7",
    vendor: "05ebb527-d733-46a9-acfb-a4e4ec960024",
    stock: 44,
    reserved: 3,
    cost: 708.41,
    basePrice: 1467,
    taxPercent: 18,
    price: 1731.06,
    weight: 0.7,
    thumbnail: "images/apps/ecommerce/products/watch-11-thumb.jpg",
    images: [
      "images/apps/ecommerce/products/watch-11-01.jpg",
      "images/apps/ecommerce/products/watch-11-02.jpg",
      "images/apps/ecommerce/products/watch-11-03.jpg"
    ],
    active: false
  },
  {
    id: "7520f1b6-3c45-46ef-a4d5-881971212d1e",
    category: "ad12aa94-3863-47f8-acab-a638ef02a3e9",
    name: "Benton Unisex Automatic Watch 40mm 10 ATM",
    description: "Esse nisi amet occaecat culpa aliqua est ad ea velit. Consectetur in voluptate sit pariatur eiusmod exercitation eu aute occaecat in duis. Voluptate consectetur eu commodo proident id sunt labore irure.",
    tags: [
      "8ec8f60d-552f-4216-9f11-462b95b1d306",
      "0fc39efd-f640-41f8-95a5-3f1d749df200",
      "8f868ddb-d4a2-461d-bc3b-d7c8668687c3",
      "0b11b742-3125-4d75-9a6f-84af7fde1969",
      "b1286f3a-e2d0-4237-882b-f0efc0819ec3"
    ],
    sku: "ATH-3064",
    barcode: "8608510561856",
    brand: "e1789f32-9475-43e7-9256-451d2e3a2282",
    vendor: "998b0c07-abfd-4ba3-8de1-7563ef3c4d57",
    stock: 25,
    reserved: 2,
    cost: 731.94,
    basePrice: 1743,
    taxPercent: 10,
    price: 1917.3,
    weight: 0.47,
    thumbnail: "images/apps/ecommerce/products/watch-12-thumb.jpg",
    images: [
      "images/apps/ecommerce/products/watch-12-01.jpg",
      "images/apps/ecommerce/products/watch-12-02.jpg",
      "images/apps/ecommerce/products/watch-12-03.jpg"
    ],
    active: false
  },
  {
    id: "683e41d8-6ebc-4e6a-a7c1-9189ca52ef19",
    category: "b899ec30-b85a-40ab-bb1f-18a596d5c6de",
    name: "Zeon Mens Chronograph Watch 44mm 10 ATM",
    description: "Eu irure do cupidatat esse in. Aliqua laborum deserunt qui Lorem deserunt minim fugiat deserunt voluptate minim. Anim nulla tempor eiusmod ad exercitation reprehenderit officia. Nisi proident labore eu anim excepteur aliqua occaecat. Laboris nostrud ipsum commodo cupidatat.",
    tags: [
      "167190fa-51b4-45fc-a742-8ce1b33d24ea",
      "7d6dd47e-7472-4f8b-93d4-46c114c44533",
      "8837b93f-388b-43cc-851d-4ca8f23f3a61",
      "0b11b742-3125-4d75-9a6f-84af7fde1969",
      "b1286f3a-e2d0-4237-882b-f0efc0819ec3"
    ],
    sku: "ADV-3188",
    barcode: "8334758988643",
    brand: "2c4d98d8-f334-4125-9596-862515f5526b",
    vendor: "987dd10a-43b1-49f9-bfd9-05bb2dbc7029",
    stock: 14,
    reserved: 5,
    cost: 375.76,
    basePrice: 786,
    taxPercent: 30,
    price: 1021.8,
    weight: 0.53,
    thumbnail: "images/apps/ecommerce/products/watch-13-thumb.jpg",
    images: [
      "images/apps/ecommerce/products/watch-13-01.jpg",
      "images/apps/ecommerce/products/watch-13-02.jpg",
      "images/apps/ecommerce/products/watch-13-03.jpg"
    ],
    active: false
  },
  {
    id: "d4e52238-292d-462b-b9bb-1751030132e2",
    category: "ad12aa94-3863-47f8-acab-a638ef02a3e9",
    name: "Lara Unisex Chronograph Watch 40mm 5 ATM",
    description: "Nulla nostrud aliquip consequat laborum ut enim exercitation. Aute dolor duis aliquip consequat minim officia. Nisi labore et magna et sunt consectetur id anim pariatur officia et esse ut. Ullamco dolor cillum consequat velit eiusmod consectetur. Ullamco reprehenderit tempor minim dolore officia do nisi cupidatat adipisicing fugiat velit.",
    tags: [
      "8ec8f60d-552f-4216-9f11-462b95b1d306",
      "7d6dd47e-7472-4f8b-93d4-46c114c44533",
      "8f868ddb-d4a2-461d-bc3b-d7c8668687c3",
      "2300ac48-f268-466a-b765-8b878b6e14a7",
      "b1286f3a-e2d0-4237-882b-f0efc0819ec3"
    ],
    sku: "ATT-7423",
    barcode: "8417153336369",
    brand: "f9987124-7ada-4b93-bef7-35280b3ddbd7",
    vendor: "998b0c07-abfd-4ba3-8de1-7563ef3c4d57",
    stock: 33,
    reserved: 2,
    cost: 743.93,
    basePrice: 1793,
    taxPercent: 8,
    price: 1936.44,
    weight: 0.86,
    thumbnail: "images/apps/ecommerce/products/watch-14-thumb.jpg",
    images: [
      "images/apps/ecommerce/products/watch-14-01.jpg",
      "images/apps/ecommerce/products/watch-14-02.jpg",
      "images/apps/ecommerce/products/watch-14-03.jpg"
    ],
    active: false
  },
  {
    id: "98861dfc-0d21-4fd5-81aa-49785d003d95",
    category: "b899ec30-b85a-40ab-bb1f-18a596d5c6de",
    name: "Premera Mens Automatic Watch 44mm 10 ATM",
    description: "Veniam sint aliquip aliquip aliquip amet Lorem irure proident laborum et eiusmod aliqua. Aliquip deserunt voluptate magna ut quis magna dolor in dolore. Commodo adipisicing excepteur occaecat aute nisi in. Est aute ad ut incididunt anim ea commodo. Sunt excepteur duis sunt est laborum magna Lorem ullamco exercitation dolore irure.",
    tags: [
      "167190fa-51b4-45fc-a742-8ce1b33d24ea",
      "0fc39efd-f640-41f8-95a5-3f1d749df200",
      "8837b93f-388b-43cc-851d-4ca8f23f3a61",
      "0b11b742-3125-4d75-9a6f-84af7fde1969",
      "b1286f3a-e2d0-4237-882b-f0efc0819ec3"
    ],
    sku: "AAT-6453",
    barcode: "8501386761670",
    brand: "5913ee46-a497-41db-a118-ee506011529f",
    vendor: "987dd10a-43b1-49f9-bfd9-05bb2dbc7029",
    stock: 38,
    reserved: 3,
    cost: 364.64,
    basePrice: 806,
    taxPercent: 18,
    price: 951.08,
    weight: 0.59,
    thumbnail: "images/apps/ecommerce/products/watch-15-thumb.jpg",
    images: [
      "images/apps/ecommerce/products/watch-15-01.jpg",
      "images/apps/ecommerce/products/watch-15-02.jpg",
      "images/apps/ecommerce/products/watch-15-03.jpg"
    ],
    active: false
  },
  {
    id: "a71f9b10-e884-4aad-9810-29fe10ce6d42",
    category: "07986d93-d4eb-4de1-9448-2538407f7254",
    name: "Lara Ladies Chronograph Watch 40mm 5 ATM",
    description: "Deserunt non deserunt ut do labore cupidatat duis veniam in non adipisicing officia esse id. Adipisicing Lorem sint excepteur culpa labore consequat incididunt nulla minim amet. Sint do et fugiat laborum exercitation reprehenderit ut non nostrud occaecat nisi et qui dolore. Amet eiusmod nulla est officia ad magna cillum non dolor ullamco officia incididunt.",
    tags: [
      "3baea410-a7d6-4916-b79a-bdce50c37f95",
      "7d6dd47e-7472-4f8b-93d4-46c114c44533",
      "8f868ddb-d4a2-461d-bc3b-d7c8668687c3",
      "2300ac48-f268-466a-b765-8b878b6e14a7",
      "b1286f3a-e2d0-4237-882b-f0efc0819ec3"
    ],
    sku: "AAP-4902",
    barcode: "8847387136582",
    brand: "f9987124-7ada-4b93-bef7-35280b3ddbd7",
    vendor: "987dd10a-43b1-49f9-bfd9-05bb2dbc7029",
    stock: 40,
    reserved: 3,
    cost: 525.3,
    basePrice: 1303,
    taxPercent: 10,
    price: 1433.3,
    weight: 0.69,
    thumbnail: "images/apps/ecommerce/products/watch-16-thumb.jpg",
    images: [
      "images/apps/ecommerce/products/watch-16-01.jpg",
      "images/apps/ecommerce/products/watch-16-02.jpg",
      "images/apps/ecommerce/products/watch-16-03.jpg"
    ],
    active: false
  },
  {
    id: "149e6db5-4ecc-4021-bc56-08b27514a746",
    category: "07986d93-d4eb-4de1-9448-2538407f7254",
    name: "Lara Ladies Chronograph Watch 40mm 5 ATM",
    description: "Occaecat proident fugiat consectetur ullamco est. Duis non minim eiusmod magna dolor reprehenderit ad deserunt et qui amet. Tempor cillum dolore veniam Lorem sit ad pariatur et sint. Sunt anim et cupidatat Lorem proident fugiat incididunt incididunt minim non sint. Eiusmod quis et ullamco cillum et veniam do tempor officia sint.",
    tags: [
      "3baea410-a7d6-4916-b79a-bdce50c37f95",
      "7d6dd47e-7472-4f8b-93d4-46c114c44533",
      "8f868ddb-d4a2-461d-bc3b-d7c8668687c3",
      "2300ac48-f268-466a-b765-8b878b6e14a7",
      "b1286f3a-e2d0-4237-882b-f0efc0819ec3"
    ],
    sku: "ALV-194",
    barcode: "8860845382207",
    brand: "f9987124-7ada-4b93-bef7-35280b3ddbd7",
    vendor: "05ebb527-d733-46a9-acfb-a4e4ec960024",
    stock: 20,
    reserved: 2,
    cost: 670.87,
    basePrice: 1537,
    taxPercent: 8,
    price: 1659.96,
    weight: 0.66,
    thumbnail: "images/apps/ecommerce/products/watch-17-thumb.jpg",
    images: [
      "images/apps/ecommerce/products/watch-17-01.jpg",
      "images/apps/ecommerce/products/watch-17-02.jpg",
      "images/apps/ecommerce/products/watch-17-03.jpg"
    ],
    active: false
  },
  {
    id: "655287de-2e24-41f3-a82f-8b08548ecc39",
    category: "b899ec30-b85a-40ab-bb1f-18a596d5c6de",
    name: "Zeon Mens Automatic Watch 44mm 10 ATM",
    description: "Eiusmod magna tempor est est quis eu. Minim irure magna anim mollit non adipisicing aute. Nostrud aute consectetur eu in non laboris excepteur esse esse occaecat officia.",
    tags: [
      "167190fa-51b4-45fc-a742-8ce1b33d24ea",
      "0fc39efd-f640-41f8-95a5-3f1d749df200",
      "8837b93f-388b-43cc-851d-4ca8f23f3a61",
      "0b11b742-3125-4d75-9a6f-84af7fde1969",
      "b1286f3a-e2d0-4237-882b-f0efc0819ec3"
    ],
    sku: "ADH-5492",
    barcode: "8611606513571",
    brand: "2c4d98d8-f334-4125-9596-862515f5526b",
    vendor: "987dd10a-43b1-49f9-bfd9-05bb2dbc7029",
    stock: 47,
    reserved: 2,
    cost: 645.13,
    basePrice: 1581,
    taxPercent: 10,
    price: 1739.1,
    weight: 0.54,
    thumbnail: "images/apps/ecommerce/products/watch-18-thumb.jpg",
    images: [
      "images/apps/ecommerce/products/watch-18-01.jpg",
      "images/apps/ecommerce/products/watch-18-02.jpg",
      "images/apps/ecommerce/products/watch-18-03.jpg"
    ],
    active: true
  },
  {
    id: "c215b427-d840-4537-aea1-a9bdfa49441b",
    category: "ad12aa94-3863-47f8-acab-a638ef02a3e9",
    name: "Lara Unisex Automatic Watch 40mm 10 ATM",
    description: "Excepteur enim non qui consequat sunt exercitation laborum ipsum sunt. Sunt pariatur fugiat voluptate ipsum consectetur do magna culpa labore. Cupidatat non ex labore incididunt aliquip commodo est in. Consectetur mollit nisi aliquip cupidatat do laborum est ullamco velit aliqua fugiat qui adipisicing. Aute reprehenderit quis id sint nulla.",
    tags: [
      "8ec8f60d-552f-4216-9f11-462b95b1d306",
      "0fc39efd-f640-41f8-95a5-3f1d749df200",
      "8f868ddb-d4a2-461d-bc3b-d7c8668687c3",
      "0b11b742-3125-4d75-9a6f-84af7fde1969",
      "b1286f3a-e2d0-4237-882b-f0efc0819ec3"
    ],
    sku: "AAT-6702",
    barcode: "8330223562386",
    brand: "f9987124-7ada-4b93-bef7-35280b3ddbd7",
    vendor: "05ebb527-d733-46a9-acfb-a4e4ec960024",
    stock: 21,
    reserved: 3,
    cost: 704.26,
    basePrice: 1733,
    taxPercent: 10,
    price: 1906.3,
    weight: 0.84,
    thumbnail: "images/apps/ecommerce/products/watch-19-thumb.jpg",
    images: [
      "images/apps/ecommerce/products/watch-19-01.jpg",
      "images/apps/ecommerce/products/watch-19-02.jpg",
      "images/apps/ecommerce/products/watch-19-03.jpg"
    ],
    active: true
  },
  {
    id: "8b1d9366-891e-49cd-aafb-ac65ce2741e2",
    category: "07986d93-d4eb-4de1-9448-2538407f7254",
    name: "Zeon Ladies Automatic Watch 40mm 10 ATM",
    description: "Reprehenderit magna reprehenderit ex mollit Lorem labore ut. Duis consectetur aliqua cillum occaecat quis ex excepteur fugiat nulla nisi dolor minim. Elit voluptate exercitation nulla et ut adipisicing esse eu nisi amet eu. Ut cillum ipsum quis fugiat proident Lorem est aute ipsum sint dolore consequat.",
    tags: [
      "3baea410-a7d6-4916-b79a-bdce50c37f95",
      "0fc39efd-f640-41f8-95a5-3f1d749df200",
      "8f868ddb-d4a2-461d-bc3b-d7c8668687c3",
      "0b11b742-3125-4d75-9a6f-84af7fde1969",
      "b1286f3a-e2d0-4237-882b-f0efc0819ec3"
    ],
    sku: "EDH-5599",
    barcode: "8309212335274",
    brand: "2c4d98d8-f334-4125-9596-862515f5526b",
    vendor: "05ebb527-d733-46a9-acfb-a4e4ec960024",
    stock: 35,
    reserved: 2,
    cost: 712.66,
    basePrice: 1711,
    taxPercent: 30,
    price: 2224.3,
    weight: 0.47,
    thumbnail: "images/apps/ecommerce/products/watch-20-thumb.jpg",
    images: [
      "images/apps/ecommerce/products/watch-20-01.jpg",
      "images/apps/ecommerce/products/watch-20-02.jpg",
      "images/apps/ecommerce/products/watch-20-03.jpg"
    ],
    active: false
  },
  {
    id: "54e29534-518b-4006-b72a-f21fac6c4d5e",
    category: "b899ec30-b85a-40ab-bb1f-18a596d5c6de",
    name: "Lara Mens Chronograph Watch 44mm 10 ATM",
    description: "Officia eu magna eu amet fugiat qui ullamco eu. Occaecat dolore minim ad tempor consequat adipisicing non Lorem consequat. In nostrud incididunt adipisicing in. Irure occaecat aliquip deserunt minim officia ad excepteur do commodo magna.",
    tags: [
      "167190fa-51b4-45fc-a742-8ce1b33d24ea",
      "7d6dd47e-7472-4f8b-93d4-46c114c44533",
      "8837b93f-388b-43cc-851d-4ca8f23f3a61",
      "0b11b742-3125-4d75-9a6f-84af7fde1969",
      "b1286f3a-e2d0-4237-882b-f0efc0819ec3"
    ],
    sku: "ADP-3719",
    barcode: "8879167838673",
    brand: "f9987124-7ada-4b93-bef7-35280b3ddbd7",
    vendor: "998b0c07-abfd-4ba3-8de1-7563ef3c4d57",
    stock: 28,
    reserved: 3,
    cost: 374.38,
    basePrice: 749,
    taxPercent: 8,
    price: 808.92,
    weight: 0.52,
    thumbnail: "images/apps/ecommerce/products/watch-21-thumb.jpg",
    images: [
      "images/apps/ecommerce/products/watch-21-01.jpg",
      "images/apps/ecommerce/products/watch-21-02.jpg",
      "images/apps/ecommerce/products/watch-21-03.jpg"
    ],
    active: false
  },
  {
    id: "6a5726e8-c467-45ea-92ab-d83235a06405",
    category: "b899ec30-b85a-40ab-bb1f-18a596d5c6de",
    name: "Premera Mens Chronograph Watch 44mm 10 ATM",
    description: "Duis id consequat ex officia nisi. Et reprehenderit tempor sunt nostrud. Duis dolore tempor anim non duis qui aute magna officia. Ullamco proident esse enim amet nostrud occaecat veniam. Nostrud ea eiusmod laborum id laborum veniam nulla. Voluptate proident ullamco exercitation id consequat dolore id pariatur esse nulla consectetur.",
    tags: [
      "167190fa-51b4-45fc-a742-8ce1b33d24ea",
      "7d6dd47e-7472-4f8b-93d4-46c114c44533",
      "8837b93f-388b-43cc-851d-4ca8f23f3a61",
      "0b11b742-3125-4d75-9a6f-84af7fde1969",
      "b1286f3a-e2d0-4237-882b-f0efc0819ec3"
    ],
    sku: "ATH-3399",
    barcode: "8356410903599",
    brand: "5913ee46-a497-41db-a118-ee506011529f",
    vendor: "987dd10a-43b1-49f9-bfd9-05bb2dbc7029",
    stock: 20,
    reserved: 2,
    cost: 444.68,
    basePrice: 1103,
    taxPercent: 18,
    price: 1301.54,
    weight: 0.56,
    thumbnail: "images/apps/ecommerce/products/watch-22-thumb.jpg",
    images: [
      "images/apps/ecommerce/products/watch-22-01.jpg",
      "images/apps/ecommerce/products/watch-22-02.jpg",
      "images/apps/ecommerce/products/watch-22-03.jpg"
    ],
    active: false
  },
  {
    id: "d7d1d6df-e91f-4c53-982a-2720bc2b4cdd",
    category: "ad12aa94-3863-47f8-acab-a638ef02a3e9",
    name: "Capmia Unisex Automatic Watch 40mm 10 ATM",
    description: "Voluptate consectetur nisi aliquip cupidatat sunt labore. Adipisicing voluptate tempor sunt eu irure cupidatat laboris. Enim aliquip aute sit non laborum Lorem in enim duis eu deserunt. Laboris magna irure aute ut proident fugiat laborum aliquip tempor nostrud id. Et esse cupidatat sunt ullamco reprehenderit enim dolore ea in do esse esse id.",
    tags: [
      "8ec8f60d-552f-4216-9f11-462b95b1d306",
      "0fc39efd-f640-41f8-95a5-3f1d749df200",
      "8f868ddb-d4a2-461d-bc3b-d7c8668687c3",
      "0b11b742-3125-4d75-9a6f-84af7fde1969",
      "b1286f3a-e2d0-4237-882b-f0efc0819ec3"
    ],
    sku: "EAV-4030",
    barcode: "8545771786193",
    brand: "61d52c2a-8947-4a2c-8c35-f36baef45b96",
    vendor: "998b0c07-abfd-4ba3-8de1-7563ef3c4d57",
    stock: 23,
    reserved: 3,
    cost: 538.72,
    basePrice: 1213,
    taxPercent: 10,
    price: 1334.3,
    weight: 0.75,
    thumbnail: "images/apps/ecommerce/products/watch-23-thumb.jpg",
    images: [
      "images/apps/ecommerce/products/watch-23-01.jpg",
      "images/apps/ecommerce/products/watch-23-02.jpg",
      "images/apps/ecommerce/products/watch-23-03.jpg"
    ],
    active: true
  }
];

// src/app/mock-api/apps/ecommerce/inventory/api.ts
var _ECommerceInventoryMockApi = class _ECommerceInventoryMockApi {
  /**
   * Constructor
   */
  constructor(_fuseMockApiService) {
    this._fuseMockApiService = _fuseMockApiService;
    this._categories = categories2;
    this._brands = brands;
    this._products = products;
    this._tags = tags2;
    this._vendors = vendors;
    this.registerHandlers();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Register Mock API handlers
   */
  registerHandlers() {
    this._fuseMockApiService.onGet("api/apps/ecommerce/inventory/categories").reply(() => [200, cloneDeep_default(this._categories)]);
    this._fuseMockApiService.onGet("api/apps/ecommerce/inventory/brands").reply(() => [200, cloneDeep_default(this._brands)]);
    this._fuseMockApiService.onGet("api/apps/ecommerce/inventory/products", 300).reply(({ request }) => {
      const search = request.params.get("search");
      const sort = request.params.get("sort") || "name";
      const order = request.params.get("order") || "asc";
      const page = parseInt(request.params.get("page") ?? "1", 10);
      const size2 = parseInt(request.params.get("size") ?? "10", 10);
      let products2 = cloneDeep_default(this._products);
      if (sort === "sku" || sort === "name" || sort === "active") {
        products2.sort((a, b) => {
          const fieldA = a[sort].toString().toUpperCase();
          const fieldB = b[sort].toString().toUpperCase();
          return order === "asc" ? fieldA.localeCompare(fieldB) : fieldB.localeCompare(fieldA);
        });
      } else {
        products2.sort((a, b) => order === "asc" ? a[sort] - b[sort] : b[sort] - a[sort]);
      }
      if (search) {
        products2 = products2.filter((contact) => contact.name && contact.name.toLowerCase().includes(search.toLowerCase()));
      }
      const productsLength = products2.length;
      const begin = page * size2;
      const end = Math.min(size2 * (page + 1), productsLength);
      const lastPage = Math.max(Math.ceil(productsLength / size2), 1);
      let pagination = {};
      if (page > lastPage) {
        products2 = null;
        pagination = {
          lastPage
        };
      } else {
        products2 = products2.slice(begin, end);
        pagination = {
          length: productsLength,
          size: size2,
          page,
          lastPage,
          startIndex: begin,
          endIndex: end - 1
        };
      }
      return [
        200,
        {
          products: products2,
          pagination
        }
      ];
    });
    this._fuseMockApiService.onGet("api/apps/ecommerce/inventory/product").reply(({ request }) => {
      const id = request.params.get("id");
      const products2 = cloneDeep_default(this._products);
      const product = products2.find((item) => item.id === id);
      return [200, product];
    });
    this._fuseMockApiService.onPost("api/apps/ecommerce/inventory/product").reply(() => {
      const newProduct = {
        id: FuseMockApiUtils.guid(),
        category: "",
        name: "A New Product",
        description: "",
        tags: [],
        sku: "",
        barcode: "",
        brand: "",
        vendor: "",
        stock: "",
        reserved: "",
        cost: "",
        basePrice: "",
        taxPercent: "",
        price: "",
        weight: "",
        thumbnail: "",
        images: [],
        active: false
      };
      this._products.unshift(newProduct);
      return [200, newProduct];
    });
    this._fuseMockApiService.onPatch("api/apps/ecommerce/inventory/product").reply(({ request }) => {
      const id = request.body.id;
      const product = cloneDeep_default(request.body.product);
      let updatedProduct = null;
      this._products.forEach((item, index, products2) => {
        if (item.id === id) {
          products2[index] = assign_default({}, products2[index], product);
          updatedProduct = products2[index];
        }
      });
      return [200, updatedProduct];
    });
    this._fuseMockApiService.onDelete("api/apps/ecommerce/inventory/product").reply(({ request }) => {
      const id = request.params.get("id");
      this._products.forEach((item, index) => {
        if (item.id === id) {
          this._products.splice(index, 1);
        }
      });
      return [200, true];
    });
    this._fuseMockApiService.onGet("api/apps/ecommerce/inventory/tags").reply(() => [200, cloneDeep_default(this._tags)]);
    this._fuseMockApiService.onPost("api/apps/ecommerce/inventory/tag").reply(({ request }) => {
      const newTag = cloneDeep_default(request.body.tag);
      newTag.id = FuseMockApiUtils.guid();
      this._tags.unshift(newTag);
      return [200, newTag];
    });
    this._fuseMockApiService.onPatch("api/apps/ecommerce/inventory/tag").reply(({ request }) => {
      const id = request.body.id;
      const tag = cloneDeep_default(request.body.tag);
      let updatedTag = null;
      this._tags.forEach((item, index, tags4) => {
        if (item.id === id) {
          tags4[index] = assign_default({}, tags4[index], tag);
          updatedTag = tags4[index];
        }
      });
      return [200, updatedTag];
    });
    this._fuseMockApiService.onDelete("api/apps/ecommerce/inventory/tag").reply(({ request }) => {
      const id = request.params.get("id");
      this._tags.forEach((item, index) => {
        if (item.id === id) {
          this._tags.splice(index, 1);
        }
      });
      const productsWithTag = this._products.filter((product) => product.tags.indexOf(id) > -1);
      productsWithTag.forEach((product) => {
        product.tags.splice(product.tags.indexOf(id), 1);
      });
      return [200, true];
    });
    this._fuseMockApiService.onGet("api/apps/ecommerce/inventory/vendors").reply(() => [200, cloneDeep_default(this._vendors)]);
  }
};
_ECommerceInventoryMockApi.\u0275fac = function ECommerceInventoryMockApi_Factory(t) {
  return new (t || _ECommerceInventoryMockApi)(\u0275\u0275inject(FuseMockApiService));
};
_ECommerceInventoryMockApi.\u0275prov = /* @__PURE__ */ \u0275\u0275defineInjectable({ token: _ECommerceInventoryMockApi, factory: _ECommerceInventoryMockApi.\u0275fac, providedIn: "root" });
var ECommerceInventoryMockApi = _ECommerceInventoryMockApi;

// src/app/mock-api/apps/file-manager/data.ts
var items = [
  {
    id: "cd6897cb-acfd-4016-8b53-3f66a5b5fc68",
    folderId: null,
    name: "Personal",
    createdBy: "Brian Hughes",
    createdAt: "April 24, 2018",
    modifiedAt: "April 24, 2018",
    size: "87 MB",
    type: "folder",
    contents: "57 files",
    description: "Personal documents such as insurance policies, tax papers and etc."
  },
  {
    id: "6da8747f-b474-4c9a-9eba-5ef212285500",
    folderId: null,
    name: "Photos",
    createdBy: "Brian Hughes",
    createdAt: "November 01, 2021",
    modifiedAt: "November 01, 2021",
    size: "3015 MB",
    type: "folder",
    contents: "907 files",
    description: "Personal photos; selfies, family, vacation and etc."
  },
  {
    id: "ed58add1-45a7-41db-887d-3ca7ee7f2719",
    folderId: null,
    name: "Work",
    createdBy: "Brian Hughes",
    createdAt: "May 8, 2020",
    modifiedAt: "May 8, 2020",
    size: "14 MB",
    type: "folder",
    contents: "24 files",
    description: "Work related files, mainly documents and paychecks."
  },
  {
    id: "5cb66e32-d1ac-4b9a-8c34-5991ce25add2",
    folderId: null,
    name: "Contract #123",
    createdBy: "Brian Hughes",
    createdAt: "January 14, 2021",
    modifiedAt: "January 14, 2021",
    size: "1.2 MB",
    type: "PDF",
    contents: null,
    description: null
  },
  {
    id: "3ffc3d84-8f2d-4929-903a-ef6fc21657a7",
    folderId: null,
    name: "Estimated budget",
    createdBy: "Brian Hughes",
    createdAt: "December 14, 2020",
    modifiedAt: "December 14, 2020",
    size: "679 KB",
    type: "XLS",
    contents: null,
    description: null
  },
  {
    id: "157adb9a-14f8-4559-ac93-8be893c9f80a",
    folderId: null,
    name: "DMCA notice #42",
    createdBy: "Brian Hughes",
    createdAt: "May 8, 2021",
    modifiedAt: "May 8, 2021",
    size: "1.5 MB",
    type: "DOC",
    contents: null,
    description: null
  },
  {
    id: "4f64597a-df7e-461c-ad60-f33e5f7e0747",
    folderId: null,
    name: "Invoices",
    createdBy: "Brian Hughes",
    createdAt: "January 12, 2020",
    modifiedAt: "January 12, 2020",
    size: "17.8 MB",
    type: "PDF",
    contents: null,
    description: null
  },
  {
    id: "e445c445-57b2-4476-8c62-b068e3774b8e",
    folderId: null,
    name: "Crash logs",
    createdBy: "Brian Hughes",
    createdAt: "June 8, 2020",
    modifiedAt: "June 8, 2020",
    size: "11.3 MB",
    type: "TXT",
    contents: null,
    description: null
  },
  {
    id: "b482f93e-7847-4614-ad48-b78b78309f81",
    folderId: null,
    name: "System logs",
    createdBy: "Brian Hughes",
    createdAt: "June 8, 2020",
    modifiedAt: "June 8, 2020",
    size: "9.3 MB",
    type: "TXT",
    contents: null,
    description: null
  },
  {
    id: "ec07a98d-2e5b-422c-a9b2-b5d1c0e263f5",
    folderId: null,
    name: "Personal projects",
    createdBy: "Brian Hughes",
    createdAt: "March 18, 2020",
    modifiedAt: "March 18, 2020",
    size: "4.3 MB",
    type: "DOC",
    contents: null,
    description: null
  },
  {
    id: "ae908d59-07da-4dd8-aba0-124e50289295",
    folderId: null,
    name: "Biometric portrait",
    createdBy: "Brian Hughes",
    createdAt: "August 29, 2020",
    modifiedAt: "August 29, 2020",
    size: "4.5 MB",
    type: "JPG",
    contents: null,
    description: null
  },
  {
    id: "4038a5b6-5b1a-432d-907c-e037aeb817a8",
    folderId: null,
    name: "Scanned image 20201012-1",
    createdBy: "Brian Hughes",
    createdAt: "September 13, 2020",
    modifiedAt: "September 13, 2020",
    size: "7.8 MB",
    type: "JPG",
    contents: null,
    description: null
  },
  {
    id: "630d2e9a-d110-47a0-ac03-256073a0f56d",
    folderId: null,
    name: "Scanned image 20201012-2",
    createdBy: "Brian Hughes",
    createdAt: "September 14, 2020",
    modifiedAt: "September 14, 2020",
    size: "7.4 MB",
    type: "JPG",
    contents: null,
    description: null
  },
  {
    id: "1417d5ed-b616-4cff-bfab-286677b69d79",
    folderId: null,
    name: "Prices",
    createdBy: "Brian Hughes",
    createdAt: "April 07, 2020",
    modifiedAt: "April 07, 2020",
    size: "2.6 MB",
    type: "DOC",
    contents: null,
    description: null
  },
  {
    id: "bd2817c7-6751-40dc-b252-b6b5634c0689",
    folderId: null,
    name: "Shopping list",
    createdBy: "Brian Hughes",
    createdAt: "March 26, 2021",
    modifiedAt: "March 26, 2021",
    size: "2.1 MB",
    type: "DOC",
    contents: null,
    description: null
  },
  {
    id: "14fb47c9-6eeb-4070-919c-07c8133285d1",
    folderId: null,
    name: "Summer budget",
    createdBy: "Brian Hughes",
    createdAt: "June 02, 2020",
    modifiedAt: "June 02, 2020",
    size: "943 KB",
    type: "XLS",
    contents: null,
    description: null
  },
  {
    id: "894e8514-03d3-4f5e-bb28-f6c092501fae",
    folderId: "cd6897cb-acfd-4016-8b53-3f66a5b5fc68",
    name: "A personal file",
    createdBy: "Brian Hughes",
    createdAt: "June 02, 2020",
    modifiedAt: "June 02, 2020",
    size: "943 KB",
    type: "XLS",
    contents: null,
    description: null
  },
  {
    id: "74010810-16cf-441d-a1aa-c9fb620fceea",
    folderId: "cd6897cb-acfd-4016-8b53-3f66a5b5fc68",
    name: "A personal folder",
    createdBy: "Brian Hughes",
    createdAt: "November 01, 2021",
    modifiedAt: "November 01, 2021",
    size: "3015 MB",
    type: "folder",
    contents: "907 files",
    description: "Personal photos; selfies, family, vacation and etc."
  },
  {
    id: "a8c73e5a-8114-436d-ab54-d900b50b3762",
    folderId: "74010810-16cf-441d-a1aa-c9fb620fceea",
    name: "A personal file within the personal folder",
    createdBy: "Brian Hughes",
    createdAt: "June 02, 2020",
    modifiedAt: "June 02, 2020",
    size: "943 KB",
    type: "XLS",
    contents: null,
    description: null
  },
  {
    id: "12d851a8-4f60-473e-8a59-abe4b422ea99",
    folderId: "6da8747f-b474-4c9a-9eba-5ef212285500",
    name: "Photos file",
    createdBy: "Brian Hughes",
    createdAt: "June 02, 2020",
    modifiedAt: "June 02, 2020",
    size: "943 KB",
    type: "XLS",
    contents: null,
    description: null
  },
  {
    id: "2836766d-27e1-4f40-a31a-5a8419105e7e",
    folderId: "ed58add1-45a7-41db-887d-3ca7ee7f2719",
    name: "Work file",
    createdBy: "Brian Hughes",
    createdAt: "June 02, 2020",
    modifiedAt: "June 02, 2020",
    size: "943 KB",
    type: "XLS",
    contents: null,
    description: null
  }
];

// src/app/mock-api/apps/file-manager/api.ts
var _FileManagerMockApi = class _FileManagerMockApi {
  /**
   * Constructor
   */
  constructor(_fuseMockApiService) {
    this._fuseMockApiService = _fuseMockApiService;
    this._items = items;
    this.registerHandlers();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Register Mock API handlers
   */
  registerHandlers() {
    this._fuseMockApiService.onGet("api/apps/file-manager").reply(({ request }) => {
      let items2 = cloneDeep_default(this._items);
      const folderId = request.params.get("folderId") === "null" ? null : request.params.get("folderId");
      items2 = items2.filter((item) => item.folderId === folderId);
      const folders2 = items2.filter((item) => item.type === "folder");
      const files = items2.filter((item) => item.type !== "folder");
      folders2.sort((a, b) => a.name.localeCompare(b.name));
      files.sort((a, b) => a.name.localeCompare(b.name));
      const pathItems = cloneDeep_default(this._items);
      const path = [];
      let currentFolder = null;
      if (folderId) {
        currentFolder = pathItems.find((item) => item.id === folderId);
        path.push(currentFolder);
      }
      while (currentFolder?.folderId) {
        currentFolder = pathItems.find((item) => item.id === currentFolder.folderId);
        if (currentFolder) {
          path.unshift(currentFolder);
        }
      }
      return [
        200,
        {
          folders: folders2,
          files,
          path
        }
      ];
    });
  }
};
_FileManagerMockApi.\u0275fac = function FileManagerMockApi_Factory(t) {
  return new (t || _FileManagerMockApi)(\u0275\u0275inject(FuseMockApiService));
};
_FileManagerMockApi.\u0275prov = /* @__PURE__ */ \u0275\u0275defineInjectable({ token: _FileManagerMockApi, factory: _FileManagerMockApi.\u0275fac, providedIn: "root" });
var FileManagerMockApi = _FileManagerMockApi;

// src/app/mock-api/apps/help-center/data.ts
var faqCategories = [
  {
    id: "28924eab-97cc-465a-ba21-f232bb95843f",
    slug: "most-asked",
    title: "Most asked"
  },
  {
    id: "395b0d41-b9a8-4cd6-8b5c-f07855e82d62",
    slug: "general-inquiries",
    title: "General inquiries"
  },
  {
    id: "b388a87f-bfbb-44d0-800c-0ddbce2a5d22",
    slug: "licenses",
    title: "Licenses"
  },
  {
    id: "71c34043-d89d-4aca-951d-8606c3943c43",
    slug: "payments",
    title: "Payments"
  },
  {
    id: "bea49ee0-26da-46ad-97be-116cd7ab416d",
    slug: "support",
    title: "Support"
  }
];
var faqs = [
  // Most asked
  {
    id: "f65d517a-6f69-4c88-81f5-416f47405ce1",
    categoryId: "28924eab-97cc-465a-ba21-f232bb95843f",
    question: "Is there a 14-days trial?",
    answer: "Magna consectetur culpa duis ad est tempor pariatur velit ullamco aute exercitation magna sunt commodo minim enim aliquip eiusmod ipsum adipisicing magna ipsum reprehenderit lorem magna voluptate magna aliqua culpa.\n\nSit nisi adipisicing pariatur enim enim sunt officia ad labore voluptate magna proident velit excepteur pariatur cillum sit excepteur elit veniam excepteur minim nisi cupidatat proident dolore irure veniam mollit."
  },
  {
    id: "0fcece82-1691-4b98-a9b9-b63218f9deef",
    categoryId: "28924eab-97cc-465a-ba21-f232bb95843f",
    question: "What\u2019s the benefits of the Premium Membership?",
    answer: "Et in lorem qui ipsum deserunt duis exercitation lorem elit qui qui ipsum tempor nulla velit aliquip enim consequat incididunt pariatur duis excepteur elit irure nulla ipsum dolor dolore est.\n\nAute deserunt nostrud id non ipsum do adipisicing laboris in minim officia magna elit minim mollit elit velit veniam lorem pariatur veniam sit excepteur irure commodo excepteur duis quis in."
  },
  {
    id: "2e6971cd-49d5-49f1-8cbd-fba5c71e6062",
    categoryId: "28924eab-97cc-465a-ba21-f232bb95843f",
    question: "How much time I will need to learn this app?",
    answer: "Id fugiat et cupidatat magna nulla nulla eu cillum officia nostrud dolore in veniam ullamco nulla ex duis est enim nisi aute ipsum velit et laboris est pariatur est culpa.\n\nCulpa sunt ipsum esse quis excepteur enim culpa est voluptate reprehenderit consequat duis officia irure voluptate veniam dolore fugiat dolor est amet nostrud non velit irure do voluptate id sit."
  },
  {
    id: "974f93b8-336f-4eec-b011-9ddb412ee828",
    categoryId: "28924eab-97cc-465a-ba21-f232bb95843f",
    question: "Are there any free tutorials available?",
    answer: "Excepteur deserunt tempor do lorem elit id magna pariatur irure ullamco elit dolor consectetur ad officia fugiat incididunt do elit aute esse eu voluptate adipisicing incididunt ea dolor aliqua dolor.\n\nConsequat est quis deserunt voluptate ipsum incididunt laboris occaecat irure laborum voluptate non sit labore voluptate sunt id sint ut laboris aute cupidatat occaecat eiusmod non magna aliquip deserunt nisi."
  },
  {
    id: "5d877fc7-b881-4527-a6aa-d39d642feb23",
    categoryId: "28924eab-97cc-465a-ba21-f232bb95843f",
    question: "Is there a month-to-month payment option?",
    answer: "Labore mollit in aliqua exercitation aliquip elit nisi nisi voluptate reprehenderit et dolor incididunt cupidatat ullamco nulla consequat voluptate adipisicing dolor qui magna sint aute do excepteur in aliqua consectetur.\n\nElit laborum non duis irure ad ullamco aliqua enim exercitation quis fugiat aute esse esse magna et ad cupidatat voluptate sint nulla nulla lorem et enim deserunt proident deserunt consectetur."
  },
  // General inquiries
  {
    id: "3d1c26c5-1e5e-4eb6-8006-ed6037ed9aca",
    categoryId: "395b0d41-b9a8-4cd6-8b5c-f07855e82d62",
    question: "How to download your items",
    answer: "Sunt mollit irure dolor aliquip sit veniam amet ut sunt dolore cillum sint pariatur qui irure proident velit non excepteur quis ut et quis velit aliqua ea sunt cillum sit.\n\nReprehenderit est culpa ut incididunt sit dolore mollit in occaecat velit culpa consequat reprehenderit ex lorem cupidatat proident reprehenderit ad eu sunt sit ut sit culpa ea reprehenderit aliquip est."
  },
  {
    id: "11bd2b9a-85b4-41c9-832c-bd600dfa3a52",
    categoryId: "395b0d41-b9a8-4cd6-8b5c-f07855e82d62",
    question: "View and download invoices",
    answer: "Sint mollit consectetur voluptate fugiat sunt ipsum adipisicing labore exercitation eiusmod enim excepteur enim proident velit sint magna commodo dolor ex ipsum sit nisi deserunt labore eu irure amet ea.\n\nOccaecat ut velit et sint pariatur laboris voluptate duis aliqua aliqua exercitation et duis duis eu laboris excepteur occaecat quis esse enim ex dolore commodo fugiat excepteur adipisicing in fugiat."
  },
  {
    id: "f55c023a-785e-4f0f-b5b7-47da75224deb",
    categoryId: "395b0d41-b9a8-4cd6-8b5c-f07855e82d62",
    question: "I've forgotten my username or password",
    answer: "In exercitation sunt ad anim commodo sunt do in sunt est officia amet ex ullamco do nisi consectetur lorem proident lorem adipisicing incididunt consequat fugiat voluptate sint est anim officia.\n\nVelit sint aliquip elit culpa amet eu mollit veniam esse deserunt ex occaecat quis lorem minim occaecat culpa esse veniam enim duis excepteur ipsum esse ut ut velit cillum adipisicing."
  },
  {
    id: "c577a67d-357a-4b88-96e8-a0ee1fe9162e",
    categoryId: "395b0d41-b9a8-4cd6-8b5c-f07855e82d62",
    question: "Where is my license code?",
    answer: "Ad adipisicing duis consequat magna sunt consequat aliqua eiusmod qui et nostrud voluptate sit enim reprehenderit anim exercitation ipsum ipsum anim ipsum laboris aliqua ex lorem aute officia voluptate culpa.\n\nNostrud anim ex pariatur ipsum et nostrud esse veniam ipsum ipsum irure velit ad quis irure tempor nulla amet aute id esse reprehenderit ea consequat consequat ea minim magna magna."
  },
  {
    id: "1a680c29-7ece-4a80-9709-277ad4da8b4b",
    categoryId: "395b0d41-b9a8-4cd6-8b5c-f07855e82d62",
    question: "How to contact an author",
    answer: "Magna laborum et amet magna fugiat officia deserunt in exercitation aliquip nulla magna velit ea labore quis deserunt ipsum occaecat id id consequat non eiusmod mollit est voluptate ea ex.\n\nReprehenderit mollit ut excepteur minim veniam fugiat enim id pariatur amet elit nostrud occaecat pariatur et esse aliquip irure quis officia reprehenderit voluptate voluptate est et voluptate sint esse dolor."
  },
  {
    id: "c49c2216-8bdb-4df0-be25-d5ea1dbb5688",
    categoryId: "395b0d41-b9a8-4cd6-8b5c-f07855e82d62",
    question: "How does the affiliate program work?",
    answer: "Adipisicing laboris ipsum fugiat et cupidatat aute esse ad labore et est cillum ipsum sunt duis do veniam minim officia deserunt in eiusmod eu duis dolore excepteur consectetur id elit.\n\nAnim excepteur occaecat laborum sunt in elit quis sit duis adipisicing laboris anim laborum et pariatur elit qui consectetur laborum reprehenderit occaecat nostrud pariatur aliqua elit nisi commodo eu excepteur."
  },
  // Licenses
  {
    id: "3ef176fa-6cba-4536-9f43-540c686a4faa",
    categoryId: "b388a87f-bfbb-44d0-800c-0ddbce2a5d22",
    question: "How do licenses work for items I bought?",
    answer: "Culpa duis nostrud qui velit sint magna officia fugiat ipsum eiusmod enim laborum pariatur anim culpa elit ipsum lorem pariatur exercitation laborum do labore cillum exercitation nisi reprehenderit exercitation quis.\n\nMollit aute dolor non elit et incididunt eiusmod non in commodo occaecat id in excepteur aliqua ea anim pariatur sint elit voluptate dolor eu non laborum laboris voluptate qui duis."
  },
  {
    id: "7bc6b7b4-7ad8-4cbe-af36-7301642d35fb",
    categoryId: "b388a87f-bfbb-44d0-800c-0ddbce2a5d22",
    question: "Do licenses have an expiry date?",
    answer: "Ea proident dolor tempor dolore incididunt velit incididunt ullamco quis proident consectetur magna excepteur cillum officia ex do aliqua reprehenderit est esse officia labore dolore aute laboris eu commodo aute.\n\nOfficia quis id ipsum adipisicing ipsum eu exercitation cillum ex elit pariatur adipisicing ullamco ullamco nulla dolore magna aliqua reprehenderit eu laborum voluptate reprehenderit non eiusmod deserunt velit magna do."
  },
  {
    id: "56c9ed66-a1d2-4803-a160-fba29b826cb4",
    categoryId: "b388a87f-bfbb-44d0-800c-0ddbce2a5d22",
    question: "I want to make multiple end products with the same item",
    answer: "Elit cillum incididunt enim cupidatat ex elit cillum aute dolor consectetur proident non minim eu est deserunt proident mollit ullamco laborum anim ea labore anim ex enim ullamco consectetur enim.\n\nEx magna consectetur esse enim consequat non aliqua nulla labore mollit sit quis ex fugiat commodo eu cupidatat irure incididunt consequat enim ut deserunt consequat elit consequat sint adipisicing sunt."
  },
  {
    id: "21c1b662-33c8-44d7-9530-91896afeeac7",
    categoryId: "b388a87f-bfbb-44d0-800c-0ddbce2a5d22",
    question: "How easy is it to change the license type?",
    answer: "Duis culpa ut veniam voluptate consequat proident magna eiusmod id est magna culpa nulla enim culpa mollit velit lorem mollit ut minim dolore in tempor reprehenderit cillum occaecat proident ea.\n\nVeniam fugiat ea duis qui et eu eiusmod voluptate id cillum eiusmod eu reprehenderit minim reprehenderit nisi cillum nostrud duis eu magna minim sunt voluptate eu pariatur nulla ullamco elit."
  },
  {
    id: "5fa52c90-82be-41ae-96ec-5fc67cf054a4",
    categoryId: "b388a87f-bfbb-44d0-800c-0ddbce2a5d22",
    question: "Do I need a Regular License or an Extended License?",
    answer: "Mollit nostrud ea irure ex ipsum in cupidatat irure sit officia reprehenderit adipisicing et occaecat cupidatat exercitation mollit esse in excepteur qui elit exercitation velit fugiat exercitation est officia excepteur.\n\nQuis esse voluptate laborum non veniam duis est fugiat tempor culpa minim velit minim ut duis qui officia consectetur ex nostrud ut elit elit nulla in consectetur voluptate aliqua aliqua."
  },
  // Payments
  {
    id: "81ac908c-35a2-4705-8d75-539863c35c09",
    categoryId: "71c34043-d89d-4aca-951d-8606c3943c43",
    question: "Common PayPal, Skrill, and credit card issues",
    answer: "Sit occaecat sint nulla in esse dolor occaecat in ea sit irure magna magna veniam fugiat consequat exercitation ipsum ex officia velit consectetur consequat voluptate lorem eu proident lorem incididunt.\n\nExcepteur exercitation et qui labore nisi eu voluptate ipsum deserunt deserunt eu est minim dolor ad proident nulla reprehenderit culpa minim voluptate dolor nostrud dolor anim labore aliqua officia nostrud."
  },
  {
    id: "b6d8909f-f36d-4885-8848-46b8230d4476",
    categoryId: "71c34043-d89d-4aca-951d-8606c3943c43",
    question: "How do I find my transaction ID?",
    answer: "Laboris ea nisi commodo nulla cillum consequat consectetur nisi velit adipisicing minim nulla culpa amet quis sit duis id id aliqua aute exercitation non reprehenderit aliquip enim eiusmod eu irure.\n\nNon irure consectetur sunt cillum do adipisicing excepteur labore proident ut officia dolor fugiat velit sint consectetur cillum qui amet enim anim mollit laboris consectetur non do laboris lorem aliqua."
  },
  {
    id: "9496235d-4d0c-430b-817e-1cba96404f95",
    categoryId: "71c34043-d89d-4aca-951d-8606c3943c43",
    question: "PayPal disputes And chargebacks",
    answer: "Ullamco eiusmod do pariatur pariatur consectetur commodo proident ex voluptate ullamco culpa commodo deserunt pariatur incididunt nisi magna dolor est minim eu ex voluptate deserunt labore id magna excepteur et.\n\nReprehenderit dolore pariatur exercitation ad non fugiat quis proident fugiat incididunt ea magna pariatur et exercitation tempor cillum eu consequat adipisicing est laborum sit cillum ea fugiat mollit cupidatat est."
  },
  {
    id: "7fde17e6-4ac1-47dd-a363-2f4f14dcf76a",
    categoryId: "71c34043-d89d-4aca-951d-8606c3943c43",
    question: "Saving your credit card details",
    answer: "Qui quis nulla excepteur voluptate elit culpa occaecat id ex do adipisicing est mollit id anim nisi irure amet officia ut sint aliquip dolore labore cupidatat magna laborum esse ea.\n\nEnim magna duis sit incididunt amet anim et nostrud laborum eiusmod et ea fugiat aliquip velit sit fugiat consectetur ipsum anim do enim excepteur cupidatat consequat sunt irure tempor ut."
  },
  {
    id: "90a3ed58-e13b-40cf-9219-f933bf9c9b8f",
    categoryId: "71c34043-d89d-4aca-951d-8606c3943c43",
    question: "Why do prepaid credits expire?",
    answer: "Consequat consectetur commodo deserunt sunt aliquip deserunt ex tempor esse nostrud sit dolore anim nostrud nulla dolore veniam minim laboris non dolor veniam lorem veniam deserunt laborum aute amet irure.\n\nEiusmod officia veniam reprehenderit ea aliquip velit anim aute minim aute nisi tempor qui sunt deserunt voluptate velit elit ut adipisicing ipsum et excepteur ipsum eu ullamco nisi esse dolor."
  },
  {
    id: "153376ed-691f-4dfd-ae99-e204a49edc44",
    categoryId: "71c34043-d89d-4aca-951d-8606c3943c43",
    question: "Why is there a minimum $20 credit?",
    answer: "Duis sint velit incididunt exercitation eiusmod nisi sunt ex est fugiat ad cupidatat sunt nisi elit do duis amet voluptate ipsum aliquip lorem aliqua sint esse in magna irure officia.\n\nNon eu ex elit ut est voluptate tempor amet ut officia in duis deserunt cillum labore do culpa id dolore magna anim consectetur qui consectetur fugiat labore mollit magna irure."
  },
  // Support
  {
    id: "4e7ce72f-863a-451f-9160-cbd4fbbc4c3d",
    categoryId: "bea49ee0-26da-46ad-97be-116cd7ab416d",
    question: "What is item support?",
    answer: "Exercitation sit eiusmod enim officia exercitation eiusmod sunt eiusmod excepteur ad commodo eiusmod qui proident quis aliquip excepteur sit cillum occaecat non dolore sit in labore ut duis esse duis.\n\nConsequat sunt voluptate consectetur dolor laborum enim nostrud deserunt incididunt sint veniam laboris sunt amet velit anim duis aliqua sunt aliqua aute qui nisi mollit qui irure ullamco aliquip laborum."
  },
  {
    id: "0795a74f-7a84-4edf-8d66-296cdef70003",
    categoryId: "bea49ee0-26da-46ad-97be-116cd7ab416d",
    question: "How to contact an author",
    answer: "Minim commodo cillum do id qui irure aliqua laboris excepteur laboris magna enim est lorem consectetur tempor laboris proident proident eu irure dolor eiusmod in officia lorem quis laborum ullamco.\n\nQui excepteur ex sit esse dolore deserunt ullamco occaecat laboris fugiat cupidatat excepteur laboris amet dolore enim velit ipsum velit sint cupidatat consectetur cupidatat deserunt sit eu do ullamco quis."
  },
  {
    id: "05532574-c102-4228-89a8-55fff32ec6fc",
    categoryId: "bea49ee0-26da-46ad-97be-116cd7ab416d",
    question: "Extending and renewing item support",
    answer: "Reprehenderit anim consectetur anim dolor magna consequat excepteur tempor enim duis magna proident ullamco aute voluptate elit laborum mollit labore id ex lorem est mollit do qui ex labore nulla.\n\nUt proident elit proident adipisicing elit fugiat ex ullamco dolore excepteur excepteur labore laborum sunt ipsum proident magna ex voluptate laborum voluptate sint proident eu reprehenderit non excepteur quis eiusmod."
  },
  {
    id: "b3917466-aa51-4293-9d5b-120b0ce6635c",
    categoryId: "bea49ee0-26da-46ad-97be-116cd7ab416d",
    question: "Rating or review removal policy",
    answer: "Ipsum officia mollit qui laboris sunt amet aliquip cupidatat minim non elit commodo eiusmod labore mollit pariatur aute reprehenderit ullamco occaecat enim pariatur aute amet occaecat incididunt irure ad ut.\n\nIncididunt cupidatat pariatur magna sint sit culpa ad cupidatat cillum exercitation consequat minim pariatur consectetur aliqua non adipisicing magna ad nulla ea do est nostrud eu aute id occaecat ut."
  },
  {
    id: "2f2fb472-24d4-4a00-aa80-d513fa6c059c",
    categoryId: "bea49ee0-26da-46ad-97be-116cd7ab416d",
    question: "Purchasing supported and unsupported items",
    answer: "Dolor cupidatat do qui in tempor dolor magna magna ut dolor est aute veniam consectetur enim sunt sunt duis magna magna aliquip id reprehenderit dolor in veniam ullamco incididunt occaecat.\n\nId duis pariatur anim cillum est sint non veniam voluptate deserunt anim nostrud duis voluptate occaecat elit ut veniam voluptate do qui est ad velit irure sint lorem ullamco aliqua."
  },
  {
    id: "2fffd148-7644-466d-8737-7dde88c54154",
    categoryId: "bea49ee0-26da-46ad-97be-116cd7ab416d",
    question: "I haven't received a response from the author",
    answer: "Velit commodo pariatur ullamco elit sunt dolor quis irure amet tempor laboris labore tempor nisi consectetur ea proident dolore culpa nostrud esse amet commodo do esse laboris laboris in magna.\n\nAute officia labore minim laborum irure cupidatat occaecat laborum ex labore ipsum aliqua cillum do exercitation esse et veniam excepteur mollit incididunt ut qui irure culpa qui deserunt nostrud tempor."
  },
  {
    id: "24a1034e-b4d6-4a86-a1ea-90516e87e810",
    categoryId: "bea49ee0-26da-46ad-97be-116cd7ab416d",
    question: "Responding to requests outside of support",
    answer: "Exercitation eu in officia lorem commodo pariatur pariatur nisi consectetur qui elit in aliquip et ullamco duis nostrud aute laborum laborum est dolor non qui amet deserunt ex et aliquip.\n\nProident consectetur eu amet minim labore anim ad non aute duis eiusmod sit ad elit magna do aliquip aliqua laborum dolor laboris ea irure duis mollit fugiat tempor eu est."
  }
];
var guideCategories = [
  {
    id: "0ee72de7-49c0-4880-9e89-b72a4edd6a81",
    slug: "getting-started",
    title: "Getting Started"
  },
  {
    id: "07b8421f-20bf-45b6-90ee-169ebe3a5bcc",
    slug: "projects",
    title: "Projects"
  },
  {
    id: "c88a1f54-360a-4b9b-a54b-2f92b7a1f63b",
    slug: "settings",
    title: "Settings"
  },
  {
    id: "7b25b38c-1ab3-4474-8569-65b3ea232add",
    slug: "payments",
    title: "Payments"
  },
  {
    id: "41fdf071-aec4-49de-9dd4-b4f746596928",
    slug: "your-account",
    title: "Your Account"
  }
];
var guides = [
  // Getting started
  {
    id: "a008ffa3-7b3f-43be-8a8f-dbf5272ed2dd",
    categoryId: "0ee72de7-49c0-4880-9e89-b72a4edd6a81",
    slug: "what-is-this-app",
    title: "What is this app?",
    subtitle: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt"
  },
  {
    id: "7643d388-12ab-4025-a2f1-5045ac7b1c4c",
    categoryId: "0ee72de7-49c0-4880-9e89-b72a4edd6a81",
    slug: "start-using-the-app",
    title: "Start using the app",
    subtitle: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt"
  },
  {
    id: "1fecee67-c4b4-413a-b0f2-949dcab73249",
    categoryId: "0ee72de7-49c0-4880-9e89-b72a4edd6a81",
    slug: "signing-in-to-the-dashboard",
    title: "Signing in to the dashboard",
    subtitle: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt"
  },
  {
    id: "d2e2ea8f-5298-4ba2-898b-afc60c064bba",
    categoryId: "0ee72de7-49c0-4880-9e89-b72a4edd6a81",
    slug: "navigating-within-the-app",
    title: "Navigating within the app",
    subtitle: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt"
  },
  // Projects
  {
    id: "f2592886-11b8-4b56-baab-96802c2ed93e",
    categoryId: "07b8421f-20bf-45b6-90ee-169ebe3a5bcc",
    slug: "creating-a-project",
    title: "Creating a project",
    subtitle: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt"
  },
  {
    id: "9ec3f4b9-a355-4f57-9e93-efa8611cc1c9",
    categoryId: "07b8421f-20bf-45b6-90ee-169ebe3a5bcc",
    slug: "renaming-a-project",
    title: "Renaming a project",
    subtitle: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt"
  },
  {
    id: "1bc6e7f9-b046-4f4f-9b18-741c9d5429f6",
    categoryId: "07b8421f-20bf-45b6-90ee-169ebe3a5bcc",
    slug: "displaying-a-project",
    title: "Displaying a project",
    subtitle: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt"
  },
  {
    id: "a005d5f1-938d-45c5-8ed4-d0cf8d02e533",
    categoryId: "07b8421f-20bf-45b6-90ee-169ebe3a5bcc",
    slug: "deleting-a-project",
    title: "Deleting a project",
    subtitle: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt"
  },
  {
    id: "43837279-dce2-4dc0-beac-30b5ba829f14",
    categoryId: "07b8421f-20bf-45b6-90ee-169ebe3a5bcc",
    slug: "changing-the-visibility-of-a-project",
    title: "Changing the visibility of a project",
    subtitle: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt"
  },
  {
    id: "4cf5a435-eaa0-463c-8d2b-efde193c7fb3",
    categoryId: "07b8421f-20bf-45b6-90ee-169ebe3a5bcc",
    slug: "adding-media-to-a-project",
    title: "Adding media to a project",
    subtitle: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt"
  },
  {
    id: "cd3fb87e-e138-4721-9e29-a5c751bfd949",
    categoryId: "07b8421f-20bf-45b6-90ee-169ebe3a5bcc",
    slug: "removing-a-media-from-a-project",
    title: "Removing a media from a project",
    subtitle: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt"
  },
  {
    id: "f26205c6-882e-4713-b067-c73758b45551",
    categoryId: "07b8421f-20bf-45b6-90ee-169ebe3a5bcc",
    slug: "cropping-a-media",
    title: "Cropping a media",
    subtitle: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt"
  },
  // Settings
  {
    id: "1cbdeaeb-bbf1-4d04-b43d-f37b55e6a229",
    categoryId: "c88a1f54-360a-4b9b-a54b-2f92b7a1f63b",
    slug: "general-settings",
    title: "General settings",
    subtitle: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt"
  },
  {
    id: "98de7d4a-2ca2-4d47-bbe6-083ed26467db",
    categoryId: "c88a1f54-360a-4b9b-a54b-2f92b7a1f63b",
    slug: "project-settings",
    title: "Project settings",
    subtitle: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt"
  },
  {
    id: "145f497c-1fdb-47b5-a6c1-31f856403571",
    categoryId: "c88a1f54-360a-4b9b-a54b-2f92b7a1f63b",
    slug: "media-settings",
    title: "Media settings",
    subtitle: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt"
  },
  {
    id: "0a007f59-a5ea-4875-991d-f22d6fd69898",
    categoryId: "c88a1f54-360a-4b9b-a54b-2f92b7a1f63b",
    slug: "domain-settings",
    title: "Domain settings",
    subtitle: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt"
  },
  {
    id: "4707c8eb-31f9-415c-bd07-86f226c75feb",
    categoryId: "c88a1f54-360a-4b9b-a54b-2f92b7a1f63b",
    slug: "privacy-settings",
    title: "Privacy settings",
    subtitle: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt"
  },
  // Payments
  {
    id: "c771bf0a-1e0c-4b6d-af7e-189e10cc6fb8",
    categoryId: "7b25b38c-1ab3-4474-8569-65b3ea232add",
    slug: "subscriptions",
    title: "Subscriptions",
    subtitle: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt"
  },
  {
    id: "3d7150d2-feb3-4f20-bd3f-8e525cef77a4",
    categoryId: "7b25b38c-1ab3-4474-8569-65b3ea232add",
    slug: "discounts",
    title: "Discounts",
    subtitle: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt"
  },
  {
    id: "79239bc4-4fb5-428b-b30d-62c5289b061d",
    categoryId: "7b25b38c-1ab3-4474-8569-65b3ea232add",
    slug: "payment-methods",
    title: "Payment methods",
    subtitle: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt"
  },
  {
    id: "8d68c5e6-5404-450c-9d5f-d9800c164041",
    categoryId: "7b25b38c-1ab3-4474-8569-65b3ea232add",
    slug: "overdue-payments",
    title: "Overdue payments",
    subtitle: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt"
  },
  // Your account
  {
    id: "60df0d4c-dda1-439c-bd44-179c57a7597d",
    categoryId: "41fdf071-aec4-49de-9dd4-b4f746596928",
    slug: "changing-your-username",
    title: "Changing your username",
    subtitle: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt"
  },
  {
    id: "0a9c3321-1db3-42bc-92b6-7e257368123e",
    categoryId: "41fdf071-aec4-49de-9dd4-b4f746596928",
    slug: "changing-your-email",
    title: "Changing your email",
    subtitle: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt"
  },
  {
    id: "80ba5106-5f9c-4ed7-b8f3-8544035e3095",
    categoryId: "41fdf071-aec4-49de-9dd4-b4f746596928",
    slug: "changing-your-password",
    title: "Changing your password",
    subtitle: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt"
  },
  {
    id: "db2e97a6-d657-4e9d-9b6c-5f213ea3301c",
    categoryId: "41fdf071-aec4-49de-9dd4-b4f746596928",
    slug: "closing-your-account",
    title: "Closing your account",
    subtitle: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt"
  },
  {
    id: "3374c887-2fb7-4223-9f40-7f2cbbf76795",
    categoryId: "41fdf071-aec4-49de-9dd4-b4f746596928",
    slug: "account-limits",
    title: "Account limits",
    subtitle: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt"
  },
  {
    id: "cc65f92a-7d46-4557-b15b-6f8f59a60576",
    categoryId: "41fdf071-aec4-49de-9dd4-b4f746596928",
    slug: "two-factor-authentication",
    title: "Two factor authentication",
    subtitle: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt"
  }
];
var guideContent = `
<h2>Header Level 2</h2>

<p>
    <strong>Pellentesque habitant morbi tristique</strong> senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit
    amet, ante. Donec eu libero sit amet quam egestas semper. <em>Aenean ultricies mi vitae est.</em> Mauris placerat eleifend leo. Quisque sit amet est et sapien ullamcorper
    pharetra. Vestibulum erat wisi, condimentum sed, <code>commodo vitae</code>, ornare sit amet, wisi. Aenean fermentum, elit eget tincidunt condimentum, eros ipsum rutrum orci,
    sagittis tempus lacus enim ac dui. <a href="#"
                                          class="link">Donec non enim</a>
    in turpis pulvinar facilisis. Ut felis.
</p>

<p>
    Orci varius natoque penatibus et magnis dis <em>parturient montes</em>, nascetur ridiculus mus. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos
    himenaeos. Curabitur vitae sagittis odio. <mark>Suspendisse</mark> ullamcorper nunc non pellentesque laoreet. Curabitur eu tortor id quam pretium mattis. Proin ut quam velit.
</p>

<h3>Header Level 3</h3>

<img src="images/pages/help-center/image-1.jpg">
<p class="text-secondary">
    <em>Nullam sagittis nulla in diam finibus, sed pharetra velit vestibulum. Suspendisse euismod in urna eu posuere.</em>
</p>

<h4>Header Level 4</h4>

<blockquote>
    <p>
        Blockquote. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus magna. Cras in mi at felis aliquet congue. Ut a est eget ligula molestie gravida. Curabitur
        massa. Donec eleifend, libero at sagittis mollis, tellus est malesuada tellus, at luctus turpis elit sit amet quam. Vivamus pretium ornare est.
    </p>
    <footer>
        Brian Hughes
    </footer>
</blockquote>

<ol>
    <li>Ordered list</li>
    <li>Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</li>
    <li>Aliquam tincidunt mauris eu risus.</li>
</ol>

<h5>Header Level 5</h5>

<ul>
    <li>Unordered list</li>
    <li>Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</li>
    <li>Aliquam tincidunt mauris eu risus.</li>
</ul>

<pre><code>#header h1 a {
    display: block;
    width: 300px;
    height: 80px;
}</code></pre>

<h6>Header Level 6</h6>

<dl>
    <dt>Definition list</dt>
    <dd>
        Quisque sit amet risus enim. Aliquam sit amet interdum justo, at ultricies sapien. Suspendisse et semper urna, in gravida eros. Quisque id nibh iaculis, euismod urna sed,
        egestas nisi. Donec eros metus, congue a imperdiet feugiat, sagittis nec ipsum. Quisque dapibus mollis felis non tristique.
    </dd>

    <dt>Definition list</dt>
    <dd>
        Ut auctor, metus sed dapibus tempus, urna diam auctor odio, in malesuada odio risus vitae nisi. Etiam blandit ante urna, vitae placerat massa mollis in. Duis nec urna ac
        purus semper dictum ut eget justo. Aenean non sagittis augue. Sed venenatis rhoncus enim eget ornare. Donec viverra sed felis at venenatis. Mauris aliquam fringilla nulla,
        sit amet congue felis dignissim at.
    </dd>
</dl>`;

// src/app/mock-api/apps/help-center/api.ts
var _HelpCenterMockApi = class _HelpCenterMockApi {
  /**
   * Constructor
   */
  constructor(_fuseMockApiService) {
    this._fuseMockApiService = _fuseMockApiService;
    this._faqCategories = faqCategories;
    this._faqs = faqs;
    this._guideCategories = guideCategories;
    this._guides = guides;
    this._guideContent = guideContent;
    this.registerHandlers();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Register Mock API handlers
   */
  registerHandlers() {
    this._fuseMockApiService.onGet("api/apps/help-center/faqs").reply(({ request }) => {
      const slug = request.params.get("slug");
      const results = [];
      const faqs2 = cloneDeep_default(this._faqs);
      const categories3 = cloneDeep_default(this._faqCategories);
      if (!slug) {
        categories3.forEach((category) => {
          results.push(__spreadProps(__spreadValues({}, category), {
            faqs: faqs2.filter((faq) => faq.categoryId === category.id)
          }));
        });
      } else {
        const category = categories3.find((item) => item.slug === slug);
        results.push(__spreadProps(__spreadValues({}, category), {
          faqs: faqs2.filter((faq) => faq.categoryId === category.id)
        }));
      }
      return [200, results];
    });
    this._fuseMockApiService.onGet("api/apps/help-center/guides").reply(({ request }) => {
      const slug = request.params.get("slug");
      const limit = request.params.get("limit");
      const results = [];
      const guides2 = cloneDeep_default(this._guides);
      const categories3 = cloneDeep_default(this._guideCategories);
      if (!slug) {
        const limitNum = parseInt(limit ?? "5", 10);
        categories3.forEach((category) => {
          results.push(__spreadProps(__spreadValues({}, category), {
            visibleGuides: limitNum,
            totalGuides: guides2.filter((guide) => guide.categoryId === category.id).length,
            guides: guides2.filter((guide) => guide.categoryId === category.id).slice(0, limitNum)
          }));
        });
      } else {
        const category = categories3.find((item) => item.slug === slug);
        results.push(__spreadProps(__spreadValues({}, category), {
          guides: guides2.filter((guide) => guide.categoryId === category.id)
        }));
      }
      return [200, results];
    });
    this._fuseMockApiService.onGet("api/apps/help-center/guide").reply(({ request }) => {
      const categorySlug = request.params.get("categorySlug");
      const guideSlug = request.params.get("guideSlug");
      const guides2 = cloneDeep_default(this._guides);
      const categories3 = cloneDeep_default(this._guideCategories);
      const result = __spreadProps(__spreadValues({}, categories3.find((category) => category.slug === categorySlug)), {
        guides: [guides2.find((guide) => guide.slug === guideSlug)]
      });
      result.guides[0]["content"] = this._guideContent;
      return [200, result];
    });
  }
};
_HelpCenterMockApi.\u0275fac = function HelpCenterMockApi_Factory(t) {
  return new (t || _HelpCenterMockApi)(\u0275\u0275inject(FuseMockApiService));
};
_HelpCenterMockApi.\u0275prov = /* @__PURE__ */ \u0275\u0275defineInjectable({ token: _HelpCenterMockApi, factory: _HelpCenterMockApi.\u0275fac, providedIn: "root" });
var HelpCenterMockApi = _HelpCenterMockApi;

// src/app/mock-api/apps/mailbox/data.ts
var now2 = DateTime.now();
var folders = [
  {
    id: "7c004a19-4506-48ef-93ab-f16381302e3b",
    title: "Inbox",
    slug: "inbox",
    icon: "heroicons_outline:inbox"
  },
  {
    id: "1ee2ea29-9a1f-4c27-b4d2-5e465703b6a0",
    title: "Sent",
    slug: "sent",
    icon: "heroicons_outline:paper-airplane"
  },
  {
    id: "fbdc8e79-a0c4-4a27-bc98-9c81ee7a86e5",
    title: "Drafts",
    slug: "drafts",
    icon: "heroicons_outline:document"
  },
  {
    id: "0197c436-2ef3-424d-b546-8b7f49186e15",
    title: "Spam",
    slug: "spam",
    icon: "heroicons_outline:exclamation-triangle"
  },
  {
    id: "2fa74637-d362-4fd2-9a88-f7195a88bdde",
    title: "Trash",
    slug: "trash",
    icon: "heroicons_outline:trash"
  }
];
var filters = [
  {
    id: "de1b41f6-6839-4f1b-9d2c-07e55f6f8f82",
    title: "Starred",
    slug: "starred",
    icon: "heroicons_outline:star"
  },
  {
    id: "71bba1ec-a90e-4a71-9932-4bab0a99aa1c",
    title: "Important",
    slug: "important",
    icon: "heroicons_outline:exclamation-circle"
  }
];
var labels = [
  {
    id: "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
    title: "Personal",
    slug: "personal",
    color: "blue"
  },
  {
    id: "745cf30e-ca84-47a1-a553-b70eb630d8e7",
    title: "Work",
    slug: "work",
    color: "indigo"
  },
  {
    id: "8b035cb5-65c0-4ab1-bb4c-43b0e442d1f3",
    title: "Payments",
    slug: "payments",
    color: "red"
  },
  {
    id: "b2d1e4e7-7cfd-4b51-ae59-217a093df754",
    title: "Invoices",
    slug: "invoices",
    color: "teal"
  },
  {
    id: "184cd689-4ee4-47cf-9f8a-12233d614326",
    title: "Accounts",
    slug: "accounts",
    color: "purple"
  },
  {
    id: "b67fc437-6118-4ec8-a3c7-9320b828e3fc",
    title: "Forums",
    slug: "forums",
    color: "green"
  }
];
var settings = {
  messageLayout: "right"
};
var mails = [
  {
    id: "f9c4c091-3ac4-4df9-ac5d-aec7b07c8e3f",
    type: "mail",
    from: {
      avatar: "images/avatars/female-01.jpg",
      contact: "Myra Dudley <myra.dudley@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: ["Graham Belltower <graham.belltower@company.com>"],
    bcc: ["Julie T. <julie.t@company.com>"],
    date: now2.set({
      hour: 20,
      minute: 13
    }).toISO(),
    // Today - 20:13
    subject: "Please review and sign the attached agreement",
    content: "Hi Brian,\n\nUllamco deserunt commodo esse deserunt deserunt quis eiusmod. Laborum sint excepteur non sit eiusmod sunt voluptate ipsum nisi ullamco magna. Lorem consectetur est dolor minim exercitation deserunt quis duis fugiat ipsum incididunt non. Anim aute ipsum cupidatat nisi occaecat quis sit nisi labore labore dolore do. Pariatur veniam culpa quis veniam nisi exercitation veniam ut. Quis do sint proident fugiat ad.\n\nNon id nisi commodo veniam. Veniam veniam minim ea laborum voluptate id duis deserunt. Anim ut ut amet et ullamco nulla fugiat id incididunt adipisicing excepteur amet. Ex amet eu cillum non fugiat velit dolore. Incididunt duis est eu et ex sunt consectetur cillum nisi aute proident.\n\nIncididunt excepteur laborum quis sit. Ex quis officia incididunt proident aliqua adipisicing. Irure ad in Lorem laborum deserunt nulla consequat. Pariatur excepteur exercitation cupidatat aute.\n\nCheers!\nMyra Dudley",
    attachments: [
      {
        type: "image/jpeg",
        name: "mystery-forest.jpg",
        size: 15539,
        preview: "mystery-forest_preview.jpg",
        downloadUrl: ""
      },
      {
        type: "application/pdf",
        name: "montly-invoice.pdf",
        size: 243449,
        preview: "pdf",
        downloadUrl: ""
      },
      {
        type: "image/jpeg",
        name: "birds-eye-sydney.jpg",
        size: 14294,
        preview: "birds-eye-sydney_preview.jpg",
        downloadUrl: ""
      }
    ],
    starred: true,
    important: true,
    unread: true,
    folder: "7c004a19-4506-48ef-93ab-f16381302e3b",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7",
      "8b035cb5-65c0-4ab1-bb4c-43b0e442d1f3"
    ]
  },
  {
    id: "c531bc01-8a9e-481b-adf8-95303a6938c5",
    type: "mail",
    from: {
      avatar: "images/avatars/male-01.jpg",
      contact: "Shaw Murray <shaw.murray@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    date: now2.set({
      hour: 18,
      minute: 56
    }).toISO(),
    // Today - 18:56
    subject: "Delivery address confirmation",
    content: "Dear Brian,\n\nDolore consectetur est cupidatat ipsum reprehenderit anim quis veniam anim ipsum incididunt exercitation. Velit exercitation culpa eiusmod dolore labore irure. Duis esse quis elit pariatur labore occaecat esse voluptate dolore deserunt cillum irure. Aute qui nulla est exercitation qui sunt anim aliquip. Ex ad est velit laboris exercitation ea ut pariatur. Amet reprehenderit ut est id sunt commodo anim et est voluptate et.\n\nMagna aliqua incididunt non ut voluptate nulla aliqua exercitation elit consectetur cupidatat. Proident in reprehenderit occaecat laborum non eu amet id aliqua nulla dolore. Eiusmod quis adipisicing quis cupidatat labore.\n\nReprehenderit nulla ullamco est dolore ex irure sunt nostrud reprehenderit quis dolor. Tempor nostrud elit elit aute ut ut eiusmod laboris excepteur consequat ex. Velit id ex ullamco in. Ea elit Lorem Lorem aliquip amet consequat irure nisi qui cillum incididunt. Commodo aute Lorem eiusmod veniam consectetur aute eu dolore. Ea magna incididunt laboris quis quis et tempor dolore dolore ut nisi.\n\nBest Regards,\nShaw Murray",
    attachments: [],
    starred: false,
    important: false,
    unread: true,
    folder: "7c004a19-4506-48ef-93ab-f16381302e3b",
    labels: ["b167d3c4-f6ed-4ea6-9579-a12f95a9d76e"]
  },
  {
    id: "ebc80fc3-6c56-4cae-a45a-771b15ced076",
    type: "mail",
    from: {
      avatar: "images/avatars/male-02.jpg",
      contact: "Sanders Beck <sanders.beck@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: ["Graham Belltower <graham.belltower@company.com>"],
    date: now2.set({
      hour: 14,
      minute: 35
    }).toISO(),
    // Today - 14:35
    subject: "Insurance documents",
    content: "Hi Brian,\n\nAliquip ipsum sunt sit sunt velit velit pariatur. Nisi incididunt eiusmod consequat ut cillum eu exercitation. Enim proident nostrud aute in. Non irure nisi duis aliquip commodo proident veniam adipisicing id velit. Enim magna Lorem fugiat tempor.\n\nCommodo non nulla incididunt irure voluptate. Fugiat culpa cillum aute quis. Voluptate veniam adipisicing dolor sint. Proident eiusmod quis duis ipsum sit eu.\n\nDeserunt reprehenderit adipisicing reprehenderit ipsum. Laborum in veniam amet occaecat tempor esse enim dolore elit sit quis adipisicing. Aute occaecat eiusmod enim cupidatat sunt.\n\nBest Regards,\nSanders Beck",
    attachments: [],
    starred: false,
    important: false,
    unread: false,
    folder: "7c004a19-4506-48ef-93ab-f16381302e3b",
    labels: []
  },
  {
    id: "981c5ffb-7c88-47a8-b60f-f16150eeae9d",
    type: "mail",
    from: {
      avatar: "images/avatars/male-03.jpg",
      contact: "Zimmerman Gould <zimmerman.gould@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    date: now2.minus({ day: 1 }).set({
      hour: 22,
      minute: 26
    }).toISO(),
    // Yesterday - 22:26
    subject: "Previous clients and their invoices",
    content: "Dear Brian,\n\nDo aute eu dolore officia laborum id anim fugiat incididunt nulla esse proident. Veniam veniam nostrud ut nisi magna ipsum ea eiusmod esse velit id aliqua nisi irure. Amet laborum fugiat deserunt est. Quis amet veniam anim nostrud irure cillum voluptate consequat qui cupidatat minim occaecat elit enim. Ut ut incididunt cillum sit sit irure culpa. Culpa exercitation minim velit eu. Ipsum exercitation excepteur et ad do sit.\n\nVeniam cupidatat officia aliqua ad excepteur cillum laboris deserunt esse laboris adipisicing reprehenderit. Reprehenderit anim consectetur pariatur labore do in irure. Ad consequat commodo non pariatur occaecat. Eiusmod cillum non anim consequat culpa nisi. Est nulla ut sint qui deserunt anim. Excepteur qui occaecat dolore nulla occaecat cupidatat aute sit laborum magna.\n\nConsequat aliqua commodo officia excepteur. Ex consectetur elit dolor exercitation ullamco amet laboris. Deserunt nulla non proident est pariatur reprehenderit reprehenderit. Ea nisi id aliqua cillum velit tempor ipsum dolor proident cillum eiusmod et ipsum anim. Elit non quis mollit enim Lorem cupidatat et labore. Laboris cillum reprehenderit aute veniam aliqua esse officia proident deserunt. Eiusmod laboris ullamco amet consectetur amet.\n\nKind Regards,\nZimmerman Gould",
    attachments: [],
    starred: false,
    important: false,
    unread: true,
    folder: "7c004a19-4506-48ef-93ab-f16381302e3b",
    labels: []
  },
  {
    id: "a8d0645d-ac30-4f1a-a163-06e949120289",
    type: "mail",
    from: {
      avatar: "images/avatars/female-02.jpg",
      contact: "Karina Alford <karina.alford@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: ["Graham Belltower <graham.belltower@company.com>"],
    date: now2.minus({ day: 1 }).set({
      hour: 20,
      minute: 5
    }).toISO(),
    // Yesterday - 20:05
    subject: "Quote for a new web design project",
    content: "Hey Brian,\n\nNisi officia aliqua ex non cupidatat sint ullamco. Irure pariatur ullamco consequat ut eu anim. Ut ad elit pariatur est non sunt. Tempor dolore quis commodo dolore duis officia laboris nostrud sint. Exercitation ullamco laboris eiusmod culpa ut.\n\nAute Lorem aute occaecat dolore tempor ipsum proident fugiat deserunt non incididunt velit nulla. Dolor pariatur tempor amet qui eu exercitation. Tempor minim culpa proident nisi esse ea. Enim est fugiat aliqua aliqua aute velit laborum cupidatat irure nisi dolor deserunt aliqua.\n\nFugiat ut dolor tempor sunt aliquip dolor nostrud. Consequat incididunt ullamco cillum dolore excepteur deserunt est dolor aliquip irure do mollit officia. Consectetur cillum et non minim nisi. Esse quis sunt deserunt elit sint velit tempor et ullamco laboris officia excepteur. Veniam ad ut aliqua sunt consequat reprehenderit nostrud non in duis aute quis pariatur. Occaecat mollit anim non pariatur. Ad do ad id fugiat et culpa laborum esse cupidatat voluptate elit ut magna voluptate.\n\nBest Regards,\nKarina Alford",
    attachments: [],
    starred: false,
    important: true,
    unread: true,
    folder: "7c004a19-4506-48ef-93ab-f16381302e3b",
    labels: []
  },
  {
    id: "fd117ed9-1285-4aca-8c1c-5c96e732c558",
    type: "mail",
    from: {
      avatar: "images/avatars/female-03.jpg",
      contact: "Carla Gray <carla.gray@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: ["Graham Belltower <graham.belltower@company.com>"],
    date: now2.minus({ day: 1 }).set({
      hour: 16,
      minute: 43
    }).toISO(),
    // Yesterday - 16:43
    subject: "Nulla culpa consectetur aute ex eu irure incididunt aliqua cupidatat sit cillum fugiat anim ea",
    content: "Hey Brian,\n\nDo pariatur occaecat tempor duis. Aute occaecat non consequat ut occaecat sint. Cillum reprehenderit elit nisi incididunt in labore pariatur. Labore mollit pariatur nulla officia esse anim exercitation nisi commodo culpa laborum amet nisi.\n\nSunt culpa mollit nostrud excepteur adipisicing sit do. Cillum voluptate amet do sit quis aliquip ea est qui elit. Veniam exercitation sit reprehenderit labore officia in labore excepteur eiusmod exercitation.\n\nEnim nostrud est non esse reprehenderit in ea eiusmod. Duis incididunt amet aliquip dolor esse. Nostrud qui commodo in non nostrud proident enim cupidatat. Aute sunt aliqua excepteur qui occaecat nulla incididunt commodo adipisicing ipsum.\n\nKind Regards,\nCarla Gray",
    attachments: [],
    starred: false,
    important: false,
    unread: false,
    folder: "7c004a19-4506-48ef-93ab-f16381302e3b",
    labels: []
  },
  {
    id: "a307d83b-d256-4af5-948a-148878a7eaad",
    type: "mail",
    from: {
      avatar: "images/avatars/male-04.jpg",
      contact: "Rice Cash <rice.cash@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: [
      "Graham Belltower <graham.belltower@company.com>",
      "Julie T. <julie.t@company.com>"
    ],
    date: now2.minus({ day: 2 }).set({
      hour: 11,
      minute: 28
    }).toISO(),
    // 2 days ago - 11:28
    subject: "Ipsum laborum minim aute labore in",
    content: "Dear Brian,\n\nLaboris non ad et aute sint aliquip mollit voluptate velit dolore magna fugiat ex. Voluptate amet aute deserunt tempor non laboris cillum. Voluptate veniam magna sint magna proident exercitation adipisicing aute id ad tempor reprehenderit magna ullamco. Laborum Lorem anim elit aliquip ut aute minim fugiat aliquip. Eiusmod est et occaecat dolore anim laborum ullamco ipsum commodo.\n\nCommodo amet veniam nostrud mollit quis sint qui nulla elit esse excepteur ullamco esse magna. Nisi duis aute est in mollit irure enim tempor in. Mollit ipsum laboris et velit ex excepteur pariatur. Cillum veniam id ipsum magna. Laborum duis aliquip ut ipsum ad aliqua id sit pariatur consequat sit. Sit nulla nulla ullamco nulla eiusmod et in dolore sint reprehenderit cupidatat.\n\nIpsum mollit cupidatat magna occaecat labore est fugiat est fugiat fugiat nulla labore laboris. Eiusmod aute adipisicing pariatur aliquip sint enim anim in dolore enim aute culpa nulla. Minim magna enim officia ipsum elit quis do velit deserunt Lorem veniam excepteur.\n\nKind Regards,\nRice Cash",
    attachments: [
      {
        type: "image/png",
        name: "lake-of-carezza.png",
        size: 13071,
        preview: "lake-of-carrezza_preview.png",
        downloadUrl: ""
      },
      {
        type: "image/jpeg",
        name: "birds-eye-sydney.jpg",
        size: 14294,
        preview: "birds-eye-sydney_preview.jpg",
        downloadUrl: ""
      },
      {
        type: "image/png",
        name: "yosemite-national-park.png",
        size: 14242,
        preview: "yosemite-national-park_preview.png",
        downloadUrl: ""
      }
    ],
    starred: true,
    important: true,
    unread: true,
    folder: "7c004a19-4506-48ef-93ab-f16381302e3b",
    labels: []
  },
  {
    id: "67664fa3-3a87-4ab8-8c2c-dfd2b1de4c14",
    type: "mail",
    from: {
      avatar: "images/avatars/female-04.jpg",
      contact: "Elaine Ortiz <elaine.ortiz@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: ["Graham Belltower <graham.belltower@company.com>"],
    date: now2.minus({ day: 2 }).set({
      hour: 7,
      minute: 12
    }).toISO(),
    // 2 days ago - 07:12
    subject: "Ipsum fugiat ad deserunt cillum sunt fugiat",
    content: "Hello Brian,\n\nId Lorem laborum eiusmod eiusmod mollit magna dolore. Et commodo officia fugiat dolor aliqua proident mollit ut commodo ullamco. Sunt nulla eu dolor velit velit reprehenderit. Culpa esse veniam fugiat eiusmod id veniam sunt reprehenderit minim mollit. Esse qui ea irure pariatur eu ullamco pariatur ipsum reprehenderit proident mollit proident. Nisi fugiat ut est aliquip nulla in non dolore.\n\nCulpa irure cillum ex fugiat cupidatat eiusmod non. Qui irure velit consectetur minim eu excepteur eiusmod veniam irure ad culpa nisi. Nisi sit nostrud quis ullamco aliquip non consequat sunt reprehenderit velit dolor dolor laboris. Dolore in Lorem consectetur nostrud. Laborum cupidatat exercitation voluptate duis amet. Sunt sint minim do in commodo ipsum commodo ea qui velit deserunt qui anim fugiat.\n\nExercitation et qui consequat incididunt nisi incididunt cupidatat officia in. Sit eiusmod anim aliqua elit. Nisi mollit ut non pariatur enim fugiat sint labore velit nostrud eu. Eiusmod id laboris laboris duis enim aute ipsum in magna. Sit eiusmod amet duis commodo sint et anim ex sunt deserunt dolor incididunt. Eiusmod duis dolore dolor elit occaecat do adipisicing ullamco ex laboris aliqua adipisicing. Labore pariatur aute proident mollit elit commodo labore minim dolore non in cillum.\n\nCheers!\nElaine Ortiz",
    attachments: [],
    starred: true,
    important: true,
    unread: true,
    folder: "7c004a19-4506-48ef-93ab-f16381302e3b",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7",
      "8b035cb5-65c0-4ab1-bb4c-43b0e442d1f3",
      "b2d1e4e7-7cfd-4b51-ae59-217a093df754"
    ]
  },
  {
    id: "d5913a7e-25f8-4163-bbf0-81d034163ce7",
    type: "mail",
    from: {
      avatar: "images/avatars/male-05.jpg",
      contact: "Fleming Stone <fleming.stone@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: ["Graham Belltower <graham.belltower@company.com>"],
    date: now2.minus({ day: 2 }).set({
      hour: 6,
      minute: 1
    }).toISO(),
    // 2 days ago - 06:01
    subject: "Deserunt exercitation ut nulla elit Lorem",
    content: "Hi Brian,\n\nEst labore sunt sunt Lorem dolore. In excepteur esse proident ut consectetur dolor voluptate laborum veniam pariatur. Excepteur ut veniam sit culpa exercitation qui nulla nulla magna ea in dolore et consequat. Irure minim ad cupidatat amet reprehenderit excepteur incididunt nulla eu et excepteur anim et aliqua.\n\nSint sint Lorem magna est irure sint ea cupidatat fugiat. Occaecat non adipisicing magna magna culpa sit commodo aute ex consequat amet minim esse ut. In nulla eiusmod veniam deserunt in.\n\nIn aute excepteur qui pariatur fugiat. Occaecat velit voluptate proident occaecat ut laboris occaecat pariatur aute dolore do. Ut commodo ipsum est non commodo ut ea qui labore veniam. Occaecat nostrud eu dolor tempor velit excepteur sint occaecat excepteur aliqua aliquip. Magna mollit ea aliquip exercitation do elit ex reprehenderit esse aliqua elit.\n\nKind Regards,\nFleming Stone",
    attachments: [],
    starred: false,
    important: true,
    unread: true,
    folder: "7c004a19-4506-48ef-93ab-f16381302e3b",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7",
      "8b035cb5-65c0-4ab1-bb4c-43b0e442d1f3"
    ]
  },
  {
    id: "b099a8e2-ffcc-4ae1-866d-8f8f6bd95ab3",
    type: "mail",
    from: {
      avatar: "images/avatars/male-06.jpg",
      contact: "England Wiley <england.wiley@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    date: now2.minus({ day: 5 }).set({
      hour: 15,
      minute: 36
    }).toISO(),
    // 5 days ago - 15:36
    subject: "Minim do reprehenderit dolor ipsum officia magna laborum est anim in fugiat",
    content: "Dear Brian,\n\nAd do minim id ad ex sit reprehenderit labore do occaecat fugiat ut enim. Et sunt dolore sint non consequat ut. Esse deserunt nostrud pariatur nulla ullamco nulla sit aliquip culpa sunt ipsum. Ut ad minim qui anim amet aute cupidatat. Est ullamco duis laboris nulla labore incididunt consectetur. Cillum sunt mollit nulla laborum non tempor veniam consequat.\n\nAmet fugiat velit id deserunt pariatur velit laboris consectetur quis officia. Culpa nostrud deserunt nostrud esse labore esse consequat labore fugiat. Nostrud duis ex nulla et do.\n\nPariatur mollit ex adipisicing nostrud nostrud occaecat. Id tempor irure cupidatat duis cillum cupidatat nostrud enim anim. Esse nisi pariatur nisi elit elit sit quis ullamco dolor dolore pariatur est sint. Sint ex aliqua id sunt sunt magna amet ex sit anim. Irure aliquip fugiat ipsum tempor irure nisi Lorem anim sit ullamco. Exercitation nostrud mollit est non enim.\n\nBest Regards,\nEngland Wiley",
    attachments: [],
    starred: true,
    important: false,
    unread: true,
    folder: "7c004a19-4506-48ef-93ab-f16381302e3b",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7",
      "8b035cb5-65c0-4ab1-bb4c-43b0e442d1f3"
    ]
  },
  {
    id: "7bd21940-3388-479c-b1bc-3ebceb0472d8",
    type: "mail",
    from: {
      avatar: "images/avatars/male-07.jpg",
      contact: "Ingram Fowler <ingram.fowler@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    date: (/* @__PURE__ */ new Date("Sun Jan 07 2018 03:51:20 GMT+0000 (UTC)")).toISOString(),
    subject: "Aliquip eiusmod pariatur adipisicing id consectetur sunt ad dolore consequat commodo",
    content: "Dear Brian,\n\nDolore sit occaecat est do fugiat sunt est amet nostrud. Aliqua ad veniam officia Lorem id aute fugiat laborum dolor magna dolor. Eiusmod nostrud qui sunt ut exercitation deserunt ipsum. Commodo veniam velit reprehenderit minim amet occaecat consectetur sint aliquip Lorem voluptate cupidatat. Aute aliquip do veniam nostrud nisi minim amet. Ex id ullamco non ea ullamco cillum et Lorem sunt sunt officia dolore excepteur.\n\nSit enim anim occaecat eu adipisicing velit ut excepteur consectetur sunt. Non fugiat deserunt quis fugiat eiusmod magna voluptate nisi commodo minim sunt dolore consequat labore. Pariatur ad aliqua do non labore exercitation aute minim culpa adipisicing qui. Anim et et anim dolore consequat fugiat amet aliquip nisi aliqua irure occaecat et laboris. Aute aliquip incididunt sit ipsum do. Ullamco in anim laboris incididunt tempor duis irure ipsum cillum duis ea. Magna culpa adipisicing ad ullamco id consequat qui ullamco cupidatat pariatur.\n\nMollit amet enim sint cupidatat eu aute exercitation dolor. Minim exercitation nostrud ullamco magna laboris. Pariatur proident aute proident et. Officia cillum pariatur nisi sint anim officia. Sunt minim anim ad tempor deserunt commodo magna labore incididunt ex ad nulla nulla ut. Sint ipsum aliqua dolor mollit do anim officia incididunt. Irure nulla ex elit id pariatur dolore et nostrud occaecat.\n\nCheers!\nIngram Fowler",
    attachments: [],
    starred: true,
    important: true,
    unread: true,
    folder: "7c004a19-4506-48ef-93ab-f16381302e3b",
    labels: []
  },
  {
    id: "2d105bae-b4e5-4ba3-a40e-e9e2b5cc671a",
    type: "mail",
    from: {
      avatar: "images/avatars/female-05.jpg",
      contact: "Diana Walsh <diana.walsh@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    date: (/* @__PURE__ */ new Date("Fri Jun 29 2018 07:37:52 GMT+0000 (UTC)")).toISOString(),
    subject: "Non anim id laborum in et id",
    content: "Dear Brian,\n\nTempor veniam do dolor laborum consectetur in sit incididunt nulla officia consectetur fugiat. In dolor consequat consectetur deserunt sit. Voluptate reprehenderit tempor dolor dolore nulla aliquip commodo elit cillum laboris occaecat laboris. Eu dolor magna velit ea commodo dolor. Occaecat sit mollit amet voluptate eiusmod aliqua sunt irure sunt fugiat ipsum eu. Consequat ea sit consequat esse.\n\nAdipisicing adipisicing voluptate duis ullamco sint anim sunt nostrud deserunt minim velit aute nisi et. Do ea cupidatat culpa eu qui. Lorem enim laboris amet officia fugiat nisi Lorem laborum ex. Aliquip nostrud sit esse nisi labore.\n\nId amet tempor tempor Lorem fugiat culpa. Elit nulla pariatur adipisicing proident. In qui esse eiusmod ad est minim ipsum mollit aute mollit ad duis aliqua.\n\nCheers!\nDiana Walsh",
    attachments: [
      {
        type: "image/png",
        name: "yosemite-national-park.png",
        size: 14242,
        preview: "yosemite-national-park_preview.png",
        downloadUrl: ""
      },
      {
        type: "application/pdf",
        name: "montly-invoice.pdf",
        size: 243449,
        preview: "pdf",
        downloadUrl: ""
      },
      {
        type: "image/jpeg",
        name: "mystery-forest.jpg",
        size: 15539,
        preview: "mystery-forest_preview.jpg",
        downloadUrl: ""
      }
    ],
    starred: true,
    important: false,
    unread: true,
    folder: "7c004a19-4506-48ef-93ab-f16381302e3b",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7",
      "8b035cb5-65c0-4ab1-bb4c-43b0e442d1f3",
      "b2d1e4e7-7cfd-4b51-ae59-217a093df754"
    ]
  },
  {
    id: "4c3bd79a-6429-466d-b962-8eb09c524969",
    type: "mail",
    from: {
      avatar: "images/avatars/male-08.jpg",
      contact: "Mckinney Marsh <mckinney.marsh@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    date: (/* @__PURE__ */ new Date("Wed Jun 20 2018 15:24:03 GMT+0000 (UTC)")).toISOString(),
    subject: "Adipisicing proident laborum qui deserunt adipisicing exercitation id sint",
    content: "Hi Brian,\n\nAmet eiusmod est ipsum fugiat. Laborum dolor exercitation esse nostrud cillum. Sunt laboris culpa incididunt ullamco sint veniam dolore tempor non irure ipsum. Laborum quis dolore dolor veniam quis exercitation sint dolore tempor occaecat pariatur officia. Non labore consectetur elit laborum exercitation ut exercitation pariatur Lorem.\n\nExercitation cillum sint exercitation incididunt laboris ut veniam irure sit. Id voluptate esse dolore in fugiat sit sint labore ex ea. Lorem laborum officia occaecat ipsum adipisicing do nostrud proident. Adipisicing fugiat anim aute amet consequat labore non et enim veniam anim. Elit do pariatur pariatur nulla consectetur sit anim cillum cillum.\n\nId qui pariatur enim laborum eu qui. Fugiat sint duis nisi culpa non. Labore cupidatat magna dolor eu et. Anim nulla elit ut eiusmod et excepteur aute culpa labore aliquip.\n\nCheers!\nMckinney Marsh",
    attachments: [],
    starred: true,
    important: false,
    unread: true,
    folder: "7c004a19-4506-48ef-93ab-f16381302e3b",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7",
      "8b035cb5-65c0-4ab1-bb4c-43b0e442d1f3",
      "b2d1e4e7-7cfd-4b51-ae59-217a093df754",
      "184cd689-4ee4-47cf-9f8a-12233d614326"
    ]
  },
  {
    id: "770d24d1-1b9b-49ec-bcb4-f6feffc305ff",
    type: "mail",
    from: {
      avatar: "images/avatars/male-09.jpg",
      contact: "Meyer Fuller <meyer.fuller@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: ["Graham Belltower <graham.belltower@company.com>"],
    date: (/* @__PURE__ */ new Date("Wed Jan 31 2018 08:17:08 GMT+0000 (UTC)")).toISOString(),
    subject: "Excepteur sunt ut ipsum ad culpa aliqua quis",
    content: "Hey Brian,\n\nCupidatat cupidatat irure culpa est dolore qui laborum adipisicing occaecat nulla officia deserunt fugiat aliqua. Dolor quis sunt aliqua officia culpa esse eiusmod eiusmod ad laboris. Sit deserunt cillum ad cillum minim officia in velit fugiat aliqua ullamco duis elit. Anim incididunt consequat ex amet duis tempor voluptate cillum officia exercitation culpa dolor enim.\n\nEa velit minim officia fugiat culpa nostrud. Ex aute amet veniam anim consequat dolor Lorem sint. Sunt culpa cillum magna est veniam adipisicing. Reprehenderit eu tempor duis veniam velit Lorem elit amet amet ut anim do dolor.\n\nOfficia minim eiusmod et reprehenderit est proident aute amet non nulla fugiat. Proident enim ea cupidatat dolore ea id ad. Qui et eu adipisicing esse mollit mollit exercitation velit in. Consequat mollit magna est quis est duis proident sunt eu officia reprehenderit. Elit esse incididunt adipisicing consequat culpa aliquip deserunt dolore ullamco velit mollit sit sit Lorem. Do quis qui quis veniam aliqua consequat excepteur.\n\nCheers!\nMeyer Fuller",
    attachments: [],
    starred: true,
    important: true,
    unread: false,
    folder: "7c004a19-4506-48ef-93ab-f16381302e3b",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7",
      "8b035cb5-65c0-4ab1-bb4c-43b0e442d1f3",
      "b2d1e4e7-7cfd-4b51-ae59-217a093df754",
      "184cd689-4ee4-47cf-9f8a-12233d614326"
    ]
  },
  {
    id: "3e2100de-ca0a-4a8e-a1c5-6c13172333dc",
    type: "mail",
    from: {
      avatar: "images/avatars/female-06.jpg",
      contact: "Carolina Wade <carolina.wade@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: ["Graham Belltower <graham.belltower@company.com>"],
    date: (/* @__PURE__ */ new Date("Sat Mar 24 2018 17:50:27 GMT+0000 (UTC)")).toISOString(),
    subject: "In sunt pariatur sunt sint exercitation",
    content: "Hey Brian,\n\nReprehenderit proident mollit non eu mollit eu. Mollit exercitation non enim commodo sit eu eiusmod est cupidatat esse magna sint quis dolore. Esse deserunt ea sunt quis tempor est deserunt qui proident Lorem. Adipisicing dolore non laboris proident. Incididunt fugiat labore proident eu et ad magna tempor ipsum nostrud adipisicing eiusmod eu.\n\nNisi excepteur ullamco minim laboris sit labore tempor officia commodo officia sit enim qui occaecat. Quis ullamco enim minim voluptate consectetur mollit elit voluptate fugiat. Laboris sint eu magna ullamco laboris aliquip duis laboris sit enim reprehenderit occaecat labore. Mollit nulla magna et labore officia et voluptate fugiat non commodo esse et laboris exercitation.\n\nLaboris amet Lorem sint in. Quis nulla sit et non qui fugiat et culpa pariatur incididunt duis. Dolor tempor incididunt Lorem irure anim velit tempor voluptate.\n\nKind Regards,\nCarolina Wade",
    attachments: [],
    starred: true,
    important: true,
    unread: true,
    folder: "7c004a19-4506-48ef-93ab-f16381302e3b",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7",
      "8b035cb5-65c0-4ab1-bb4c-43b0e442d1f3"
    ]
  },
  {
    id: "e1291d1a-fba6-4b23-b259-dd7c9074e976",
    type: "mail",
    from: {
      avatar: "images/avatars/male-10.jpg",
      contact: "Graves Huber <graves.huber@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    date: (/* @__PURE__ */ new Date("Sun Mar 25 2018 02:46:44 GMT+0000 (UTC)")).toISOString(),
    subject: "Elit est aute anim ea culpa labore occaecat adipisicing officia",
    content: "Dear Brian,\n\nAd ex enim mollit quis nostrud nulla quis non minim voluptate cillum sint tempor mollit. Culpa anim occaecat aliquip do. Aliquip velit minim irure nostrud commodo eiusmod consequat ipsum consectetur deserunt dolore. Pariatur dolor dolore consectetur dolor aliqua dolor dolor deserunt minim commodo.\n\nAd qui qui ex et irure eiusmod. Excepteur esse fugiat officia non ex excepteur minim sint voluptate in incididunt. Exercitation culpa laboris non consequat excepteur pariatur est consequat aliquip occaecat ullamco laborum culpa. Ut fugiat duis incididunt incididunt excepteur enim sunt in amet irure nulla. Commodo officia fugiat do nostrud adipisicing sint voluptate voluptate dolor laboris. Nisi id aliqua quis id ullamco reprehenderit enim elit in magna. Proident consectetur voluptate id mollit sint do ipsum id sint proident.\n\nLaboris mollit nulla culpa veniam est dolor fugiat id consequat nulla veniam enim enim. Ullamco sunt proident fugiat cillum labore nostrud incididunt exercitation esse. Labore aliqua est non consequat in excepteur ullamco cupidatat aute nostrud proident. Consectetur enim veniam eiusmod incididunt culpa qui ipsum ea elit non nostrud reprehenderit incididunt veniam. Sint amet Lorem ipsum et dolore pariatur anim consectetur.\n\nBest Regards,\nGraves Huber",
    attachments: [],
    starred: true,
    important: true,
    unread: false,
    folder: "7c004a19-4506-48ef-93ab-f16381302e3b",
    labels: ["b167d3c4-f6ed-4ea6-9579-a12f95a9d76e"]
  },
  {
    id: "7cba834c-3011-4897-be7d-ee43bbe69114",
    type: "mail",
    from: {
      avatar: "images/avatars/male-11.jpg",
      contact: "Tucker Santiago <tucker.santiago@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    date: (/* @__PURE__ */ new Date("Mon Sep 17 2018 14:41:42 GMT+0000 (UTC)")).toISOString(),
    subject: "Ullamco qui ex eu ea officia labore incididunt",
    content: "Dear Brian,\n\nNon tempor sint incididunt adipisicing cupidatat laboris elit incididunt ipsum magna. Voluptate labore cillum irure dolor eu est commodo nulla. Cupidatat aliquip reprehenderit proident duis labore aliquip ullamco dolor occaecat anim esse tempor enim dolore. Elit veniam minim cupidatat aute ea voluptate eu et labore amet eu tempor.\n\nExercitation et exercitation labore cillum reprehenderit eiusmod anim magna ex. Lorem aliqua est velit eu. Qui et ullamco adipisicing elit eiusmod aliquip exercitation laboris consequat esse. Sint velit deserunt est quis ad proident sit eiusmod commodo eiusmod Lorem. Est consequat cillum magna est. Sunt pariatur voluptate elit officia aute.\n\nConsectetur velit deserunt non enim exercitation esse irure aliqua cillum sint in officia Lorem esse. Adipisicing consequat anim magna exercitation mollit. Ipsum irure in culpa mollit cillum eiusmod sunt amet consectetur anim eiusmod ea.\n\nBest Regards,\nTucker Santiago",
    attachments: [],
    starred: false,
    important: false,
    unread: false,
    folder: "7c004a19-4506-48ef-93ab-f16381302e3b",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7",
      "8b035cb5-65c0-4ab1-bb4c-43b0e442d1f3",
      "b2d1e4e7-7cfd-4b51-ae59-217a093df754",
      "184cd689-4ee4-47cf-9f8a-12233d614326"
    ]
  },
  {
    id: "d0de071d-2d72-4e0f-b903-79ca6ade9dbd",
    type: "mail",
    from: {
      avatar: "images/avatars/female-07.jpg",
      contact: "Becky Cain <becky.cain@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: [
      "Graham Belltower <graham.belltower@company.com>",
      "Julie T. <julie.t@company.com>"
    ],
    date: (/* @__PURE__ */ new Date("Fri Nov 30 2018 09:14:15 GMT+0000 (UTC)")).toISOString(),
    subject: "Exercitation amet laborum officia nulla nulla adipisicing mollit culpa eiusmod irure deserunt voluptate laborum",
    content: "Dear Brian,\n\nAd tempor veniam exercitation et occaecat do quis do cillum nulla mollit mollit nulla minim. Id sint do excepteur pariatur eu pariatur do sint ipsum ea. Enim in ex irure eu incididunt aliqua eu velit ipsum magna elit eu.\n\nCupidatat fugiat proident aliqua labore nostrud Lorem veniam tempor dolor exercitation. Aliqua magna pariatur exercitation voluptate do duis ea voluptate est culpa sint id. Irure labore esse adipisicing culpa ad velit consectetur. Sint mollit voluptate tempor exercitation fugiat consectetur cillum officia non dolor.\n\nIpsum amet esse duis duis est voluptate ipsum ipsum ipsum qui labore exercitation veniam. Proident sint incididunt ut sunt ut labore sunt ex. Ea enim velit qui elit non sit excepteur dolore eiusmod.\n\nKind Regards,\nBecky Cain",
    attachments: [
      {
        type: "image/jpeg",
        name: "mystery-forest.jpg",
        size: 15539,
        preview: "mystery-forest_preview.jpg",
        downloadUrl: ""
      },
      {
        type: "image/png",
        name: "lake-of-carezza.png",
        size: 13071,
        preview: "lake-of-carrezza_preview.png",
        downloadUrl: ""
      },
      {
        type: "image/png",
        name: "yosemite-national-park.png",
        size: 14242,
        preview: "yosemite-national-park_preview.png",
        downloadUrl: ""
      }
    ],
    starred: false,
    important: false,
    unread: true,
    folder: "7c004a19-4506-48ef-93ab-f16381302e3b",
    labels: ["b167d3c4-f6ed-4ea6-9579-a12f95a9d76e"]
  },
  {
    id: "d39c93b9-10d3-426f-a205-0ee5b30cd983",
    type: "mail",
    from: {
      avatar: "images/avatars/male-12.jpg",
      contact: "Miller Vazquez <miller.vazquez@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: [
      "Graham Belltower <graham.belltower@company.com>",
      "Julie T. <julie.t@company.com>"
    ],
    date: (/* @__PURE__ */ new Date("Sun May 06 2018 19:35:14 GMT+0000 (UTC)")).toISOString(),
    subject: "Ullamco eu nulla labore occaecat",
    content: "Hey Brian,\n\nIrure reprehenderit enim anim ad ex officia qui. Cillum amet reprehenderit aliquip minim adipisicing. Sint sit tempor non nostrud esse adipisicing eu.\n\nLabore dolor sint minim enim officia voluptate. Eu esse est velit ipsum ullamco amet anim aliquip culpa sit laborum velit. Eiusmod est nulla dolor duis voluptate deserunt. Labore do qui amet laborum tempor anim. Do aliqua est anim consequat proident minim. Commodo eiusmod labore elit sunt irure labore proident non ipsum in eiusmod laboris sit. Ad nostrud cupidatat ea est veniam commodo culpa laboris mollit id.\n\nLabore aute fugiat commodo sint aliquip ullamco sint esse. Deserunt aliqua amet tempor Lorem pariatur. Eiusmod proident reprehenderit pariatur cupidatat. Ad consequat laboris nisi in ipsum nisi dolor et velit duis do ad. Ipsum minim reprehenderit quis incididunt culpa. Et laborum laborum quis in elit nisi proident cillum sit ad. Nisi ullamco aliquip elit nisi sint sunt enim est commodo aute aliquip cupidatat eiusmod adipisicing.\n\nBest Regards,\nMiller Vazquez",
    attachments: [],
    starred: false,
    important: true,
    unread: true,
    folder: "7c004a19-4506-48ef-93ab-f16381302e3b",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7",
      "8b035cb5-65c0-4ab1-bb4c-43b0e442d1f3"
    ]
  },
  {
    id: "4e881b4f-bf47-472f-a1fe-f787a66d37dd",
    type: "mail",
    from: {
      avatar: "images/avatars/male-13.jpg",
      contact: "Delgado Stevens <delgado.stevens@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: ["Graham Belltower <graham.belltower@company.com>"],
    date: (/* @__PURE__ */ new Date("Wed Jan 17 2018 09:56:25 GMT+0000 (UTC)")).toISOString(),
    subject: "Ut velit occaecat nostrud ullamco non excepteur velit ipsum ut",
    content: "Hey Brian,\n\nEsse dolore exercitation id sint id eu dolor nisi. Irure consectetur aute eu ad aute velit et tempor ad eiusmod voluptate. Sit proident pariatur anim in culpa ut esse nostrud incididunt ullamco ut. Proident nostrud est voluptate sint nostrud dolore amet dolore culpa eiusmod enim voluptate in. Do qui voluptate ex aliqua ut.\n\nQui ullamco incididunt nulla adipisicing tempor aute commodo eu adipisicing. Tempor exercitation tempor adipisicing ipsum incididunt mollit commodo adipisicing. Cupidatat officia in ut duis non commodo ut.\n\nCulpa eiusmod mollit culpa nostrud ullamco irure. Est adipisicing ut irure Lorem esse. Deserunt deserunt non sit sit labore et minim fugiat irure Lorem et velit.\n\nKind Regards,\nDelgado Stevens",
    attachments: [],
    starred: true,
    important: false,
    unread: false,
    folder: "7c004a19-4506-48ef-93ab-f16381302e3b",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7",
      "8b035cb5-65c0-4ab1-bb4c-43b0e442d1f3",
      "b2d1e4e7-7cfd-4b51-ae59-217a093df754"
    ]
  },
  {
    id: "5dad8b60-8d98-4215-88b8-41158e167686",
    type: "mail",
    from: {
      avatar: "images/avatars/female-08.jpg",
      contact: "Concepcion Cleveland <concepcion.cleveland@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    date: (/* @__PURE__ */ new Date("Fri Aug 17 2018 04:41:26 GMT+0000 (UTC)")).toISOString(),
    subject: "Aliqua pariatur non tempor velit eu amet sit et proident Lorem",
    content: "Hey Brian,\n\nPariatur anim aute excepteur consequat esse aliqua proident culpa duis duis veniam occaecat cupidatat eu. Lorem officia occaecat duis et exercitation mollit consectetur pariatur ut sit exercitation. Velit consectetur incididunt ad non nostrud dolor consequat esse deserunt. Nisi consectetur ea ut cupidatat ipsum. Sint cillum cupidatat elit laboris incididunt consectetur veniam fugiat sit voluptate officia.\n\nCillum est dolore et aliqua elit pariatur cupidatat eiusmod officia. Nisi officia velit commodo id anim qui commodo aliquip mollit. Quis magna sunt in duis laboris fugiat veniam. Proident consequat deserunt sunt amet officia veniam.\n\nIrure irure aliqua officia deserunt. Excepteur excepteur magna Lorem minim esse in sit. Magna elit laborum sunt magna labore eu eiusmod qui aliqua laborum.\n\nCheers!\nConcepcion Cleveland",
    attachments: [],
    starred: false,
    important: false,
    unread: false,
    folder: "7c004a19-4506-48ef-93ab-f16381302e3b",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7",
      "8b035cb5-65c0-4ab1-bb4c-43b0e442d1f3"
    ]
  },
  {
    id: "eeccc250-8952-47e1-adff-31847289b4dd",
    type: "mail",
    from: {
      avatar: "images/avatars/female-09.jpg",
      contact: "Robin Berger <robin.berger@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: ["Graham Belltower <graham.belltower@company.com>"],
    date: (/* @__PURE__ */ new Date("Thu Apr 26 2018 20:55:18 GMT+0000 (UTC)")).toISOString(),
    subject: "Reprehenderit ipsum aute cupidatat qui exercitation dolore voluptate labore veniam consequat quis",
    content: "Hello Brian,\n\nExercitation minim anim commodo eu deserunt voluptate consectetur. Sit enim excepteur ipsum ea esse labore fugiat nulla. Do est tempor duis in consectetur proident do consectetur. Cupidatat ex id voluptate fugiat aute Lorem elit tempor.\n\nMinim nulla occaecat mollit laboris ea et laboris velit. Velit ullamco quis esse veniam exercitation veniam quis nostrud qui officia commodo. Lorem excepteur magna officia in eu exercitation qui ad. Nisi velit qui ipsum anim veniam deserunt velit adipisicing tempor esse excepteur ipsum. Voluptate sit dolore irure deserunt dolor incididunt laboris tempor. Minim id deserunt ea duis labore incididunt est ullamco mollit pariatur sit duis commodo. Proident ipsum eiusmod ea excepteur.\n\nIrure adipisicing veniam dolor consequat sit incididunt ad cupidatat fugiat eiusmod aliqua id amet labore. Excepteur minim deserunt eiusmod sunt aliqua ipsum. Ullamco nostrud minim ullamco amet Lorem ut irure officia mollit duis enim. Laborum dolore dolor nulla consequat consequat nostrud velit eu deserunt aute deserunt est. Adipisicing laborum dolore pariatur ad tempor culpa exercitation consequat eu anim nulla magna. In est culpa tempor laborum voluptate.\n\nKind Regards,\nRobin Berger",
    attachments: [],
    starred: true,
    important: false,
    unread: true,
    folder: "7c004a19-4506-48ef-93ab-f16381302e3b",
    labels: ["b167d3c4-f6ed-4ea6-9579-a12f95a9d76e"]
  },
  {
    id: "e8b006ad-e140-4fea-bb32-cc346e66eb93",
    type: "mail",
    from: {
      avatar: "images/avatars/female-10.jpg",
      contact: "Lynnette Burton <lynnette.burton@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: ["Graham Belltower <graham.belltower@company.com>"],
    date: (/* @__PURE__ */ new Date("Fri Nov 02 2018 16:15:50 GMT+0000 (UTC)")).toISOString(),
    subject: "Consectetur deserunt qui ex occaecat dolore officia cillum magna magna adipisicing elit magna velit",
    content: "Hi Brian,\n\nNulla mollit excepteur ex officia anim cillum eiusmod. Fugiat ullamco ad eu elit Lorem eiusmod veniam ut ipsum cillum culpa. Dolore commodo ea quis labore qui irure velit duis nostrud aute dolore non amet dolor. Qui ullamco elit reprehenderit anim tempor aliquip mollit id pariatur voluptate cupidatat anim voluptate. Exercitation nostrud sint adipisicing ad consectetur. Culpa officia occaecat aute pariatur duis occaecat mollit ea deserunt ipsum. Adipisicing non ipsum sint quis mollit consectetur occaecat anim sint.\n\nOfficia ea excepteur elit non. Velit aute ad consequat deserunt labore culpa consectetur ullamco occaecat ullamco qui laborum labore. Magna consequat dolore proident incididunt adipisicing exercitation sint anim et laboris occaecat quis. Tempor do anim magna ullamco reprehenderit aliqua et laboris non nostrud sunt. Elit aliquip irure officia reprehenderit voluptate nisi officia ex. Quis mollit sit qui eiusmod veniam eu non. Eiusmod ullamco velit occaecat pariatur ea.\n\nCillum velit sit duis esse dolor do velit sit Lorem. Enim occaecat voluptate excepteur irure anim officia nisi culpa. Quis fugiat cupidatat veniam deserunt pariatur. Exercitation ad irure nulla cupidatat nisi nostrud Lorem proident veniam ullamco labore dolore velit. Reprehenderit eiusmod ea cillum sit anim nostrud proident consequat nostrud duis adipisicing.\n\nKind Regards,\nLynnette Burton",
    attachments: [],
    starred: true,
    important: true,
    unread: false,
    folder: "7c004a19-4506-48ef-93ab-f16381302e3b",
    labels: []
  },
  {
    id: "c6fc1d86-4a1f-4071-9c75-618fe2d853aa",
    type: "mail",
    from: {
      avatar: "images/avatars/female-11.jpg",
      contact: "Carmella Rios <carmella.rios@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: ["Graham Belltower <graham.belltower@company.com>"],
    date: (/* @__PURE__ */ new Date("Thu Jul 05 2018 14:26:57 GMT+0000 (UTC)")).toISOString(),
    subject: "Proident dolore minim deserunt commodo elit aute laborum ullamco laboris anim consequat",
    content: "Dear Brian,\n\nIn do ex sit amet fugiat duis eu non non duis id sit. Elit pariatur nostrud veniam Lorem aliquip tempor ipsum ut minim eiusmod ad. Sunt et veniam ad incididunt sint occaecat. Exercitation voluptate culpa ex enim. Excepteur exercitation aute consequat non culpa. Lorem ut consectetur commodo laboris esse exercitation laborum do ut duis sunt sint. Aliquip laboris fugiat officia irure consequat pariatur velit ea ut commodo.\n\nIpsum adipisicing proident cupidatat commodo nulla culpa nostrud ipsum voluptate occaecat sit. Occaecat anim cupidatat qui reprehenderit ex commodo dolore. Consectetur id magna esse amet do nulla esse aute velit id minim nostrud cupidatat. Nostrud dolore sunt labore sunt sit velit magna nulla. Sunt enim adipisicing sint deserunt enim veniam reprehenderit reprehenderit. Incididunt fugiat labore minim pariatur mollit ea veniam. Do voluptate id consequat qui ut aliqua qui dolore ex ea.\n\nDo esse duis culpa nisi in elit veniam exercitation consequat. Proident dolor laborum enim velit non nostrud. In reprehenderit proident enim sint tempor cupidatat enim fugiat. Duis laboris officia sit in sunt sunt sunt non. Quis mollit veniam cupidatat non enim Lorem aliquip et sit fugiat eiusmod cillum ad exercitation.\n\nCheers!\nCarmella Rios",
    attachments: [],
    starred: false,
    important: true,
    unread: true,
    folder: "7c004a19-4506-48ef-93ab-f16381302e3b",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7"
    ]
  },
  {
    id: "c062a90f-52e9-4102-8def-1f8f9813deb4",
    type: "mail",
    from: {
      avatar: "images/avatars/male-14.jpg",
      contact: "Molina Pace <molina.pace@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    date: (/* @__PURE__ */ new Date("Mon Sep 17 2018 21:45:31 GMT+0000 (UTC)")).toISOString(),
    subject: "Dolor anim non labore est aliquip sunt pariatur",
    content: "Hi Brian,\n\nNon fugiat eu aute nulla deserunt Lorem id fugiat consectetur duis ut reprehenderit nostrud. Laboris culpa id nulla duis id proident. Eiusmod consequat commodo aute est deserunt aliquip esse aute qui aute et nostrud culpa.\n\nCillum minim reprehenderit sit nulla aliqua adipisicing deserunt non sit excepteur fugiat velit et. Amet excepteur non ipsum voluptate dolore irure. Laboris sit sunt id mollit et in nulla eiusmod duis ut tempor ea est. Dolor est laborum ipsum labore sint aliquip est minim ex. Aliqua cillum qui consectetur amet elit nostrud quis duis. Dolore consequat laborum laboris ullamco qui do cupidatat sunt deserunt ex elit cillum.\n\nVeniam exercitation eiusmod exercitation cupidatat sunt incididunt. Labore occaecat eiusmod sint consectetur eiusmod sunt quis ad Lorem ex. Ipsum labore ipsum nulla Lorem incididunt proident. Sit officia ut nostrud nisi ipsum adipisicing qui. Non nulla commodo nostrud aliqua Lorem consequat ea do dolore nisi veniam veniam occaecat. Tempor amet ex eiusmod irure aliquip minim. Laborum officia fugiat nisi magna.\n\nBest Regards,\nMolina Pace",
    attachments: [
      {
        type: "image/jpeg",
        name: "birds-eye-sydney.jpg",
        size: 14294,
        preview: "birds-eye-sydney_preview.jpg",
        downloadUrl: ""
      },
      {
        type: "image/png",
        name: "yosemite-national-park.png",
        size: 14242,
        preview: "yosemite-national-park_preview.png",
        downloadUrl: ""
      }
    ],
    starred: true,
    important: false,
    unread: true,
    folder: "7c004a19-4506-48ef-93ab-f16381302e3b",
    labels: ["b167d3c4-f6ed-4ea6-9579-a12f95a9d76e"]
  },
  {
    id: "545d12a6-e0f3-464d-af45-618163933a71",
    type: "mail",
    from: {
      avatar: "images/avatars/female-12.jpg",
      contact: "Olga Osborn <olga.osborn@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: [
      "Graham Belltower <graham.belltower@company.com>",
      "Julie T. <julie.t@company.com>"
    ],
    date: (/* @__PURE__ */ new Date("Thu Sep 27 2018 13:45:14 GMT+0000 (UTC)")).toISOString(),
    subject: "Elit tempor enim nisi cillum cillum esse do magna exercitation minim",
    content: "Dear Brian,\n\nEu voluptate dolore anim deserunt nostrud pariatur voluptate exercitation et et veniam fugiat sint consequat. Aute esse pariatur ullamco reprehenderit velit pariatur mollit sunt enim culpa qui anim sit officia. Labore minim elit commodo sunt fugiat in sint adipisicing aute incididunt adipisicing in officia esse. Sit enim eu irure ullamco ea pariatur dolore exercitation labore excepteur laborum exercitation dolore. Magna dolor Lorem fugiat eiusmod consectetur sit.\n\nExcepteur sunt officia minim in do esse. Nostrud ullamco dolore esse laborum aliquip sit consequat. Excepteur irure occaecat cupidatat cupidatat deserunt esse deserunt voluptate non labore culpa. Sit voluptate non eu sit. Velit pariatur esse et ex in laboris cillum Lorem tempor consequat. Magna consequat nostrud duis minim. In ad irure commodo deserunt incididunt duis sit quis voluptate ullamco laboris laborum commodo.\n\nIn duis eiusmod proident excepteur. Magna proident do ad est amet pariatur sint cupidatat ullamco velit cillum. Ea esse proident non culpa do in minim eiusmod.\n\nCheers!\nOlga Osborn",
    attachments: [],
    starred: true,
    important: false,
    unread: false,
    folder: "7c004a19-4506-48ef-93ab-f16381302e3b",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7",
      "8b035cb5-65c0-4ab1-bb4c-43b0e442d1f3",
      "b2d1e4e7-7cfd-4b51-ae59-217a093df754",
      "184cd689-4ee4-47cf-9f8a-12233d614326"
    ]
  },
  {
    id: "23456530-2cd4-4558-95d0-6311c2ee2ee8",
    type: "mail",
    from: {
      avatar: "images/avatars/female-13.jpg",
      contact: "Brooke Petersen <brooke.petersen@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: [
      "Graham Belltower <graham.belltower@company.com>",
      "Julie T. <julie.t@company.com>"
    ],
    date: (/* @__PURE__ */ new Date("Sun Jul 22 2018 14:49:16 GMT+0000 (UTC)")).toISOString(),
    subject: "Anim laboris aliquip excepteur consectetur eu enim sunt velit qui deserunt",
    content: "Hello Brian,\n\nConsequat velit voluptate exercitation sint anim laboris. Consectetur dolor sunt veniam incididunt ad laboris proident tempor voluptate enim excepteur. Nostrud eu id tempor cupidatat. Deserunt ullamco consequat esse et. Dolore qui cupidatat commodo ea nisi tempor velit sit aliquip amet.\n\nMagna fugiat cupidatat mollit mollit. Consectetur consequat occaecat pariatur commodo quis labore est cillum voluptate culpa tempor elit incididunt. Voluptate anim est eiusmod voluptate ipsum commodo do et elit. Aute pariatur adipisicing eu laboris proident Lorem qui enim magna adipisicing deserunt pariatur. Fugiat eiusmod occaecat dolor tempor sunt exercitation est amet mollit est. Est in duis adipisicing nostrud aute voluptate quis in fugiat veniam reprehenderit.\n\nIpsum id deserunt ex non nisi nostrud enim pariatur nulla. In labore qui esse veniam ut. Est id ut pariatur esse nulla dolore aliqua ad aliqua fugiat. Ad incididunt amet culpa labore enim proident tempor. Aliquip non dolore sunt eu deserunt tempor anim qui dolore quis. Est sunt enim ipsum aliqua.\n\nKind Regards,\nBrooke Petersen",
    attachments: [],
    starred: true,
    important: false,
    unread: true,
    folder: "7c004a19-4506-48ef-93ab-f16381302e3b",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7",
      "8b035cb5-65c0-4ab1-bb4c-43b0e442d1f3"
    ]
  },
  {
    id: "affeecf6-e3c5-4377-8070-96f5ed9c6500",
    type: "mail",
    from: {
      avatar: "images/avatars/male-15.jpg",
      contact: "Estes Walter <estes.walter@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: ["Graham Belltower <graham.belltower@company.com>"],
    date: (/* @__PURE__ */ new Date("Tue Jul 17 2018 03:52:54 GMT+0000 (UTC)")).toISOString(),
    subject: "Reprehenderit ad do quis ut fugiat proident labore",
    content: "Hello Brian,\n\nFugiat labore incididunt aute sint id laboris nisi eiusmod reprehenderit. Sint sint Lorem aute cillum velit occaecat sit quis laboris ipsum laborum. Ex ipsum ea proident duis ex nostrud dolore exercitation nostrud ullamco cupidatat irure dolor. In aliqua occaecat commodo irure dolore. Nisi laborum anim cillum aute adipisicing labore fugiat velit officia cupidatat aliquip voluptate veniam. Aute incididunt consequat est id commodo elit occaecat ea Lorem deserunt est.\n\nPariatur deserunt sunt excepteur nisi ex. Enim consequat esse in deserunt ut. Cillum incididunt exercitation fugiat reprehenderit amet dolor nulla irure id quis.\n\nEnim id incididunt labore commodo voluptate. Non sint sint in eu anim dolor aliquip ullamco occaecat esse id consectetur cupidatat. Mollit aute nisi et fugiat consequat.\n\nKind Regards,\nEstes Walter",
    attachments: [],
    starred: false,
    important: true,
    unread: false,
    folder: "7c004a19-4506-48ef-93ab-f16381302e3b",
    labels: ["b167d3c4-f6ed-4ea6-9579-a12f95a9d76e"]
  },
  {
    id: "cb00d05c-6660-4dbb-a794-f22cff93f001",
    type: "mail",
    from: {
      avatar: "images/avatars/male-16.jpg",
      contact: "Holman Oconnor <holman.oconnor@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    date: (/* @__PURE__ */ new Date("Sat Jan 13 2018 22:30:44 GMT+0000 (UTC)")).toISOString(),
    subject: "Duis dolore eu sint anim ipsum commodo esse cillum ipsum culpa commodo",
    content: "Dear Brian,\n\nDolore amet sunt ullamco enim quis tempor enim pariatur nostrud id nulla adipisicing. Reprehenderit amet ex ullamco pariatur proident et amet consequat ipsum sit ut. Laboris fugiat nulla consequat nulla qui tempor dolore dolore minim nisi. Excepteur non est pariatur cupidatat adipisicing veniam ea cillum ex duis laborum ullamco.\n\nDo quis cupidatat adipisicing sint minim veniam velit amet nulla nisi tempor voluptate nulla adipisicing. Ex dolor adipisicing dolor ad cupidatat consectetur cillum ex. Non velit laborum fugiat est fugiat officia esse ullamco. Ut amet sit mollit dolor. Sit ipsum reprehenderit consectetur excepteur. Enim ad aliqua consequat ipsum labore laborum culpa aliqua dolor voluptate.\n\nVelit cupidatat labore sint id excepteur anim qui do do non. Esse tempor aute nisi aliqua velit ad elit nulla pariatur aliqua consectetur. Proident pariatur mollit cupidatat ullamco est velit ullamco dolore. Ipsum sunt reprehenderit consequat eu dolore nisi nostrud ipsum cillum. Quis non esse fugiat ipsum ad laboris aliquip eiusmod deserunt qui ipsum aliqua consequat duis. Ad nisi sunt sint ut officia adipisicing labore voluptate commodo ullamco exercitation.\n\nKind Regards,\nHolman Oconnor",
    attachments: [],
    starred: false,
    important: false,
    unread: false,
    folder: "7c004a19-4506-48ef-93ab-f16381302e3b",
    labels: ["b167d3c4-f6ed-4ea6-9579-a12f95a9d76e"]
  },
  {
    id: "7bd27a67-df7c-4a2d-8042-1fb8a690d98e",
    type: "mail",
    from: {
      avatar: "images/avatars/male-17.jpg",
      contact: "Oneill Irwin <oneill.irwin@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: [
      "Graham Belltower <graham.belltower@company.com>",
      "Julie T. <julie.t@company.com>"
    ],
    date: (/* @__PURE__ */ new Date("Sat Nov 17 2018 08:17:34 GMT+0000 (UTC)")).toISOString(),
    subject: "Eu in ut dolor amet consequat aute esse non fugiat minim cillum sunt aliquip cillum",
    content: "Dear Brian,\n\nNostrud sint ea laboris excepteur dolor nisi mollit dolor voluptate irure ex. Laboris adipisicing id ad minim minim magna nostrud nulla quis nulla tempor. Qui incididunt velit qui et proident eu in tempor in aliqua reprehenderit nostrud aute nulla. Nisi officia fugiat officia irure cillum qui adipisicing qui. Culpa duis sunt aute nostrud elit esse sit ullamco commodo ex.\n\nVeniam Lorem est minim sint ut aliqua ut est exercitation ad aliquip ullamco in culpa. Amet qui do adipisicing magna eu reprehenderit anim enim. Ipsum consequat ut eiusmod irure amet commodo aliqua sint aliquip non nulla. Irure excepteur tempor in ullamco sit culpa labore dolor enim sit. Nostrud eiusmod ex nulla exercitation est esse velit dolore aliqua eiusmod sit. Elit dolore id proident fugiat culpa anim ea Lorem eiusmod aliqua ex culpa in tempor.\n\nDeserunt officia id excepteur esse nisi elit labore irure. Et sint dolor ex incididunt ipsum dolore in mollit tempor. Qui cillum consequat laboris non culpa laborum amet cillum mollit laboris anim duis pariatur consequat. Ipsum fugiat cupidatat proident magna nisi consectetur adipisicing minim labore. Officia consequat quis labore sunt.\n\nKind Regards,\nOneill Irwin",
    attachments: [],
    starred: true,
    important: true,
    unread: true,
    folder: "7c004a19-4506-48ef-93ab-f16381302e3b",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7",
      "8b035cb5-65c0-4ab1-bb4c-43b0e442d1f3",
      "b2d1e4e7-7cfd-4b51-ae59-217a093df754",
      "184cd689-4ee4-47cf-9f8a-12233d614326"
    ]
  },
  {
    id: "ccfb3a90-e18c-4645-8c00-4357d9bcd321",
    type: "mail",
    from: {
      avatar: "images/avatars/female-14.jpg",
      contact: "Marcie Morgan <marcie.morgan@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: ["Graham Belltower <graham.belltower@company.com>"],
    date: (/* @__PURE__ */ new Date("Tue Nov 20 2018 05:55:32 GMT+0000 (UTC)")).toISOString(),
    subject: "Magna velit cillum dolor reprehenderit aliqua ut aute nisi in sunt Lorem laboris elit do",
    content: "Hi Brian,\n\nCommodo id eu mollit dolor laboris incididunt exercitation labore duis eu mollit labore labore labore. Cupidatat fugiat aute non consequat eiusmod in Lorem. Consequat officia ullamco minim aliquip aliqua.\n\nIrure elit ipsum minim ad Lorem. In amet Lorem aute minim id consequat nulla. Tempor ipsum incididunt occaecat sit ipsum adipisicing pariatur magna aliquip adipisicing quis id pariatur est. Tempor sit dolor aute do aliqua. Est cillum adipisicing ut aliquip adipisicing est nostrud tempor tempor culpa laboris occaecat. Ipsum culpa veniam sit aliqua ad culpa Lorem esse pariatur incididunt adipisicing irure ea. Sunt nostrud do quis tempor reprehenderit anim dolore mollit fugiat nisi.\n\nPariatur nostrud id occaecat dolor sunt. Ipsum dolore ex minim ex tempor sint ad elit eiusmod ipsum veniam. Aliquip occaecat nisi sunt aliquip id. Reprehenderit aliquip nisi ea culpa eu commodo Lorem consectetur.\n\nKind Regards,\nMarcie Morgan",
    attachments: [],
    starred: true,
    important: false,
    unread: false,
    folder: "7c004a19-4506-48ef-93ab-f16381302e3b",
    labels: []
  },
  {
    id: "a18b1961-ad32-4d00-984f-afef8ee0f4e9",
    type: "mail",
    from: {
      avatar: "images/avatars/male-18.jpg",
      contact: "Crane Trevino <crane.trevino@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: [
      "Graham Belltower <graham.belltower@company.com>",
      "Julie T. <julie.t@company.com>"
    ],
    date: (/* @__PURE__ */ new Date("Sat Nov 03 2018 01:52:28 GMT+0000 (UTC)")).toISOString(),
    subject: "Tempor consectetur officia excepteur culpa",
    content: "Dear Brian,\n\nExercitation in non sint adipisicing reprehenderit eu est aute aute quis Lorem. Magna labore nisi amet magna do in. Eiusmod fugiat mollit mollit minim aute. Voluptate qui sunt eiusmod aliquip pariatur consectetur et culpa laborum dolore. Exercitation ad incididunt exercitation voluptate sit qui eu incididunt sit.\n\nVoluptate cillum qui proident dolore tempor excepteur aute magna esse ex est culpa in. Officia officia quis veniam sunt irure eu. Voluptate ullamco velit culpa laboris anim commodo esse sunt minim esse nostrud ea. Est eiusmod commodo occaecat anim sint exercitation. Sunt irure nisi est sit excepteur aute amet. Non labore ullamco tempor nostrud nostrud ea do nostrud Lorem veniam in. Dolor est esse duis aute.\n\nEnim fugiat sunt et ut officia fugiat reprehenderit. Id cupidatat qui occaecat proident incididunt deserunt nisi magna enim dolore. Dolor aute anim ex tempor nisi ex minim sint reprehenderit ex ullamco ullamco culpa ipsum. Voluptate occaecat esse consequat non aliqua proident. Deserunt exercitation Lorem ea nisi consequat et culpa pariatur. Incididunt commodo deserunt dolore irure ea sint ipsum ad voluptate.\n\nBest Regards,\nCrane Trevino",
    attachments: [],
    starred: false,
    important: false,
    unread: true,
    folder: "7c004a19-4506-48ef-93ab-f16381302e3b",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7",
      "8b035cb5-65c0-4ab1-bb4c-43b0e442d1f3",
      "b2d1e4e7-7cfd-4b51-ae59-217a093df754",
      "184cd689-4ee4-47cf-9f8a-12233d614326"
    ]
  },
  {
    id: "3aaa5e3f-b8b5-47fc-9967-5f65dd8c7251",
    type: "mail",
    from: {
      avatar: "images/avatars/female-15.jpg",
      contact: "Kristine Wiggins <kristine.wiggins@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: ["Graham Belltower <graham.belltower@company.com>"],
    date: (/* @__PURE__ */ new Date("Tue Jan 09 2018 13:55:10 GMT+0000 (UTC)")).toISOString(),
    subject: "Magna aute enim magna aliqua aliquip enim elit eiusmod nulla nostrud",
    content: "Hi Brian,\n\nCulpa incididunt qui nulla velit consectetur. Exercitation ut voluptate proident commodo non deserunt. Consectetur anim aute sunt aliquip fugiat laborum tempor exercitation duis sint excepteur ullamco culpa consequat. Aliqua ex quis pariatur excepteur commodo adipisicing ut anim et. Duis ex sit ex nulla proident est consequat aliquip. Quis exercitation labore veniam anim sit irure laborum occaecat laborum labore cillum sunt nulla. Exercitation laborum sunt consequat aliqua.\n\nLabore fugiat ullamco quis incididunt quis duis consectetur aute incididunt cupidatat cupidatat deserunt. Cillum fugiat ex minim tempor consectetur duis labore reprehenderit excepteur enim anim qui. Reprehenderit pariatur aliqua mollit in amet id. Duis anim nostrud incididunt adipisicing incididunt velit minim tempor adipisicing est elit ipsum duis.\n\nFugiat nostrud ad enim officia est. Voluptate velit in pariatur cupidatat irure dolor eiusmod voluptate irure voluptate ad reprehenderit est. Esse aute aliquip aute minim amet pariatur minim tempor nostrud consectetur. Sunt reprehenderit excepteur occaecat ea reprehenderit eiusmod duis cupidatat sunt nulla fugiat et velit elit. Do ut tempor cillum nisi. Magna sint do et mollit cupidatat ad culpa voluptate.\n\nKind Regards,\nKristine Wiggins",
    attachments: [
      {
        type: "application/pdf",
        name: "account-details.pdf",
        size: 127844,
        preview: "pdf",
        downloadUrl: ""
      },
      {
        type: "image/jpeg",
        name: "mystery-forest.jpg",
        size: 15539,
        preview: "mystery-forest_preview.jpg",
        downloadUrl: ""
      },
      {
        type: "image/jpeg",
        name: "birds-eye-sydney.jpg",
        size: 14294,
        preview: "birds-eye-sydney_preview.jpg",
        downloadUrl: ""
      }
    ],
    starred: true,
    important: false,
    unread: false,
    folder: "7c004a19-4506-48ef-93ab-f16381302e3b",
    labels: ["b167d3c4-f6ed-4ea6-9579-a12f95a9d76e"]
  },
  {
    id: "0f72d2d0-bea4-4c0f-ace0-0be9f14c37f1",
    type: "mail",
    from: {
      avatar: "images/avatars/female-16.jpg",
      contact: "Terrie Carney <terrie.carney@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: ["Graham Belltower <graham.belltower@company.com>"],
    date: (/* @__PURE__ */ new Date("Tue Jan 23 2018 00:03:55 GMT+0000 (UTC)")).toISOString(),
    subject: "Laboris in incididunt labore labore deserunt deserunt nostrud mollit voluptate non ex",
    content: "Hello Brian,\n\nReprehenderit veniam fugiat sunt in nulla anim commodo magna ex nulla. Mollit nostrud eiusmod aute veniam. Sint do cupidatat velit sit amet.\n\nUllamco elit anim veniam culpa veniam velit. Nisi aute esse consectetur ea occaecat ea laboris eu. Velit proident quis mollit nulla mollit dolor ad commodo. Non deserunt ipsum id dolor est ad consectetur sunt commodo adipisicing in irure.\n\nCupidatat consequat officia adipisicing amet esse veniam veniam elit veniam sint nulla quis qui commodo. Ipsum nisi deserunt pariatur nostrud in. Sint duis pariatur esse do duis proident consequat ullamco excepteur mollit nulla veniam non. Reprehenderit incididunt ipsum duis dolor nulla fugiat fugiat culpa laboris velit sint.\n\nKind Regards,\nTerrie Carney",
    attachments: [],
    starred: false,
    important: false,
    unread: false,
    folder: "7c004a19-4506-48ef-93ab-f16381302e3b",
    labels: []
  },
  {
    id: "f825c5a3-2be8-4d48-9c4e-da60ff0e63f3",
    type: "mail",
    from: {
      avatar: "images/avatars/male-19.jpg",
      contact: "Goff Jennings <goff.jennings@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: [
      "Graham Belltower <graham.belltower@company.com>",
      "Julie T. <julie.t@company.com>"
    ],
    date: (/* @__PURE__ */ new Date("Tue Aug 07 2018 05:20:39 GMT+0000 (UTC)")).toISOString(),
    subject: "Labore sint dolor nulla nostrud commodo amet nisi mollit commodo eiusmod duis quis irure non",
    content: "Dear Brian,\n\nNisi sit ut in do aliqua nostrud consectetur incididunt. Non et pariatur nulla mollit aute aliquip amet minim irure tempor eu id ipsum. Velit sunt tempor proident voluptate ad reprehenderit. Dolor consectetur est in nulla. Reprehenderit incididunt magna deserunt mollit officia non aliqua. Elit est dolore ea Lorem velit ipsum occaecat cupidatat. Mollit magna laborum qui sit sunt mollit amet.\n\nDuis excepteur labore laboris adipisicing culpa culpa eiusmod et velit aliquip velit. Proident tempor in excepteur minim irure duis ex in non est. Labore minim sunt culpa enim tempor labore ea adipisicing nulla elit magna. Fugiat enim ex voluptate officia pariatur pariatur ipsum eu in. Veniam commodo occaecat laborum excepteur nisi Lorem.\n\nExcepteur adipisicing amet ea commodo dolor nisi labore deserunt adipisicing pariatur. Pariatur magna et esse id occaecat minim minim. Labore cupidatat tempor deserunt reprehenderit anim duis magna laborum excepteur aliquip consectetur.\n\nBest Regards,\nGoff Jennings",
    attachments: [],
    starred: false,
    important: false,
    unread: false,
    folder: "7c004a19-4506-48ef-93ab-f16381302e3b",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7",
      "8b035cb5-65c0-4ab1-bb4c-43b0e442d1f3",
      "b2d1e4e7-7cfd-4b51-ae59-217a093df754"
    ]
  },
  {
    id: "e6dc9600-a3ab-4571-b2f2-ed00ee08e163",
    type: "mail",
    from: {
      avatar: "images/avatars/male-20.jpg",
      contact: "Browning Sanchez <browning.sanchez@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: ["Graham Belltower <graham.belltower@company.com>"],
    date: (/* @__PURE__ */ new Date("Fri Mar 16 2018 20:31:08 GMT+0000 (UTC)")).toISOString(),
    subject: "Mollit cupidatat commodo consectetur duis ea elit est sint sunt ea qui nostrud incididunt",
    content: "Hey Brian,\n\nVelit ut elit ex voluptate nisi nostrud sunt pariatur dolore est dolor deserunt sint nostrud. Aute magna ipsum cillum cillum tempor voluptate cupidatat sunt eiusmod officia sit. Aliqua adipisicing officia adipisicing dolore id nulla nulla irure non enim esse anim. Tempor occaecat excepteur duis ex aliquip eu reprehenderit labore ea. Adipisicing anim amet culpa culpa cillum elit cupidatat consequat laboris.\n\nEx dolore fugiat incididunt deserunt deserunt quis elit ipsum. Exercitation dolore dolore deserunt eu voluptate deserunt non id duis incididunt. Dolor proident quis enim cillum fugiat. Ex nisi pariatur aliqua exercitation. Incididunt laborum pariatur deserunt anim laboris sint consequat aliqua nostrud sint. Elit tempor laboris do tempor eu minim sunt proident.\n\nAmet aute esse minim qui sit pariatur aliquip laborum. Irure nulla sit laboris dolor reprehenderit veniam occaecat non commodo do qui. Eiusmod pariatur dolor consectetur qui quis occaecat. Et consectetur occaecat nulla elit officia nostrud. Est aute est nisi dolor mollit sunt et aliqua aliqua nulla labore cupidatat. Do pariatur aliquip cillum ullamco. Nostrud tempor consectetur eu nisi incididunt in voluptate est.\n\nKind Regards,\nBrowning Sanchez",
    attachments: [],
    starred: false,
    important: true,
    unread: false,
    folder: "7c004a19-4506-48ef-93ab-f16381302e3b",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7",
      "8b035cb5-65c0-4ab1-bb4c-43b0e442d1f3"
    ]
  },
  {
    id: "0f22fedf-ea89-414e-91a4-0df0d9501ef2",
    type: "mail",
    from: {
      avatar: "images/avatars/male-01.jpg",
      contact: "Carey Lyons <carey.lyons@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    date: (/* @__PURE__ */ new Date("Tue May 01 2018 07:56:59 GMT+0000 (UTC)")).toISOString(),
    subject: "Laboris esse ipsum esse eu do ipsum do incididunt",
    content: "Hello Brian,\n\nIpsum elit ut magna occaecat dolor sint reprehenderit eu incididunt sunt irure esse mollit. Sit fugiat amet laborum ullamco sit laborum Lorem irure minim ut. Labore aliqua dolore minim elit consequat sit. Labore mollit esse ad magna voluptate anim pariatur. Irure enim excepteur adipisicing cillum minim culpa elit nostrud consectetur quis laborum velit. Ea eiusmod aliqua ipsum ad tempor veniam fugiat elit.\n\nDolor mollit adipisicing ut duis cillum proident id sunt non sit cillum. Sit aliqua elit aute tempor cupidatat esse mollit do deserunt cillum velit irure cillum. Ea aliqua Lorem minim cupidatat elit Lorem.\n\nEu deserunt nostrud Lorem reprehenderit sit veniam consectetur proident. Duis elit duis excepteur sit proident est ut est cillum. Sit tempor aliqua qui laborum eu cillum laborum consequat adipisicing sit exercitation. Anim non do consequat duis pariatur. Velit excepteur magna enim tempor occaecat consequat exercitation laborum deserunt.\n\nKind Regards,\nCarey Lyons",
    attachments: [],
    starred: true,
    important: false,
    unread: false,
    folder: "7c004a19-4506-48ef-93ab-f16381302e3b",
    labels: ["b167d3c4-f6ed-4ea6-9579-a12f95a9d76e"]
  },
  {
    id: "d942f99b-8925-49f0-b75b-2c48b714b1cf",
    type: "mail",
    from: {
      avatar: "images/avatars/male-02.jpg",
      contact: "Hendrix Goodwin <hendrix.goodwin@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    date: (/* @__PURE__ */ new Date("Mon Jan 22 2018 19:04:29 GMT+0000 (UTC)")).toISOString(),
    subject: "Magna consectetur occaecat excepteur elit",
    content: "Hello Brian,\n\nSunt consequat elit aliquip sit nulla ad. Voluptate elit qui magna ipsum culpa pariatur laboris nisi sit laboris. Mollit eiusmod ut elit est aliquip nulla ea laborum. Irure ipsum officia cillum labore occaecat esse consequat ut culpa et ut.\n\nAliquip aliquip veniam aute velit aliquip culpa cillum. Eu culpa pariatur in exercitation est nostrud duis quis voluptate. Anim pariatur ipsum aliquip proident et enim veniam duis velit adipisicing id ad exercitation commodo. Sit commodo qui reprehenderit et elit officia in aliquip amet occaecat. Nulla aute officia duis cupidatat cillum. Commodo amet consequat qui ipsum nisi nulla veniam laborum. Et excepteur est irure non officia ipsum sunt fugiat exercitation eu laboris sunt.\n\nElit reprehenderit aute consectetur eiusmod sit pariatur elit fugiat irure id et. In in dolore sunt magna cillum excepteur minim aute. Lorem sint occaecat elit est sint ut ea eiusmod anim esse cillum anim enim. Officia sint velit qui minim veniam ut nisi reprehenderit occaecat laborum qui. Elit eiusmod commodo dolor sunt incididunt labore.\n\nBest Regards,\nHendrix Goodwin",
    attachments: [],
    starred: false,
    important: true,
    unread: true,
    folder: "7c004a19-4506-48ef-93ab-f16381302e3b",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7",
      "8b035cb5-65c0-4ab1-bb4c-43b0e442d1f3",
      "b2d1e4e7-7cfd-4b51-ae59-217a093df754"
    ]
  },
  {
    id: "036c24e8-d8bc-4f0e-9a72-6fa884d69bb3",
    type: "mail",
    from: {
      avatar: "images/avatars/female-17.jpg",
      contact: "Leticia Fulton <leticia.fulton@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: ["Graham Belltower <graham.belltower@company.com>"],
    date: (/* @__PURE__ */ new Date("Sat Mar 31 2018 05:44:48 GMT+0000 (UTC)")).toISOString(),
    subject: "Est nostrud labore excepteur quis consectetur proident cupidatat",
    content: "Hello Brian,\n\nOfficia incididunt sint est non aliquip eu deserunt sunt ad minim aliqua excepteur. Cillum dolor nostrud magna sunt nulla aute ut esse dolore magna eu. Dolore minim non dolor aliquip reprehenderit excepteur irure dolore anim incididunt sit. Nulla commodo pariatur consectetur sit reprehenderit amet consectetur duis.\n\nCupidatat tempor commodo aliqua sunt incididunt. Occaecat occaecat eu officia aliqua in exercitation sint commodo aute aliquip laborum consectetur enim. Voluptate do aute irure ullamco. Qui consectetur id aliqua laborum incididunt cupidatat proident ea irure mollit minim.\n\nDolore reprehenderit occaecat enim eu veniam tempor dolor. Aliquip proident tempor aute nostrud ut. Eiusmod consectetur qui mollit ut ut ullamco aliquip exercitation quis dolore irure labore. Nisi officia aliquip pariatur Lorem velit ex cupidatat cillum consequat. Elit ea sunt reprehenderit do minim cillum. Aute irure ad velit quis et adipisicing esse reprehenderit et quis voluptate. Aliquip reprehenderit duis eiusmod eiusmod aliqua mollit amet id cillum deserunt.\n\nCheers!\nLeticia Fulton",
    attachments: [],
    starred: true,
    important: false,
    unread: true,
    folder: "7c004a19-4506-48ef-93ab-f16381302e3b",
    labels: ["b167d3c4-f6ed-4ea6-9579-a12f95a9d76e"]
  },
  {
    id: "3dac4463-73aa-4bd4-a3d8-662ce38635cc",
    type: "mail",
    from: {
      avatar: "images/avatars/female-18.jpg",
      contact: "Carmen Shannon <carmen.shannon@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: [
      "Graham Belltower <graham.belltower@company.com>",
      "Julie T. <julie.t@company.com>"
    ],
    date: (/* @__PURE__ */ new Date("Fri Jun 15 2018 23:26:09 GMT+0000 (UTC)")).toISOString(),
    subject: "Aute est laboris laborum consectetur cupidatat",
    content: "Hey Brian,\n\nEsse dolore laboris enim quis. Ullamco dolor exercitation nostrud occaecat in et ad Lorem sunt nisi. Ipsum quis dolor fugiat ex eu. Consequat voluptate elit ut exercitation enim sint aliqua qui id est in eu adipisicing veniam. Deserunt est occaecat sit irure aute. Anim veniam cupidatat exercitation labore duis pariatur velit est exercitation dolore ad. Pariatur non adipisicing et nulla sit.\n\nIncididunt dolor pariatur est aute ad. Non aliqua qui excepteur cillum enim. Magna proident incididunt eu dolor non ut. Eiusmod Lorem tempor laborum amet ex.\n\nExcepteur quis duis cupidatat ea cupidatat magna irure ad exercitation eiusmod. Quis magna minim nulla ullamco. Sit dolor ipsum tempor laboris eiusmod deserunt ex. Est incididunt culpa commodo ad sunt cillum eiusmod labore nisi nulla ea sit anim incididunt. In labore id sint ipsum id nulla ad aliqua mollit minim occaecat. Velit do velit nostrud nostrud dolor esse consequat velit ullamco in cupidatat. Amet culpa fugiat Lorem nisi tempor labore magna reprehenderit aliquip elit et esse fugiat.\n\nKind Regards,\nCarmen Shannon",
    attachments: [],
    starred: false,
    important: true,
    unread: true,
    folder: "7c004a19-4506-48ef-93ab-f16381302e3b",
    labels: ["b167d3c4-f6ed-4ea6-9579-a12f95a9d76e"]
  },
  {
    id: "6bb27e81-ee53-4db3-acc7-bd1267cd475d",
    type: "mail",
    from: {
      avatar: "images/avatars/female-19.jpg",
      contact: "Hattie Snow <hattie.snow@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: [
      "Graham Belltower <graham.belltower@company.com>",
      "Julie T. <julie.t@company.com>"
    ],
    date: (/* @__PURE__ */ new Date("Fri Jun 08 2018 01:23:42 GMT+0000 (UTC)")).toISOString(),
    subject: "Officia exercitation exercitation ad exercitation ea ut ullamco",
    content: "Hello Brian,\n\nIncididunt aute pariatur quis reprehenderit tempor occaecat laborum nostrud labore sunt minim non eiusmod incididunt. Ipsum cupidatat qui reprehenderit ex enim irure. Eiusmod sunt proident Lorem veniam non magna dolore eu laboris nostrud quis pariatur. Velit do eu commodo tempor laboris excepteur in. Laborum mollit dolor aliquip enim sunt cillum minim. Dolor elit ipsum proident adipisicing consectetur aliquip nisi proident eiusmod Lorem adipisicing aliqua velit ea.\n\nDo adipisicing incididunt proident Lorem ullamco. Cupidatat fugiat et minim elit deserunt est. Occaecat laboris cillum elit aute cupidatat reprehenderit consequat est est ea occaecat sit consequat labore. Enim proident consectetur culpa anim est culpa nulla nostrud esse proident officia ut dolore ipsum. Do qui sunt id quis Lorem officia anim fugiat occaecat ut.\n\nEsse incididunt excepteur adipisicing fugiat deserunt sint Lorem culpa excepteur tempor ullamco qui. Non aliquip ullamco Lorem do. Ex enim elit minim reprehenderit in qui aliqua qui laborum.\n\nKind Regards,\nHattie Snow",
    attachments: [],
    starred: false,
    important: true,
    unread: true,
    folder: "7c004a19-4506-48ef-93ab-f16381302e3b",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7",
      "8b035cb5-65c0-4ab1-bb4c-43b0e442d1f3",
      "b2d1e4e7-7cfd-4b51-ae59-217a093df754"
    ]
  },
  {
    id: "bfac8e5d-6487-4747-b827-67179ac5c206",
    type: "mail",
    from: {
      avatar: "images/avatars/female-20.jpg",
      contact: "Brandi Bradley <brandi.bradley@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    date: (/* @__PURE__ */ new Date("Sat Nov 17 2018 10:51:44 GMT+0000 (UTC)")).toISOString(),
    subject: "Eiusmod nulla incididunt nostrud est mollit quis velit in non irure elit consectetur commodo irure",
    content: "Hey Brian,\n\nOfficia ad enim aliqua ex labore nisi. Commodo cillum non occaecat laboris. Irure eu ut voluptate officia excepteur.\n\nNostrud ad proident qui cupidatat exercitation labore occaecat in. Aliquip culpa veniam magna eiusmod proident irure reprehenderit pariatur adipisicing velit. Aliqua non labore tempor irure do duis ut voluptate.\n\nNon sit dolore voluptate sint ullamco proident enim non do dolor deserunt nisi velit. Quis pariatur esse sunt quis voluptate ut minim proident officia exercitation ipsum ipsum cillum. Duis non nostrud ullamco excepteur occaecat. Deserunt sit sint quis et ad. Nisi enim excepteur magna laboris occaecat laborum non esse sit enim mollit. Et elit eiusmod eiusmod Lorem ex qui elit adipisicing proident aute eu.\n\nBest Regards,\nBrandi Bradley",
    attachments: [
      {
        type: "image/png",
        name: "yosemite-national-park.png",
        size: 14242,
        preview: "yosemite-national-park_preview.png",
        downloadUrl: ""
      },
      {
        type: "image/png",
        name: "yosemite-national-park.png",
        size: 14242,
        preview: "yosemite-national-park_preview.png",
        downloadUrl: ""
      }
    ],
    starred: true,
    important: false,
    unread: true,
    folder: "7c004a19-4506-48ef-93ab-f16381302e3b",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7"
    ]
  },
  {
    id: "81b49a0a-e934-422a-81a8-8506d6f24e0e",
    type: "mail",
    from: {
      avatar: "images/avatars/female-01.jpg",
      contact: "Patsy Potter <patsy.potter@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: ["Graham Belltower <graham.belltower@company.com>"],
    date: (/* @__PURE__ */ new Date("Tue May 15 2018 15:37:38 GMT+0000 (UTC)")).toISOString(),
    subject: "Ullamco fugiat fugiat non occaecat proident exercitation proident Lorem adipisicing commodo fugiat",
    content: "Hello Brian,\n\nAute in culpa nulla aliqua laboris adipisicing in sit laborum. Enim exercitation duis qui ullamco. Ullamco eiusmod deserunt cillum nisi nulla nostrud voluptate fugiat non nulla. Tempor sint consequat in nostrud cupidatat exercitation aliqua Lorem. Fugiat officia excepteur consequat id cillum amet consectetur mollit nostrud in ex aliquip. Velit ut cupidatat excepteur deserunt.\n\nSit culpa eu dolor Lorem ipsum anim dolor proident. Cupidatat qui laboris incididunt Lorem cillum anim dolore ad ipsum ullamco deserunt aliquip exercitation. Nostrud magna fugiat aliquip veniam cupidatat cupidatat fugiat voluptate consectetur irure minim officia officia. Tempor commodo tempor sint amet. Ex sint adipisicing fugiat excepteur do ad elit esse commodo duis et. Ullamco irure laborum sint duis duis irure officia culpa non Lorem est deserunt exercitation.\n\nDolor ullamco fugiat eu cupidatat consequat exercitation magna. In ad aute aliquip eu laboris adipisicing proident ad. Eu aliquip enim cillum aliqua.\n\nKind Regards,\nPatsy Potter",
    attachments: [],
    starred: true,
    important: false,
    unread: true,
    folder: "7c004a19-4506-48ef-93ab-f16381302e3b",
    labels: []
  },
  {
    id: "8355b50a-f347-4177-8cef-6410c0aa46d1",
    type: "mail",
    from: {
      avatar: "images/avatars/female-02.jpg",
      contact: "Kathleen Cox <kathleen.cox@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: ["Graham Belltower <graham.belltower@company.com>"],
    date: (/* @__PURE__ */ new Date("Sun Aug 26 2018 04:47:12 GMT+0000 (UTC)")).toISOString(),
    subject: "Est fugiat reprehenderit cupidatat sunt velit aliquip reprehenderit exercitation",
    content: "Hey Brian,\n\nReprehenderit elit do qui ut occaecat veniam. Laboris culpa cupidatat irure ipsum ea cupidatat. Occaecat ea nisi cillum eiusmod. Excepteur dolore ut commodo magna consequat laboris aliquip pariatur reprehenderit laboris. Velit ullamco ipsum ut excepteur enim ipsum consequat reprehenderit eiusmod. Occaecat enim exercitation ipsum nulla dolor anim irure sint dolor do aliquip. Eu tempor sunt non pariatur ut anim eu.\n\nDeserunt cupidatat elit sit cillum qui ut velit ea dolor id sint. Laborum excepteur commodo sit duis. Sit sunt proident laborum ex deserunt cupidatat aliquip tempor id qui deserunt est deserunt et. Qui voluptate veniam nostrud deserunt ullamco nisi occaecat cillum aliquip ullamco. Duis labore sunt ad sunt cillum veniam fugiat deserunt commodo Lorem fugiat et. Eu laborum enim culpa duis esse tempor ex ex. Occaecat cupidatat est reprehenderit cupidatat fugiat amet dolor anim eiusmod.\n\nDolore est occaecat anim aute adipisicing do magna ea aute duis dolore nisi. Irure veniam dolore tempor sint. Irure ullamco aliqua id nisi elit Lorem amet do tempor. Irure aute consectetur dolore nisi nisi excepteur et labore fugiat excepteur duis adipisicing.\n\nKind Regards,\nKathleen Cox",
    attachments: [],
    starred: true,
    important: false,
    unread: false,
    folder: "7c004a19-4506-48ef-93ab-f16381302e3b",
    labels: []
  },
  {
    id: "6d2bfbce-465b-4e8f-a79e-cd13ab8571c6",
    type: "mail",
    from: {
      avatar: "images/avatars/female-03.jpg",
      contact: "Kristina Ramirez <kristina.ramirez@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    date: (/* @__PURE__ */ new Date("Tue Mar 06 2018 16:13:56 GMT+0000 (UTC)")).toISOString(),
    subject: "Ea eu cupidatat voluptate magna et Lorem veniam aute ipsum consectetur nisi voluptate",
    content: "Dear Brian,\n\nVoluptate esse cillum dolor aliqua. Qui aliqua consectetur tempor irure dolor sunt excepteur eu. Aliqua incididunt velit id minim consequat.\n\nLorem cupidatat aliqua enim fugiat ex aliqua fugiat do ut sint eiusmod. Ex Lorem incididunt velit laboris exercitation aliqua commodo est velit nisi excepteur aute dolor eu. Ad culpa excepteur non laboris occaecat aute sunt ea nostrud ut exercitation fugiat laboris. Ad eiusmod in culpa cupidatat sit pariatur deserunt velit velit elit aliqua duis eiusmod enim.\n\nFugiat ut proident consectetur aliquip consequat sunt ipsum adipisicing. Nisi velit eiusmod sunt voluptate do ea voluptate esse veniam deserunt consectetur Lorem laboris labore. Consectetur aute quis id nisi cillum magna elit veniam fugiat elit aliqua. Mollit aute laborum incididunt sit voluptate consectetur magna do do in duis sunt non culpa.\n\nKind Regards,\nKristina Ramirez",
    attachments: [],
    starred: false,
    important: false,
    unread: true,
    folder: "7c004a19-4506-48ef-93ab-f16381302e3b",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7",
      "8b035cb5-65c0-4ab1-bb4c-43b0e442d1f3",
      "b2d1e4e7-7cfd-4b51-ae59-217a093df754"
    ]
  },
  {
    id: "d8815854-8726-4280-a5bf-eafd40b3972a",
    type: "mail",
    from: {
      avatar: "images/avatars/male-03.jpg",
      contact: "Mays Glass <mays.glass@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    date: (/* @__PURE__ */ new Date("Thu Jan 04 2018 11:10:36 GMT+0000 (UTC)")).toISOString(),
    subject: "Culpa ex pariatur aliqua reprehenderit do occaecat nulla ipsum culpa adipisicing",
    content: "Hello Brian,\n\nQuis qui elit eiusmod sint adipisicing in. Adipisicing ipsum reprehenderit id tempor ut. Amet reprehenderit mollit commodo proident nulla velit aliqua ut labore ullamco ea reprehenderit proident deserunt. Consequat deserunt laborum consectetur ea aliquip. Lorem est cillum esse esse consequat sunt enim in deserunt velit. Consectetur velit sunt dolore fugiat eu dolor occaecat occaecat consequat et adipisicing ex ullamco. Officia labore esse esse ipsum ex laborum irure est id veniam aliqua sunt do.\n\nVeniam aute mollit elit duis. Voluptate veniam fugiat occaecat culpa velit fugiat. Irure cillum qui ullamco cillum ut. Culpa id eu nostrud reprehenderit. Aliquip irure cillum tempor non ex. Ex cillum aute minim ut anim sunt dolore cupidatat exercitation ex. In id nostrud sunt ut ea quis aliqua fugiat nostrud fugiat qui dolore adipisicing.\n\nExercitation sint fugiat ullamco id. Consectetur anim duis dolor eiusmod consectetur enim officia dolor elit velit do in laboris id. Reprehenderit fugiat nostrud ea elit do consectetur anim quis enim esse nostrud. Ea ullamco sit anim consequat anim cillum ullamco nostrud commodo fugiat occaecat mollit sint et. Consequat et do do mollit nostrud eiusmod ut magna. Id tempor cillum duis nisi anim velit officia incididunt. Cillum aliqua pariatur laboris deserunt commodo laboris amet.\n\nBest Regards,\nMays Glass",
    attachments: [],
    starred: true,
    important: false,
    unread: true,
    folder: "1ee2ea29-9a1f-4c27-b4d2-5e465703b6a0",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7",
      "8b035cb5-65c0-4ab1-bb4c-43b0e442d1f3"
    ]
  },
  {
    id: "bd7ac4df-77fa-45da-8eaf-31303ba794c4",
    type: "mail",
    from: {
      avatar: "images/avatars/male-04.jpg",
      contact: "Barber Zimmerman <barber.zimmerman@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: ["Graham Belltower <graham.belltower@company.com>"],
    date: (/* @__PURE__ */ new Date("Thu Aug 09 2018 01:33:05 GMT+0000 (UTC)")).toISOString(),
    subject: "Sit elit aliquip sint ullamco tempor in duis Lorem laboris sunt laborum",
    content: "Hi Brian,\n\nAliquip nisi ullamco cupidatat dolore Lorem consectetur quis eiusmod pariatur. Deserunt quis et veniam ea dolore nisi dolor irure anim nisi reprehenderit ex. Deserunt aliqua eu sunt duis ad veniam exercitation nisi deserunt eu. Sint ad ipsum enim laboris. Ut minim proident ut amet officia sit culpa occaecat dolor consequat aliquip minim elit.\n\nElit dolore minim duis officia ullamco reprehenderit laborum incididunt enim do excepteur voluptate elit. Magna adipisicing cupidatat nisi excepteur. Ipsum ex velit pariatur ea veniam aliquip duis consectetur voluptate. Eu velit exercitation veniam nulla consectetur et reprehenderit ullamco. Laborum nisi occaecat laborum adipisicing. Ullamco culpa qui ex pariatur incididunt anim dolor consectetur fugiat et.\n\nIn sunt consequat consectetur culpa. Id aliquip culpa commodo sunt esse anim nulla quis nisi aute occaecat. Anim enim dolor anim dolore.\n\nKind Regards,\nBarber Zimmerman",
    attachments: [],
    starred: true,
    important: true,
    unread: false,
    folder: "1ee2ea29-9a1f-4c27-b4d2-5e465703b6a0",
    labels: ["b167d3c4-f6ed-4ea6-9579-a12f95a9d76e"]
  },
  {
    id: "f5fe9764-70b0-407e-a015-96b04da948a7",
    type: "mail",
    from: {
      avatar: "images/avatars/female-04.jpg",
      contact: "Ginger Fry <ginger.fry@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: [
      "Graham Belltower <graham.belltower@company.com>",
      "Julie T. <julie.t@company.com>"
    ],
    date: (/* @__PURE__ */ new Date("Fri Jan 12 2018 15:46:37 GMT+0000 (UTC)")).toISOString(),
    subject: "Fugiat voluptate Lorem id sint enim irure in velit nostrud commodo incididunt",
    content: "Hey Brian,\n\nCillum sunt irure sit reprehenderit ad do mollit Lorem dolor voluptate magna Lorem ad proident. Aliqua qui incididunt nostrud proident. Occaecat voluptate tempor Lorem magna nostrud. Pariatur excepteur id esse proident enim culpa nostrud consectetur tempor exercitation proident ex voluptate tempor. Do id ullamco qui nostrud est occaecat Lorem ipsum ut consectetur culpa velit sunt. Do nisi laborum dolore dolor eu.\n\nAliquip commodo proident tempor est. Aliqua consequat non irure proident consectetur laborum id cupidatat ex enim culpa adipisicing incididunt. Nisi fugiat nisi id reprehenderit fugiat voluptate nostrud esse deserunt. Laboris commodo aliqua qui pariatur. Quis labore commodo aliquip deserunt.\n\nMinim sint tempor consequat consequat commodo velit magna fugiat dolor consectetur est cillum. Minim consequat do excepteur anim consequat. Anim culpa esse adipisicing culpa sit non ut.\n\nKind Regards,\nGinger Fry",
    attachments: [],
    starred: true,
    important: false,
    unread: false,
    folder: "1ee2ea29-9a1f-4c27-b4d2-5e465703b6a0",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7"
    ]
  },
  {
    id: "3de07c8c-e687-4138-9967-7fd1feea17ee",
    type: "mail",
    from: {
      avatar: "images/avatars/male-05.jpg",
      contact: "Gardner Burnett <gardner.burnett@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    date: (/* @__PURE__ */ new Date("Mon Mar 19 2018 13:34:20 GMT+0000 (UTC)")).toISOString(),
    subject: "Labore anim ullamco labore nisi eiusmod duis commodo",
    content: "Hello Brian,\n\nAute et mollit quis proident proident. Tempor qui sint proident nulla sit ut nulla incididunt enim. Ut cillum nulla nostrud irure sit. Excepteur culpa magna sunt velit consectetur proident labore laborum amet cillum ex elit excepteur nisi. Consectetur voluptate incididunt nulla dolore in culpa excepteur.\n\nQuis duis consequat est elit pariatur deserunt incididunt in enim excepteur deserunt. Aliquip ea exercitation eiusmod deserunt. Qui incididunt consectetur tempor sunt labore id minim deserunt pariatur adipisicing do. Officia nisi pariatur in ea eiusmod Lorem ut commodo.\n\nLaborum ipsum consectetur excepteur cupidatat labore culpa Lorem. Enim pariatur eu aliqua nisi. Tempor pariatur dolore fugiat nulla est tempor incididunt id cupidatat.\n\nCheers!\nGardner Burnett",
    attachments: [],
    starred: false,
    important: true,
    unread: false,
    folder: "1ee2ea29-9a1f-4c27-b4d2-5e465703b6a0",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7"
    ]
  },
  {
    id: "d2bbcbbb-aa31-48ee-bbe4-2976b7043e78",
    type: "mail",
    from: {
      avatar: "images/avatars/female-05.jpg",
      contact: "Lula Lucas <lula.lucas@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: [
      "Graham Belltower <graham.belltower@company.com>",
      "Julie T. <julie.t@company.com>"
    ],
    date: (/* @__PURE__ */ new Date("Mon Nov 26 2018 16:08:25 GMT+0000 (UTC)")).toISOString(),
    subject: "Quis anim labore esse proident",
    content: "Hi Brian,\n\nEt enim eu esse nostrud minim labore dolor dolor proident ipsum nisi. Occaecat commodo ullamco cupidatat non deserunt eu nisi dolor. Tempor laboris ipsum occaecat consequat reprehenderit do reprehenderit proident elit mollit aliquip officia excepteur eu. Esse excepteur mollit nulla elit non sint. Consectetur sint reprehenderit pariatur pariatur laborum ullamco tempor consectetur consequat proident velit nisi fugiat anim. Lorem reprehenderit enim non excepteur non cupidatat duis aliqua do culpa occaecat velit.\n\nAliqua est ad pariatur ex velit fugiat id do et amet in aliqua. Mollit esse quis culpa mollit. Amet labore nulla qui pariatur aliquip occaecat do ipsum nostrud ipsum consectetur consequat cillum.\n\nNostrud duis cupidatat minim reprehenderit sunt duis consequat veniam enim velit dolore sint. Sint ad aliquip excepteur in tempor anim fugiat ipsum ex ullamco. Aute anim reprehenderit nulla anim pariatur elit mollit et non qui labore culpa laborum pariatur. Cupidatat consequat incididunt aute id. Cillum incididunt ipsum duis reprehenderit cillum ullamco.\n\nKind Regards,\nLula Lucas",
    attachments: [],
    starred: false,
    important: true,
    unread: true,
    folder: "1ee2ea29-9a1f-4c27-b4d2-5e465703b6a0",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7",
      "8b035cb5-65c0-4ab1-bb4c-43b0e442d1f3",
      "b2d1e4e7-7cfd-4b51-ae59-217a093df754",
      "184cd689-4ee4-47cf-9f8a-12233d614326"
    ]
  },
  {
    id: "1a166107-cc66-42dd-96a2-91b1a40f8c62",
    type: "mail",
    from: {
      avatar: "images/avatars/male-06.jpg",
      contact: "Mcguire Crosby <mcguire.crosby@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    date: (/* @__PURE__ */ new Date("Fri Mar 09 2018 04:54:41 GMT+0000 (UTC)")).toISOString(),
    subject: "Eiusmod esse pariatur ipsum elit laborum tempor cillum amet irure labore duis ad amet aliqua",
    content: "Hey Brian,\n\nNisi laborum deserunt eiusmod veniam eiusmod aliqua dolor. Nostrud dolor deserunt occaecat ipsum sit. Sint nisi magna adipisicing duis id velit pariatur magna est tempor ad.\n\nEt ea pariatur duis voluptate irure. Dolore nisi exercitation nulla officia. Ea eiusmod amet aliqua ut ea velit veniam eu aliqua. Commodo est nisi nulla nulla in eu dolor eiusmod enim do consequat aliqua reprehenderit. Proident ad nulla reprehenderit incididunt incididunt ut. Anim deserunt officia ad dolor ex occaecat veniam mollit ex voluptate occaecat ullamco amet duis.\n\nDuis esse cillum in sit deserunt. Consequat ut tempor consequat qui. Laboris esse ex est ipsum et id est in magna tempor amet irure veniam. Occaecat veniam pariatur Lorem pariatur mollit ullamco occaecat. Labore dolor sit irure sit. Sunt sint dolore ex voluptate nisi sit cillum fugiat aliqua dolore dolore irure sunt commodo. Anim ullamco duis consequat sint in nulla voluptate velit irure.\n\nKind Regards,\nMcguire Crosby",
    attachments: [],
    starred: false,
    important: true,
    unread: false,
    folder: "1ee2ea29-9a1f-4c27-b4d2-5e465703b6a0",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7"
    ]
  },
  {
    id: "3fbf66d3-cc2d-4256-a276-ad73da93b7fd",
    type: "mail",
    from: {
      avatar: "images/avatars/male-07.jpg",
      contact: "Walsh Bender <walsh.bender@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: ["Graham Belltower <graham.belltower@company.com>"],
    date: (/* @__PURE__ */ new Date("Thu Nov 22 2018 20:26:17 GMT+0000 (UTC)")).toISOString(),
    subject: "Mollit voluptate eu excepteur nisi labore dolor aliquip magna incididunt ipsum quis ex irure",
    content: "Dear Brian,\n\nOccaecat id commodo aliqua irure officia consectetur exercitation. Dolor ex aliqua velit proident excepteur enim aliqua cupidatat mollit nisi cillum anim reprehenderit. Lorem nulla amet id laborum fugiat mollit ullamco. Cillum in ea ex Lorem cupidatat eiusmod proident. Cillum nulla ullamco excepteur velit eu sint mollit aliqua sint et officia dolor. Est sit laboris non aute aliqua qui non cillum officia cupidatat. Deserunt voluptate ullamco nisi id aute laboris.\n\nNisi sint do consequat mollit fugiat in est quis. Reprehenderit laboris consectetur exercitation anim dolore occaecat sint. Dolore Lorem dolore veniam cillum ea officia.\n\nSint irure sunt sint ullamco. Nisi est dolore ex ea nostrud enim ex deserunt duis enim tempor pariatur. Minim laborum commodo officia officia do deserunt. Officia consequat elit deserunt quis tempor eiusmod irure sint Lorem magna ea culpa. Adipisicing labore sint elit ex commodo esse duis eiusmod. Id quis non fugiat amet incididunt cillum tempor voluptate.\n\nKind Regards,\nWalsh Bender",
    attachments: [
      {
        type: "image/jpeg",
        name: "mystery-forest.jpg",
        size: 15539,
        preview: "mystery-forest_preview.jpg",
        downloadUrl: ""
      },
      {
        type: "application/pdf",
        name: "montly-invoice.pdf",
        size: 243449,
        preview: "pdf",
        downloadUrl: ""
      }
    ],
    starred: false,
    important: false,
    unread: false,
    folder: "1ee2ea29-9a1f-4c27-b4d2-5e465703b6a0",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7",
      "8b035cb5-65c0-4ab1-bb4c-43b0e442d1f3"
    ]
  },
  {
    id: "b460fff2-8530-4464-8c44-744cd3de3bf8",
    type: "mail",
    from: {
      avatar: "images/avatars/male-08.jpg",
      contact: "Baker Guthrie <baker.guthrie@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: ["Graham Belltower <graham.belltower@company.com>"],
    date: (/* @__PURE__ */ new Date("Sat Jul 21 2018 07:51:09 GMT+0000 (UTC)")).toISOString(),
    subject: "In ipsum elit esse laboris qui",
    content: "Hey Brian,\n\nId magna ut laborum cillum nisi mollit reprehenderit consectetur aliquip laborum. Tempor excepteur enim esse officia ex Lorem quis exercitation irure ut nisi ex ipsum. Dolor consectetur sint incididunt reprehenderit reprehenderit magna in. Ullamco labore aute dolor do ad mollit velit aliqua. Amet consectetur adipisicing dolore tempor ea. Cupidatat magna occaecat aliquip non eiusmod dolore aliquip cillum irure.\n\nDolore laborum sunt fugiat officia voluptate consectetur sint enim qui dolor cupidatat consequat cupidatat elit. Commodo Lorem ut ut nostrud duis. Id nisi adipisicing incididunt dolor voluptate sit ad cupidatat voluptate. Labore consequat exercitation sint occaecat eu cupidatat incididunt irure ullamco et aute anim cupidatat. Quis aliqua ut eu sunt id.\n\nDeserunt veniam dolor exercitation labore do enim nisi. Veniam ipsum duis consectetur ex voluptate incididunt dolore laborum ad consequat. Fugiat Lorem pariatur duis nostrud duis aliqua ex do. Nisi sunt eiusmod minim exercitation exercitation aliquip non labore nulla proident nisi ipsum. Sunt elit esse officia cupidatat cupidatat. Ad fugiat est ex fugiat.\n\nKind Regards,\nBaker Guthrie",
    attachments: [],
    starred: true,
    important: false,
    unread: true,
    folder: "1ee2ea29-9a1f-4c27-b4d2-5e465703b6a0",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7",
      "8b035cb5-65c0-4ab1-bb4c-43b0e442d1f3"
    ]
  },
  {
    id: "16c18231-82ea-403d-895a-2a4bc27b61ca",
    type: "mail",
    from: {
      avatar: "images/avatars/female-06.jpg",
      contact: "Olivia Ratliff <olivia.ratliff@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: [
      "Graham Belltower <graham.belltower@company.com>",
      "Julie T. <julie.t@company.com>"
    ],
    date: (/* @__PURE__ */ new Date("Mon Feb 19 2018 13:18:23 GMT+0000 (UTC)")).toISOString(),
    subject: "Mollit ex magna non Lorem id",
    content: "Hi Brian,\n\nNostrud dolore tempor amet nostrud ex aliqua duis. Aliqua enim reprehenderit magna et occaecat. Officia veniam sint fugiat dolor esse ullamco ad non nulla deserunt ullamco commodo occaecat consequat.\n\nSunt nisi reprehenderit nisi incididunt sunt do veniam sint proident duis labore nostrud. Nostrud ad voluptate nisi dolor labore Lorem ex minim nostrud ipsum do. Eiusmod officia sunt tempor duis sunt. In anim in excepteur velit id commodo non nisi aute nisi labore. Ea esse velit eiusmod nulla nisi id eiusmod ex mollit voluptate ad ut ea. Reprehenderit magna quis reprehenderit velit ea veniam magna sint ipsum nulla est officia.\n\nEst ex nostrud quis amet mollit aliquip. Et mollit amet id anim sint amet. Officia do nostrud laboris ullamco cupidatat labore quis exercitation proident aliqua. Eiusmod dolore consectetur nisi deserunt culpa occaecat eu culpa do. Voluptate officia dolore non deserunt. Dolore culpa fugiat eiusmod aliquip. Eu laborum irure fugiat duis esse mollit laborum sit et excepteur irure ipsum.\n\nKind Regards,\nOlivia Ratliff",
    attachments: [],
    starred: false,
    important: false,
    unread: false,
    folder: "1ee2ea29-9a1f-4c27-b4d2-5e465703b6a0",
    labels: ["b167d3c4-f6ed-4ea6-9579-a12f95a9d76e"]
  },
  {
    id: "dfa4d802-b833-49c1-afdc-02116d73e35a",
    type: "mail",
    from: {
      avatar: "images/avatars/male-09.jpg",
      contact: "Schneider Kirby <schneider.kirby@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: [
      "Graham Belltower <graham.belltower@company.com>",
      "Julie T. <julie.t@company.com>"
    ],
    date: (/* @__PURE__ */ new Date("Mon Nov 12 2018 09:55:21 GMT+0000 (UTC)")).toISOString(),
    subject: "Occaecat eiusmod cillum nostrud dolore et proident est esse magna mollit enim",
    content: "Hello Brian,\n\nNon in est voluptate veniam do minim. Ullamco mollit occaecat officia irure tempor deserunt tempor magna voluptate. Id commodo voluptate commodo qui aliqua excepteur aute in eiusmod occaecat quis velit veniam id. Ipsum in sunt aliqua ad eu. Consequat enim commodo ex excepteur pariatur ut.\n\nSunt officia nisi deserunt culpa mollit et duis duis id in nisi. Eiusmod mollit ea qui laborum veniam adipisicing ullamco adipisicing dolor quis enim laboris dolor. Culpa exercitation velit mollit labore incididunt. Veniam deserunt ex ea quis ullamco. Et ex laborum officia non et.\n\nAmet exercitation irure mollit nostrud. Officia dolore nostrud ad do ipsum et laborum consequat ullamco sint consequat amet. Nisi adipisicing ullamco aliqua Lorem quis sint magna veniam. Consequat mollit dolore aliqua ad occaecat. Voluptate aute ea quis sit enim aliquip. Eu dolore nulla minim eu esse minim non cupidatat voluptate laborum do non et. Ut pariatur cillum non labore nostrud amet consectetur consectetur eu cillum.\n\nKind Regards,\nSchneider Kirby",
    attachments: [],
    starred: false,
    important: true,
    unread: false,
    folder: "1ee2ea29-9a1f-4c27-b4d2-5e465703b6a0",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7",
      "8b035cb5-65c0-4ab1-bb4c-43b0e442d1f3",
      "b2d1e4e7-7cfd-4b51-ae59-217a093df754",
      "184cd689-4ee4-47cf-9f8a-12233d614326"
    ]
  },
  {
    id: "84c4ef35-da0d-4d1f-a966-f7f413545b04",
    type: "mail",
    from: {
      avatar: "images/avatars/male-10.jpg",
      contact: "Griffith Keith <griffith.keith@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    date: (/* @__PURE__ */ new Date("Tue Dec 11 2018 06:27:01 GMT+0000 (UTC)")).toISOString(),
    subject: "Ex occaecat qui veniam qui consectetur aliquip ad reprehenderit laborum proident",
    content: "Hi Brian,\n\nExercitation labore cupidatat incididunt velit laboris ipsum anim commodo in do fugiat ea. Incididunt labore quis pariatur laboris sint tempor. Lorem commodo do do ipsum aliqua. Consectetur occaecat ad incididunt consectetur do excepteur ea laborum. Laboris enim proident excepteur ea exercitation deserunt. Sit dolor fugiat velit adipisicing proident ut cillum nisi adipisicing.\n\nConsectetur quis id non mollit minim. Consectetur ut cupidatat enim occaecat sint ex dolor sunt pariatur mollit exercitation. Magna Lorem aliqua nostrud aute ut enim laboris dolore eiusmod est occaecat dolor fugiat occaecat.\n\nCommodo exercitation sit laboris aute deserunt nostrud occaecat do dolore cupidatat consectetur commodo. Cupidatat laborum excepteur voluptate commodo irure. Excepteur enim labore dolore adipisicing ut aute irure. Labore sunt dolor sint magna dolor consequat. Nulla deserunt mollit cillum adipisicing enim est voluptate minim pariatur aliqua elit sint do eiusmod.\n\nCheers!\nGriffith Keith",
    attachments: [],
    starred: false,
    important: true,
    unread: true,
    folder: "1ee2ea29-9a1f-4c27-b4d2-5e465703b6a0",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7",
      "8b035cb5-65c0-4ab1-bb4c-43b0e442d1f3",
      "b2d1e4e7-7cfd-4b51-ae59-217a093df754"
    ]
  },
  {
    id: "0c78627f-5cbe-4d21-8491-455e98bf6f69",
    type: "mail",
    from: {
      avatar: "images/avatars/female-07.jpg",
      contact: "Beverly Pugh <beverly.pugh@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: ["Graham Belltower <graham.belltower@company.com>"],
    date: (/* @__PURE__ */ new Date("Sun Oct 21 2018 14:36:41 GMT+0000 (UTC)")).toISOString(),
    subject: "Mollit irure adipisicing in consectetur aliqua labore pariatur minim",
    content: "Hello Brian,\n\nAute in dolore irure non exercitation. Laborum enim qui nulla irure enim id labore excepteur eiusmod consectetur consequat voluptate exercitation. In laborum reprehenderit incididunt occaecat laborum sit velit.\n\nNulla aliquip labore mollit qui dolore consequat. Enim sunt est nisi reprehenderit tempor amet culpa ex. Eiusmod esse ullamco veniam sunt anim nisi dolore cupidatat id aute.\n\nLorem commodo Lorem qui aliquip eiusmod nisi cupidatat occaecat. Aliqua eiusmod nisi laboris elit commodo qui. Voluptate veniam aliquip ad et pariatur voluptate. Officia non ea laboris dolor excepteur ullamco Lorem dolor esse aute excepteur cillum magna. Cillum et anim adipisicing occaecat consectetur. Non aute culpa pariatur aute fugiat in sint exercitation cillum laborum est non.\n\nBest Regards,\nBeverly Pugh",
    attachments: [],
    starred: true,
    important: true,
    unread: false,
    folder: "1ee2ea29-9a1f-4c27-b4d2-5e465703b6a0",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7",
      "8b035cb5-65c0-4ab1-bb4c-43b0e442d1f3",
      "b2d1e4e7-7cfd-4b51-ae59-217a093df754"
    ]
  },
  {
    id: "3d382fb3-b5f5-43e3-b0bc-f2a6f29a5ee6",
    type: "mail",
    from: {
      avatar: "images/avatars/female-08.jpg",
      contact: "Ila Mclaughlin <ila.mclaughlin@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    date: (/* @__PURE__ */ new Date("Wed Aug 01 2018 13:55:15 GMT+0000 (UTC)")).toISOString(),
    subject: "Enim proident sit dolor officia sit magna ea tempor",
    content: "Hey Brian,\n\nExcepteur ut minim qui minim mollit. Tempor cupidatat Lorem sint aliquip excepteur sunt est velit nostrud ea. Velit esse ea irure veniam. Dolore tempor nisi occaecat tempor laborum et nulla enim do sint.\n\nId officia ea ad ad occaecat occaecat consequat veniam ad magna cillum incididunt quis tempor. Veniam reprehenderit qui excepteur sint sunt proident ipsum. Exercitation nostrud eiusmod incididunt consequat enim velit sit qui veniam consectetur. Est exercitation tempor ea sunt enim nulla ea proident officia pariatur. Dolor aute exercitation cillum dolore eu sunt veniam id dolore voluptate ut nostrud deserunt. Eiusmod labore anim veniam labore anim nostrud ad nulla labore consequat enim nisi.\n\nLaboris fugiat quis aute duis reprehenderit ut pariatur non incididunt excepteur ea ut. Nisi deserunt tempor Lorem commodo ad pariatur aliquip duis tempor officia irure. Eu fugiat dolore exercitation veniam cillum.\n\nBest Regards,\nIla Mclaughlin",
    attachments: [],
    starred: true,
    important: true,
    unread: true,
    folder: "1ee2ea29-9a1f-4c27-b4d2-5e465703b6a0",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7",
      "8b035cb5-65c0-4ab1-bb4c-43b0e442d1f3",
      "b2d1e4e7-7cfd-4b51-ae59-217a093df754",
      "184cd689-4ee4-47cf-9f8a-12233d614326"
    ]
  },
  {
    id: "7fd27d57-ccca-432d-af26-c3b609448fb7",
    type: "mail",
    from: {
      avatar: "images/avatars/female-09.jpg",
      contact: "Jenna Manning <jenna.manning@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: [
      "Graham Belltower <graham.belltower@company.com>",
      "Julie T. <julie.t@company.com>"
    ],
    date: (/* @__PURE__ */ new Date("Sat Dec 08 2018 20:09:08 GMT+0000 (UTC)")).toISOString(),
    subject: "Quis deserunt excepteur eiusmod reprehenderit enim exercitation voluptate anim",
    content: "Hi Brian,\n\nExcepteur qui anim sint elit. Ad et nostrud non et reprehenderit duis pariatur irure deserunt commodo sit reprehenderit tempor reprehenderit. Aliquip duis mollit duis consequat aute non id do irure. Aute esse sunt labore et voluptate sunt adipisicing tempor. Occaecat tempor exercitation sit duis fugiat ea irure laborum. Consequat quis officia magna fugiat ex.\n\nAliqua non in elit ipsum enim duis dolore laboris in esse duis sunt ea anim. Et laborum sunt in anim ut consequat laborum irure. Deserunt ex veniam laborum tempor cupidatat amet mollit non labore.\n\nDuis veniam occaecat eiusmod velit Lorem ad. Commodo cillum minim id pariatur cupidatat tempor reprehenderit commodo. Dolor anim pariatur nulla qui ut magna nisi reprehenderit sit cupidatat est do. Esse enim Lorem laboris amet reprehenderit pariatur et nostrud minim pariatur. Et dolore qui quis ex consequat consectetur enim veniam veniam veniam magna.\n\nKind Regards,\nJenna Manning",
    attachments: [],
    starred: false,
    important: true,
    unread: true,
    folder: "1ee2ea29-9a1f-4c27-b4d2-5e465703b6a0",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7",
      "8b035cb5-65c0-4ab1-bb4c-43b0e442d1f3"
    ]
  },
  {
    id: "18ba20d3-d7bc-4fc7-85dd-2db4db3196fe",
    type: "mail",
    from: {
      avatar: "images/avatars/female-10.jpg",
      contact: "Deann Hansen <deann.hansen@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: ["Graham Belltower <graham.belltower@company.com>"],
    date: (/* @__PURE__ */ new Date("Thu Jan 10 2019 12:13:47 GMT+0000 (UTC)")).toISOString(),
    subject: "Duis minim quis in labore voluptate laboris do consequat eu anim sit deserunt incididunt",
    content: "Dear Brian,\n\nPariatur ipsum ipsum aute dolore ipsum ea mollit labore duis tempor aliquip et reprehenderit. Pariatur amet esse minim ad esse aute excepteur in. Quis eu laborum dolore ullamco ipsum incididunt fugiat non laborum est. Duis anim incididunt Lorem Lorem nulla fugiat qui reprehenderit pariatur. Ut est duis in quis excepteur officia. Ullamco excepteur dolor cillum non aliqua non aliqua sit cillum ipsum laboris proident sint. Nulla in dolore deserunt proident commodo enim occaecat cupidatat reprehenderit incididunt dolor laborum do aliqua.\n\nLaboris velit tempor non adipisicing pariatur culpa culpa amet sint deserunt enim. Est aute sit officia quis ex do id ex deserunt ea. Velit in dolor quis exercitation proident mollit sit ad veniam nisi. Cupidatat esse exercitation commodo velit. Commodo veniam occaecat elit deserunt. Sint adipisicing culpa aute occaecat nisi id consequat nisi.\n\nAdipisicing veniam deserunt ipsum mollit. Adipisicing laborum exercitation sint nulla veniam ex ut dolor. Fugiat do ad proident tempor. Id ipsum ex elit id quis laboris ut irure nulla minim reprehenderit minim dolor sunt. Anim nisi cupidatat sint minim fugiat sit sit cupidatat laborum excepteur duis exercitation anim commodo.\n\nBest Regards,\nDeann Hansen",
    attachments: [],
    starred: true,
    important: false,
    unread: false,
    folder: "1ee2ea29-9a1f-4c27-b4d2-5e465703b6a0",
    labels: ["b167d3c4-f6ed-4ea6-9579-a12f95a9d76e"]
  },
  {
    id: "476cb471-b3c1-4235-b5ef-3066b028483d",
    type: "mail",
    from: {
      avatar: "images/avatars/female-11.jpg",
      contact: "Tisha Moore <tisha.moore@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    date: (/* @__PURE__ */ new Date("Wed Mar 07 2018 05:58:09 GMT+0000 (UTC)")).toISOString(),
    subject: "Qui irure ea qui labore fugiat ad voluptate esse",
    content: "Hey Brian,\n\nAnim ex voluptate in amet duis labore. Esse id ut exercitation labore velit irure amet laborum. Aliqua ex et est reprehenderit amet quis anim ut qui dolore et sit ea amet.\n\nEnim incididunt sunt deserunt voluptate tempor ut minim laborum pariatur Lorem esse ex cillum. Irure proident amet labore aliqua elit excepteur. Pariatur fugiat sit duis ut in elit.\n\nLorem proident duis occaecat eu proident reprehenderit incididunt amet magna officia et ut. Nisi do labore sit sit eiusmod nostrud consectetur proident enim. Ipsum culpa proident consequat nostrud.\n\nCheers!\nTisha Moore",
    attachments: [],
    starred: true,
    important: true,
    unread: true,
    folder: "1ee2ea29-9a1f-4c27-b4d2-5e465703b6a0",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7",
      "8b035cb5-65c0-4ab1-bb4c-43b0e442d1f3",
      "b2d1e4e7-7cfd-4b51-ae59-217a093df754"
    ]
  },
  {
    id: "a8aea501-17e9-4e40-b3a9-04f33b13cb8a",
    type: "mail",
    from: {
      avatar: "images/avatars/female-12.jpg",
      contact: "Janette Elliott <janette.elliott@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: [
      "Graham Belltower <graham.belltower@company.com>",
      "Julie T. <julie.t@company.com>"
    ],
    date: (/* @__PURE__ */ new Date("Mon May 07 2018 20:07:15 GMT+0000 (UTC)")).toISOString(),
    subject: "Veniam amet voluptate Lorem qui ut id culpa mollit reprehenderit est",
    content: "Hi Brian,\n\nAute veniam laborum ad veniam adipisicing pariatur pariatur eiusmod nulla. Labore ullamco cillum cillum eiusmod id ex occaecat cupidatat ea consequat consequat Lorem amet consectetur. Ullamco irure enim officia ut nostrud. Nisi enim aliqua excepteur voluptate et amet commodo aliqua nulla. Adipisicing in eiusmod in commodo veniam id ea ad dolor sunt pariatur ea non consequat.\n\nDeserunt mollit dolor quis irure ullamco. Consectetur Lorem ipsum ex proident aute aute occaecat adipisicing mollit. Lorem mollit consectetur ad dolor enim mollit non. Laboris pariatur laborum minim magna culpa fugiat ad. Duis ea Lorem cillum adipisicing Lorem.\n\nEnim laboris laboris magna culpa. Consectetur anim occaecat commodo labore nostrud id pariatur. Dolore aliquip irure laborum pariatur mollit sit aute minim in nisi.\n\nCheers!\nJanette Elliott",
    attachments: [],
    starred: false,
    important: true,
    unread: true,
    folder: "1ee2ea29-9a1f-4c27-b4d2-5e465703b6a0",
    labels: ["b167d3c4-f6ed-4ea6-9579-a12f95a9d76e"]
  },
  {
    id: "cb55f824-40ed-4696-afaa-f3f8d3fb8614",
    type: "mail",
    from: {
      avatar: "images/avatars/female-13.jpg",
      contact: "Bettie Wyatt <bettie.wyatt@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    date: (/* @__PURE__ */ new Date("Mon Dec 03 2018 17:07:32 GMT+0000 (UTC)")).toISOString(),
    subject: "Est aliquip nisi pariatur cupidatat veniam qui cillum eu sit ullamco voluptate minim",
    content: "Dear Brian,\n\nEsse laboris commodo ullamco dolor ipsum. Aute cillum velit in aliquip ad adipisicing pariatur ex tempor cillum eu cupidatat laborum. Consectetur aute cupidatat incididunt quis minim elit cupidatat.\n\nEiusmod ea eiusmod nostrud qui amet pariatur laboris non. Proident dolor et pariatur id duis minim enim. Aute ut dolore cupidatat velit sunt.\n\nVeniam magna laborum tempor nostrud aliqua tempor. Pariatur in do id do exercitation non dolor. In elit velit ad Lorem veniam minim Lorem voluptate sint ullamco consectetur aute est. Enim sunt reprehenderit id nisi id. Eu sint incididunt nulla consequat veniam reprehenderit.\n\nBest Regards,\nBettie Wyatt",
    attachments: [],
    starred: true,
    important: false,
    unread: false,
    folder: "fbdc8e79-a0c4-4a27-bc98-9c81ee7a86e5",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7"
    ]
  },
  {
    id: "92dddecc-4758-4c48-8ef4-a59de4ab0705",
    type: "mail",
    from: {
      avatar: "images/avatars/male-11.jpg",
      contact: "Hardy Dale <hardy.dale@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: [
      "Graham Belltower <graham.belltower@company.com>",
      "Julie T. <julie.t@company.com>"
    ],
    date: (/* @__PURE__ */ new Date("Fri Nov 16 2018 21:53:34 GMT+0000 (UTC)")).toISOString(),
    subject: "Aute commodo nostrud nisi quis sunt ex",
    content: "Dear Brian,\n\nDeserunt laborum elit in dolor. Enim duis occaecat minim dolor ex. Consequat et anim mollit nisi ex exercitation culpa non esse velit veniam ad. Sit excepteur nulla laboris reprehenderit. Consequat labore cupidatat Lorem proident proident laborum adipisicing aliqua commodo voluptate esse officia.\n\nAliqua adipisicing sint Lorem id in ad qui. Reprehenderit ullamco labore consectetur commodo Lorem eiusmod culpa. Lorem voluptate ipsum anim ipsum do ullamco eiusmod ad est proident officia. Ut anim deserunt minim laborum minim ea et minim non ad ut. Non ipsum et enim pariatur.\n\nNulla voluptate consectetur id aute ad officia incididunt velit voluptate aliqua deserunt ex. Dolore commodo labore aliqua aliquip magna ipsum laboris cupidatat velit. Et elit labore eu id laborum. Ipsum est pariatur irure aute magna. Fugiat sit voluptate eiusmod consequat.\n\nKind Regards,\nHardy Dale",
    attachments: [],
    starred: false,
    important: true,
    unread: false,
    folder: "fbdc8e79-a0c4-4a27-bc98-9c81ee7a86e5",
    labels: ["b167d3c4-f6ed-4ea6-9579-a12f95a9d76e"]
  },
  {
    id: "3f3f6154-a8ff-40d6-8b57-4c0f73d2cd8b",
    type: "mail",
    from: {
      avatar: "images/avatars/female-14.jpg",
      contact: "Eileen Bush <eileen.bush@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    date: (/* @__PURE__ */ new Date("Sat Feb 24 2018 12:22:13 GMT+0000 (UTC)")).toISOString(),
    subject: "Lorem deserunt dolor sunt sit sit mollit",
    content: "Hey Brian,\n\nEu Lorem laborum qui elit id consequat ipsum ex. Minim aute proident aliquip non esse quis voluptate nisi enim. Velit Lorem ea exercitation adipisicing amet deserunt pariatur Lorem amet anim dolore ipsum. Tempor magna voluptate laboris fugiat. Elit ea fugiat cillum Lorem fugiat ipsum officia tempor sit excepteur pariatur minim sint proident.\n\nDeserunt adipisicing dolor do fugiat commodo dolor sit ut culpa ea officia Lorem officia. Nulla elit tempor nostrud nulla. Amet tempor deserunt labore irure est ut officia ullamco velit. Officia tempor anim ex dolor consequat dolore anim do velit qui laboris nisi ipsum. Aute ipsum aliqua ut ullamco laborum pariatur minim mollit consectetur ipsum.\n\nNisi commodo labore nostrud veniam ut aute dolore veniam in. Consectetur commodo proident incididunt aliqua reprehenderit ex nostrud est magna elit reprehenderit. Proident veniam sint occaecat ullamco labore aliquip eiusmod duis sint. Ea ex id eiusmod eu elit ullamco aliqua. Dolore consectetur magna eu voluptate ea aliquip eu et veniam ullamco deserunt magna.\n\nKind Regards,\nEileen Bush",
    attachments: [],
    starred: true,
    important: false,
    unread: false,
    folder: "fbdc8e79-a0c4-4a27-bc98-9c81ee7a86e5",
    labels: ["b167d3c4-f6ed-4ea6-9579-a12f95a9d76e"]
  },
  {
    id: "2c80bcbe-c9cd-4eec-83fa-b9994713a784",
    type: "mail",
    from: {
      avatar: "images/avatars/female-15.jpg",
      contact: "Melody Mcintosh <melody.mcintosh@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: ["Graham Belltower <graham.belltower@company.com>"],
    date: (/* @__PURE__ */ new Date("Fri Jul 27 2018 07:20:48 GMT+0000 (UTC)")).toISOString(),
    subject: "Reprehenderit consequat aliquip duis incididunt excepteur aliquip excepteur velit labore laboris",
    content: "Hey Brian,\n\nEnim ea ad veniam qui magna aliqua ipsum id anim adipisicing voluptate id velit. Elit pariatur magna quis ea adipisicing deserunt officia consectetur in magna culpa sint. Culpa cupidatat anim amet ea elit adipisicing sunt. Incididunt nulla est non cupidatat sit excepteur consectetur culpa labore in sit. Aliqua cupidatat aute qui esse labore aliquip sit exercitation aliqua est magna sint nisi quis.\n\nTempor laboris ullamco culpa dolor ipsum ad aliqua consequat anim reprehenderit aliqua. Proident elit mollit commodo ut Lorem incididunt cillum Lorem eu adipisicing fugiat. Sint velit eiusmod magna occaecat tempor nulla ex ea.\n\nDolore est proident ea deserunt dolore non elit Lorem ipsum sint. Quis ut pariatur cupidatat deserunt. Aliqua sunt labore dolore officia ullamco exercitation id excepteur est et eu consequat esse consectetur. Veniam eu culpa reprehenderit id fugiat aliqua anim id esse commodo velit labore adipisicing. In anim Lorem reprehenderit occaecat do laboris veniam cillum incididunt aute dolor id duis. Est pariatur Lorem consectetur proident est culpa ullamco ea elit incididunt veniam enim elit ipsum.\n\nCheers!\nMelody Mcintosh",
    attachments: [],
    starred: false,
    important: true,
    unread: false,
    folder: "fbdc8e79-a0c4-4a27-bc98-9c81ee7a86e5",
    labels: ["b167d3c4-f6ed-4ea6-9579-a12f95a9d76e"]
  },
  {
    id: "2a44e5b7-e01c-43db-b586-540390f46f95",
    type: "mail",
    from: {
      avatar: "images/avatars/male-12.jpg",
      contact: "Dale Talley <dale.talley@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: [
      "Graham Belltower <graham.belltower@company.com>",
      "Julie T. <julie.t@company.com>"
    ],
    date: (/* @__PURE__ */ new Date("Tue Jan 02 2018 07:20:01 GMT+0000 (UTC)")).toISOString(),
    subject: "Aute occaecat est amet adipisicing aute voluptate incididunt adipisicing pariatur esse anim ipsum labore",
    content: "Hello Brian,\n\nNostrud deserunt do anim pariatur adipisicing cillum enim. Reprehenderit ex ut ullamco deserunt non voluptate laboris eu deserunt sint incididunt anim. Minim non amet quis officia ullamco non do id. Aute deserunt enim laborum elit magna veniam do. Id Lorem mollit eu id ex eiusmod fugiat ad sint quis sunt ipsum eu exercitation. Eiusmod occaecat sit esse cupidatat occaecat quis commodo magna qui. Non consectetur non ad cillum minim eiusmod magna ad nulla.\n\nAd esse anim nostrud do. Officia eiusmod eu reprehenderit do ipsum velit enim. In ullamco ex commodo laboris ut adipisicing elit sit occaecat fugiat officia. Commodo duis aliqua minim nisi.\n\nDuis proident mollit ea do Lorem excepteur. Commodo ex duis minim aute Lorem. Est in quis aliquip in qui minim excepteur aliqua dolor adipisicing. Laborum do tempor voluptate anim elit nisi minim sunt cupidatat.\n\nKind Regards,\nDale Talley",
    attachments: [],
    starred: true,
    important: true,
    unread: false,
    folder: "fbdc8e79-a0c4-4a27-bc98-9c81ee7a86e5",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7",
      "8b035cb5-65c0-4ab1-bb4c-43b0e442d1f3"
    ]
  },
  {
    id: "be1e969d-d52f-4824-83e5-c184b042b601",
    type: "mail",
    from: {
      avatar: "images/avatars/male-13.jpg",
      contact: "Britt Massey <britt.massey@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: ["Graham Belltower <graham.belltower@company.com>"],
    date: (/* @__PURE__ */ new Date("Tue Oct 09 2018 00:12:17 GMT+0000 (UTC)")).toISOString(),
    subject: "Cillum tempor cillum ex esse eu Lorem",
    content: "Hey Brian,\n\nVelit laboris excepteur nulla aliquip excepteur. Culpa incididunt magna minim non aute incididunt officia cillum quis labore pariatur tempor amet. Eiusmod nulla consectetur mollit anim anim aute quis reprehenderit sint eu. Voluptate deserunt voluptate est adipisicing adipisicing qui ullamco ex officia eiusmod. Velit nostrud Lorem enim aute sint anim cupidatat excepteur ea aliqua et. Minim et do irure ut commodo. Cillum quis nulla commodo ipsum tempor.\n\nCulpa duis laboris anim nostrud ipsum laboris exercitation exercitation ut. Dolore duis laborum do sunt non. Eiusmod irure consectetur sint do. Officia adipisicing est id reprehenderit labore.\n\nConsequat eiusmod est labore commodo Lorem ullamco cupidatat id Lorem eiusmod amet do enim qui. Consequat ad ipsum elit non esse labore. Cupidatat eu reprehenderit ad est cillum esse. Nulla eiusmod eiusmod mollit culpa quis sint sit elit aliquip. Incididunt quis consequat amet ipsum amet. Ut officia eu consectetur incididunt adipisicing tempor aute. Reprehenderit labore consequat excepteur esse adipisicing.\n\nBest Regards,\nBritt Massey",
    attachments: [],
    starred: true,
    important: false,
    unread: false,
    folder: "fbdc8e79-a0c4-4a27-bc98-9c81ee7a86e5",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7",
      "8b035cb5-65c0-4ab1-bb4c-43b0e442d1f3",
      "b2d1e4e7-7cfd-4b51-ae59-217a093df754",
      "184cd689-4ee4-47cf-9f8a-12233d614326"
    ]
  },
  {
    id: "8c7c9bff-6ca6-47ba-9242-cd9b1715eac7",
    type: "mail",
    from: {
      avatar: "images/avatars/female-16.jpg",
      contact: "Madelyn Haynes <madelyn.haynes@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: [
      "Graham Belltower <graham.belltower@company.com>",
      "Julie T. <julie.t@company.com>"
    ],
    date: (/* @__PURE__ */ new Date("Sat Mar 03 2018 18:08:05 GMT+0000 (UTC)")).toISOString(),
    subject: "Irure enim minim dolore et",
    content: "Dear Brian,\n\nSit incididunt Lorem ad cupidatat eiusmod dolore velit. Aliquip dolore quis qui irure consequat velit. Dolor incididunt est magna sit.\n\nConsequat officia nulla culpa officia eiusmod sint. Proident elit irure pariatur eiusmod enim mollit mollit qui. Amet ullamco aliquip sunt fugiat proident est nulla ex ex est ipsum officia. Exercitation qui veniam duis ut veniam aliqua excepteur.\n\nDeserunt ipsum eiusmod labore do minim enim anim. Aliquip mollit magna do eu. Qui duis consectetur exercitation veniam qui. Ea duis nisi aute aute occaecat deserunt magna.\n\nBest Regards,\nMadelyn Haynes",
    attachments: [],
    starred: false,
    important: false,
    unread: false,
    folder: "fbdc8e79-a0c4-4a27-bc98-9c81ee7a86e5",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7",
      "8b035cb5-65c0-4ab1-bb4c-43b0e442d1f3",
      "b2d1e4e7-7cfd-4b51-ae59-217a093df754"
    ]
  },
  {
    id: "afd52898-82e9-4fd4-8d6a-2391ec817e2a",
    type: "mail",
    from: {
      avatar: "images/avatars/male-14.jpg",
      contact: "Rowland Sweet <rowland.sweet@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: [
      "Graham Belltower <graham.belltower@company.com>",
      "Julie T. <julie.t@company.com>"
    ],
    date: (/* @__PURE__ */ new Date("Fri Jun 22 2018 14:39:18 GMT+0000 (UTC)")).toISOString(),
    subject: "Sunt et proident ullamco qui id irure occaecat anim aute elit amet",
    content: "Hey Brian,\n\nLaborum sunt labore esse occaecat duis magna aliquip dolor. Cupidatat irure aute enim minim nisi reprehenderit voluptate occaecat exercitation anim est quis. Magna esse ipsum tempor consectetur non excepteur nostrud. Est consectetur tempor deserunt magna anim culpa sint id elit. Et ullamco non non aute id cupidatat proident aute dolor exercitation excepteur.\n\nEx officia quis irure enim eu in qui sit non. Aliqua fugiat ut sint deserunt veniam quis qui cillum dolor commodo ea exercitation. Deserunt id velit deserunt Lorem elit elit non. Voluptate fugiat est adipisicing non eiusmod voluptate. Reprehenderit tempor id quis cillum nulla sint sit ipsum veniam aliqua.\n\nPariatur dolore ipsum proident irure elit dolore pariatur occaecat qui adipisicing occaecat et aliquip. Ex quis mollit ad Lorem laboris dolor incididunt. Ex consectetur nulla nulla labore dolor. Cillum aliqua duis nulla quis sit laborum magna et exercitation anim deserunt incididunt elit.\n\nBest Regards,\nRowland Sweet",
    attachments: [],
    starred: false,
    important: true,
    unread: true,
    folder: "0197c436-2ef3-424d-b546-8b7f49186e15",
    labels: []
  },
  {
    id: "e43d83f0-51ea-4da9-b18f-0de380b5156a",
    type: "mail",
    from: {
      avatar: "images/avatars/female-17.jpg",
      contact: "Fern Shaw <fern.shaw@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: ["Graham Belltower <graham.belltower@company.com>"],
    date: (/* @__PURE__ */ new Date("Wed Feb 21 2018 06:23:12 GMT+0000 (UTC)")).toISOString(),
    subject: "Nisi esse incididunt nisi aliqua aliqua laborum occaecat quis duis minim",
    content: "Dear Brian,\n\nCommodo magna officia qui labore ullamco nostrud. Labore nostrud consequat quis laborum esse velit dolore eu. Esse officia duis nisi dolore culpa elit velit excepteur irure in excepteur officia. Ad anim magna excepteur deserunt aute dolore nulla dolore aute tempor laboris adipisicing. Sit culpa culpa occaecat nostrud magna labore sunt pariatur exercitation qui. Esse ea mollit non sint cupidatat aliqua mollit qui ex tempor exercitation labore minim. Veniam aliquip exercitation ad ex.\n\nOfficia nulla exercitation ullamco proident eu amet occaecat Lorem est est non nulla tempor. Exercitation occaecat ipsum sunt tempor et enim nisi reprehenderit Lorem. Culpa elit ea aliqua est. Et exercitation aliquip aliqua et magna et magna exercitation aliqua exercitation pariatur occaecat.\n\nUllamco ea esse consequat nisi et officia veniam. Duis esse ullamco cupidatat do eiusmod aliquip velit irure sit ad irure officia. Irure veniam sunt aliqua elit ex Lorem qui ullamco qui enim dolore aliquip consectetur quis.\n\nBest Regards,\nFern Shaw",
    attachments: [],
    starred: true,
    important: false,
    unread: true,
    folder: "0197c436-2ef3-424d-b546-8b7f49186e15",
    labels: []
  },
  {
    id: "4e1d4820-e907-405a-990a-4a5772f482ad",
    type: "mail",
    from: {
      avatar: "images/avatars/female-18.jpg",
      contact: "Lorraine Ballard <lorraine.ballard@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: ["Graham Belltower <graham.belltower@company.com>"],
    date: (/* @__PURE__ */ new Date("Sun Jun 24 2018 13:46:02 GMT+0000 (UTC)")).toISOString(),
    subject: "Velit nisi ut laboris id et do aliquip",
    content: "Hey Brian,\n\nOccaecat fugiat minim dolor excepteur. Ullamco quis cillum consectetur mollit id. Duis eiusmod occaecat consectetur duis laborum aliqua occaecat cillum laboris proident cillum. Amet in elit dolore quis amet cupidatat id laboris Lorem do velit occaecat nostrud ad. Eu est pariatur nulla est proident Lorem quis velit fugiat nisi quis. Dolor mollit occaecat duis veniam amet Lorem tempor eiusmod. Consequat ullamco deserunt nulla occaecat officia est qui pariatur velit.\n\nConsequat culpa do ullamco est et veniam incididunt. Exercitation laborum eu proident ex nostrud minim eu proident ad Lorem aute est non ea. Ut quis mollit anim sunt et labore deserunt tempor magna exercitation irure dolor incididunt elit. Mollit amet ad Lorem eiusmod cupidatat adipisicing nostrud. Non dolor ad occaecat officia in dolor. Irure sint quis aliqua deserunt dolore qui sunt cupidatat quis aliqua eu Lorem. Elit sint incididunt do ea amet laborum.\n\nReprehenderit reprehenderit veniam sit exercitation. Tempor ea adipisicing consequat nostrud sint irure nostrud. Dolor est officia adipisicing dolor et pariatur proident quis sint pariatur exercitation commodo. Esse id quis qui aliquip quis.\n\nKind Regards,\nLorraine Ballard",
    attachments: [],
    starred: false,
    important: true,
    unread: false,
    folder: "0197c436-2ef3-424d-b546-8b7f49186e15",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7",
      "8b035cb5-65c0-4ab1-bb4c-43b0e442d1f3"
    ]
  },
  {
    id: "f0f2d069-50a0-484f-a4a2-3a272fcb433b",
    type: "mail",
    from: {
      avatar: "images/avatars/male-15.jpg",
      contact: "Jennings Franklin <jennings.franklin@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: [
      "Graham Belltower <graham.belltower@company.com>",
      "Julie T. <julie.t@company.com>"
    ],
    date: (/* @__PURE__ */ new Date("Thu Apr 26 2018 06:34:54 GMT+0000 (UTC)")).toISOString(),
    subject: "Enim esse aliqua elit incididunt aliqua mollit amet quis occaecat veniam occaecat proident",
    content: "Hey Brian,\n\nConsectetur laboris voluptate cillum tempor aliqua ullamco sunt do est ea non mollit cupidatat cillum. Aute aliqua eiusmod proident officia enim duis est elit. Fugiat occaecat culpa aliqua in velit elit duis reprehenderit enim dolor eiusmod sit incididunt. Commodo velit ipsum elit amet qui laboris culpa aliquip ad dolor sit. Commodo laboris laborum eiusmod qui in esse excepteur laboris in ad proident deserunt adipisicing. Esse aliqua sit ad veniam sint et culpa minim labore.\n\nUt officia sint nulla enim consectetur eiusmod. Minim nulla cillum aliquip elit ad pariatur ea nulla. Anim occaecat nulla irure ea nisi dolor cupidatat et consectetur id tempor aliqua magna esse. Laborum culpa incididunt cillum excepteur. Nulla laborum dolore qui sit laboris et mollit labore ea magna occaecat. Dolore cillum fugiat eiusmod Lorem ea veniam.\n\nEt cillum enim nulla anim ipsum labore quis amet exercitation occaecat. Et sint eiusmod sint minim do. In esse id ea ut excepteur amet minim Lorem id consectetur cupidatat est. Dolor pariatur commodo eu est. Consequat aliquip est qui mollit excepteur ex do adipisicing.\n\nKind Regards,\nJennings Franklin",
    attachments: [],
    starred: false,
    important: false,
    unread: true,
    folder: "0197c436-2ef3-424d-b546-8b7f49186e15",
    labels: []
  },
  {
    id: "7c93dbde-8b56-43a3-ade1-b132906679c4",
    type: "mail",
    from: {
      avatar: "images/avatars/female-19.jpg",
      contact: "Colette Cole <colette.cole@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    date: (/* @__PURE__ */ new Date("Fri Sep 21 2018 08:37:21 GMT+0000 (UTC)")).toISOString(),
    subject: "Sit non consequat et fugiat id laboris",
    content: "Hello Brian,\n\nIpsum non nisi ut do occaecat pariatur et duis eiusmod sint. Consequat do eu adipisicing fugiat incididunt dolor proident cupidatat reprehenderit dolor proident. Duis non eiusmod sit enim esse fugiat sit amet tempor ea ad adipisicing quis aliquip. Labore in cillum ipsum officia est irure incididunt fugiat id in eu Lorem. Occaecat eu veniam voluptate fugiat fugiat laborum veniam voluptate. Do exercitation mollit fugiat duis deserunt. Mollit aute non quis ex officia non amet amet dolor ullamco sint sunt.\n\nDolore incididunt ad ad anim minim. Sunt reprehenderit duis occaecat labore dolore irure elit. Excepteur laboris et proident nulla magna duis et. Eiusmod veniam ea culpa cillum incididunt ad officia. Labore in non voluptate ullamco velit ex aliqua aliqua amet nisi incididunt exercitation. Labore qui est adipisicing labore anim officia ullamco aliquip anim commodo ipsum mollit.\n\nQuis cillum non consequat ea esse laboris duis mollit et id consectetur nisi eu pariatur. In fugiat culpa aliqua eu culpa ea nisi incididunt. Pariatur excepteur laborum nulla ea ex reprehenderit ea deserunt.\n\nKind Regards,\nColette Cole",
    attachments: [],
    starred: false,
    important: false,
    unread: false,
    folder: "0197c436-2ef3-424d-b546-8b7f49186e15",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7",
      "8b035cb5-65c0-4ab1-bb4c-43b0e442d1f3"
    ]
  },
  {
    id: "7335d11d-04b1-4250-817a-6fdf3e099239",
    type: "mail",
    from: {
      avatar: "images/avatars/female-20.jpg",
      contact: "Kim Carlson <kim.carlson@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: ["Graham Belltower <graham.belltower@company.com>"],
    date: (/* @__PURE__ */ new Date("Wed Nov 28 2018 07:57:15 GMT+0000 (UTC)")).toISOString(),
    subject: "Ullamco ad consectetur ut esse",
    content: "Dear Brian,\n\nReprehenderit aliqua nulla tempor nostrud. Excepteur nostrud nostrud velit magna pariatur nisi anim excepteur consectetur proident irure cillum dolore et. Nostrud esse deserunt veniam exercitation et dolore fugiat tempor. Sit duis adipisicing sint aliqua. Ipsum anim sit velit ipsum ipsum occaecat sit ea Lorem ex pariatur. Anim laboris exercitation tempor officia in enim.\n\nEsse sunt aliquip nulla ipsum laborum irure minim Lorem eiusmod ut et occaecat. Ipsum deserunt nulla duis nisi dolore. Aliquip ea exercitation magna esse laboris consectetur culpa labore reprehenderit ipsum dolor veniam sunt. In consequat cillum irure elit sunt ea Lorem mollit sint tempor reprehenderit laborum velit consequat. Proident aute deserunt Lorem tempor labore incididunt eu adipisicing proident nulla anim exercitation. Laborum adipisicing id id aliquip. Velit proident consectetur consequat nisi dolor aliquip mollit ad officia proident ea nostrud ea.\n\nProident sunt velit adipisicing voluptate amet est dolor reprehenderit deserunt laboris ullamco velit. Veniam nulla esse cupidatat magna ut consequat in et ipsum mollit ad non Lorem. Sit duis qui eiusmod exercitation commodo voluptate laborum. Exercitation consequat mollit nisi mollit deserunt sunt. Fugiat incididunt magna ad nostrud non amet incididunt veniam et veniam nulla ipsum fugiat.\n\nBest Regards,\nKim Carlson",
    attachments: [],
    starred: true,
    important: false,
    unread: false,
    folder: "0197c436-2ef3-424d-b546-8b7f49186e15",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7",
      "8b035cb5-65c0-4ab1-bb4c-43b0e442d1f3"
    ]
  },
  {
    id: "e9dd17ec-4fc3-424e-89e5-c58d9d235764",
    type: "mail",
    from: {
      avatar: "images/avatars/female-01.jpg",
      contact: "Rena Park <rena.park@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: ["Graham Belltower <graham.belltower@company.com>"],
    date: (/* @__PURE__ */ new Date("Sat Oct 13 2018 12:57:58 GMT+0000 (UTC)")).toISOString(),
    subject: "Nulla qui anim ullamco officia elit",
    content: "Hi Brian,\n\nDuis qui qui ad aliqua ad incididunt non exercitation do qui aliqua quis. Eiusmod amet irure minim fugiat ex et sint. Occaecat laboris minim eu exercitation nostrud commodo qui deserunt. Sunt voluptate eiusmod minim commodo. Est excepteur est irure laborum mollit qui excepteur culpa consequat.\n\nEx consectetur minim elit excepteur ad ad ea anim in elit. Velit dolor qui incididunt pariatur aliquip reprehenderit laboris fugiat. Veniam laboris elit ipsum eiusmod dolore labore excepteur enim pariatur.\n\nDolore sit aliquip velit voluptate ipsum in dolor laboris nisi occaecat minim. Ad sunt reprehenderit sit proident occaecat amet aute esse enim. Elit aute adipisicing mollit reprehenderit tempor ex elit proident. Aute exercitation commodo esse exercitation.\n\nBest Regards,\nRena Park",
    attachments: [],
    starred: true,
    important: false,
    unread: false,
    folder: "0197c436-2ef3-424d-b546-8b7f49186e15",
    labels: []
  },
  {
    id: "5fb8f4b5-fad4-4a82-8519-a732e68a48be",
    type: "mail",
    from: {
      avatar: "images/avatars/male-16.jpg",
      contact: "Haney Gibson <haney.gibson@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: [
      "Graham Belltower <graham.belltower@company.com>",
      "Julie T. <julie.t@company.com>"
    ],
    date: (/* @__PURE__ */ new Date("Tue Oct 23 2018 00:16:47 GMT+0000 (UTC)")).toISOString(),
    subject: "Veniam consequat ipsum occaecat ipsum",
    content: "Hey Brian,\n\nMinim adipisicing sint do irure. Reprehenderit reprehenderit dolor tempor anim exercitation qui aliqua. Laboris consectetur labore quis deserunt culpa amet eiusmod minim cillum. Id consequat dolore aliqua sit sunt cillum incididunt aliqua sint dolore quis eiusmod elit aliquip. Nisi aute mollit ipsum dolore eiusmod incididunt. Tempor officia culpa consequat laboris culpa. Lorem pariatur irure minim dolore elit enim elit esse nostrud.\n\nAmet ipsum officia sunt aliqua laborum mollit Lorem et. Est consectetur eu nostrud minim minim irure occaecat sint ea. Ut magna aliqua labore exercitation. Minim sint excepteur cupidatat esse quis do duis ad. Est magna in velit ut cupidatat mollit non do id ea ut non.\n\nDolor dolor elit fugiat aliqua aliquip in officia. Elit et cupidatat commodo laboris nostrud fugiat non cupidatat velit pariatur. Labore anim velit proident nisi ullamco. Reprehenderit adipisicing nisi laboris ut.\n\nBest Regards,\nHaney Gibson",
    attachments: [],
    starred: false,
    important: true,
    unread: true,
    folder: "0197c436-2ef3-424d-b546-8b7f49186e15",
    labels: []
  },
  {
    id: "e766ddd9-e9ea-499c-bb10-72fa57a03059",
    type: "mail",
    from: {
      avatar: "images/avatars/female-02.jpg",
      contact: "Freda Frank <freda.frank@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: ["Graham Belltower <graham.belltower@company.com>"],
    date: (/* @__PURE__ */ new Date("Wed Nov 21 2018 01:26:11 GMT+0000 (UTC)")).toISOString(),
    subject: "Magna sint dolor sit laborum enim",
    content: "Hello Brian,\n\nExcepteur occaecat dolor ex Lorem sunt velit enim eiusmod et fugiat mollit fugiat labore proident. Lorem mollit exercitation labore dolor ullamco proident non irure aliquip. Cillum laboris sit incididunt nulla dolor. Irure mollit mollit irure incididunt eiusmod consequat. Mollit in nisi enim veniam culpa mollit id dolor.\n\nSunt cillum esse est ut exercitation voluptate Lorem. Duis labore ut ullamco non ea do minim in cupidatat magna officia. Ullamco qui occaecat esse magna Lorem occaecat veniam in. Deserunt voluptate do voluptate nulla fugiat laborum officia Lorem mollit quis. Eiusmod sit pariatur qui sint ea irure cillum officia deserunt. Eiusmod irure in enim ullamco Lorem aliqua ad.\n\nDuis deserunt in nisi aute excepteur exercitation minim. Tempor pariatur qui irure laborum in incididunt. Dolor eu aliqua enim cupidatat ad aliquip culpa ipsum consequat consequat. Lorem nostrud deserunt officia commodo. Dolore officia ipsum cupidatat tempor ex occaecat pariatur anim ea consectetur incididunt. Veniam ad pariatur pariatur dolor enim tempor sint aliqua quis minim aliquip magna mollit eiusmod.\n\nKind Regards,\nFreda Frank",
    attachments: [],
    starred: false,
    important: false,
    unread: false,
    folder: "0197c436-2ef3-424d-b546-8b7f49186e15",
    labels: ["b167d3c4-f6ed-4ea6-9579-a12f95a9d76e"]
  },
  {
    id: "03693a62-d6bd-47c8-8f8e-112f21042722",
    type: "mail",
    from: {
      avatar: "images/avatars/male-17.jpg",
      contact: "Burns White <burns.white@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: ["Graham Belltower <graham.belltower@company.com>"],
    date: (/* @__PURE__ */ new Date("Mon May 14 2018 20:06:57 GMT+0000 (UTC)")).toISOString(),
    subject: "Veniam cillum ad proident incididunt nisi exercitation est",
    content: "Hi Brian,\n\nEsse reprehenderit duis labore aliqua magna mollit ut aliquip. Fugiat aliquip ipsum aliqua laborum ipsum sint nisi proident laborum consectetur dolor veniam commodo. Ea veniam eu laborum nulla non voluptate incididunt nostrud nulla fugiat velit. Nulla aliqua sit eu amet mollit. Aute laboris excepteur ut quis elit non anim aliqua ut et ea cillum consequat ex. Pariatur tempor esse excepteur ea nostrud incididunt culpa elit aliquip proident tempor non id consectetur. Duis eiusmod sint deserunt tempor mollit sint do ad labore adipisicing.\n\nElit enim ipsum mollit pariatur in officia non qui est ipsum dolore Lorem nostrud nulla. Adipisicing aliquip enim ullamco minim in sint aliqua magna enim adipisicing. Reprehenderit ea nulla velit nostrud veniam qui est elit dolore. Et dolor labore commodo veniam aliquip laborum consequat voluptate fugiat et eu. Veniam minim sunt ex laborum. Aliquip nostrud minim pariatur nostrud eiusmod mollit minim irure aliqua. Minim id Lorem magna nostrud consequat irure.\n\nDuis id deserunt eiusmod adipisicing fugiat in irure sit aliqua ipsum velit. Aute aliquip Lorem pariatur cillum fugiat labore et. Ipsum commodo sunt enim eiusmod adipisicing exercitation elit adipisicing culpa laborum cupidatat laboris duis. Mollit officia consectetur voluptate nisi mollit. Magna ipsum sint sint est culpa in magna ad eu quis officia.\n\nBest Regards,\nBurns White",
    attachments: [],
    starred: true,
    important: false,
    unread: false,
    folder: "0197c436-2ef3-424d-b546-8b7f49186e15",
    labels: []
  },
  {
    id: "c59f5ea4-4f5d-4b9e-9c3c-a996b18fd98c",
    type: "mail",
    from: {
      avatar: "images/avatars/male-18.jpg",
      contact: "Fischer Cervantes <fischer.cervantes@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    date: (/* @__PURE__ */ new Date("Thu Dec 13 2018 03:52:15 GMT+0000 (UTC)")).toISOString(),
    subject: "Amet aute tempor sit tempor minim nulla dolor commodo aute eu",
    content: "Hi Brian,\n\nCulpa nulla est deserunt ut. Culpa eu velit occaecat ut sint voluptate. Nostrud sint officia pariatur eiusmod commodo laborum. Proident consequat nostrud anim qui velit quis.\n\nVoluptate occaecat pariatur minim eu culpa ex sit nostrud. Amet id proident consequat commodo ullamco deserunt eu occaecat anim do exercitation sit quis non. Voluptate eiusmod aute cillum culpa sit. Dolore cillum ea ex reprehenderit occaecat ullamco. Est nulla minim est do adipisicing id in et nostrud voluptate. Proident eiusmod enim cupidatat minim. Amet minim sunt incididunt pariatur amet cupidatat eu exercitation officia laborum.\n\nId elit minim exercitation occaecat exercitation. Cupidatat officia duis duis id nisi nostrud quis dolor officia. Dolore occaecat aliqua eiusmod mollit commodo officia sunt sit laboris nisi excepteur irure duis fugiat.\n\nKind Regards,\nFischer Cervantes",
    attachments: [],
    starred: true,
    important: true,
    unread: true,
    folder: "0197c436-2ef3-424d-b546-8b7f49186e15",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7"
    ]
  },
  {
    id: "9ed5d4c1-819a-4719-88d7-cd7b08b2228d",
    type: "mail",
    from: {
      avatar: "images/avatars/male-19.jpg",
      contact: "Cervantes Reyes <cervantes.reyes@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: ["Graham Belltower <graham.belltower@company.com>"],
    date: (/* @__PURE__ */ new Date("Tue Oct 16 2018 11:06:27 GMT+0000 (UTC)")).toISOString(),
    subject: "Et eu adipisicing aliqua nisi minim commodo anim aliqua aliquip",
    content: "Hi Brian,\n\nDo irure id voluptate occaecat quis eiusmod. Nulla non incididunt do ut excepteur proident nulla aliqua minim ex. Enim et elit eiusmod ex dolor aliqua et cupidatat consectetur nulla consectetur et fugiat cillum. Amet ea laboris non duis voluptate id fugiat voluptate et sit magna fugiat quis non.\n\nAmet tempor tempor ut eu proident deserunt. Velit exercitation irure sunt mollit veniam exercitation eiusmod nisi do velit labore sit. In exercitation et Lorem pariatur dolor aliquip aliquip occaecat. Consectetur aliqua ea voluptate aliquip consectetur do tempor sunt sint elit. Exercitation ipsum cupidatat qui exercitation cillum non cupidatat occaecat. Cupidatat consequat ut quis ad incididunt proident culpa qui minim.\n\nEu adipisicing voluptate amet occaecat amet est qui eu nisi aliqua. Quis labore in minim esse deserunt labore nulla qui dolor nulla id veniam nulla. Nulla aliquip pariatur id sunt fugiat laboris incididunt sunt ipsum. Sint dolor non nulla aliqua ea dolor officia veniam officia deserunt duis deserunt. Veniam esse consectetur deserunt excepteur laborum aliquip qui labore. Reprehenderit labore ex do nostrud esse.\n\nBest Regards,\nCervantes Reyes",
    attachments: [],
    starred: false,
    important: true,
    unread: true,
    folder: "0197c436-2ef3-424d-b546-8b7f49186e15",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7",
      "8b035cb5-65c0-4ab1-bb4c-43b0e442d1f3"
    ]
  },
  {
    id: "a769720b-0c64-483c-925c-5d747c61bff4",
    type: "mail",
    from: {
      avatar: "images/avatars/male-20.jpg",
      contact: "Cooke Whitney <cooke.whitney@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    date: (/* @__PURE__ */ new Date("Sat Jul 28 2018 14:16:37 GMT+0000 (UTC)")).toISOString(),
    subject: "Est veniam aliquip culpa deserunt commodo ad laboris ad ullamco",
    content: "Hi Brian,\n\nVoluptate consequat ullamco eiusmod deserunt eu laborum ullamco Lorem minim eiusmod est eu elit esse. Enim ipsum irure occaecat magna. Esse labore irure incididunt mollit dolor veniam ut magna aliquip. In ex consequat culpa nisi in exercitation. Sunt tempor quis deserunt laborum nulla ad.\n\nVoluptate mollit nostrud consectetur amet enim dolor. Consequat deserunt eiusmod incididunt cupidatat ex anim aliquip minim mollit incididunt tempor. Quis quis deserunt et tempor sunt laboris quis non enim veniam nisi nulla. Ea adipisicing incididunt laboris incididunt exercitation voluptate exercitation ipsum velit duis aute cupidatat labore. Nulla ea non est deserunt proident deserunt qui irure quis enim occaecat cupidatat. Sint veniam consequat Lorem dolore commodo aliqua et. Ad commodo qui ad ea consectetur non dolore dolor.\n\nAnim exercitation id do laborum quis laborum elit officia cupidatat sunt consectetur officia ex excepteur. Cillum cupidatat et consectetur ex aliquip anim Lorem eiusmod nostrud reprehenderit. Magna ullamco qui incididunt dolore anim ad laborum. Laborum occaecat laboris consequat et esse nostrud elit anim amet incididunt aliquip mollit ad proident. Voluptate pariatur ex adipisicing dolore dolor adipisicing cupidatat tempor amet duis dolore sunt consequat qui. Mollit do ullamco enim nulla dolore proident in. Ipsum irure cillum irure aute culpa duis eu est dolore est laborum.\n\nKind Regards,\nCooke Whitney",
    attachments: [],
    starred: true,
    important: false,
    unread: true,
    folder: "0197c436-2ef3-424d-b546-8b7f49186e15",
    labels: []
  },
  {
    id: "e6b83f13-c25e-4355-913f-54d93d8393f6",
    type: "mail",
    from: {
      avatar: "images/avatars/female-03.jpg",
      contact: "Lee Lloyd <lee.lloyd@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: [
      "Graham Belltower <graham.belltower@company.com>",
      "Julie T. <julie.t@company.com>"
    ],
    date: (/* @__PURE__ */ new Date("Thu Oct 18 2018 02:56:36 GMT+0000 (UTC)")).toISOString(),
    subject: "Culpa incididunt amet sunt ipsum ad nostrud exercitation ea",
    content: "Hi Brian,\n\nDolore voluptate ea id aliquip qui cillum. Adipisicing velit esse et sunt culpa quis velit mollit culpa mollit nostrud. Nulla ad elit cupidatat ex id velit proident aliquip sit irure aliquip exercitation exercitation. Occaecat proident reprehenderit consectetur tempor velit amet cupidatat.\n\nAd est sunt commodo occaecat cillum fugiat minim reprehenderit minim nulla id velit. Ullamco enim ullamco qui eu ut est qui dolore reprehenderit non tempor excepteur. Fugiat irure in pariatur qui incididunt minim cillum. Aliquip incididunt reprehenderit cillum laborum eiusmod sint aute sint. Deserunt pariatur deserunt elit ut velit cupidatat. Ad deserunt ea laborum reprehenderit laboris ut pariatur labore.\n\nLabore ullamco irure mollit aliqua irure officia est excepteur ut. Dolore amet ut id fugiat deserunt reprehenderit pariatur anim. Dolor est amet ipsum labore fugiat culpa minim anim aliqua. Officia ad duis est irure in consequat nostrud duis. Irure sit quis ad nisi qui adipisicing labore consectetur consequat duis eiusmod nisi. Non dolore tempor exercitation nulla nisi Lorem eu adipisicing aliqua dolore qui non. Enim non exercitation occaecat reprehenderit adipisicing dolore laboris eiusmod.\n\nCheers!\nLee Lloyd",
    attachments: [],
    starred: false,
    important: true,
    unread: true,
    folder: "2fa74637-d362-4fd2-9a88-f7195a88bdde",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7",
      "8b035cb5-65c0-4ab1-bb4c-43b0e442d1f3"
    ]
  },
  {
    id: "5c5c4ba7-542b-46b0-b0ce-976f5189d72c",
    type: "mail",
    from: {
      avatar: "images/avatars/male-01.jpg",
      contact: "Benson Shields <benson.shields@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: [
      "Graham Belltower <graham.belltower@company.com>",
      "Julie T. <julie.t@company.com>"
    ],
    date: (/* @__PURE__ */ new Date("Sun Apr 01 2018 20:39:05 GMT+0000 (UTC)")).toISOString(),
    subject: "Sit incididunt ad tempor veniam duis",
    content: "Dear Brian,\n\nAnim dolor exercitation magna qui incididunt ullamco enim. Voluptate qui laborum tempor ex minim eu dolore officia Lorem do pariatur laborum. Esse et ullamco reprehenderit nisi anim nostrud est deserunt.\n\nQuis qui commodo exercitation minim ea nisi. Aliqua culpa ad aliqua velit eiusmod do duis ex commodo eiusmod. Laborum nostrud nulla qui non reprehenderit voluptate cillum mollit exercitation anim ipsum cillum.\n\nEiusmod nisi ullamco ex ut velit. Ipsum sint dolor minim aute minim mollit ullamco voluptate magna nulla sint. Pariatur Lorem pariatur velit laboris tempor excepteur tempor reprehenderit culpa Lorem.\n\nKind Regards,\nBenson Shields",
    attachments: [],
    starred: true,
    important: true,
    unread: true,
    folder: "2fa74637-d362-4fd2-9a88-f7195a88bdde",
    labels: []
  },
  {
    id: "36abfef2-f86a-4c9e-99de-1869f0b3e71b",
    type: "mail",
    from: {
      avatar: "images/avatars/male-02.jpg",
      contact: "Emerson Whitehead <emerson.whitehead@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: [
      "Graham Belltower <graham.belltower@company.com>",
      "Julie T. <julie.t@company.com>"
    ],
    date: (/* @__PURE__ */ new Date("Sun Jun 24 2018 11:19:49 GMT+0000 (UTC)")).toISOString(),
    subject: "Esse ea ut est excepteur",
    content: "Hey Brian,\n\nEst consequat aute laborum voluptate do aliqua cillum non excepteur nostrud culpa enim veniam nulla. Proident et nisi consequat nisi labore incididunt eiusmod fugiat. Nisi sint ut sint proident culpa pariatur ipsum quis dolor voluptate. Elit proident laboris eu elit. Id nisi dolor quis nostrud cillum quis ut ad quis velit eiusmod.\n\nMinim reprehenderit ullamco culpa cupidatat voluptate ut sunt. Exercitation sit dolore ullamco commodo exercitation cupidatat nulla officia Lorem exercitation officia minim. Reprehenderit ex incididunt magna id culpa incididunt ex reprehenderit ea veniam culpa id occaecat.\n\nDo esse ut non laborum aute. Aute laborum tempor eiusmod id amet anim. Quis exercitation id fugiat deserunt in do irure duis. Id ad ea eiusmod magna excepteur nulla.\n\nCheers!\nEmerson Whitehead",
    attachments: [],
    starred: true,
    important: false,
    unread: true,
    folder: "2fa74637-d362-4fd2-9a88-f7195a88bdde",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7",
      "8b035cb5-65c0-4ab1-bb4c-43b0e442d1f3",
      "b2d1e4e7-7cfd-4b51-ae59-217a093df754"
    ]
  },
  {
    id: "b1a0ab26-6c86-4888-b2f1-69928b3ca718",
    type: "mail",
    from: {
      avatar: "images/avatars/female-04.jpg",
      contact: "Annabelle Greene <annabelle.greene@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: ["Graham Belltower <graham.belltower@company.com>"],
    date: (/* @__PURE__ */ new Date("Thu Aug 30 2018 03:24:13 GMT+0000 (UTC)")).toISOString(),
    subject: "Commodo reprehenderit laborum nostrud culpa et aliquip",
    content: "Hey Brian,\n\nConsequat amet proident esse laboris nisi excepteur mollit enim ad ipsum. Eiusmod culpa anim magna laboris amet veniam qui. Mollit minim elit tempor in nostrud incididunt pariatur. Ea dolor laboris cupidatat in aliquip elit proident ipsum ad. Ad do pariatur do magna eu voluptate eu qui commodo consectetur exercitation pariatur eu.\n\nSit est nisi tempor eiusmod esse laboris reprehenderit laborum quis incididunt duis amet esse. Lorem do do nulla est. Deserunt magna laborum do pariatur excepteur amet laboris anim sunt nulla. Veniam aliqua non adipisicing id cillum laborum aliqua. Reprehenderit deserunt amet nulla proident. Voluptate aliqua occaecat ex ut deserunt amet voluptate quis id pariatur excepteur incididunt. Magna ex nulla minim magna id cillum nisi id quis culpa consequat ea exercitation.\n\nIncididunt et aliqua officia sit nulla anim commodo est. Irure commodo veniam quis qui ad sit labore mollit in officia non incididunt in tempor. Tempor nulla velit excepteur esse. Duis enim sunt irure consectetur excepteur fugiat duis pariatur exercitation cupidatat commodo. Do cupidatat et labore magna dolor aliquip aute tempor aute. Et sit fugiat commodo eiusmod qui ex minim dolor eu do minim qui veniam.\n\nBest Regards,\nAnnabelle Greene",
    attachments: [],
    starred: false,
    important: true,
    unread: false,
    folder: "2fa74637-d362-4fd2-9a88-f7195a88bdde",
    labels: ["b167d3c4-f6ed-4ea6-9579-a12f95a9d76e"]
  },
  {
    id: "87cf5188-34dc-4947-b780-48c7fb6b6b23",
    type: "mail",
    from: {
      avatar: "images/avatars/male-03.jpg",
      contact: "Dawson Lewis <dawson.lewis@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    date: (/* @__PURE__ */ new Date("Fri Aug 03 2018 03:03:12 GMT+0000 (UTC)")).toISOString(),
    subject: "Ipsum duis sint incididunt nulla in labore nulla",
    content: "Hello Brian,\n\nAdipisicing quis deserunt consectetur proident eiusmod velit irure minim dolore sunt aliqua aliqua. Dolore excepteur ea commodo consectetur. Qui veniam est do cillum non excepteur adipisicing excepteur quis sit. Do cupidatat consectetur pariatur nulla exercitation dolor exercitation mollit. Elit culpa ea mollit laboris anim nisi id velit. Elit esse ad commodo dolor culpa nostrud consequat Lorem laboris pariatur et esse. Nisi elit esse ad cupidatat commodo eiusmod irure aliquip sit deserunt id anim tempor.\n\nIrure deserunt dolore nisi magna ipsum ut qui amet elit consectetur ex pariatur. Aliquip anim nostrud enim exercitation commodo eiusmod mollit qui id nulla. Lorem aute exercitation commodo enim veniam ea aute laborum consequat sunt proident eu. Quis deserunt incididunt mollit adipisicing nostrud laboris. Laborum elit velit proident aliquip ex aliqua dolore magna cillum adipisicing nisi cillum sunt esse.\n\nCillum eu id cillum eu incididunt adipisicing pariatur est sint minim voluptate Lorem Lorem excepteur. Aliqua ipsum non occaecat aute eiusmod deserunt aliquip. Sit incididunt cupidatat pariatur exercitation laborum id qui ut pariatur deserunt fugiat occaecat occaecat incididunt. Amet ad do esse et aliquip magna ullamco commodo deserunt exercitation irure. Consequat dolor magna mollit laboris pariatur laboris.\n\nBest Regards,\nDawson Lewis",
    attachments: [],
    starred: true,
    important: true,
    unread: true,
    folder: "2fa74637-d362-4fd2-9a88-f7195a88bdde",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7",
      "8b035cb5-65c0-4ab1-bb4c-43b0e442d1f3",
      "b2d1e4e7-7cfd-4b51-ae59-217a093df754"
    ]
  },
  {
    id: "8749e3bc-24b3-43f3-997b-ee0b5bd7a442",
    type: "mail",
    from: {
      avatar: "images/avatars/male-04.jpg",
      contact: "Cole Dotson <cole.dotson@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: [
      "Graham Belltower <graham.belltower@company.com>",
      "Julie T. <julie.t@company.com>"
    ],
    date: (/* @__PURE__ */ new Date("Tue Sep 04 2018 09:09:08 GMT+0000 (UTC)")).toISOString(),
    subject: "Sint quis veniam tempor sint",
    content: "Hi Brian,\n\nReprehenderit magna Lorem voluptate mollit irure nulla duis est adipisicing. Velit labore ullamco sit dolore. Officia magna est sunt esse veniam eiusmod nostrud laboris eiusmod ullamco nostrud cupidatat veniam.\n\nAliqua veniam magna laborum laboris officia. Excepteur occaecat nisi culpa anim amet dolore culpa culpa laborum veniam deserunt esse sunt. Nostrud tempor adipisicing sit eiusmod dolore.\n\nUt adipisicing labore officia ipsum qui officia aute. Qui in et quis ut qui labore irure. Minim voluptate qui occaecat est. Laborum aliquip enim elit incididunt eiusmod ea sit id in. Qui nostrud ad nostrud deserunt incididunt aute in aliquip.\n\nBest Regards,\nCole Dotson",
    attachments: [],
    starred: false,
    important: false,
    unread: true,
    folder: "2fa74637-d362-4fd2-9a88-f7195a88bdde",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7",
      "8b035cb5-65c0-4ab1-bb4c-43b0e442d1f3",
      "b2d1e4e7-7cfd-4b51-ae59-217a093df754"
    ]
  },
  {
    id: "108ca3fa-a4dd-4988-a7ea-659ab4446050",
    type: "mail",
    from: {
      avatar: "images/avatars/male-05.jpg",
      contact: "Bernard Cunningham <bernard.cunningham@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    date: (/* @__PURE__ */ new Date("Tue Aug 21 2018 08:51:03 GMT+0000 (UTC)")).toISOString(),
    subject: "Consequat Lorem fugiat et veniam ad veniam proident excepteur laborum",
    content: "Dear Brian,\n\nEu voluptate exercitation nulla aliqua id laboris ipsum voluptate nulla ea laboris. Magna exercitation reprehenderit mollit velit irure minim elit officia eiusmod reprehenderit non quis. Esse sunt non nisi id irure commodo incididunt amet.\n\nAdipisicing quis mollit velit ullamco enim ad laborum ex dolor ut culpa exercitation sit commodo. Amet eu et ullamco ut elit anim nulla fugiat sint. Laborum tempor incididunt laboris id pariatur velit excepteur officia nostrud mollit occaecat sit. Nulla do fugiat tempor quis reprehenderit fugiat aute. Dolor laboris amet do anim occaecat sunt in duis reprehenderit cupidatat mollit consequat nisi.\n\nUllamco ad minim dolore excepteur amet ullamco quis esse officia voluptate. Ipsum ex dolore labore enim. Cupidatat cillum exercitation cupidatat id eu esse aute tempor ut qui sit.\n\nCheers!\nBernard Cunningham",
    attachments: [],
    starred: true,
    important: true,
    unread: true,
    folder: "2fa74637-d362-4fd2-9a88-f7195a88bdde",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7",
      "8b035cb5-65c0-4ab1-bb4c-43b0e442d1f3",
      "b2d1e4e7-7cfd-4b51-ae59-217a093df754"
    ]
  },
  {
    id: "63a362be-4ea7-4cc1-985f-5202db9c1370",
    type: "mail",
    from: {
      avatar: "images/avatars/male-06.jpg",
      contact: "Edwards Mcconnell <edwards.mcconnell@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: [
      "Graham Belltower <graham.belltower@company.com>",
      "Julie T. <julie.t@company.com>"
    ],
    date: (/* @__PURE__ */ new Date("Fri Jul 20 2018 05:22:32 GMT+0000 (UTC)")).toISOString(),
    subject: "Amet ipsum voluptate voluptate dolore proident voluptate officia cillum adipisicing tempor tempor ad anim",
    content: "Hey Brian,\n\nAliqua Lorem fugiat in fugiat commodo laborum sit mollit Lorem elit. Nulla incididunt sint nostrud magna labore elit quis ex. Ex dolore labore tempor cillum magna tempor est exercitation in proident. Dolor est esse consectetur veniam sint proident enim mollit.\n\nQui eiusmod laborum veniam officia quis nisi cillum dolor cupidatat magna. Quis exercitation excepteur incididunt duis laboris ex Lorem laborum excepteur adipisicing. Fugiat exercitation reprehenderit veniam minim occaecat. Excepteur fugiat irure magna aliquip ut amet quis fugiat consectetur ea. Commodo est fugiat ea et labore dolore ullamco nulla excepteur officia ea. Lorem sunt officia pariatur ullamco sunt commodo fugiat enim. Consectetur amet duis et deserunt elit pariatur eiusmod amet excepteur fugiat dolore aliqua eu.\n\nLabore velit ea non elit esse commodo fugiat. Culpa eiusmod consequat sint laboris. Irure proident non laboris duis nisi.\n\nBest Regards,\nEdwards Mcconnell",
    attachments: [],
    starred: true,
    important: false,
    unread: false,
    folder: "2fa74637-d362-4fd2-9a88-f7195a88bdde",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7"
    ]
  },
  {
    id: "ce206b7e-bbd0-4cd1-b69a-a8d4ef5b10bf",
    type: "mail",
    from: {
      avatar: "images/avatars/female-05.jpg",
      contact: "Lizzie Sanders <lizzie.sanders@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: ["Graham Belltower <graham.belltower@company.com>"],
    date: (/* @__PURE__ */ new Date("Fri Sep 07 2018 01:29:31 GMT+0000 (UTC)")).toISOString(),
    subject: "Sint enim elit Lorem laboris",
    content: "Dear Brian,\n\nNostrud Lorem sit dolore eiusmod culpa ut deserunt do. Esse nulla nostrud cupidatat aliquip ut veniam velit cillum amet cillum ea culpa culpa in. Pariatur eu duis adipisicing sint velit eu duis ex officia enim nulla. Sunt fugiat incididunt et id nulla ut ea in.\n\nCillum id ea nisi consectetur nostrud adipisicing magna incididunt ipsum reprehenderit. Exercitation labore nisi magna fugiat officia culpa id commodo eu. Ad ullamco amet pariatur deserunt elit et dolore quis cillum laboris Lorem dolore labore laboris.\n\nEst mollit aliquip labore ad duis quis mollit sunt cillum cupidatat excepteur. Ad dolor cupidatat incididunt deserunt. Ullamco id sunt et ad nisi Lorem irure. Aliquip enim occaecat velit laboris et ullamco sint dolore anim. Proident nisi nulla labore enim dolor. Ipsum eu qui nisi minim aliqua ullamco exercitation. In sint id pariatur id aliqua velit reprehenderit consequat aliquip.\n\nCheers!\nLizzie Sanders",
    attachments: [],
    starred: false,
    important: true,
    unread: true,
    folder: "2fa74637-d362-4fd2-9a88-f7195a88bdde",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7",
      "8b035cb5-65c0-4ab1-bb4c-43b0e442d1f3",
      "b2d1e4e7-7cfd-4b51-ae59-217a093df754",
      "184cd689-4ee4-47cf-9f8a-12233d614326"
    ]
  },
  {
    id: "f7c2e821-b2e2-4103-bb20-ddcd3a42dc7c",
    type: "mail",
    from: {
      avatar: "images/avatars/female-06.jpg",
      contact: "Elise Hicks <elise.hicks@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: [
      "Graham Belltower <graham.belltower@company.com>",
      "Julie T. <julie.t@company.com>"
    ],
    date: (/* @__PURE__ */ new Date("Sun Mar 04 2018 15:45:07 GMT+0000 (UTC)")).toISOString(),
    subject: "Cillum proident non officia mollit nulla dolor eiusmod et aliquip laboris ut adipisicing dolor deserunt",
    content: "Hi Brian,\n\nVelit proident et qui quis enim. Aute cillum ad ipsum esse nulla. Enim elit quis laborum id excepteur non consectetur ut incididunt enim adipisicing minim est. Dolor pariatur pariatur est cillum consectetur eu do deserunt labore duis incididunt et. Magna laboris labore velit velit ad aliquip magna.\n\nLaboris occaecat duis aliqua culpa culpa culpa quis eu et dolore. Quis irure mollit irure sint fugiat. Ea elit adipisicing incididunt cillum proident esse esse tempor nulla laborum incididunt reprehenderit. Sit minim laborum dolor magna sunt pariatur. Voluptate ullamco exercitation deserunt ea consequat aliqua Lorem non velit irure et adipisicing labore.\n\nVoluptate id exercitation eiusmod mollit et commodo sit consequat minim id. Consectetur eiusmod reprehenderit veniam elit dolor qui quis occaecat nisi ut commodo excepteur. Minim do ad veniam ullamco ea magna occaecat velit. Non do ea officia cupidatat ex proident veniam nostrud. Non occaecat laboris ad est quis ad. Commodo non aliquip nisi ullamco ullamco consequat eiusmod aliqua est sunt incididunt commodo et nostrud.\n\nCheers!\nElise Hicks",
    attachments: [],
    starred: true,
    important: true,
    unread: false,
    folder: "2fa74637-d362-4fd2-9a88-f7195a88bdde",
    labels: ["b167d3c4-f6ed-4ea6-9579-a12f95a9d76e"]
  },
  {
    id: "d8ca28a0-7fb7-4cd4-9058-3a867f841f76",
    type: "mail",
    from: {
      avatar: "images/avatars/female-07.jpg",
      contact: "Sherri Roth <sherri.roth@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: ["Graham Belltower <graham.belltower@company.com>"],
    date: (/* @__PURE__ */ new Date("Thu Dec 20 2018 09:37:24 GMT+0000 (UTC)")).toISOString(),
    subject: "Ex laboris et sunt ex aute aute nisi",
    content: "Hey Brian,\n\nLaboris eu incididunt reprehenderit eiusmod. Non ad tempor fugiat aliquip aliquip ullamco deserunt deserunt occaecat Lorem. Esse ut velit labore magna nostrud do eu fugiat do adipisicing fugiat fugiat id in. Reprehenderit magna aute sunt proident anim nostrud ex Lorem.\n\nDolor proident et quis ea anim sit deserunt ea non nisi. Ullamco fugiat proident consectetur qui reprehenderit incididunt anim fugiat pariatur eiusmod quis quis. Amet anim veniam labore aliquip est occaecat do magna consectetur mollit fugiat. Ut fugiat eu deserunt mollit mollit cupidatat.\n\nNisi culpa et magna est officia duis laboris adipisicing ullamco pariatur sunt nulla aute proident. Ex incididunt veniam fugiat do proident ullamco tempor qui eu qui consequat anim. Commodo minim consectetur excepteur amet in sint adipisicing cillum tempor sint et nulla. Cupidatat ut commodo esse labore anim.\n\nCheers!\nSherri Roth",
    attachments: [],
    starred: true,
    important: false,
    unread: true,
    folder: "2fa74637-d362-4fd2-9a88-f7195a88bdde",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7",
      "8b035cb5-65c0-4ab1-bb4c-43b0e442d1f3"
    ]
  },
  {
    id: "b48be636-410c-485a-9442-7de7ce807dc2",
    type: "mail",
    from: {
      avatar: "images/avatars/male-07.jpg",
      contact: "Skinner Hawkins <skinner.hawkins@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: ["Graham Belltower <graham.belltower@company.com>"],
    date: (/* @__PURE__ */ new Date("Sun Jun 10 2018 07:50:01 GMT+0000 (UTC)")).toISOString(),
    subject: "Eu cillum amet dolore labore voluptate qui mollit ad anim ipsum laborum eiusmod aliquip",
    content: "Hi Brian,\n\nFugiat nisi eu aliquip do elit irure enim consectetur officia consequat. Quis eiusmod minim sint veniam quis dolor sit excepteur officia reprehenderit. Aute ex ea eu eiusmod. Consectetur velit dolore laboris proident ex. Enim sint dolore adipisicing occaecat et magna quis. Enim nostrud nisi sunt deserunt.\n\nOccaecat laborum voluptate quis culpa duis cillum excepteur velit ullamco duis nisi. Nulla cillum ea Lorem reprehenderit. Ea proident deserunt mollit esse pariatur est duis aute Lorem. Id deserunt nulla elit velit veniam ut consectetur Lorem exercitation do laborum nisi Lorem.\n\nVelit sint exercitation et ullamco ipsum deserunt irure. Consectetur mollit aliqua duis commodo laboris sit consequat laborum mollit aliquip anim. Occaecat enim quis in ullamco voluptate dolore enim culpa Lorem est consectetur deserunt tempor labore. Do non ex irure dolor elit ea Lorem duis esse sit eu fugiat eiusmod.\n\nCheers!\nSkinner Hawkins",
    attachments: [],
    starred: true,
    important: true,
    unread: true,
    folder: "2fa74637-d362-4fd2-9a88-f7195a88bdde",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7"
    ]
  },
  {
    id: "efe990eb-6559-48a6-a909-320c465de739",
    type: "mail",
    from: {
      avatar: "images/avatars/female-08.jpg",
      contact: "Velma Ellison <velma.ellison@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    date: (/* @__PURE__ */ new Date("Thu Nov 01 2018 10:59:46 GMT+0000 (UTC)")).toISOString(),
    subject: "Ex duis cupidatat qui velit",
    content: "Hey Brian,\n\nSint labore adipisicing consequat ipsum. Proident aute et reprehenderit sint laborum nulla dolor. Dolor commodo consectetur nulla id reprehenderit veniam enim culpa ad irure esse Lorem amet. Tempor laboris aute ea sint. Elit laboris eu aliquip tempor eu Lorem eu ex.\n\nMagna dolore officia in excepteur. Reprehenderit in ipsum ea ex voluptate reprehenderit et aliquip commodo deserunt excepteur nisi reprehenderit quis. Consectetur do mollit non nisi exercitation elit anim laboris elit cillum excepteur. Veniam qui deserunt culpa enim esse eu Lorem. Est in consequat cupidatat elit in nisi deserunt.\n\nProident consequat ea nisi eiusmod esse incididunt exercitation. Consequat labore veniam non elit duis aute eiusmod labore est irure. Aliquip velit minim nisi qui est. Consequat ea dolor nostrud incididunt. Nulla commodo consectetur occaecat eu nisi ullamco cillum culpa ea magna. Eiusmod quis in ex veniam duis esse do. Laboris quis mollit mollit ex nulla officia irure pariatur qui aute consectetur ad esse.\n\nCheers!\nVelma Ellison",
    attachments: [],
    starred: true,
    important: false,
    unread: false,
    folder: "2fa74637-d362-4fd2-9a88-f7195a88bdde",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7"
    ]
  },
  {
    id: "d2bc3670-63f7-47c3-9d3d-4998c716f04a",
    type: "mail",
    from: {
      avatar: "images/avatars/female-09.jpg",
      contact: "Tamara Fitzgerald <tamara.fitzgerald@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    date: (/* @__PURE__ */ new Date("Sat Feb 24 2018 15:37:16 GMT+0000 (UTC)")).toISOString(),
    subject: "Et esse sit eiusmod dolore eiusmod ad sit ipsum adipisicing ut esse",
    content: "Dear Brian,\n\nIn exercitation pariatur id occaecat reprehenderit exercitation ullamco nostrud consequat nostrud anim labore reprehenderit. Pariatur ea amet eiusmod consequat aliquip culpa aute. Officia elit non nulla ullamco aliquip est nulla quis nostrud consequat irure.\n\nFugiat nisi labore excepteur non mollit duis. Irure voluptate fugiat duis ullamco exercitation cupidatat est ullamco culpa. Quis nisi nostrud nisi non commodo veniam Lorem officia proident fugiat elit exercitation consectetur. Cupidatat cupidatat mollit amet nisi voluptate et ea sint sint. Excepteur ad aute reprehenderit nisi dolore sint eu fugiat consequat nulla proident ipsum ad voluptate. Ea officia aute incididunt commodo consectetur aliquip sint. Irure veniam ipsum anim incididunt aliquip est enim consequat anim cillum veniam laborum enim laborum.\n\nAnim non eiusmod elit id cillum minim minim qui amet sint. Incididunt ullamco exercitation consequat ipsum sit eiusmod minim dolore sint laborum labore. Velit incididunt nulla consectetur duis duis. Sit labore duis nostrud tempor. Elit excepteur nostrud adipisicing eu quis ex. Aute aliquip esse laborum irure in officia qui voluptate laboris magna reprehenderit.\n\nKind Regards,\nTamara Fitzgerald",
    attachments: [],
    starred: true,
    important: true,
    unread: true,
    folder: "2fa74637-d362-4fd2-9a88-f7195a88bdde",
    labels: ["b167d3c4-f6ed-4ea6-9579-a12f95a9d76e"]
  },
  {
    id: "07b4d696-7657-4535-9838-3efb42355cbb",
    type: "mail",
    from: {
      avatar: "images/avatars/male-08.jpg",
      contact: "Duncan Gilmore <duncan.gilmore@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    date: (/* @__PURE__ */ new Date("Mon Dec 31 2018 08:15:40 GMT+0000 (UTC)")).toISOString(),
    subject: "Ipsum non ad commodo dolor enim labore ullamco",
    content: "Hey Brian,\n\nDuis commodo commodo exercitation ex incididunt fugiat incididunt duis ex. Proident tempor nulla culpa consequat non est incididunt amet ipsum anim. Non ipsum irure consectetur nisi exercitation. Nostrud occaecat ullamco ad et tempor magna sint ea minim duis consectetur aute velit incididunt. Ad amet exercitation consectetur mollit proident minim anim excepteur nostrud.\n\nEt in nulla laboris minim ex excepteur culpa exercitation officia labore nostrud quis. Est officia velit ullamco aute consectetur Lorem consectetur voluptate qui eu. Elit non nulla laboris enim in esse quis. Pariatur ullamco cupidatat cupidatat non et anim in dolor magna quis Lorem dolore et. Sit ullamco cillum reprehenderit eu. Ut id ipsum duis occaecat occaecat.\n\nFugiat excepteur et aute magna fugiat ut consequat adipisicing quis deserunt id sint occaecat. Ut cupidatat est nisi fugiat enim laborum. Nostrud est nisi occaecat ut Lorem.\n\nKind Regards,\nDuncan Gilmore",
    attachments: [],
    starred: true,
    important: false,
    unread: true,
    folder: "2fa74637-d362-4fd2-9a88-f7195a88bdde",
    labels: []
  },
  {
    id: "b8424db5-c607-4b9a-b88f-78c54343a342",
    type: "mail",
    from: {
      avatar: "images/avatars/female-10.jpg",
      contact: "Betty Dean <betty.dean@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    date: (/* @__PURE__ */ new Date("Thu Aug 16 2018 06:17:15 GMT+0000 (UTC)")).toISOString(),
    subject: "Laborum magna cupidatat qui sint proident aliquip ut commodo aute sint",
    content: "Dear Brian,\n\nConsequat aliquip ut laboris non velit dolor fugiat. Nisi ut laborum amet occaecat proident deserunt excepteur sunt occaecat pariatur sint ullamco fugiat aliquip. Ea excepteur commodo magna ut deserunt. Reprehenderit eu quis nisi esse eiusmod ut ullamco. Esse est pariatur id labore anim cillum dolore nulla esse dolor eiusmod do magna est.\n\nDo fugiat dolore duis ex consequat amet sunt reprehenderit enim non dolore incididunt pariatur. Excepteur ipsum labore est cupidatat laborum do consectetur tempor ipsum eiusmod. Voluptate eiusmod nostrud occaecat nisi laboris et velit non nostrud. Nulla id commodo laboris culpa id cillum nostrud deserunt fugiat excepteur nisi irure laborum. Irure in aute ea non magna Lorem aute consequat excepteur duis occaecat cupidatat ea. Tempor Lorem ullamco ullamco occaecat ipsum duis aliqua velit labore dolore veniam. Mollit ex commodo qui esse.\n\nLabore et nostrud do dolor. Sit duis proident nulla mollit officia. Deserunt voluptate ad anim in id consectetur excepteur Lorem quis. Consectetur officia esse cillum Lorem aliqua ex sit proident qui occaecat. Deserunt magna in consectetur velit proident sint cupidatat commodo veniam sint cillum amet aliqua. Aute cillum officia culpa Lorem mollit amet culpa incididunt dolore voluptate minim. Aliqua fugiat aliquip nulla dolore elit aliqua quis veniam ullamco in adipisicing deserunt.\n\nCheers!\nBetty Dean",
    attachments: [],
    starred: true,
    important: false,
    unread: true,
    folder: "2fa74637-d362-4fd2-9a88-f7195a88bdde",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7",
      "8b035cb5-65c0-4ab1-bb4c-43b0e442d1f3",
      "b2d1e4e7-7cfd-4b51-ae59-217a093df754"
    ]
  },
  {
    id: "edf1399f-e829-4bde-ae5b-e03d18ad2f76",
    type: "mail",
    from: {
      avatar: "images/avatars/male-09.jpg",
      contact: "Pate Gardner <pate.gardner@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    date: (/* @__PURE__ */ new Date("Sat May 26 2018 10:36:30 GMT+0000 (UTC)")).toISOString(),
    subject: "Non labore sit dolor quis in qui esse velit ad sit",
    content: "Hi Brian,\n\nMinim ea eiusmod eu cillum enim amet minim commodo reprehenderit ullamco pariatur sunt adipisicing excepteur. Laboris aute velit cillum aute laborum exercitation. Aute esse qui aliquip et proident excepteur nulla ullamco id quis culpa consectetur ea in. Aute ad dolor culpa voluptate deserunt consectetur Lorem ex est. Id consequat laborum qui elit velit. Nostrud incididunt ullamco ad aute officia adipisicing proident consectetur qui in fugiat elit. Qui sit officia amet ex occaecat irure.\n\nIncididunt sit est quis mollit ex nostrud dolore ullamco officia laboris. Reprehenderit labore anim ea tempor officia officia et duis cupidatat adipisicing dolore. Dolore exercitation minim culpa ut est magna aute adipisicing quis. Eiusmod nulla mollit nulla dolor elit aute incididunt aute officia tempor enim do. Fugiat tempor non dolore quis nisi do laborum qui.\n\nEst et cupidatat nulla laboris amet ut laboris. Lorem in esse culpa sunt laborum. Commodo est nisi ullamco esse veniam.\n\nKind Regards,\nPate Gardner",
    attachments: [],
    starred: true,
    important: false,
    unread: true,
    folder: "2fa74637-d362-4fd2-9a88-f7195a88bdde",
    labels: []
  },
  {
    id: "bcc422a2-8a39-416e-8205-a5ce354ea622",
    type: "mail",
    from: {
      avatar: "images/avatars/male-10.jpg",
      contact: "Lawson Kidd <lawson.kidd@company.com>"
    },
    to: "me <hughes.brian@company.com>",
    cc: ["Graham Belltower <graham.belltower@company.com>"],
    date: (/* @__PURE__ */ new Date("Sun Mar 18 2018 02:18:44 GMT+0000 (UTC)")).toISOString(),
    subject: "Proident non proident dolore non dolor reprehenderit",
    content: "Hello Brian,\n\nDeserunt cillum in non et. Occaecat consequat cupidatat occaecat dolor laboris id nostrud laborum. Incididunt commodo eiusmod id irure ex amet. Aute officia ut voluptate id ex ut ex minim velit. Ullamco est pariatur et quis. Sint eiusmod labore qui minim laboris esse aliquip culpa in incididunt reprehenderit.\n\nNon aliqua anim occaecat cupidatat qui adipisicing elit et aliquip adipisicing cillum in in eu. Velit esse exercitation eiusmod ad id sunt duis voluptate sint veniam proident. Ullamco sit ut laboris minim voluptate ut velit excepteur ad. Ad aute et consequat pariatur aute in ipsum enim ea nostrud excepteur consequat est. Et magna excepteur irure do adipisicing. Id fugiat quis et deserunt sit nostrud fugiat eu do eu ullamco.\n\nVelit aliqua ea id ipsum irure exercitation. Et duis aliquip exercitation amet in minim aliqua proident nisi velit irure excepteur non eu. Eiusmod irure tempor mollit velit culpa excepteur in minim eiusmod. Duis et commodo qui elit quis anim consectetur elit reprehenderit. Labore aliqua cupidatat Lorem eu officia exercitation labore aliqua mollit magna ullamco cupidatat. Nostrud ea commodo ad ad eiusmod velit eiusmod. Laborum aliquip exercitation mollit et irure occaecat.\n\nKind Regards,\nLawson Kidd",
    attachments: [],
    starred: true,
    important: true,
    unread: false,
    folder: "2fa74637-d362-4fd2-9a88-f7195a88bdde",
    labels: [
      "b167d3c4-f6ed-4ea6-9579-a12f95a9d76e",
      "745cf30e-ca84-47a1-a553-b70eb630d8e7",
      "8b035cb5-65c0-4ab1-bb4c-43b0e442d1f3",
      "b2d1e4e7-7cfd-4b51-ae59-217a093df754",
      "184cd689-4ee4-47cf-9f8a-12233d614326"
    ]
  }
];

// src/app/mock-api/apps/mailbox/api.ts
var _MailboxMockApi = class _MailboxMockApi {
  /**
   * Constructor
   */
  constructor(_fuseMockApiService) {
    this._fuseMockApiService = _fuseMockApiService;
    this._filters = filters;
    this._folders = folders;
    this._mails = mails;
    this._labels = labels;
    this._settings = settings;
    this.registerHandlers();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Register Mock API handlers
   */
  registerHandlers() {
    this._fuseMockApiService.onGet("api/apps/mailbox/settings").reply(() => [200, cloneDeep_default(this._settings)]);
    this._fuseMockApiService.onPatch("api/apps/mailbox/settings").reply(({ request }) => {
      const settings2 = cloneDeep_default(request.body.settings);
      this._settings = assign_default({}, this._settings, settings2);
      return [200, cloneDeep_default(this._settings)];
    });
    this._fuseMockApiService.onGet("api/apps/mailbox/folders").reply(() => {
      let count = 0;
      this._folders.forEach((folder) => {
        const mails2 = this._mails.filter((mail) => mail.folder === folder.id);
        if (folder.slug === "sent" || folder.slug === "trash") {
          count = 0;
        } else if (folder.slug === "drafts" || folder.slug === "trash" || folder.slug === "spam") {
          count = mails2.length;
        } else {
          mails2.forEach((mail) => {
            if (mail.unread) {
              count++;
            }
          });
        }
        folder.count = count;
        count = 0;
      });
      return [200, cloneDeep_default(this._folders)];
    });
    this._fuseMockApiService.onGet("api/apps/mailbox/filters").reply(() => [200, cloneDeep_default(this._filters)]);
    this._fuseMockApiService.onGet("api/apps/mailbox/labels").reply(() => [200, cloneDeep_default(this._labels)]);
    this._fuseMockApiService.onPost("api/apps/mailbox/label").reply(({ request }) => {
      const label = cloneDeep_default(request.body.label);
      label.id = FuseMockApiUtils.guid();
      label.slug = label.title.toLowerCase().replace(/ /g, "-").replace(/[-]+/g, "-").replace(/[^\w-]+/g, "");
      const originalSlug = label.slug;
      let sameSlug;
      let slugSuffix = 1;
      do {
        sameSlug = this._labels.filter((item) => item.slug === label.slug);
        if (sameSlug.length > 0) {
          label.slug = originalSlug + "-" + slugSuffix;
          slugSuffix++;
        }
      } while (sameSlug.length > 0);
      this._labels.push(label);
      return [200, label];
    });
    this._fuseMockApiService.onPatch("api/apps/mailbox/label").reply(({ request }) => {
      const id = request.body.id;
      const label = cloneDeep_default(request.body.label);
      let updatedLabel = null;
      this._labels.forEach((item, index, labels4) => {
        if (item.id === id) {
          label.slug = label.title.toLowerCase().replace(/ /g, "-").replace(/[-]+/g, "-").replace(/[^\w-]+/g, "");
          labels4[index] = assign_default({}, labels4[index], label);
          updatedLabel = labels4[index];
        }
      });
      return [200, updatedLabel];
    });
    this._fuseMockApiService.onDelete("api/apps/mailbox/label").reply(({ request }) => {
      const id = request.params.get("id");
      const index = this._labels.findIndex((item) => item.id === id);
      this._labels.splice(index, 1);
      const mailsWithLabel = this._mails.filter((mail) => mail.labels.indexOf(id) > -1);
      mailsWithLabel.forEach((mail) => {
        mail.labels.splice(mail.labels.indexOf(id), 1);
      });
      return [200, true];
    });
    this._fuseMockApiService.onGet("api/apps/mailbox/mails", 625).reply(({ request }) => {
      const byFolder = request.params.get("folder");
      const byFilter = request.params.get("filter");
      const byLabel = request.params.get("label");
      let mails2 = cloneDeep_default(this._mails);
      mails2 = mails2.filter((mail) => {
        if (byFolder) {
          return mail.folder === this._folders.find((folder) => folder.slug === byFolder).id;
        }
        if (byFilter) {
          return mail[byFilter] === true;
        }
        if (byLabel) {
          return mail.labels.includes(this._labels.find((label) => label.slug === byLabel).id);
        }
      });
      mails2.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());
      mails2.forEach((mail) => {
        mail.ccCount = mail.cc ? mail.cc.length : 0;
        mail.bccCount = mail.bcc ? mail.bcc.length : 0;
      });
      const mailsLength = mails2.length;
      const resultsPerPage = 10;
      const page = parseInt(request.params.get("page") ?? "1", 10);
      const begin = (page - 1) * resultsPerPage;
      const end = Math.min(resultsPerPage * page, mailsLength);
      const lastPage = Math.max(Math.ceil(mailsLength / resultsPerPage), 1);
      let pagination = {};
      if (page > lastPage) {
        mails2 = null;
        pagination = {
          lastPage
        };
      } else {
        mails2 = mails2.slice(begin, end);
        pagination = {
          totalResults: mailsLength,
          resultsPerPage,
          currentPage: page,
          lastPage,
          startIndex: begin,
          endIndex: end - 1
        };
      }
      return [
        200,
        {
          mails: mails2,
          pagination
        }
      ];
    });
    this._fuseMockApiService.onGet("api/apps/mailbox/mail").reply(({ request }) => {
      const id = request.params.get("id");
      const mails2 = cloneDeep_default(this._mails);
      const mail = mails2.find((item) => item.id === id);
      return [200, mail];
    });
    this._fuseMockApiService.onPatch("api/apps/mailbox/mail").reply(({ request }) => {
      const id = request.body.id;
      const mail = cloneDeep_default(request.body.mail);
      let updatedMail = null;
      this._mails.forEach((item, index, mails2) => {
        if (item.id === id) {
          mails2[index] = assign_default({}, mails2[index], mail);
          updatedMail = mails2[index];
        }
      });
      return [200, updatedMail];
    });
  }
};
_MailboxMockApi.\u0275fac = function MailboxMockApi_Factory(t) {
  return new (t || _MailboxMockApi)(\u0275\u0275inject(FuseMockApiService));
};
_MailboxMockApi.\u0275prov = /* @__PURE__ */ \u0275\u0275defineInjectable({ token: _MailboxMockApi, factory: _MailboxMockApi.\u0275fac, providedIn: "root" });
var MailboxMockApi = _MailboxMockApi;

// src/app/mock-api/apps/notes/data.ts
var now3 = DateTime.now();
var labels2 = [
  {
    id: "f47c92e5-20b9-44d9-917f-9ff4ad25dfd0",
    title: "Family"
  },
  {
    id: "e2f749f5-41ed-49d0-a92a-1c83d879e371",
    title: "Work"
  },
  {
    id: "b1cde9ee-e54d-4142-ad8b-cf55dafc9528",
    title: "Tasks"
  },
  {
    id: "6c288794-47eb-4605-8bdf-785b61a449d3",
    title: "Priority"
  },
  {
    id: "bbc73458-940b-421c-8d5f-8dcd23a9b0d6",
    title: "Personal"
  },
  {
    id: "2dc11344-3507-48e0-83d6-1c047107f052",
    title: "Friends"
  }
];
var notes = [
  {
    id: "8f011ac5-b71c-4cd7-a317-857dcd7d85e0",
    title: "",
    content: "Find a new company name",
    tasks: null,
    image: null,
    reminder: null,
    labels: ["e2f749f5-41ed-49d0-a92a-1c83d879e371"],
    archived: false,
    createdAt: now3.set({
      hour: 10,
      minute: 19
    }).minus({ day: 98 }).toISO(),
    updatedAt: null
  },
  {
    id: "ced0a1ce-051d-41a3-b080-e2161e4ae621",
    title: "",
    content: "Send the photos of last summer to John",
    tasks: null,
    image: "images/cards/14-640x480.jpg",
    reminder: null,
    labels: [
      "bbc73458-940b-421c-8d5f-8dcd23a9b0d6",
      "b1cde9ee-e54d-4142-ad8b-cf55dafc9528"
    ],
    archived: false,
    createdAt: now3.set({
      hour: 15,
      minute: 37
    }).minus({ day: 80 }).toISO(),
    updatedAt: null
  },
  {
    id: "d3ac02a9-86e4-4187-bbd7-2c965518b3a3",
    title: "",
    content: "Update the design of the theme",
    tasks: null,
    image: null,
    reminder: null,
    labels: ["6c288794-47eb-4605-8bdf-785b61a449d3"],
    archived: false,
    createdAt: now3.set({
      hour: 19,
      minute: 27
    }).minus({ day: 74 }).toISO(),
    updatedAt: now3.set({
      hour: 15,
      minute: 36
    }).minus({ day: 50 }).toISO()
  },
  {
    id: "89861bd4-0144-4bb4-8b39-332ca10371d5",
    title: "",
    content: "Theming support for all apps",
    tasks: null,
    image: null,
    reminder: now3.set({
      hour: 12,
      minute: 34
    }).plus({ day: 50 }).toISO(),
    labels: ["e2f749f5-41ed-49d0-a92a-1c83d879e371"],
    archived: false,
    createdAt: now3.set({
      hour: 12,
      minute: 34
    }).minus({ day: 59 }).toISO(),
    updatedAt: null
  },
  {
    id: "ffd20f3c-2d43-4c6b-8021-278032fc9e92",
    title: "Gift Ideas",
    content: "Stephanie's birthday is coming and I need to pick a present for her. Take a look at the below list and buy one of them (or all of them)",
    tasks: [
      {
        id: "330a924f-fb51-48f6-a374-1532b1dd353d",
        content: "Scarf",
        completed: false
      },
      {
        id: "781855a6-2ad2-4df4-b0af-c3cb5f302b40",
        content: "A new bike helmet",
        completed: true
      },
      {
        id: "bcb8923b-33cd-42c2-9203-170994fa24f5",
        content: "Necklace",
        completed: false
      },
      {
        id: "726bdf6e-5cd7-408a-9a4f-0d7bb98c1c4b",
        content: "Flowers",
        completed: false
      }
    ],
    image: null,
    reminder: null,
    labels: ["f47c92e5-20b9-44d9-917f-9ff4ad25dfd0"],
    archived: false,
    createdAt: now3.set({
      hour: 16,
      minute: 4
    }).minus({ day: 47 }).toISO(),
    updatedAt: null
  },
  {
    id: "71d223bb-abab-4183-8919-cd3600a950b4",
    title: "Shopping list",
    content: "",
    tasks: [
      {
        id: "e3cbc986-641c-4448-bc26-7ecfa0549c22",
        content: "Bread",
        completed: true
      },
      {
        id: "34013111-ab2c-4b2f-9352-d2ae282f57d3",
        content: "Milk",
        completed: false
      },
      {
        id: "0fbdea82-cc79-4433-8ee4-54fd542c380d",
        content: "Onions",
        completed: false
      },
      {
        id: "66490222-743e-4262-ac91-773fcd98a237",
        content: "Coffee",
        completed: true
      },
      {
        id: "ab367215-d06a-48b0-a7b8-e161a63b07bd",
        content: "Toilet Paper",
        completed: true
      }
    ],
    image: null,
    reminder: now3.set({
      hour: 10,
      minute: 44
    }).minus({ day: 35 }).toISO(),
    labels: ["b1cde9ee-e54d-4142-ad8b-cf55dafc9528"],
    archived: false,
    createdAt: now3.set({
      hour: 10,
      minute: 44
    }).minus({ day: 35 }).toISO(),
    updatedAt: null
  },
  {
    id: "11fbeb98-ae5e-41ad-bed6-330886fd7906",
    title: "Keynote Schedule",
    content: "",
    tasks: [
      {
        id: "2711bac1-7d8a-443a-a4fe-506ef51d3fcb",
        content: "Breakfast",
        completed: true
      },
      {
        id: "e3a2d675-a3e5-4cef-9205-feeccaf949d7",
        content: "Opening ceremony",
        completed: true
      },
      {
        id: "7a721b6d-9d85-48e0-b6c3-f927079af582",
        content: "Talk 1: How we did it!",
        completed: true
      },
      {
        id: "bdb4d5cd-5bb8-45e2-9186-abfd8307e429",
        content: "Talk 2: How can you do it!",
        completed: false
      },
      {
        id: "c8293bb4-8ab4-4310-bbc2-52ecf8ec0c54",
        content: "Lunch break",
        completed: false
      }
    ],
    image: null,
    reminder: now3.set({
      hour: 11,
      minute: 27
    }).minus({ day: 14 }).toISO(),
    labels: [
      "b1cde9ee-e54d-4142-ad8b-cf55dafc9528",
      "e2f749f5-41ed-49d0-a92a-1c83d879e371"
    ],
    archived: false,
    createdAt: now3.set({
      hour: 11,
      minute: 27
    }).minus({ day: 24 }).toISO(),
    updatedAt: null
  },
  {
    id: "d46dee8b-8761-4b6d-a1df-449d6e6feb6a",
    title: "",
    content: "Organize the dad's surprise retirement party",
    tasks: null,
    image: null,
    reminder: now3.set({
      hour: 14,
      minute: 56
    }).minus({ day: 25 }).toISO(),
    labels: ["f47c92e5-20b9-44d9-917f-9ff4ad25dfd0"],
    archived: false,
    createdAt: now3.set({
      hour: 14,
      minute: 56
    }).minus({ day: 20 }).toISO(),
    updatedAt: null
  },
  {
    id: "6bc9f002-1675-417c-93c4-308fba39023e",
    title: "Plan the road trip",
    content: "",
    tasks: null,
    image: "images/cards/17-640x480.jpg",
    reminder: null,
    labels: [
      "2dc11344-3507-48e0-83d6-1c047107f052",
      "b1cde9ee-e54d-4142-ad8b-cf55dafc9528"
    ],
    archived: false,
    createdAt: now3.set({
      hour: 9,
      minute: 32
    }).minus({ day: 15 }).toISO(),
    updatedAt: now3.set({
      hour: 17,
      minute: 6
    }).minus({ day: 12 }).toISO()
  },
  {
    id: "15188348-78aa-4ed6-b5c2-028a214ba987",
    title: "Office Address",
    content: "933 8th Street Stamford, CT 06902",
    tasks: null,
    image: null,
    reminder: null,
    labels: ["e2f749f5-41ed-49d0-a92a-1c83d879e371"],
    archived: false,
    createdAt: now3.set({
      hour: 20,
      minute: 5
    }).minus({ day: 12 }).toISO(),
    updatedAt: null
  },
  {
    id: "1dbfc685-1a0a-4070-9ca7-ed896c523037",
    title: "Tasks",
    content: "",
    tasks: [
      {
        id: "004638bf-3ee6-47a5-891c-3be7b9f3df09",
        content: "Wash the dishes",
        completed: true
      },
      {
        id: "86e6820b-1ae3-4c14-a13e-35605a0d654b",
        content: "Walk the dog",
        completed: false
      }
    ],
    image: null,
    reminder: now3.set({
      hour: 13,
      minute: 43
    }).minus({ day: 2 }).toISO(),
    labels: ["bbc73458-940b-421c-8d5f-8dcd23a9b0d6"],
    archived: false,
    createdAt: now3.set({
      hour: 13,
      minute: 43
    }).minus({ day: 7 }).toISO(),
    updatedAt: null
  },
  {
    id: "49548409-90a3-44d4-9a9a-f5af75aa9a66",
    title: "",
    content: "Dinner with parents",
    tasks: null,
    image: null,
    reminder: null,
    labels: [
      "f47c92e5-20b9-44d9-917f-9ff4ad25dfd0",
      "6c288794-47eb-4605-8bdf-785b61a449d3"
    ],
    archived: false,
    createdAt: now3.set({
      hour: 7,
      minute: 12
    }).minus({ day: 2 }).toISO(),
    updatedAt: null
  },
  {
    id: "c6d13a35-500d-4491-a3f3-6ca05d6632d3",
    title: "",
    content: "Re-fill the medicine cabinet",
    tasks: null,
    image: null,
    reminder: null,
    labels: [
      "bbc73458-940b-421c-8d5f-8dcd23a9b0d6",
      "6c288794-47eb-4605-8bdf-785b61a449d3"
    ],
    archived: true,
    createdAt: now3.set({
      hour: 17,
      minute: 14
    }).minus({ day: 100 }).toISO(),
    updatedAt: null
  },
  {
    id: "c6d13a35-500d-4491-a3f3-6ca05d6632d3",
    title: "",
    content: "Update the icons pack",
    tasks: null,
    image: null,
    reminder: null,
    labels: ["e2f749f5-41ed-49d0-a92a-1c83d879e371"],
    archived: true,
    createdAt: now3.set({
      hour: 10,
      minute: 29
    }).minus({ day: 85 }).toISO(),
    updatedAt: null
  },
  {
    id: "46214383-f8e7-44da-aa2e-0b685e0c5027",
    title: "Team Meeting",
    content: "Talk about the future of the web apps",
    tasks: null,
    image: null,
    reminder: null,
    labels: [
      "e2f749f5-41ed-49d0-a92a-1c83d879e371",
      "b1cde9ee-e54d-4142-ad8b-cf55dafc9528"
    ],
    archived: true,
    createdAt: now3.set({
      hour: 15,
      minute: 30
    }).minus({ day: 69 }).toISO(),
    updatedAt: null
  }
];

// src/app/mock-api/apps/notes/api.ts
var _NotesMockApi = class _NotesMockApi {
  /**
   * Constructor
   */
  constructor(_fuseMockApiService) {
    this._fuseMockApiService = _fuseMockApiService;
    this._labels = labels2;
    this._notes = notes;
    this.registerHandlers();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Register Mock API handlers
   */
  registerHandlers() {
    this._fuseMockApiService.onGet("api/apps/notes/labels").reply(() => [200, cloneDeep_default(this._labels)]);
    this._fuseMockApiService.onPost("api/apps/notes/labels").reply(({ request }) => {
      const label = {
        id: FuseMockApiUtils.guid(),
        title: request.body.title
      };
      this._labels.push(label);
      return [200, cloneDeep_default(this._labels)];
    });
    this._fuseMockApiService.onPatch("api/apps/notes/labels").reply(({ request }) => {
      const updatedLabel = request.body.label;
      this._labels = this._labels.map((label) => {
        if (label.id === updatedLabel.id) {
          return __spreadProps(__spreadValues({}, label), {
            title: updatedLabel.title
          });
        }
        return label;
      });
      return [200, cloneDeep_default(this._labels)];
    });
    this._fuseMockApiService.onDelete("api/apps/notes/labels").reply(({ request }) => {
      const id = request.params.get("id");
      this._labels = this._labels.filter((label) => label.id !== id);
      this._notes = this._notes.map((note) => __spreadProps(__spreadValues({}, note), {
        labels: note.labels.filter((item) => item !== id)
      }));
      return [200, cloneDeep_default(this._labels)];
    });
    this._fuseMockApiService.onPost("api/apps/notes/tasks").reply(({ request }) => {
      let updatedNote = request.body.note;
      const task = request.body.task;
      this._notes = this._notes.map((note) => {
        if (note.id === updatedNote.id) {
          if (!note.tasks) {
            note.tasks = [];
          }
          note.tasks.push({
            id: FuseMockApiUtils.guid(),
            content: task,
            completed: false
          });
          updatedNote = cloneDeep_default(note);
          return __spreadValues({}, note);
        }
        return note;
      });
      return [200, updatedNote];
    });
    this._fuseMockApiService.onGet("api/apps/notes/all").reply(() => {
      const labels4 = cloneDeep_default(this._labels);
      let notes2 = cloneDeep_default(this._notes);
      notes2 = notes2.map((note) => __spreadProps(__spreadValues({}, note), {
        labels: note.labels.map((labelId) => labels4.find((label) => label.id === labelId))
      }));
      return [200, notes2];
    });
    this._fuseMockApiService.onPost("api/apps/notes").reply(({ request }) => {
      const note = request.body.note;
      note.id = FuseMockApiUtils.guid();
      this._notes.push(note);
      return [200, note];
    });
    this._fuseMockApiService.onPatch("api/apps/notes").reply(({ request }) => {
      const updatedNote = request.body.updatedNote;
      this._notes = this._notes.map((note) => {
        if (note.id === updatedNote.id) {
          return __spreadValues({}, updatedNote);
        }
        return note;
      });
      return [200, updatedNote];
    });
    this._fuseMockApiService.onDelete("api/apps/notes").reply(({ request }) => {
      const id = request.params.get("id");
      this._notes.forEach((item, index) => {
        if (item.id === id) {
          this._notes.splice(index, 1);
        }
      });
      return [200, true];
    });
  }
};
_NotesMockApi.\u0275fac = function NotesMockApi_Factory(t) {
  return new (t || _NotesMockApi)(\u0275\u0275inject(FuseMockApiService));
};
_NotesMockApi.\u0275prov = /* @__PURE__ */ \u0275\u0275defineInjectable({ token: _NotesMockApi, factory: _NotesMockApi.\u0275fac, providedIn: "root" });
var NotesMockApi = _NotesMockApi;

// src/app/mock-api/apps/scrumboard/data.ts
var now4 = DateTime.now();
var boards = [
  {
    id: "2c82225f-2a6c-45d3-b18a-1132712a4234",
    title: "Admin Dashboard",
    description: "Roadmap for the new project",
    icon: "heroicons_outline:rectangle-group",
    lastActivity: now4.startOf("day").minus({ day: 1 }).toISO(),
    members: [
      "9c510cf3-460d-4a8c-b3be-bcc3db578c08",
      "baa88231-0ee6-4028-96d5-7f187e0f4cd5",
      "18bb18f3-ea7d-4465-8913-e8c9adf6f568"
    ]
  },
  {
    id: "0168b519-3dab-4b46-b2ea-0e678e38a583",
    title: "Weekly Planning",
    description: "Job related tasks for the week",
    icon: "heroicons_outline:calendar",
    lastActivity: now4.startOf("day").minus({ day: 2 }).toISO(),
    members: [
      "79ebb9ee-1e57-4706-810c-03edaec8f56d",
      "319ecb5b-f99c-4ee4-81b2-3aeffd1d4735",
      "5bf7ed5b-8b04-46b7-b364-005958b7d82e",
      "d1f612e6-3e3b-481f-a8a9-f917e243b06e",
      "fe0fec0d-002b-406f-87ab-47eb87ba577c",
      "23a47d2c-c6cb-40cc-af87-e946a9df5028",
      "6726643d-e8dc-42fa-83a6-b4ec06921a6b",
      "0d1eb062-13d5-4286-b8d4-e0bea15f3d56"
    ]
  },
  {
    id: "bc7db965-3c4f-4233-abf5-69bd70c3c175",
    title: "Personal Tasks",
    description: "Personal tasks around the house",
    icon: "heroicons_outline:home",
    lastActivity: now4.startOf("day").minus({ week: 1 }).toISO(),
    members: ["6f6a1c34-390b-4b2e-97c8-ff0e0d787839"]
  }
];
var lists = [
  {
    id: "a2df7786-519c-485a-a85f-c09a61cc5f37",
    boardId: "2c82225f-2a6c-45d3-b18a-1132712a4234",
    position: 65536,
    title: "To do"
  },
  {
    id: "83ca2a34-65af-49c0-a42e-94a34003fcf2",
    boardId: "2c82225f-2a6c-45d3-b18a-1132712a4234",
    position: 131072,
    title: "In progress"
  },
  {
    id: "a85ea483-f8f7-42d9-a314-3fed6aac22ab",
    boardId: "2c82225f-2a6c-45d3-b18a-1132712a4234",
    position: 196608,
    title: "In review"
  },
  {
    id: "34cbef38-5687-4813-bd66-141a6df6d832",
    boardId: "2c82225f-2a6c-45d3-b18a-1132712a4234",
    position: 262144,
    title: "Completed"
  }
];
var cards = [
  {
    id: "e74e66e9-fe0f-441e-a8ce-28ed6eccc48d",
    boardId: "2c82225f-2a6c-45d3-b18a-1132712a4234",
    listId: "a2df7786-519c-485a-a85f-c09a61cc5f37",
    position: 65536,
    title: "Example that showcase all of the available bits on the card with a fairly long title compared to other cards",
    description: "Example that showcase all of the available bits on the card with a fairly long title compared to other cards. Example that showcase all of the available bits on the card with a fairly long title compared to other cards.",
    labels: [
      "e0175175-2784-48f1-a519-a1d2e397c9b3",
      "51779701-818a-4a53-bc16-137c3bd7a564",
      "e8364d69-9595-46ce-a0f9-ce428632a0ac",
      "caff9c9b-a198-4564-b1f4-8b3df1d345bb",
      "f9eeb436-13a3-4208-a239-0d555960a567"
    ],
    dueDate: now4.startOf("day").minus({ day: 10 }).toISO()
  },
  {
    id: "ed58add1-45a7-41db-887d-3ca7ee7f2719",
    boardId: "2c82225f-2a6c-45d3-b18a-1132712a4234",
    listId: "a2df7786-519c-485a-a85f-c09a61cc5f37",
    position: 131072,
    title: "Do a research about most needed admin applications",
    labels: ["e0175175-2784-48f1-a519-a1d2e397c9b3"],
    dueDate: null
  },
  {
    id: "cd6897cb-acfd-4016-8b53-3f66a5b5fc68",
    boardId: "2c82225f-2a6c-45d3-b18a-1132712a4234",
    listId: "a2df7786-519c-485a-a85f-c09a61cc5f37",
    position: 196608,
    title: "Implement the Project dashboard",
    labels: ["caff9c9b-a198-4564-b1f4-8b3df1d345bb"],
    dueDate: now4.startOf("day").toISO()
  },
  {
    id: "6da8747f-b474-4c9a-9eba-5ef212285500",
    boardId: "2c82225f-2a6c-45d3-b18a-1132712a4234",
    listId: "a2df7786-519c-485a-a85f-c09a61cc5f37",
    position: 262144,
    title: "Implement the Analytics dashboard",
    labels: ["caff9c9b-a198-4564-b1f4-8b3df1d345bb"],
    dueDate: now4.startOf("day").minus({ day: 1 }).toISO()
  },
  {
    id: "94fb1dee-dd83-4cca-acdd-02e96d3cc4f1",
    boardId: "2c82225f-2a6c-45d3-b18a-1132712a4234",
    listId: "83ca2a34-65af-49c0-a42e-94a34003fcf2",
    position: 65536,
    title: "Analytics dashboard design",
    labels: ["e8364d69-9595-46ce-a0f9-ce428632a0ac"],
    dueDate: null
  },
  {
    id: "fc16f7d8-957d-43ed-ba85-20f99b5ce011",
    boardId: "2c82225f-2a6c-45d3-b18a-1132712a4234",
    listId: "83ca2a34-65af-49c0-a42e-94a34003fcf2",
    position: 131072,
    title: "Project dashboard design",
    labels: ["e8364d69-9595-46ce-a0f9-ce428632a0ac"],
    dueDate: null
  },
  {
    id: "c0b32f1f-64ec-4f8d-8b11-a8dc809df331",
    boardId: "2c82225f-2a6c-45d3-b18a-1132712a4234",
    listId: "a85ea483-f8f7-42d9-a314-3fed6aac22ab",
    position: 65536,
    title: "JWT Auth implementation",
    labels: ["caff9c9b-a198-4564-b1f4-8b3df1d345bb"],
    dueDate: null
  },
  {
    id: "532c2747-be79-464a-9897-6a682bf22b64",
    boardId: "2c82225f-2a6c-45d3-b18a-1132712a4234",
    listId: "34cbef38-5687-4813-bd66-141a6df6d832",
    position: 65536,
    title: "Create low fidelity wireframes",
    labels: [],
    dueDate: null
  },
  {
    id: "1d908efe-c830-476e-9e87-d06e30d89bc2",
    boardId: "2c82225f-2a6c-45d3-b18a-1132712a4234",
    listId: "34cbef38-5687-4813-bd66-141a6df6d832",
    position: 131072,
    title: "Create high fidelity wireframes",
    labels: [],
    dueDate: now4.startOf("day").minus({ day: 10 }).toISO()
  },
  {
    id: "b1da11ed-7896-4826-962d-4b7b718896d4",
    boardId: "2c82225f-2a6c-45d3-b18a-1132712a4234",
    listId: "34cbef38-5687-4813-bd66-141a6df6d832",
    position: 196608,
    title: "Collect information about most used admin layouts",
    labels: ["e0175175-2784-48f1-a519-a1d2e397c9b3"],
    dueDate: null
  },
  {
    id: "3b7f3ceb-107f-42bc-a204-c268c9a56cb4",
    boardId: "2c82225f-2a6c-45d3-b18a-1132712a4234",
    listId: "34cbef38-5687-4813-bd66-141a6df6d832",
    position: 262144,
    title: "Do a research about latest UI trends",
    labels: ["e0175175-2784-48f1-a519-a1d2e397c9b3"],
    dueDate: null
  },
  {
    id: "cd7f01c5-a941-4076-8cef-37da0354e643",
    boardId: "2c82225f-2a6c-45d3-b18a-1132712a4234",
    listId: "34cbef38-5687-4813-bd66-141a6df6d832",
    position: 327680,
    title: "Learn more about UX",
    labels: ["e0175175-2784-48f1-a519-a1d2e397c9b3"],
    dueDate: null
  }
];
var labels3 = [
  {
    id: "e0175175-2784-48f1-a519-a1d2e397c9b3",
    boardId: "2c82225f-2a6c-45d3-b18a-1132712a4234",
    title: "Research"
  },
  {
    id: "51779701-818a-4a53-bc16-137c3bd7a564",
    boardId: "2c82225f-2a6c-45d3-b18a-1132712a4234",
    title: "Wireframing"
  },
  {
    id: "e8364d69-9595-46ce-a0f9-ce428632a0ac",
    boardId: "2c82225f-2a6c-45d3-b18a-1132712a4234",
    title: "Design"
  },
  {
    id: "caff9c9b-a198-4564-b1f4-8b3df1d345bb",
    boardId: "2c82225f-2a6c-45d3-b18a-1132712a4234",
    title: "Development"
  },
  {
    id: "f9eeb436-13a3-4208-a239-0d555960a567",
    boardId: "2c82225f-2a6c-45d3-b18a-1132712a4234",
    title: "Bug"
  }
];
var members = [
  {
    id: "6f6a1c34-390b-4b2e-97c8-ff0e0d787839",
    name: "Angeline Vinson",
    avatar: "images/avatars/female-01.jpg"
  },
  {
    id: "4ce4be48-c8c0-468d-9df8-ddfda14cdb37",
    name: "Roseann Greer",
    avatar: "images/avatars/female-02.jpg"
  },
  {
    id: "9c510cf3-460d-4a8c-b3be-bcc3db578c08",
    name: "Lorraine Barnett",
    avatar: "images/avatars/female-03.jpg"
  },
  {
    id: "7ec887d9-b01a-4057-b5dc-aaed18637cc1",
    name: "Middleton Bradford",
    avatar: "images/avatars/male-01.jpg"
  },
  {
    id: "74975a82-addb-427b-9b43-4d2e03331b68",
    name: "Sue Hays",
    avatar: "images/avatars/female-04.jpg"
  },
  {
    id: "18bb18f3-ea7d-4465-8913-e8c9adf6f568",
    name: "Keith Neal",
    avatar: "images/avatars/male-02.jpg"
  },
  {
    id: "baa88231-0ee6-4028-96d5-7f187e0f4cd5",
    name: "Wilkins Gilmore",
    avatar: "images/avatars/male-03.jpg"
  },
  {
    id: "0d1eb062-13d5-4286-b8d4-e0bea15f3d56",
    name: "Baldwin Stein",
    avatar: "images/avatars/male-04.jpg"
  },
  {
    id: "5bf7ed5b-8b04-46b7-b364-005958b7d82e",
    name: "Bobbie Cohen",
    avatar: "images/avatars/female-05.jpg"
  },
  {
    id: "93b1a72b-e2db-4f77-82d6-272047433508",
    name: "Melody Peters",
    avatar: "images/avatars/female-06.jpg"
  },
  {
    id: "d1f612e6-3e3b-481f-a8a9-f917e243b06e",
    name: "Marquez Ryan",
    avatar: "images/avatars/male-05.jpg"
  },
  {
    id: "79ebb9ee-1e57-4706-810c-03edaec8f56d",
    name: "Roberta Briggs",
    avatar: "images/avatars/female-07.jpg"
  },
  {
    id: "6726643d-e8dc-42fa-83a6-b4ec06921a6b",
    name: "Robbie Buckley",
    avatar: "images/avatars/female-08.jpg"
  },
  {
    id: "8af617d7-898e-4992-beda-d5ac1d7ceda4",
    name: "Garcia Whitney",
    avatar: "images/avatars/male-06.jpg"
  },
  {
    id: "bcff44c4-9943-4adc-9049-08b1d922a658",
    name: "Spencer Pate",
    avatar: "images/avatars/male-07.jpg"
  },
  {
    id: "54160ca2-29c9-4475-88a1-31a9307ad913",
    name: "Monica Mcdaniel",
    avatar: "images/avatars/female-09.jpg"
  },
  {
    id: "51286603-3a43-444e-9242-f51fe57d5363",
    name: "Mcmillan Durham",
    avatar: "images/avatars/male-08.jpg"
  },
  {
    id: "319ecb5b-f99c-4ee4-81b2-3aeffd1d4735",
    name: "Jeoine Hebert",
    avatar: "images/avatars/female-10.jpg"
  },
  {
    id: "fe0fec0d-002b-406f-87ab-47eb87ba577c",
    name: "Susanna Kline",
    avatar: "images/avatars/female-11.jpg"
  },
  {
    id: "23a47d2c-c6cb-40cc-af87-e946a9df5028",
    name: "Suzette Singleton",
    avatar: "images/avatars/female-12.jpg"
  }
];

// src/app/mock-api/apps/scrumboard/api.ts
var _ScrumboardMockApi = class _ScrumboardMockApi {
  /**
   * Constructor
   */
  constructor(_fuseMockApiService) {
    this._fuseMockApiService = _fuseMockApiService;
    this._boards = boards;
    this._cards = cards;
    this._labels = labels3;
    this._lists = lists;
    this._members = members;
    this.registerHandlers();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Register Mock API handlers
   */
  registerHandlers() {
    this._fuseMockApiService.onGet("api/apps/scrumboard/boards").reply(({ request }) => {
      let boards2 = cloneDeep_default(this._boards);
      boards2 = boards2.map((board) => __spreadProps(__spreadValues({}, board), {
        members: board.members.map((boardMember) => this._members.find((member) => boardMember === member.id))
      }));
      return [200, boards2];
    });
    this._fuseMockApiService.onGet("api/apps/scrumboard/board").reply(({ request }) => {
      const id = request.params.get("id");
      const board = this._boards.find((item) => item.id === id);
      board.lists = this._lists.filter((item) => item.boardId === id).sort((a, b) => a.position - b.position);
      let cards2 = this._cards.filter((item) => item.boardId === id);
      cards2 = cards2.map((card) => __spreadProps(__spreadValues({}, card), {
        labels: card.labels.map((cardLabelId) => this._labels.find((label) => label.id === cardLabelId))
      }));
      board.lists.forEach((list, index, array) => {
        array[index].cards = cards2.filter((item) => item.boardId === id && item.listId === list.id).sort((a, b) => a.position - b.position);
      });
      board.labels = this._labels.filter((item) => item.boardId === id);
      return [200, cloneDeep_default(board)];
    });
    this._fuseMockApiService.onPost("api/apps/scrumboard/board/list").reply(({ request }) => {
      const newList = cloneDeep_default(request.body.list);
      newList.id = FuseMockApiUtils.guid();
      this._lists.push(newList);
      return [200, newList];
    });
    this._fuseMockApiService.onPatch("api/apps/scrumboard/board/list").reply(({ request }) => {
      const list = cloneDeep_default(request.body.list);
      let updatedList = null;
      this._lists.forEach((item, index, lists2) => {
        if (item.id === list.id) {
          lists2[index] = assign_default({}, lists2[index], list);
          updatedList = lists2[index];
        }
      });
      return [200, updatedList];
    });
    this._fuseMockApiService.onPatch("api/apps/scrumboard/board/lists").reply(({ request }) => {
      const lists2 = cloneDeep_default(request.body.lists);
      const updatedLists = [];
      lists2.forEach((item) => {
        const index = this._lists.findIndex((list) => item.id === list.id);
        this._lists[index] = assign_default({}, this._lists[index], item);
        updatedLists.push(item);
      });
      return [200, updatedLists];
    });
    this._fuseMockApiService.onDelete("api/apps/scrumboard/board/list").reply(({ request }) => {
      const id = request.params.get("id");
      const index = this._lists.findIndex((item) => item.id === id);
      this._lists.splice(index, 1);
      this._cards = this._cards.filter((card) => card.listId !== id);
      return [200, true];
    });
    this._fuseMockApiService.onPut("api/apps/scrumboard/board/card").reply(({ request }) => {
      const newCard = cloneDeep_default(request.body.card);
      newCard.id = FuseMockApiUtils.guid();
      this._cards.push(newCard);
      return [200, newCard];
    });
    this._fuseMockApiService.onPatch("api/apps/scrumboard/board/card").reply(({ request }) => {
      const id = request.body.id;
      const card = cloneDeep_default(request.body.card);
      let updatedCard = null;
      card.labels = card.labels.map((itemLabel) => itemLabel.id);
      this._cards.forEach((item, index, cards2) => {
        if (item.id === id) {
          cards2[index] = assign_default({}, cards2[index], card);
          updatedCard = cloneDeep_default(cards2[index]);
        }
      });
      updatedCard.labels = updatedCard.labels.map((cardLabelId) => this._labels.find((label) => label.id === cardLabelId));
      return [200, updatedCard];
    });
    this._fuseMockApiService.onPatch("api/apps/scrumboard/board/cards").reply(({ request }) => {
      const cards2 = cloneDeep_default(request.body.cards);
      const updatedCards = [];
      cards2.forEach((item) => {
        const index = this._cards.findIndex((card) => item.id === card.id);
        item.labels = item.labels.map((itemLabel) => itemLabel.id);
        this._cards[index] = assign_default({}, this._cards[index], item);
        item.labels = item.labels.map((cardLabelId) => this._labels.find((label) => label.id === cardLabelId));
        updatedCards.push(item);
      });
      return [200, updatedCards];
    });
    this._fuseMockApiService.onDelete("api/apps/scrumboard/board/card").reply(({ request }) => {
      const id = request.params.get("id");
      const index = this._cards.findIndex((item) => item.id === id);
      this._cards.splice(index, 1);
      return [200, true];
    });
    this._fuseMockApiService.onPatch("api/apps/scrumboard/board/card/positions").reply(({ request }) => {
      const cards2 = request.body.cards;
      this._cards.forEach((card) => {
        card.position = cards2.findIndex((item) => item.id === card.id && item.listId === card.listId && item.boardId === card.boardId);
      });
      const updatedCards = cloneDeep_default(this._cards);
      return [200, updatedCards];
    });
    this._fuseMockApiService.onGet("api/apps/scrumboard/board/labels").reply(({ request }) => {
      const boardId = request.params.get("boardId");
      const labels4 = this._labels.filter((item) => item.boardId === boardId);
      return [200, cloneDeep_default(labels4)];
    });
    this._fuseMockApiService.onPut("api/apps/scrumboard/board/label").reply(({ request }) => {
      const newLabel = cloneDeep_default(request.body.label);
      newLabel.id = FuseMockApiUtils.guid();
      this._labels.unshift(newLabel);
      return [200, newLabel];
    });
    this._fuseMockApiService.onPatch("api/apps/scrumboard/board/label").reply(({ request }) => {
      const id = request.body.id;
      const label = cloneDeep_default(request.body.label);
      let updatedLabel = null;
      this._labels.forEach((item, index, labels4) => {
        if (item.id === id) {
          labels4[index] = assign_default({}, labels4[index], label);
          updatedLabel = labels4[index];
        }
      });
      return [200, updatedLabel];
    });
    this._fuseMockApiService.onDelete("api/apps/scrumboard/board/label").reply(({ request }) => {
      const id = request.params.get("id");
      const index = this._labels.findIndex((item) => item.id === id);
      this._labels.splice(index, 1);
      const cardsWithLabel = this._cards.filter((card) => card.labels.indexOf(id) > -1);
      cardsWithLabel.forEach((card) => {
        card.tags.splice(card.tags.indexOf(id), 1);
      });
      return [200, true];
    });
  }
};
_ScrumboardMockApi.\u0275fac = function ScrumboardMockApi_Factory(t) {
  return new (t || _ScrumboardMockApi)(\u0275\u0275inject(FuseMockApiService));
};
_ScrumboardMockApi.\u0275prov = /* @__PURE__ */ \u0275\u0275defineInjectable({ token: _ScrumboardMockApi, factory: _ScrumboardMockApi.\u0275fac, providedIn: "root" });
var ScrumboardMockApi = _ScrumboardMockApi;

// src/app/mock-api/apps/tasks/data.ts
var tags3 = [
  {
    id: "a0bf42ca-c3a5-47be-8341-b9c0bb8ef270",
    title: "Api"
  },
  {
    id: "c6058d0d-a4b0-4453-986a-9d249ec230b1",
    title: "Frontend"
  },
  {
    id: "d3ef4226-ef2c-43b0-a986-3e3e07f32799",
    title: "Bug"
  },
  {
    id: "51483dd3-cb98-4400-9128-4bd66b455807",
    title: "Backend"
  },
  {
    id: "91658b8a-f382-4b0c-a53f-e9390351c2c5",
    title: "Urgent"
  },
  {
    id: "2b884143-419a-45ca-a7f6-48f99f4e7798",
    title: "Discuss"
  }
];
var tasks = [
  {
    id: "f65d517a-6f69-4c88-81f5-416f47405ce1",
    type: "section",
    title: "Company internal application v2.0.0",
    notes: "Magna consectetur culpa duis ad est tempor pariatur velit ullamco aute exercitation magna sunt commodo minim enim aliquip eiusmod ipsum adipisicing magna ipsum reprehenderit lorem magna voluptate magna aliqua culpa.\n\nSit nisi adipisicing pariatur enim enim sunt officia ad labore voluptate magna proident velit excepteur pariatur cillum sit excepteur elit veniam excepteur minim nisi cupidatat proident dolore irure veniam mollit.",
    completed: false,
    dueDate: "2017-10-18T13:03:37.943Z",
    priority: 1,
    tags: [
      "91658b8a-f382-4b0c-a53f-e9390351c2c5",
      "51483dd3-cb98-4400-9128-4bd66b455807"
    ],
    assignedTo: null,
    subTasks: [
      {
        id: "2768a969-a316-449b-bf82-93cff4252cbf",
        title: "Minim irure fugiat ullamco irure",
        completed: false
      },
      {
        id: "6cc5ac8f-3a02-47e6-ad4b-0bd0222e2717",
        title: "Sint velit ex in adipisicing fugiat",
        completed: false
      }
    ],
    order: 0
  },
  {
    id: "0fcece82-1691-4b98-a9b9-b63218f9deef",
    type: "task",
    title: "Create the landing/marketing page and host it on the beta channel",
    notes: "Et in lorem qui ipsum deserunt duis exercitation lorem elit qui qui ipsum tempor nulla velit aliquip enim consequat incididunt pariatur duis excepteur elit irure nulla ipsum dolor dolore est.\n\nAute deserunt nostrud id non ipsum do adipisicing laboris in minim officia magna elit minim mollit elit velit veniam lorem pariatur veniam sit excepteur irure commodo excepteur duis quis in.",
    completed: false,
    dueDate: null,
    priority: 0,
    tags: [],
    assignedTo: "e2c81627-a8a1-4bbc-9adc-ac4281e040d4",
    subTasks: [],
    order: 1
  },
  {
    id: "2e6971cd-49d5-49f1-8cbd-fba5c71e6062",
    type: "task",
    title: "Move dependency system to Yarn for easier package management",
    notes: "Id fugiat et cupidatat magna nulla nulla eu cillum officia nostrud dolore in veniam ullamco nulla ex duis est enim nisi aute ipsum velit et laboris est pariatur est culpa.\n\nCulpa sunt ipsum esse quis excepteur enim culpa est voluptate reprehenderit consequat duis officia irure voluptate veniam dolore fugiat dolor est amet nostrud non velit irure do voluptate id sit.",
    completed: false,
    dueDate: "2019-05-24T03:55:38.969Z",
    priority: 0,
    tags: [
      "c6058d0d-a4b0-4453-986a-9d249ec230b1",
      "2b884143-419a-45ca-a7f6-48f99f4e7798",
      "91658b8a-f382-4b0c-a53f-e9390351c2c5"
    ],
    assignedTo: "88a2a76c-0e6f-49da-b617-46d7c3b6e64d",
    subTasks: [
      {
        id: "b9566b52-82cd-4d2a-b9b6-240c6b44e52b",
        title: "Nulla officia elit adipisicing",
        completed: false
      },
      {
        id: "76f4dc8d-4803-4d98-b461-367a1d3746a8",
        title: "Magna nisi ut aliquip aliquip amet deserunt",
        completed: false
      }
    ],
    order: 2
  },
  {
    id: "974f93b8-336f-4eec-b011-9ddb412ee828",
    type: "task",
    title: "Fix permission issues that the 0.0.7-alpha.2 has introduced",
    notes: "Excepteur deserunt tempor do lorem elit id magna pariatur irure ullamco elit dolor consectetur ad officia fugiat incididunt do elit aute esse eu voluptate adipisicing incididunt ea dolor aliqua dolor.\n\nConsequat est quis deserunt voluptate ipsum incididunt laboris occaecat irure laborum voluptate non sit labore voluptate sunt id sint ut laboris aute cupidatat occaecat eiusmod non magna aliquip deserunt nisi.",
    completed: true,
    dueDate: null,
    priority: 2,
    tags: ["a0bf42ca-c3a5-47be-8341-b9c0bb8ef270"],
    assignedTo: null,
    subTasks: [
      {
        id: "8e9644dc-0815-4258-8a08-4ce8d9912ec0",
        title: "Adipisicing aliquip voluptate veniam",
        completed: false
      },
      {
        id: "fc0f2283-3802-4ebe-b164-774bc2b84549",
        title: "Magna amet adipisicing velit nisi est",
        completed: false
      },
      {
        id: "8a74b56f-14c0-4700-b737-8ccfa912f4b6",
        title: "Eiusmod dolore voluptate excepteur ipsum nostrud",
        completed: false
      },
      {
        id: "439ed5b7-156d-414a-ba20-ce779e3ec037",
        title: "Laborum adipisicing quis culpa amet",
        completed: true
      }
    ],
    order: 3
  },
  {
    id: "5d877fc7-b881-4527-a6aa-d39d642feb23",
    type: "task",
    title: "Start Twitter promotions using the company Twitter account",
    notes: "Labore mollit in aliqua exercitation aliquip elit nisi nisi voluptate reprehenderit et dolor incididunt cupidatat ullamco nulla consequat voluptate adipisicing dolor qui magna sint aute do excepteur in aliqua consectetur.\n\nElit laborum non duis irure ad ullamco aliqua enim exercitation quis fugiat aute esse esse magna et ad cupidatat voluptate sint nulla nulla lorem et enim deserunt proident deserunt consectetur.",
    completed: true,
    dueDate: null,
    priority: 1,
    tags: ["51483dd3-cb98-4400-9128-4bd66b455807"],
    assignedTo: "4678ad07-e057-48a9-a5d1-3cf98e722eeb",
    subTasks: [
      {
        id: "b076c673-7d76-43b5-aaca-d0c496f397e5",
        title: "Esse dolore nostrud lorem consectetur",
        completed: false
      },
      {
        id: "a01522ff-07fa-4fbd-a168-47802446b705",
        title: "Lorem velit voluptate laborum ad",
        completed: false
      }
    ],
    order: 4
  },
  {
    id: "3d1c26c5-1e5e-4eb6-8006-ed6037ed9aca",
    type: "task",
    title: "Add more error pages - 401, 301, 303, 500 etc.",
    notes: "Sunt mollit irure dolor aliquip sit veniam amet ut sunt dolore cillum sint pariatur qui irure proident velit non excepteur quis ut et quis velit aliqua ea sunt cillum sit.\n\nReprehenderit est culpa ut incididunt sit dolore mollit in occaecat velit culpa consequat reprehenderit ex lorem cupidatat proident reprehenderit ad eu sunt sit ut sit culpa ea reprehenderit aliquip est.",
    completed: false,
    dueDate: "2018-09-29T19:30:45.325Z",
    priority: 1,
    tags: ["c6058d0d-a4b0-4453-986a-9d249ec230b1"],
    assignedTo: "6617b0a3-0ccd-44ea-af78-c6633115d683",
    subTasks: [],
    order: 5
  },
  {
    id: "11bd2b9a-85b4-41c9-832c-bd600dfa3a52",
    type: "task",
    title: "Clear the caches before the production build",
    notes: "Sint mollit consectetur voluptate fugiat sunt ipsum adipisicing labore exercitation eiusmod enim excepteur enim proident velit sint magna commodo dolor ex ipsum sit nisi deserunt labore eu irure amet ea.\n\nOccaecat ut velit et sint pariatur laboris voluptate duis aliqua aliqua exercitation et duis duis eu laboris excepteur occaecat quis esse enim ex dolore commodo fugiat excepteur adipisicing in fugiat.",
    completed: true,
    dueDate: "2017-10-12T12:03:55.559Z",
    priority: 2,
    tags: [],
    assignedTo: "271e6a06-0d37-433d-bc8d-607b12bcbed9",
    subTasks: [
      {
        id: "9cd8eba8-7c41-4230-9d80-f71f7ed1cfe9",
        title: "Eu exercitation proident dolore velit",
        completed: true
      }
    ],
    order: 6
  },
  {
    id: "f55c023a-785e-4f0f-b5b7-47da75224deb",
    type: "task",
    title: "Examine the package loss rates that the 0.0.7-alpha.1 has introduced",
    notes: "In exercitation sunt ad anim commodo sunt do in sunt est officia amet ex ullamco do nisi consectetur lorem proident lorem adipisicing incididunt consequat fugiat voluptate sint est anim officia.\n\nVelit sint aliquip elit culpa amet eu mollit veniam esse deserunt ex occaecat quis lorem minim occaecat culpa esse veniam enim duis excepteur ipsum esse ut ut velit cillum adipisicing.",
    completed: false,
    dueDate: "2022-06-05T19:41:12.501Z",
    priority: 2,
    tags: [],
    assignedTo: "7f5db993-ec36-412f-9db3-16d076a98807",
    subTasks: [
      {
        id: "cdb08aa2-980d-48c6-b15c-7970775b7b5a",
        title: "Veniam magna minim duis",
        completed: true
      },
      {
        id: "dc19e213-687e-4391-8b61-9aabed2fb288",
        title: "Eu dolore et adipisicing commodo adipisicing consequat",
        completed: false
      },
      {
        id: "7e365400-59b9-4ec9-b397-8bf40de56ec4",
        title: "Do culpa quis consequat cupidatat",
        completed: true
      },
      {
        id: "1a0f98b0-dfc4-4ac9-b8f5-ce322da2a849",
        title: "Est duis do sunt esse magna ex",
        completed: true
      }
    ],
    order: 7
  },
  {
    id: "c577a67d-357a-4b88-96e8-a0ee1fe9162e",
    type: "task",
    title: "Start Google ads using the company coupons",
    notes: "Ad adipisicing duis consequat magna sunt consequat aliqua eiusmod qui et nostrud voluptate sit enim reprehenderit anim exercitation ipsum ipsum anim ipsum laboris aliqua ex lorem aute officia voluptate culpa.\n\nNostrud anim ex pariatur ipsum et nostrud esse veniam ipsum ipsum irure velit ad quis irure tempor nulla amet aute id esse reprehenderit ea consequat consequat ea minim magna magna.",
    completed: false,
    dueDate: "2020-04-06T02:57:58.506Z",
    priority: 1,
    tags: [
      "c6058d0d-a4b0-4453-986a-9d249ec230b1",
      "a0bf42ca-c3a5-47be-8341-b9c0bb8ef270"
    ],
    assignedTo: "a21ec32e-54ba-480b-afdc-d1cbe18a96fd",
    subTasks: [
      {
        id: "b1849778-a69c-46ad-8373-99aa6a655965",
        title: "Ipsum ipsum occaecat nulla",
        completed: true
      },
      {
        id: "8325f17a-2af0-4f64-b043-8ffdaaa62408",
        title: "Quis proident amet id non nulla",
        completed: true
      }
    ],
    order: 8
  },
  {
    id: "1a680c29-7ece-4a80-9709-277ad4da8b4b",
    type: "section",
    title: "Developer API for the payment system",
    notes: "Magna laborum et amet magna fugiat officia deserunt in exercitation aliquip nulla magna velit ea labore quis deserunt ipsum occaecat id id consequat non eiusmod mollit est voluptate ea ex.\n\nReprehenderit mollit ut excepteur minim veniam fugiat enim id pariatur amet elit nostrud occaecat pariatur et esse aliquip irure quis officia reprehenderit voluptate voluptate est et voluptate sint esse dolor.",
    completed: false,
    dueDate: "2020-02-08T22:42:35.937Z",
    priority: 2,
    tags: [
      "a0bf42ca-c3a5-47be-8341-b9c0bb8ef270",
      "2b884143-419a-45ca-a7f6-48f99f4e7798"
    ],
    assignedTo: "3e353312-6a9b-46af-adda-5061b06e806b",
    subTasks: [],
    order: 9
  },
  {
    id: "c49c2216-8bdb-4df0-be25-d5ea1dbb5688",
    type: "task",
    title: "Re-think the current API restrictions to loosen them a bit",
    notes: "Adipisicing laboris ipsum fugiat et cupidatat aute esse ad labore et est cillum ipsum sunt duis do veniam minim officia deserunt in eiusmod eu duis dolore excepteur consectetur id elit.\n\nAnim excepteur occaecat laborum sunt in elit quis sit duis adipisicing laboris anim laborum et pariatur elit qui consectetur laborum reprehenderit occaecat nostrud pariatur aliqua elit nisi commodo eu excepteur.",
    completed: false,
    dueDate: "2019-08-10T06:18:17.785Z",
    priority: 1,
    tags: ["a0bf42ca-c3a5-47be-8341-b9c0bb8ef270"],
    assignedTo: "368aab1e-ebce-43ba-8925-4cf13937867b",
    subTasks: [
      {
        id: "756ceee7-a9b2-45b6-9f22-5be974da7cf5",
        title: "Irure incididunt adipisicing consectetur enim",
        completed: false
      }
    ],
    order: 10
  },
  {
    id: "3ef176fa-6cba-4536-9f43-540c686a4faa",
    type: "task",
    title: "Pre-flight checks causes random crashes on logging service",
    notes: "Culpa duis nostrud qui velit sint magna officia fugiat ipsum eiusmod enim laborum pariatur anim culpa elit ipsum lorem pariatur exercitation laborum do labore cillum exercitation nisi reprehenderit exercitation quis.\n\nMollit aute dolor non elit et incididunt eiusmod non in commodo occaecat id in excepteur aliqua ea anim pariatur sint elit voluptate dolor eu non laborum laboris voluptate qui duis.",
    completed: false,
    dueDate: "2024-08-23T14:33:06.227Z",
    priority: 2,
    tags: ["91658b8a-f382-4b0c-a53f-e9390351c2c5"],
    assignedTo: "271e6a06-0d37-433d-bc8d-607b12bcbed9",
    subTasks: [
      {
        id: "35b06803-2019-4025-b642-841e44de7571",
        title: "Reprehenderit et eiusmod do consectetur ipsum",
        completed: false
      },
      {
        id: "7ec47bbc-e644-45ae-84e3-de36ee35a22b",
        title: "Officia lorem tempor occaecat fugiat elit elit",
        completed: false
      },
      {
        id: "b4560302-7bed-412c-8e43-a5ce0bce5eed",
        title: "Incididunt commodo amet fugiat nulla et",
        completed: false
      },
      {
        id: "494bfcac-44ee-46db-add2-0e5dbc3952c4",
        title: "Enim ipsum fugiat ipsum aute quis",
        completed: true
      },
      {
        id: "ffa45bc0-4466-4584-891a-0f75e39766c1",
        title: "Esse excepteur commodo ullamco",
        completed: true
      }
    ],
    order: 11
  },
  {
    id: "7bc6b7b4-7ad8-4cbe-af36-7301642d35fb",
    type: "task",
    title: "Increase the timeout amount to allow more retries on client side",
    notes: "Ea proident dolor tempor dolore incididunt velit incididunt ullamco quis proident consectetur magna excepteur cillum officia ex do aliqua reprehenderit est esse officia labore dolore aute laboris eu commodo aute.\n\nOfficia quis id ipsum adipisicing ipsum eu exercitation cillum ex elit pariatur adipisicing ullamco ullamco nulla dolore magna aliqua reprehenderit eu laborum voluptate reprehenderit non eiusmod deserunt velit magna do.",
    completed: true,
    dueDate: "2017-08-16T12:56:48.039Z",
    priority: 1,
    tags: [
      "51483dd3-cb98-4400-9128-4bd66b455807",
      "d3ef4226-ef2c-43b0-a986-3e3e07f32799",
      "a0bf42ca-c3a5-47be-8341-b9c0bb8ef270"
    ],
    assignedTo: "4d24cf48-a322-4d53-89cb-9140dfd5c6ba",
    subTasks: [
      {
        id: "a72f756b-e1db-4492-96b9-93785400e8bb",
        title: "Amet eiusmod consequat non culpa",
        completed: false
      },
      {
        id: "07fb282a-141a-4014-96d2-030894a6e211",
        title: "Nulla laboris veniam qui et nostrud enim",
        completed: false
      },
      {
        id: "40629855-8ba8-4590-9ebe-2e2ff3f20820",
        title: "Est est nulla cillum aliquip duis ipsum",
        completed: true
      },
      {
        id: "96e283b2-cd3e-4ab9-9770-07247691304b",
        title: "Non elit tempor commodo enim laboris",
        completed: true
      },
      {
        id: "95c6a48a-4e42-4909-8c25-0fafd62aeefa",
        title: "Proident est anim do laborum nostrud",
        completed: false
      }
    ],
    order: 12
  },
  {
    id: "56c9ed66-a1d2-4803-a160-fba29b826cb4",
    type: "task",
    title: "Create the landing/marketing page and host it on the beta channel",
    notes: "Elit cillum incididunt enim cupidatat ex elit cillum aute dolor consectetur proident non minim eu est deserunt proident mollit ullamco laborum anim ea labore anim ex enim ullamco consectetur enim.\n\nEx magna consectetur esse enim consequat non aliqua nulla labore mollit sit quis ex fugiat commodo eu cupidatat irure incididunt consequat enim ut deserunt consequat elit consequat sint adipisicing sunt.",
    completed: true,
    dueDate: "2023-09-15T15:12:36.910Z",
    priority: 0,
    tags: ["2b884143-419a-45ca-a7f6-48f99f4e7798"],
    assignedTo: "3a23baf7-2db8-4ef5-8d49-86d3e708dff5",
    subTasks: [
      {
        id: "f1890ef6-89ed-47ca-a124-8305d7fe71fd",
        title: "Sit eu aliqua et et",
        completed: true
      },
      {
        id: "647f63b9-27b8-4d65-8e09-874ef5a48573",
        title: "Voluptate esse cillum commodo",
        completed: true
      },
      {
        id: "2934f015-1fd1-41c0-8b5a-d7adb5c50553",
        title: "Qui commodo fugiat eiusmod sint anim",
        completed: true
      },
      {
        id: "f964fc8d-662c-4586-a39f-dab6674f2760",
        title: "Consequat nulla anim velit reprehenderit",
        completed: false
      },
      {
        id: "ab3dd1a9-a9fb-4864-8630-da270cf71ee5",
        title: "Adipisicing officia ex laboris",
        completed: true
      }
    ],
    order: 13
  },
  {
    id: "21c1b662-33c8-44d7-9530-91896afeeac7",
    type: "task",
    title: "Move dependency system to Yarn for easier package management",
    notes: "Duis culpa ut veniam voluptate consequat proident magna eiusmod id est magna culpa nulla enim culpa mollit velit lorem mollit ut minim dolore in tempor reprehenderit cillum occaecat proident ea.\n\nVeniam fugiat ea duis qui et eu eiusmod voluptate id cillum eiusmod eu reprehenderit minim reprehenderit nisi cillum nostrud duis eu magna minim sunt voluptate eu pariatur nulla ullamco elit.",
    completed: true,
    dueDate: "2020-08-08T16:32:24.768Z",
    priority: 1,
    tags: [],
    assignedTo: null,
    subTasks: [
      {
        id: "e5fece14-cc26-40df-9319-23568cf89662",
        title: "Tempor qui eiusmod et",
        completed: false
      },
      {
        id: "30e6117d-e2a2-4f97-a674-19a554a94829",
        title: "Tempor magna eu dolore aliquip",
        completed: false
      },
      {
        id: "a5dd7270-1bc7-4b2b-abf0-9366eaca972d",
        title: "Lorem duis esse commodo",
        completed: false
      },
      {
        id: "40ffd839-046f-4272-9232-5391d62477f7",
        title: "Minim aute eu ut id",
        completed: false
      }
    ],
    order: 14
  },
  {
    id: "5fa52c90-82be-41ae-96ec-5fc67cf054a4",
    type: "task",
    title: "Fix permission issues that the 0.0.7-alpha.2 has introduced",
    notes: "Mollit nostrud ea irure ex ipsum in cupidatat irure sit officia reprehenderit adipisicing et occaecat cupidatat exercitation mollit esse in excepteur qui elit exercitation velit fugiat exercitation est officia excepteur.\n\nQuis esse voluptate laborum non veniam duis est fugiat tempor culpa minim velit minim ut duis qui officia consectetur ex nostrud ut elit elit nulla in consectetur voluptate aliqua aliqua.",
    completed: false,
    dueDate: "2019-10-13T08:25:17.064Z",
    priority: 0,
    tags: ["2b884143-419a-45ca-a7f6-48f99f4e7798"],
    assignedTo: "b2e97a96-2f15-4e3d-aff5-4ddf2af924d4",
    subTasks: [
      {
        id: "2ef107fb-3c21-4801-861f-abaf4fd6def0",
        title: "Voluptate qui excepteur id in",
        completed: true
      },
      {
        id: "0afb4ebf-fcc7-47dc-8351-a88cb47c39ee",
        title: "Laborum ipsum aute nisi anim",
        completed: false
      },
      {
        id: "2f22bff2-72be-4ff5-b037-c3bf0f1d5637",
        title: "Amet duis velit sunt non",
        completed: false
      }
    ],
    order: 15
  },
  {
    id: "b6d8909f-f36d-4885-8848-46b8230d4476",
    type: "task",
    title: "Start Twitter promotions using the company Twitter account",
    notes: "Laboris ea nisi commodo nulla cillum consequat consectetur nisi velit adipisicing minim nulla culpa amet quis sit duis id id aliqua aute exercitation non reprehenderit aliquip enim eiusmod eu irure.\n\nNon irure consectetur sunt cillum do adipisicing excepteur labore proident ut officia dolor fugiat velit sint consectetur cillum qui amet enim anim mollit laboris consectetur non do laboris lorem aliqua.",
    completed: true,
    dueDate: "2020-02-03T05:39:30.880Z",
    priority: 1,
    tags: ["2b884143-419a-45ca-a7f6-48f99f4e7798"],
    assignedTo: "65e15136-5168-4655-8bbc-e3ad8a94bf67",
    subTasks: [],
    order: 16
  },
  {
    id: "9496235d-4d0c-430b-817e-1cba96404f95",
    type: "task",
    title: "Add more error pages - 401, 301, 303, 500 etc.",
    notes: "Ullamco eiusmod do pariatur pariatur consectetur commodo proident ex voluptate ullamco culpa commodo deserunt pariatur incididunt nisi magna dolor est minim eu ex voluptate deserunt labore id magna excepteur et.\n\nReprehenderit dolore pariatur exercitation ad non fugiat quis proident fugiat incididunt ea magna pariatur et exercitation tempor cillum eu consequat adipisicing est laborum sit cillum ea fugiat mollit cupidatat est.",
    completed: true,
    dueDate: "2020-03-09T19:42:06.383Z",
    priority: 1,
    tags: [],
    assignedTo: "7f5db993-ec36-412f-9db3-16d076a98807",
    subTasks: [
      {
        id: "9e710568-306f-47f9-b397-5634dc7a1a52",
        title: "Lorem excepteur non anim non exercitation fugiat",
        completed: true
      },
      {
        id: "bd10d3d5-22d1-467d-aa6b-431d23203f51",
        title: "Nulla non in occaecat nulla",
        completed: false
      },
      {
        id: "0a768b47-7248-4000-a201-e51f86401317",
        title: "Dolor qui deserunt duis enim do veniam",
        completed: true
      }
    ],
    order: 17
  },
  {
    id: "7fde17e6-4ac1-47dd-a363-2f4f14dcf76a",
    type: "task",
    title: "Clear the caches before the production build",
    notes: "Qui quis nulla excepteur voluptate elit culpa occaecat id ex do adipisicing est mollit id anim nisi irure amet officia ut sint aliquip dolore labore cupidatat magna laborum esse ea.\n\nEnim magna duis sit incididunt amet anim et nostrud laborum eiusmod et ea fugiat aliquip velit sit fugiat consectetur ipsum anim do enim excepteur cupidatat consequat sunt irure tempor ut.",
    completed: true,
    dueDate: "2022-08-24T03:03:09.899Z",
    priority: 1,
    tags: [
      "2b884143-419a-45ca-a7f6-48f99f4e7798",
      "91658b8a-f382-4b0c-a53f-e9390351c2c5",
      "c6058d0d-a4b0-4453-986a-9d249ec230b1",
      "a0bf42ca-c3a5-47be-8341-b9c0bb8ef270"
    ],
    assignedTo: "88a2a76c-0e6f-49da-b617-46d7c3b6e64d",
    subTasks: [
      {
        id: "f82708c3-2b58-4ac0-b58c-164c0804c631",
        title: "Mollit laborum tempor lorem cupidatat dolore nostrud",
        completed: true
      },
      {
        id: "0017121e-79fc-403c-bb1c-84dc28f79e06",
        title: "Nisi sint sint et et ad",
        completed: true
      },
      {
        id: "9073242a-5be6-487a-9e50-ea298700af79",
        title: "Duis nulla ad magna",
        completed: false
      }
    ],
    order: 18
  },
  {
    id: "90a3ed58-e13b-40cf-9219-f933bf9c9b8f",
    type: "task",
    title: "Examine the package loss rates that the 0.0.7-alpha.1 has introduced",
    notes: "Consequat consectetur commodo deserunt sunt aliquip deserunt ex tempor esse nostrud sit dolore anim nostrud nulla dolore veniam minim laboris non dolor veniam lorem veniam deserunt laborum aute amet irure.\n\nEiusmod officia veniam reprehenderit ea aliquip velit anim aute minim aute nisi tempor qui sunt deserunt voluptate velit elit ut adipisicing ipsum et excepteur ipsum eu ullamco nisi esse dolor.",
    completed: false,
    dueDate: "2023-10-04T15:48:16.507Z",
    priority: 1,
    tags: ["d3ef4226-ef2c-43b0-a986-3e3e07f32799"],
    assignedTo: null,
    subTasks: [
      {
        id: "eaab24ed-cf9e-4ee7-b7ff-acd8f62f617a",
        title: "Eiusmod nulla enim laborum deserunt in",
        completed: false
      },
      {
        id: "700d067c-c5be-4532-95e3-ba575effae7c",
        title: "Sunt sint ea est commodo id",
        completed: false
      }
    ],
    order: 19
  },
  {
    id: "81ac908c-35a2-4705-8d75-539863c35c09",
    type: "task",
    title: "Start Google ads using the company coupons",
    notes: "Sit occaecat sint nulla in esse dolor occaecat in ea sit irure magna magna veniam fugiat consequat exercitation ipsum ex officia velit consectetur consequat voluptate lorem eu proident lorem incididunt.\n\nExcepteur exercitation et qui labore nisi eu voluptate ipsum deserunt deserunt eu est minim dolor ad proident nulla reprehenderit culpa minim voluptate dolor nostrud dolor anim labore aliqua officia nostrud.",
    completed: true,
    dueDate: "2024-02-01T10:02:52.745Z",
    priority: 1,
    tags: ["a0bf42ca-c3a5-47be-8341-b9c0bb8ef270"],
    assignedTo: "368aab1e-ebce-43ba-8925-4cf13937867b",
    subTasks: [
      {
        id: "651a87c6-4376-42c4-9dfd-fad7525e7eb3",
        title: "Aliqua est excepteur excepteur deserunt id",
        completed: true
      }
    ],
    order: 20
  },
  {
    id: "153376ed-691f-4dfd-ae99-e204a49edc44",
    type: "task",
    title: "Re-think the current API restrictions to loosen them a bit",
    notes: "Duis sint velit incididunt exercitation eiusmod nisi sunt ex est fugiat ad cupidatat sunt nisi elit do duis amet voluptate ipsum aliquip lorem aliqua sint esse in magna irure officia.\n\nNon eu ex elit ut est voluptate tempor amet ut officia in duis deserunt cillum labore do culpa id dolore magna anim consectetur qui consectetur fugiat labore mollit magna irure.",
    completed: true,
    dueDate: "2021-02-22T17:42:00.257Z",
    priority: 2,
    tags: [],
    assignedTo: "65f1c421-83c5-4cdf-99da-d97794328679",
    subTasks: [],
    order: 21
  },
  {
    id: "1ebde495-1bcd-4e8f-b6f6-cf63b521ad06",
    type: "section",
    title: "Marketing and promotions for the mobile app",
    notes: "Aute commodo reprehenderit cupidatat duis nulla mollit sint cupidatat elit adipisicing fugiat sunt cupidatat amet proident fugiat aute adipisicing et non minim occaecat ea esse consectetur aute culpa exercitation incididunt.\n\nEnim et lorem anim dolor excepteur qui tempor cupidatat do proident adipisicing esse incididunt mollit quis irure amet ad officia culpa minim cillum veniam voluptate lorem exercitation sunt cillum dolor.",
    completed: false,
    dueDate: "2018-08-04T19:32:53.652Z",
    priority: 1,
    tags: [],
    assignedTo: "e62ab50e-90d3-4ed7-a911-093bb44d0c50",
    subTasks: [
      {
        id: "c5a8b915-0b0f-4dd3-a1a3-e538fa191747",
        title: "Adipisicing do minim voluptate",
        completed: true
      },
      {
        id: "52b50615-0d80-42b6-97cb-1b71eaec1632",
        title: "Et eiusmod est adipisicing officia",
        completed: true
      }
    ],
    order: 22
  },
  {
    id: "4e7ce72f-863a-451f-9160-cbd4fbbc4c3d",
    type: "task",
    title: "Pre-flight checks causes random crashes on logging service",
    notes: "Exercitation sit eiusmod enim officia exercitation eiusmod sunt eiusmod excepteur ad commodo eiusmod qui proident quis aliquip excepteur sit cillum occaecat non dolore sit in labore ut duis esse duis.\n\nConsequat sunt voluptate consectetur dolor laborum enim nostrud deserunt incididunt sint veniam laboris sunt amet velit anim duis aliqua sunt aliqua aute qui nisi mollit qui irure ullamco aliquip laborum.",
    completed: true,
    dueDate: "2020-09-29T02:25:14.111Z",
    priority: 1,
    tags: [],
    assignedTo: "ef44b39b-3272-45f5-a15e-264c3b2d118e",
    subTasks: [
      {
        id: "654c9b65-6f94-4ae7-bf11-27f979cc670e",
        title: "Esse exercitation cillum ex",
        completed: false
      },
      {
        id: "3c49aba9-1e83-471f-b8b8-21cc7d20292e",
        title: "Duis sunt commodo fugiat irure minim",
        completed: false
      },
      {
        id: "4fcb2e0b-677c-4915-978d-70e82b16745a",
        title: "Anim in qui ut",
        completed: false
      },
      {
        id: "dd864dea-61d2-4fb0-b433-286993b6ad08",
        title: "Reprehenderit irure exercitation occaecat",
        completed: true
      }
    ],
    order: 23
  },
  {
    id: "0795a74f-7a84-4edf-8d66-296cdef70003",
    type: "task",
    title: "Increase the timeout amount to allow more retries on client side",
    notes: "Minim commodo cillum do id qui irure aliqua laboris excepteur laboris magna enim est lorem consectetur tempor laboris proident proident eu irure dolor eiusmod in officia lorem quis laborum ullamco.\n\nQui excepteur ex sit esse dolore deserunt ullamco occaecat laboris fugiat cupidatat excepteur laboris amet dolore enim velit ipsum velit sint cupidatat consectetur cupidatat deserunt sit eu do ullamco quis.",
    completed: true,
    dueDate: "2019-03-09T02:34:29.592Z",
    priority: 2,
    tags: [
      "c6058d0d-a4b0-4453-986a-9d249ec230b1",
      "d3ef4226-ef2c-43b0-a986-3e3e07f32799"
    ],
    assignedTo: "6617b0a3-0ccd-44ea-af78-c6633115d683",
    subTasks: [
      {
        id: "56f3dccb-a72b-485c-94e7-fe68477023e2",
        title: "Velit velit voluptate in occaecat nostrud",
        completed: true
      },
      {
        id: "70cb77a9-82fa-407b-a63e-55aedc241495",
        title: "Minim anim velit eiusmod qui",
        completed: true
      },
      {
        id: "08a31dbc-6be4-469b-9ff4-0ed5342082bd",
        title: "Laboris commodo laborum irure",
        completed: false
      },
      {
        id: "34d6c603-6f5a-4bc4-9f94-12bfd940c3c7",
        title: "Mollit mollit nostrud mollit id velit ullamco",
        completed: true
      }
    ],
    order: 24
  },
  {
    id: "05532574-c102-4228-89a8-55fff32ec6fc",
    type: "task",
    title: "Create the landing/marketing page and host it on the beta channel",
    notes: "Reprehenderit anim consectetur anim dolor magna consequat excepteur tempor enim duis magna proident ullamco aute voluptate elit laborum mollit labore id ex lorem est mollit do qui ex labore nulla.\n\nUt proident elit proident adipisicing elit fugiat ex ullamco dolore excepteur excepteur labore laborum sunt ipsum proident magna ex voluptate laborum voluptate sint proident eu reprehenderit non excepteur quis eiusmod.",
    completed: true,
    dueDate: "2023-12-08T23:20:50.910Z",
    priority: 2,
    tags: ["a0bf42ca-c3a5-47be-8341-b9c0bb8ef270"],
    assignedTo: null,
    subTasks: [],
    order: 25
  },
  {
    id: "b3917466-aa51-4293-9d5b-120b0ce6635c",
    type: "task",
    title: "Move dependency system to Yarn for easier package management",
    notes: "Ipsum officia mollit qui laboris sunt amet aliquip cupidatat minim non elit commodo eiusmod labore mollit pariatur aute reprehenderit ullamco occaecat enim pariatur aute amet occaecat incididunt irure ad ut.\n\nIncididunt cupidatat pariatur magna sint sit culpa ad cupidatat cillum exercitation consequat minim pariatur consectetur aliqua non adipisicing magna ad nulla ea do est nostrud eu aute id occaecat ut.",
    completed: false,
    dueDate: "2018-01-14T09:58:38.444Z",
    priority: 1,
    tags: [],
    assignedTo: "56a3e7ce-01da-43fc-ab9f-a8a39fa980de",
    subTasks: [
      {
        id: "3a4c4013-27f1-4164-8a64-e7bb4f1a63a9",
        title: "Adipisicing excepteur mollit non sunt amet laboris",
        completed: false
      },
      {
        id: "103bf29e-06a1-4d30-89b9-b67aa442d605",
        title: "Consectetur voluptate anim labore aliqua elit",
        completed: false
      },
      {
        id: "b77729f1-9ed1-4d9e-95d0-347f4cd0943c",
        title: "Laboris occaecat aliquip esse magna nulla",
        completed: true
      },
      {
        id: "695aace7-8679-4b35-96c7-cf23737cd9f1",
        title: "Exercitation eu aliquip cillum ipsum",
        completed: false
      },
      {
        id: "ffd45f31-7f0a-4c6a-b62c-18148f6841db",
        title: "Minim aute ad et esse officia nostrud",
        completed: true
      }
    ],
    order: 26
  },
  {
    id: "2f2fb472-24d4-4a00-aa80-d513fa6c059c",
    type: "task",
    title: "Fix permission issues that the 0.0.7-alpha.2 has introduced",
    notes: "Dolor cupidatat do qui in tempor dolor magna magna ut dolor est aute veniam consectetur enim sunt sunt duis magna magna aliquip id reprehenderit dolor in veniam ullamco incididunt occaecat.\n\nId duis pariatur anim cillum est sint non veniam voluptate deserunt anim nostrud duis voluptate occaecat elit ut veniam voluptate do qui est ad velit irure sint lorem ullamco aliqua.",
    completed: true,
    dueDate: "2020-06-08T00:23:24.051Z",
    priority: 1,
    tags: ["91658b8a-f382-4b0c-a53f-e9390351c2c5"],
    assignedTo: "65f1c421-83c5-4cdf-99da-d97794328679",
    subTasks: [
      {
        id: "4028671b-ef75-4b76-a03f-9f2bddadc618",
        title: "Commodo excepteur proident ipsum reprehenderit",
        completed: true
      },
      {
        id: "b122168f-8327-408f-8b9c-498dd6ba6c81",
        title: "Mollit ullamco eiusmod exercitation deserunt",
        completed: false
      },
      {
        id: "f233d812-be56-4d8a-ab14-a083f7d7cd70",
        title: "Mollit nostrud ea deserunt mollit aliquip",
        completed: false
      },
      {
        id: "0833be70-82b2-46cb-ad84-f11120ea634a",
        title: "Labore occaecat proident ullamco",
        completed: false
      }
    ],
    order: 27
  },
  {
    id: "2fffd148-7644-466d-8737-7dde88c54154",
    type: "task",
    title: "Start Twitter promotions using the company Twitter account",
    notes: "Velit commodo pariatur ullamco elit sunt dolor quis irure amet tempor laboris labore tempor nisi consectetur ea proident dolore culpa nostrud esse amet commodo do esse laboris laboris in magna.\n\nAute officia labore minim laborum irure cupidatat occaecat laborum ex labore ipsum aliqua cillum do exercitation esse et veniam excepteur mollit incididunt ut qui irure culpa qui deserunt nostrud tempor.",
    completed: false,
    dueDate: "2024-01-27T11:17:52.198Z",
    priority: 1,
    tags: ["d3ef4226-ef2c-43b0-a986-3e3e07f32799"],
    assignedTo: "b2e97a96-2f15-4e3d-aff5-4ddf2af924d4",
    subTasks: [
      {
        id: "d2ffe439-2f80-4dce-84a7-d4ac5e17bbf3",
        title: "Occaecat anim sunt dolor proident",
        completed: false
      }
    ],
    order: 28
  },
  {
    id: "24a1034e-b4d6-4a86-a1ea-90516e87e810",
    type: "task",
    title: "Add more error pages - 401, 301, 303, 500 etc.",
    notes: "Exercitation eu in officia lorem commodo pariatur pariatur nisi consectetur qui elit in aliquip et ullamco duis nostrud aute laborum laborum est dolor non qui amet deserunt ex et aliquip.\n\nProident consectetur eu amet minim labore anim ad non aute duis eiusmod sit ad elit magna do aliquip aliqua laborum dolor laboris ea irure duis mollit fugiat tempor eu est.",
    completed: false,
    dueDate: "2024-06-24T04:38:28.087Z",
    priority: 1,
    tags: ["51483dd3-cb98-4400-9128-4bd66b455807"],
    assignedTo: "7f5db993-ec36-412f-9db3-16d076a98807",
    subTasks: [
      {
        id: "75f55d75-c835-4a6c-a2ae-7a42ae3a7c9d",
        title: "Et laboris quis lorem est laboris",
        completed: true
      },
      {
        id: "c7c91a52-b060-45af-b1b1-a4cff26bf11e",
        title: "Reprehenderit elit dolore exercitation pariatur",
        completed: true
      }
    ],
    order: 29
  }
];

// src/app/mock-api/apps/tasks/api.ts
var _TasksMockApi = class _TasksMockApi {
  /**
   * Constructor
   */
  constructor(_fuseMockApiService) {
    this._fuseMockApiService = _fuseMockApiService;
    this._tags = tags3;
    this._tasks = tasks;
    this.registerHandlers();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Register Mock API handlers
   */
  registerHandlers() {
    this._fuseMockApiService.onGet("api/apps/tasks/tags").reply(() => [200, cloneDeep_default(this._tags)]);
    this._fuseMockApiService.onPost("api/apps/tasks/tag").reply(({ request }) => {
      const newTag = cloneDeep_default(request.body.tag);
      newTag.id = FuseMockApiUtils.guid();
      this._tags.unshift(newTag);
      return [200, newTag];
    });
    this._fuseMockApiService.onPatch("api/apps/tasks/tag").reply(({ request }) => {
      const id = request.body.id;
      const tag = cloneDeep_default(request.body.tag);
      let updatedTag = null;
      this._tags.forEach((item, index, tags4) => {
        if (item.id === id) {
          tags4[index] = assign_default({}, tags4[index], tag);
          updatedTag = tags4[index];
        }
      });
      return [200, updatedTag];
    });
    this._fuseMockApiService.onDelete("api/apps/tasks/tag").reply(({ request }) => {
      const id = request.params.get("id");
      const index = this._tags.findIndex((item) => item.id === id);
      this._tags.splice(index, 1);
      const tasksWithTag = this._tasks.filter((task) => task.tags.indexOf(id) > -1);
      tasksWithTag.forEach((task) => {
        task.tags.splice(task.tags.indexOf(id), 1);
      });
      return [200, true];
    });
    this._fuseMockApiService.onGet("api/apps/tasks/all").reply(() => {
      const tasks2 = cloneDeep_default(this._tasks);
      tasks2.sort((a, b) => a.order - b.order);
      return [200, tasks2];
    });
    this._fuseMockApiService.onGet("api/apps/tasks/search").reply(({ request }) => {
      const query = request.params.get("query");
      let results;
      if (query) {
        let tasks2 = cloneDeep_default(this._tasks);
        tasks2 = tasks2.filter((task) => task.title && task.title.toLowerCase().includes(query.toLowerCase()) || task.notes && task.notes.toLowerCase().includes(query.toLowerCase()));
        tasks2.forEach((task) => {
          const re = new RegExp("(" + query.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&") + ")", "ig");
          task.title = task.title.replace(re, "<mark>$1</mark>");
        });
        results = tasks2;
      } else {
        results = null;
      }
      return [200, results];
    });
    this._fuseMockApiService.onPatch("api/apps/tasks/order").reply(({ request }) => {
      const tasks2 = request.body.tasks;
      this._tasks.forEach((task) => {
        task.order = tasks2.findIndex((item) => item.id === task.id);
      });
      const updatedTasks = cloneDeep_default(this._tasks);
      return [200, updatedTasks];
    });
    this._fuseMockApiService.onGet("api/apps/tasks/task").reply(({ request }) => {
      const id = request.params.get("id");
      const tasks2 = cloneDeep_default(this._tasks);
      const task = tasks2.find((item) => item.id === id);
      return [200, task];
    });
    this._fuseMockApiService.onPost("api/apps/tasks/task").reply(({ request }) => {
      const newTask = {
        id: FuseMockApiUtils.guid(),
        type: request.body.type,
        title: "",
        notes: null,
        completed: false,
        dueDate: null,
        priority: 1,
        tags: [],
        order: 0
      };
      this._tasks.unshift(newTask);
      this._tasks.forEach((task, index) => {
        task.order = index;
      });
      return [200, newTask];
    });
    this._fuseMockApiService.onPatch("api/apps/tasks/task").reply(({ request }) => {
      const id = request.body.id;
      const task = cloneDeep_default(request.body.task);
      let updatedTask = null;
      this._tasks.forEach((item, index, tasks2) => {
        if (item.id === id) {
          tasks2[index] = assign_default({}, tasks2[index], task);
          updatedTask = tasks2[index];
        }
      });
      return [200, updatedTask];
    });
    this._fuseMockApiService.onDelete("api/apps/tasks/task").reply(({ request }) => {
      const id = request.params.get("id");
      const index = this._tasks.findIndex((item) => item.id === id);
      this._tasks.splice(index, 1);
      return [200, true];
    });
  }
};
_TasksMockApi.\u0275fac = function TasksMockApi_Factory(t) {
  return new (t || _TasksMockApi)(\u0275\u0275inject(FuseMockApiService));
};
_TasksMockApi.\u0275prov = /* @__PURE__ */ \u0275\u0275defineInjectable({ token: _TasksMockApi, factory: _TasksMockApi.\u0275fac, providedIn: "root" });
var TasksMockApi = _TasksMockApi;

// src/app/mock-api/common/user/data.ts
var user = {
  id: "cfaad35d-07a3-4447-a6c3-d8c3d54fd5df",
  name: "Brian Hughes",
  email: "ejemplo@crediplus.com",
  avatar: "images/avatars/avatar-user.png",
  status: "online"
};

// src/app/mock-api/common/auth/api.ts
var import_enc_base64 = __toESM(require_enc_base64());
var import_enc_utf8 = __toESM(require_enc_utf8());
var import_hmac_sha256 = __toESM(require_hmac_sha256());
var _AuthMockApi = class _AuthMockApi {
  /**
   * Constructor
   */
  constructor(_fuseMockApiService) {
    this._fuseMockApiService = _fuseMockApiService;
    this._user = user;
    this._secret = "YOUR_VERY_CONFIDENTIAL_SECRET_FOR_SIGNING_JWT_TOKENS!!!";
    this.registerHandlers();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Register Mock API handlers
   */
  registerHandlers() {
    this._fuseMockApiService.onPost("api/auth/forgot-password", 1e3).reply(() => [200, true]);
    this._fuseMockApiService.onPost("api/auth/reset-password", 1e3).reply(() => [200, true]);
    this._fuseMockApiService.onPost("api/auth/sign-in", 1500).reply(({ request }) => {
      if (request.body.email === "hughes.brian@company.com" && request.body.password === "admin") {
        return [
          200,
          {
            user: cloneDeep_default(this._user),
            accessToken: this._generateJWTToken(),
            tokenType: "bearer"
          }
        ];
      }
      return [404, false];
    });
    this._fuseMockApiService.onPost("api/auth/sign-in-with-token").reply(({ request }) => {
      const accessToken = request.body.accessToken;
      if (this._verifyJWTToken(accessToken)) {
        return [
          200,
          {
            user: cloneDeep_default(this._user),
            accessToken: this._generateJWTToken(),
            tokenType: "bearer"
          }
        ];
      }
      return [
        401,
        {
          error: "Invalid token"
        }
      ];
    });
    this._fuseMockApiService.onPost("api/auth/sign-up", 1500).reply(() => (
      // Simply return true
      [200, true]
    ));
    this._fuseMockApiService.onPost("api/auth/unlock-session", 1500).reply(({ request }) => {
      if (request.body.email === "hughes.brian@company.com" && request.body.password === "admin") {
        return [
          200,
          {
            user: cloneDeep_default(this._user),
            accessToken: this._generateJWTToken(),
            tokenType: "bearer"
          }
        ];
      }
      return [404, false];
    });
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Private methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Return base64 encoded version of the given string
   *
   * @param source
   * @private
   */
  _base64url(source) {
    let encodedSource = import_enc_base64.default.stringify(source);
    encodedSource = encodedSource.replace(/=+$/, "");
    encodedSource = encodedSource.replace(/\+/g, "-");
    encodedSource = encodedSource.replace(/\//g, "_");
    return encodedSource;
  }
  /**
   * Generates a JWT token using CryptoJS library.
   *
   * This generator is for mocking purposes only and it is NOT
   * safe to use it in production frontend applications!
   *
   * @private
   */
  _generateJWTToken() {
    const header = {
      alg: "HS256",
      typ: "JWT"
    };
    const date = /* @__PURE__ */ new Date();
    const iat = Math.floor(date.getTime() / 1e3);
    const exp = Math.floor(date.setDate(date.getDate() + 7) / 1e3);
    const payload = {
      iat,
      iss: "Fuse",
      exp
    };
    const stringifiedHeader = import_enc_utf8.default.parse(JSON.stringify(header));
    const encodedHeader = this._base64url(stringifiedHeader);
    const stringifiedPayload = import_enc_utf8.default.parse(JSON.stringify(payload));
    const encodedPayload = this._base64url(stringifiedPayload);
    let signature = encodedHeader + "." + encodedPayload;
    signature = (0, import_hmac_sha256.default)(signature, this._secret);
    signature = this._base64url(signature);
    return encodedHeader + "." + encodedPayload + "." + signature;
  }
  /**
   * Verify the given token
   *
   * @param token
   * @private
   */
  _verifyJWTToken(token) {
    const parts = token.split(".");
    const header = parts[0];
    const payload = parts[1];
    const signature = parts[2];
    const signatureCheck = this._base64url((0, import_hmac_sha256.default)(header + "." + payload, this._secret));
    return signature === signatureCheck;
  }
};
_AuthMockApi.\u0275fac = function AuthMockApi_Factory(t) {
  return new (t || _AuthMockApi)(\u0275\u0275inject(FuseMockApiService));
};
_AuthMockApi.\u0275prov = /* @__PURE__ */ \u0275\u0275defineInjectable({ token: _AuthMockApi, factory: _AuthMockApi.\u0275fac, providedIn: "root" });
var AuthMockApi = _AuthMockApi;

// src/app/mock-api/common/messages/data.ts
var now5 = DateTime.now();
var messages2 = [
  {
    id: "832276cc-c5e9-4fcc-8e23-d38e2e267bc9",
    image: "images/avatars/male-01.jpg",
    title: "Gary Peters",
    description: "We should talk about that at lunch!",
    time: now5.minus({ minutes: 25 }).toISO(),
    // 25 minutes ago
    read: false
  },
  {
    id: "608b4479-a3ac-4e26-8675-3609c52aca58",
    image: "images/avatars/male-04.jpg",
    title: "Leo Gill (Client #8817)",
    description: "You can download the latest invoices now. Please check and let me know.",
    time: now5.minus({ minutes: 50 }).toISO(),
    // 50 minutes ago
    read: false
  },
  {
    id: "22148c0c-d788-4d49-9467-447677d11b76",
    image: "images/avatars/female-01.jpg",
    title: "Sarah",
    description: "Don't forget to pickup Jeremy after school!",
    time: now5.minus({ hours: 3 }).toISO(),
    // 3 hours ago
    read: true,
    link: "/dashboards/project",
    useRouter: true
  },
  {
    id: "492e2917-760c-4921-aa5a-3201a857cd48",
    image: "images/avatars/female-12.jpg",
    title: "Nancy Salazar &bull; Joy Publishing",
    description: "I'll proof read your bio on next Monday.",
    time: now5.minus({ hours: 5 }).toISO(),
    // 5 hours ago
    read: true,
    link: "/dashboards/project",
    useRouter: true
  },
  {
    id: "214a46e5-cae7-4b18-9869-eabde7c7ea52",
    image: "images/avatars/male-06.jpg",
    title: "Matthew Wood",
    description: "Dude, I heard that they are going to promote you! Congrats man, tonight the drinks are on me!",
    time: now5.minus({ hours: 7 }).toISO(),
    // 7 hours ago
    read: false,
    link: "/dashboards/project",
    useRouter: true
  },
  {
    id: "95930319-61cc-4c7e-9324-f1091865330c",
    image: "images/avatars/female-04.jpg",
    title: "Elizabeth (New assistant)",
    description: "Boss, I've sent all client invoices but Geoffrey refusing to pay.",
    time: now5.minus({ hours: 9 }).toISO(),
    // 9 hours ago
    read: false,
    link: "/dashboards/project",
    useRouter: true
  },
  {
    id: "802935e9-9577-48bc-98d1-308a4872afd7",
    image: "images/avatars/male-06.jpg",
    title: "William Bell",
    description: "Did you see this game? We should hang out and give it a shot sometime.",
    time: now5.minus({ day: 1 }).toISO(),
    // 1 day ago
    read: true,
    link: "https://www.google.com",
    useRouter: false
  },
  {
    id: "059f3738-633b-48ea-ad83-19016ce24c62",
    image: "images/avatars/female-09.jpg",
    title: "Cheryl Obrien - HR",
    description: "Why did't you still look at the kitten pictures I've sent to you!",
    time: now5.minus({ day: 3 }).toISO(),
    // 3 days ago
    read: false,
    link: "/dashboards/project",
    useRouter: true
  },
  {
    id: "5c2bb44d-5ca7-42ff-ad7e-46ced9f49a24",
    image: "images/avatars/female-15.jpg",
    title: "Joan Jones - Tech",
    description: "Dude, Cheryl keeps bugging me with kitten pictures all the time :( What are we gonna do about it?",
    time: now5.minus({ day: 4 }).toISO(),
    // 4 days ago
    read: true,
    link: "/dashboards/project",
    useRouter: true
  }
];

// src/app/mock-api/common/messages/api.ts
var _MessagesMockApi = class _MessagesMockApi {
  /**
   * Constructor
   */
  constructor(_fuseMockApiService) {
    this._fuseMockApiService = _fuseMockApiService;
    this._messages = messages2;
    this.registerHandlers();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Register Mock API handlers
   */
  registerHandlers() {
    this._fuseMockApiService.onGet("api/common/messages").reply(() => [200, cloneDeep_default(this._messages)]);
    this._fuseMockApiService.onPost("api/common/messages").reply(({ request }) => {
      const newMessage = cloneDeep_default(request.body.message);
      newMessage.id = FuseMockApiUtils.guid();
      this._messages.unshift(newMessage);
      return [200, newMessage];
    });
    this._fuseMockApiService.onPatch("api/common/messages").reply(({ request }) => {
      const id = request.body.id;
      const message = cloneDeep_default(request.body.message);
      let updatedMessage = null;
      this._messages.forEach((item, index, messages3) => {
        if (item.id === id) {
          messages3[index] = assign_default({}, messages3[index], message);
          updatedMessage = messages3[index];
        }
      });
      return [200, updatedMessage];
    });
    this._fuseMockApiService.onDelete("api/common/messages").reply(({ request }) => {
      const id = request.params.get("id");
      let deletedMessage = null;
      const index = this._messages.findIndex((item) => item.id === id);
      deletedMessage = cloneDeep_default(this._messages[index]);
      this._messages.splice(index, 1);
      return [200, deletedMessage];
    });
    this._fuseMockApiService.onGet("api/common/messages/mark-all-as-read").reply(() => {
      this._messages.forEach((item, index, messages3) => {
        messages3[index].read = true;
        messages3[index].seen = true;
      });
      return [200, true];
    });
    this._fuseMockApiService.onPost("api/common/messages/toggle-read-status").reply(({ request }) => {
      const message = cloneDeep_default(request.body.message);
      let updatedMessage = null;
      this._messages.forEach((item, index, messages3) => {
        if (item.id === message.id) {
          messages3[index].read = message.read;
          updatedMessage = messages3[index];
        }
      });
      return [200, updatedMessage];
    });
  }
};
_MessagesMockApi.\u0275fac = function MessagesMockApi_Factory(t) {
  return new (t || _MessagesMockApi)(\u0275\u0275inject(FuseMockApiService));
};
_MessagesMockApi.\u0275prov = /* @__PURE__ */ \u0275\u0275defineInjectable({ token: _MessagesMockApi, factory: _MessagesMockApi.\u0275fac, providedIn: "root" });
var MessagesMockApi = _MessagesMockApi;

// src/app/mock-api/common/navigation/data.ts
var defaultNavigation = [
  {
    id: "1",
    title: "Dashboard",
    type: "collapsable",
    icon: "heroicons_outline:chart-pie",
    children: [
      {
        id: "1.1",
        title: "Resumen ejecutivo",
        type: "basic",
        link: "/pages/dashboard/resumen-ejecutivo"
      },
      {
        id: "1.2",
        title: "Rentabilidad e intereses",
        type: "basic",
        link: "/pages/dashboard/rentabilidad"
      },
      {
        id: "1.3",
        title: "Cartera y morosidad",
        type: "basic",
        link: "/pages/dashboard/cartera"
      }
      /*{
          id: '1.4',
          title: 'Comparativas financieras',
          type: 'basic',
          link: '/pages/dashboard/financieras',
      },*/
    ]
  },
  {
    id: "2",
    title: "Gesti\xF3n de cr\xE9ditos",
    type: "collapsable",
    icon: "attach_money",
    children: [
      {
        id: "2.1",
        title: "Solicitudes",
        type: "basic",
        link: "/pages/gestion-creditos/solicitudes"
      },
      {
        id: "2.2",
        title: "Cr\xE9ditos",
        type: "basic",
        link: "/pages/gestion-creditos/creditos"
      },
      {
        id: "2.3",
        title: "Desembolsos",
        type: "basic",
        link: "/pages/gestion-creditos/desembolsos"
      },
      {
        id: "2.4",
        title: "Detalle consumo",
        type: "basic",
        link: "/pages/gestion-creditos/consumos"
      }
    ]
  },
  {
    id: "3",
    title: "Gesti\xF3n de cartera",
    type: "collapsable",
    icon: "request_quote",
    children: [
      {
        id: "3.1",
        title: "Historico - Trabajadores",
        type: "basic",
        link: "/pages/gestion-cobros/cobros"
      },
      {
        id: "3.2",
        title: "Pago proveedores",
        type: "basic",
        link: "/pages/gestion-cobros/aliados"
      },
      {
        id: "3.3",
        title: "Cobro trabajadores",
        type: "basic",
        link: "/pages/gestion-cobros/maestro"
      },
      {
        id: "3.4",
        title: "Subscripci\xF3n",
        type: "basic",
        link: "/pages/gestion-cobros/cobro-aliado"
      }
      /*{
          id: 'apps.gestion.subcripciones',
          title: 'Subscripciones',
          type: 'basic',
          link: '/pages/gestion-cobros/subscripciones',
      }*/
    ]
  },
  {
    id: "4",
    title: "Gesti\xF3n de trabajadores",
    type: "collapsable",
    icon: "heroicons_outline:user-group",
    children: [
      {
        id: "4.1",
        title: "Trabajadores",
        type: "basic",
        link: "/pages/gestion-trabajadores/trabajadores"
      }
    ]
  },
  {
    id: "5",
    title: "Configuraciones",
    type: "collapsable",
    icon: "settings",
    children: [
      {
        id: "5.1",
        title: "Empresas maestras",
        type: "basic",
        link: "/pages/configuracion/empresas-maestras"
      },
      {
        id: "5.2",
        title: "Clientes - Aliados",
        type: "basic",
        link: "/pages/configuracion/empresas-clientes"
      },
      {
        id: "5.3",
        title: "Tipos de documentos",
        type: "basic",
        link: "/pages/configuracion/tipos-documentos"
      },
      {
        id: "5.4",
        title: "Capital de inversi\xF3n",
        type: "basic",
        link: "/pages/configuracion/capital-inversion"
      },
      {
        id: "5.5",
        title: "Departamentos",
        type: "basic",
        link: "/pages/configuracion/departamentos"
      },
      {
        id: "5.6",
        title: "G\xE9neros",
        type: "basic",
        link: "/pages/configuracion/generos"
      },
      {
        id: "5.7",
        title: "Tipos de pagos",
        type: "basic",
        link: "/pages/configuracion/tipos-pagos"
      },
      {
        id: "5.8",
        title: "Tasas de interes",
        type: "basic",
        link: "/pages/configuracion/tasas"
      },
      {
        id: "5.9",
        title: "Cobros fijos",
        type: "basic",
        link: "/pages/configuracion/cobros-fijos"
      }
    ]
  },
  {
    id: "6",
    title: "Gesti\xF3n bancos",
    type: "collapsable",
    icon: "account_balance",
    children: [
      {
        id: "6.1",
        title: "Cuentas bancarias",
        type: "basic",
        link: "/pages/gestion-bancos/cuentas"
      },
      {
        id: "6.2",
        title: "Bancos",
        type: "basic",
        link: "/pages/gestion-bancos/bancos"
      }
    ]
  },
  {
    id: "7",
    title: "Seguridad",
    type: "collapsable",
    icon: "lock",
    children: [
      {
        id: "7.1",
        title: "Usuarios",
        type: "basic",
        link: "/pages/gestion-seguridad/empresas"
      }
    ]
  },
  {
    id: "8",
    title: "Reportes",
    type: "collapsable",
    icon: "heroicons_solid:document",
    children: [
      {
        id: "8.1",
        title: "Reporte de consumos",
        type: "basic",
        link: "/pages/reportes/consumos"
      },
      {
        id: "8.2",
        title: "Reporte de desembolsos",
        type: "basic",
        link: "/pages/reportes/desembolsos"
      },
      {
        id: "8.3",
        title: "Reporte de cobros",
        type: "basic",
        link: "/pages/reportes/cobros"
      },
      {
        id: "8.4",
        title: "Reporte de solicitudes",
        type: "basic",
        link: "/pages/reportes/solicitudes"
      },
      {
        id: "8.5",
        title: "Cartera general trabajador",
        type: "basic",
        link: "/pages/reportes/deudas"
      }
    ]
  }
];
var compactNavigation = [
  {
    id: "example",
    title: "Example",
    type: "basic",
    icon: "heroicons_outline:chart-pie",
    link: "/example"
  }
];
var futuristicNavigation = [
  {
    id: "example",
    title: "Example",
    type: "basic",
    icon: "heroicons_outline:chart-pie",
    link: "/example"
  }
];
var horizontalNavigation = [
  {
    id: "example",
    title: "Example",
    type: "basic",
    icon: "heroicons_outline:chart-pie",
    link: "/example"
  }
];

// src/app/mock-api/common/navigation/api.ts
var _NavigationMockApi = class _NavigationMockApi {
  /**
   * Constructor
   */
  constructor(_fuseMockApiService) {
    this._fuseMockApiService = _fuseMockApiService;
    this._compactNavigation = compactNavigation;
    this._defaultNavigation = defaultNavigation;
    this._futuristicNavigation = futuristicNavigation;
    this._horizontalNavigation = horizontalNavigation;
    this.registerHandlers();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Register Mock API handlers
   */
  registerHandlers() {
    this._fuseMockApiService.onGet("api/common/navigation").reply(() => {
      this._compactNavigation.forEach((compactNavItem) => {
        this._defaultNavigation.forEach((defaultNavItem) => {
          if (defaultNavItem.id === compactNavItem.id) {
            compactNavItem.children = cloneDeep_default(defaultNavItem.children);
          }
        });
      });
      this._futuristicNavigation.forEach((futuristicNavItem) => {
        this._defaultNavigation.forEach((defaultNavItem) => {
          if (defaultNavItem.id === futuristicNavItem.id) {
            futuristicNavItem.children = cloneDeep_default(defaultNavItem.children);
          }
        });
      });
      this._horizontalNavigation.forEach((horizontalNavItem) => {
        this._defaultNavigation.forEach((defaultNavItem) => {
          if (defaultNavItem.id === horizontalNavItem.id) {
            horizontalNavItem.children = cloneDeep_default(defaultNavItem.children);
          }
        });
      });
      return [
        200,
        {
          compact: cloneDeep_default(this._compactNavigation),
          default: cloneDeep_default(this._defaultNavigation),
          futuristic: cloneDeep_default(this._futuristicNavigation),
          horizontal: cloneDeep_default(this._horizontalNavigation)
        }
      ];
    });
  }
};
_NavigationMockApi.\u0275fac = function NavigationMockApi_Factory(t) {
  return new (t || _NavigationMockApi)(\u0275\u0275inject(FuseMockApiService));
};
_NavigationMockApi.\u0275prov = /* @__PURE__ */ \u0275\u0275defineInjectable({ token: _NavigationMockApi, factory: _NavigationMockApi.\u0275fac, providedIn: "root" });
var NavigationMockApi = _NavigationMockApi;

// src/app/mock-api/common/notifications/data.ts
var now6 = DateTime.now();
var notifications = [
  {
    id: "493190c9-5b61-4912-afe5-78c21f1044d7",
    icon: "heroicons_mini:star",
    title: "Daily challenges",
    description: "Your submission has been accepted",
    time: now6.minus({ minute: 25 }).toISO(),
    // 25 minutes ago
    read: false
  },
  {
    id: "6e3e97e5-effc-4fb7-b730-52a151f0b641",
    image: "images/avatars/male-04.jpg",
    description: "<strong>Leo Gill</strong> added you to <em>Top Secret Project</em> group and assigned you as a <em>Project Manager</em>",
    time: now6.minus({ minute: 50 }).toISO(),
    // 50 minutes ago
    read: true,
    link: "/dashboards/project",
    useRouter: true
  },
  {
    id: "b91ccb58-b06c-413b-b389-87010e03a120",
    icon: "heroicons_mini:envelope",
    title: "Mailbox",
    description: "You have 15 unread mails across 3 mailboxes",
    time: now6.minus({ hour: 3 }).toISO(),
    // 3 hours ago
    read: false,
    link: "/dashboards/project",
    useRouter: true
  },
  {
    id: "541416c9-84a7-408a-8d74-27a43c38d797",
    icon: "heroicons_mini:arrow-path",
    title: "Cron jobs",
    description: "Your <em>Docker container</em> is ready to publish",
    time: now6.minus({ hour: 5 }).toISO(),
    // 5 hours ago
    read: false,
    link: "/dashboards/project",
    useRouter: true
  },
  {
    id: "ef7b95a7-8e8b-4616-9619-130d9533add9",
    image: "images/avatars/male-06.jpg",
    description: "<strong>Roger Murray</strong> accepted your friend request",
    time: now6.minus({ hour: 7 }).toISO(),
    // 7 hours ago
    read: true,
    link: "/dashboards/project",
    useRouter: true
  },
  {
    id: "eb8aa470-635e-461d-88e1-23d9ea2a5665",
    image: "images/avatars/female-04.jpg",
    description: "<strong>Sophie Stone</strong> sent you a direct message",
    time: now6.minus({ hour: 9 }).toISO(),
    // 9 hours ago
    read: true,
    link: "/dashboards/project",
    useRouter: true
  },
  {
    id: "b85c2338-cc98-4140-bbf8-c226ce4e395e",
    icon: "heroicons_mini:envelope",
    title: "Mailbox",
    description: "You have 3 new mails",
    time: now6.minus({ day: 1 }).toISO(),
    // 1 day ago
    read: true,
    link: "/dashboards/project",
    useRouter: true
  },
  {
    id: "8f8e1bf9-4661-4939-9e43-390957b60f42",
    icon: "heroicons_mini:star",
    title: "Daily challenges",
    description: "Your submission has been accepted and you are ready to sign-up for the final assigment which will be ready in 2 days",
    time: now6.minus({ day: 3 }).toISO(),
    // 3 days ago
    read: true,
    link: "/dashboards/project",
    useRouter: true
  },
  {
    id: "30af917b-7a6a-45d1-822f-9e7ad7f8bf69",
    icon: "heroicons_mini:arrow-path",
    title: "Cron jobs",
    description: "Your Vagrant container is ready to download",
    time: now6.minus({ day: 4 }).toISO(),
    // 4 days ago
    read: true,
    link: "/dashboards/project",
    useRouter: true
  }
];

// src/app/mock-api/common/notifications/api.ts
var _NotificationsMockApi = class _NotificationsMockApi {
  /**
   * Constructor
   */
  constructor(_fuseMockApiService) {
    this._fuseMockApiService = _fuseMockApiService;
    this._notifications = notifications;
    this.registerHandlers();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Register Mock API handlers
   */
  registerHandlers() {
    this._fuseMockApiService.onGet("api/common/notifications").reply(() => [200, cloneDeep_default(this._notifications)]);
    this._fuseMockApiService.onPost("api/common/notifications").reply(({ request }) => {
      const newNotification = cloneDeep_default(request.body.notification);
      newNotification.id = FuseMockApiUtils.guid();
      this._notifications.unshift(newNotification);
      return [200, newNotification];
    });
    this._fuseMockApiService.onPatch("api/common/notifications").reply(({ request }) => {
      const id = request.body.id;
      const notification = cloneDeep_default(request.body.notification);
      let updatedNotification = null;
      this._notifications.forEach((item, index, notifications2) => {
        if (item.id === id) {
          notifications2[index] = assign_default({}, notifications2[index], notification);
          updatedNotification = notifications2[index];
        }
      });
      return [200, updatedNotification];
    });
    this._fuseMockApiService.onDelete("api/common/notifications").reply(({ request }) => {
      const id = request.params.get("id");
      let deletedNotification = null;
      const index = this._notifications.findIndex((item) => item.id === id);
      deletedNotification = cloneDeep_default(this._notifications[index]);
      this._notifications.splice(index, 1);
      return [200, deletedNotification];
    });
    this._fuseMockApiService.onGet("api/common/notifications/mark-all-as-read").reply(() => {
      this._notifications.forEach((item, index, notifications2) => {
        notifications2[index].read = true;
        notifications2[index].seen = true;
      });
      return [200, true];
    });
    this._fuseMockApiService.onPost("api/common/notifications/toggle-read-status").reply(({ request }) => {
      const notification = cloneDeep_default(request.body.notification);
      let updatedNotification = null;
      this._notifications.forEach((item, index, notifications2) => {
        if (item.id === notification.id) {
          notifications2[index].read = notification.read;
          updatedNotification = notifications2[index];
        }
      });
      return [200, updatedNotification];
    });
  }
};
_NotificationsMockApi.\u0275fac = function NotificationsMockApi_Factory(t) {
  return new (t || _NotificationsMockApi)(\u0275\u0275inject(FuseMockApiService));
};
_NotificationsMockApi.\u0275prov = /* @__PURE__ */ \u0275\u0275defineInjectable({ token: _NotificationsMockApi, factory: _NotificationsMockApi.\u0275fac, providedIn: "root" });
var NotificationsMockApi = _NotificationsMockApi;

// src/app/mock-api/common/search/api.ts
var _SearchMockApi = class _SearchMockApi {
  /**
   * Constructor
   */
  constructor(_fuseMockApiService, _fuseNavigationService) {
    this._fuseMockApiService = _fuseMockApiService;
    this._fuseNavigationService = _fuseNavigationService;
    this._defaultNavigation = defaultNavigation;
    this._contacts = contacts2;
    this._tasks = tasks;
    this.registerHandlers();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Register Mock API handlers
   */
  registerHandlers() {
    const flatNavigation = this._fuseNavigationService.getFlatNavigation(this._defaultNavigation);
    this._fuseMockApiService.onPost("api/common/search").reply(({ request }) => {
      const query = cloneDeep_default(request.body.query.toLowerCase());
      if (query === "") {
        return [200, { results: [] }];
      }
      const contactsResults = cloneDeep_default(this._contacts).filter((contact) => contact.name.toLowerCase().includes(query));
      const pagesResults = cloneDeep_default(flatNavigation).filter((page) => page.title?.toLowerCase().includes(query) || page.subtitle && page.subtitle.includes(query));
      const tasksResults = cloneDeep_default(this._tasks).filter((task) => task.title.toLowerCase().includes(query));
      const results = [];
      if (contactsResults.length > 0) {
        contactsResults.forEach((result) => {
          result.link = "/apps/contacts/" + result.id;
          result.value = result.name;
        });
        results.push({
          id: "contacts",
          label: "Contacts",
          results: contactsResults
        });
      }
      if (pagesResults.length > 0) {
        pagesResults.forEach((result) => {
          result.value = result.title;
        });
        results.push({
          id: "pages",
          label: "Pages",
          results: pagesResults
        });
      }
      if (tasksResults.length > 0) {
        tasksResults.forEach((result) => {
          result.link = "/apps/tasks/" + result.id;
          result.value = result.title;
        });
        results.push({
          id: "tasks",
          label: "Tasks",
          results: tasksResults
        });
      }
      return [200, results];
    });
  }
};
_SearchMockApi.\u0275fac = function SearchMockApi_Factory(t) {
  return new (t || _SearchMockApi)(\u0275\u0275inject(FuseMockApiService), \u0275\u0275inject(FuseNavigationService));
};
_SearchMockApi.\u0275prov = /* @__PURE__ */ \u0275\u0275defineInjectable({ token: _SearchMockApi, factory: _SearchMockApi.\u0275fac, providedIn: "root" });
var SearchMockApi = _SearchMockApi;

// src/app/mock-api/common/shortcuts/data.ts
var shortcuts = [
  {
    id: "a1ae91d3-e2cb-459b-9be9-a184694f548b",
    label: "Changelog",
    description: "List of changes",
    icon: "heroicons_outline:clipboard-document-list",
    link: "/docs/changelog",
    useRouter: true
  },
  {
    id: "989ce876-c177-4d71-a749-1953c477f825",
    label: "Documentation",
    description: "Getting started",
    icon: "heroicons_outline:book-open",
    link: "/docs/guides/getting-started/introduction",
    useRouter: true
  },
  {
    id: "2496f42e-2f25-4e34-83d5-3ff9568fd984",
    label: "Help center",
    description: "FAQs and guides",
    icon: "heroicons_outline:information-circle",
    link: "/apps/help-center",
    useRouter: true
  },
  {
    id: "3c48e75e-2ae7-4b73-938a-12dc655be28b",
    label: "Dashboard",
    description: "User analytics",
    icon: "heroicons_outline:chart-pie",
    link: "/dashboards/analytics",
    useRouter: true
  },
  {
    id: "2daac375-a2f7-4393-b4d7-ce6061628b66",
    label: "Mailbox",
    description: "5 new e-mails",
    icon: "heroicons_outline:envelope",
    link: "apps/mailbox",
    useRouter: true
  },
  {
    id: "56a0a561-17e7-40b3-bd75-0b6cef230b7e",
    label: "Tasks",
    description: "12 unfinished tasks",
    icon: "heroicons_outline:check-circle",
    link: "/apps/tasks",
    useRouter: true
  },
  {
    id: "f5daf93e-b6f3-4199-8a0c-b951e92a6cb8",
    label: "Contacts",
    description: "List all contacts",
    icon: "heroicons_outline:user-group",
    link: "/apps/contacts",
    useRouter: true
  },
  {
    id: "0a240ab8-e19d-4503-bf68-20013030d526",
    label: "Reload",
    description: "Reload the app",
    icon: "heroicons_outline:arrow-path",
    link: "/dashboards/project",
    useRouter: false
  }
];

// src/app/mock-api/common/shortcuts/api.ts
var _ShortcutsMockApi = class _ShortcutsMockApi {
  /**
   * Constructor
   */
  constructor(_fuseMockApiService) {
    this._fuseMockApiService = _fuseMockApiService;
    this._shortcuts = shortcuts;
    this.registerHandlers();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Register Mock API handlers
   */
  registerHandlers() {
    this._fuseMockApiService.onGet("api/common/shortcuts").reply(() => [200, cloneDeep_default(this._shortcuts)]);
    this._fuseMockApiService.onPost("api/common/shortcuts").reply(({ request }) => {
      const newShortcut = cloneDeep_default(request.body.shortcut);
      newShortcut.id = FuseMockApiUtils.guid();
      this._shortcuts.unshift(newShortcut);
      return [200, newShortcut];
    });
    this._fuseMockApiService.onPatch("api/common/shortcuts").reply(({ request }) => {
      const id = request.body.id;
      const shortcut = cloneDeep_default(request.body.shortcut);
      let updatedShortcut = null;
      this._shortcuts.forEach((item, index, shortcuts2) => {
        if (item.id === id) {
          shortcuts2[index] = assign_default({}, shortcuts2[index], shortcut);
          updatedShortcut = shortcuts2[index];
        }
      });
      return [200, updatedShortcut];
    });
    this._fuseMockApiService.onDelete("api/common/shortcuts").reply(({ request }) => {
      const id = request.params.get("id");
      let deletedShortcut = null;
      const index = this._shortcuts.findIndex((item) => item.id === id);
      deletedShortcut = cloneDeep_default(this._shortcuts[index]);
      this._shortcuts.splice(index, 1);
      return [200, deletedShortcut];
    });
  }
};
_ShortcutsMockApi.\u0275fac = function ShortcutsMockApi_Factory(t) {
  return new (t || _ShortcutsMockApi)(\u0275\u0275inject(FuseMockApiService));
};
_ShortcutsMockApi.\u0275prov = /* @__PURE__ */ \u0275\u0275defineInjectable({ token: _ShortcutsMockApi, factory: _ShortcutsMockApi.\u0275fac, providedIn: "root" });
var ShortcutsMockApi = _ShortcutsMockApi;

// src/app/mock-api/common/user/api.ts
var _UserMockApi = class _UserMockApi {
  /**
   * Constructor
   */
  constructor(_fuseMockApiService) {
    this._fuseMockApiService = _fuseMockApiService;
    this._user = user;
    this.registerHandlers();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Register Mock API handlers
   */
  registerHandlers() {
    this._fuseMockApiService.onGet("api/common/user").reply(() => [200, cloneDeep_default(this._user)]);
    this._fuseMockApiService.onPatch("api/common/user").reply(({ request }) => {
      const user2 = cloneDeep_default(request.body.user);
      this._user = assign_default({}, this._user, user2);
      return [200, cloneDeep_default(this._user)];
    });
  }
};
_UserMockApi.\u0275fac = function UserMockApi_Factory(t) {
  return new (t || _UserMockApi)(\u0275\u0275inject(FuseMockApiService));
};
_UserMockApi.\u0275prov = /* @__PURE__ */ \u0275\u0275defineInjectable({ token: _UserMockApi, factory: _UserMockApi.\u0275fac, providedIn: "root" });
var UserMockApi = _UserMockApi;

// src/app/mock-api/dashboards/analytics/data.ts
var now7 = DateTime.now();
var analytics = {
  visitors: {
    series: {
      "this-year": [
        {
          name: "Visitors",
          data: [
            {
              x: now7.minus({ months: 12 }).plus({ day: 1 }).toJSDate(),
              y: 4884
            },
            {
              x: now7.minus({ months: 12 }).plus({ day: 4 }).toJSDate(),
              y: 5351
            },
            {
              x: now7.minus({ months: 12 }).plus({ day: 7 }).toJSDate(),
              y: 5293
            },
            {
              x: now7.minus({ months: 12 }).plus({ day: 10 }).toJSDate(),
              y: 4908
            },
            {
              x: now7.minus({ months: 12 }).plus({ day: 13 }).toJSDate(),
              y: 5027
            },
            {
              x: now7.minus({ months: 12 }).plus({ day: 16 }).toJSDate(),
              y: 4837
            },
            {
              x: now7.minus({ months: 12 }).plus({ day: 19 }).toJSDate(),
              y: 4484
            },
            {
              x: now7.minus({ months: 12 }).plus({ day: 22 }).toJSDate(),
              y: 4071
            },
            {
              x: now7.minus({ months: 12 }).plus({ day: 25 }).toJSDate(),
              y: 4124
            },
            {
              x: now7.minus({ months: 12 }).plus({ day: 28 }).toJSDate(),
              y: 4563
            },
            {
              x: now7.minus({ months: 11 }).plus({ day: 1 }).toJSDate(),
              y: 3820
            },
            {
              x: now7.minus({ months: 11 }).plus({ day: 4 }).toJSDate(),
              y: 3968
            },
            {
              x: now7.minus({ months: 11 }).plus({ day: 7 }).toJSDate(),
              y: 4102
            },
            {
              x: now7.minus({ months: 11 }).plus({ day: 10 }).toJSDate(),
              y: 3941
            },
            {
              x: now7.minus({ months: 11 }).plus({ day: 13 }).toJSDate(),
              y: 3566
            },
            {
              x: now7.minus({ months: 11 }).plus({ day: 16 }).toJSDate(),
              y: 3853
            },
            {
              x: now7.minus({ months: 11 }).plus({ day: 19 }).toJSDate(),
              y: 3853
            },
            {
              x: now7.minus({ months: 11 }).plus({ day: 22 }).toJSDate(),
              y: 4069
            },
            {
              x: now7.minus({ months: 11 }).plus({ day: 25 }).toJSDate(),
              y: 3879
            },
            {
              x: now7.minus({ months: 11 }).plus({ day: 28 }).toJSDate(),
              y: 4298
            },
            {
              x: now7.minus({ months: 10 }).plus({ day: 1 }).toJSDate(),
              y: 4355
            },
            {
              x: now7.minus({ months: 10 }).plus({ day: 4 }).toJSDate(),
              y: 4065
            },
            {
              x: now7.minus({ months: 10 }).plus({ day: 7 }).toJSDate(),
              y: 3650
            },
            {
              x: now7.minus({ months: 10 }).plus({ day: 10 }).toJSDate(),
              y: 3379
            },
            {
              x: now7.minus({ months: 10 }).plus({ day: 13 }).toJSDate(),
              y: 3191
            },
            {
              x: now7.minus({ months: 10 }).plus({ day: 16 }).toJSDate(),
              y: 2968
            },
            {
              x: now7.minus({ months: 10 }).plus({ day: 19 }).toJSDate(),
              y: 2957
            },
            {
              x: now7.minus({ months: 10 }).plus({ day: 22 }).toJSDate(),
              y: 3313
            },
            {
              x: now7.minus({ months: 10 }).plus({ day: 25 }).toJSDate(),
              y: 3708
            },
            {
              x: now7.minus({ months: 10 }).plus({ day: 28 }).toJSDate(),
              y: 3586
            },
            {
              x: now7.minus({ months: 9 }).plus({ day: 1 }).toJSDate(),
              y: 3965
            },
            {
              x: now7.minus({ months: 9 }).plus({ day: 4 }).toJSDate(),
              y: 3901
            },
            {
              x: now7.minus({ months: 9 }).plus({ day: 7 }).toJSDate(),
              y: 3410
            },
            {
              x: now7.minus({ months: 9 }).plus({ day: 10 }).toJSDate(),
              y: 3748
            },
            {
              x: now7.minus({ months: 9 }).plus({ day: 13 }).toJSDate(),
              y: 3929
            },
            {
              x: now7.minus({ months: 9 }).plus({ day: 16 }).toJSDate(),
              y: 3846
            },
            {
              x: now7.minus({ months: 9 }).plus({ day: 19 }).toJSDate(),
              y: 3771
            },
            {
              x: now7.minus({ months: 9 }).plus({ day: 22 }).toJSDate(),
              y: 4015
            },
            {
              x: now7.minus({ months: 9 }).plus({ day: 25 }).toJSDate(),
              y: 3589
            },
            {
              x: now7.minus({ months: 9 }).plus({ day: 28 }).toJSDate(),
              y: 3150
            },
            {
              x: now7.minus({ months: 8 }).plus({ day: 1 }).toJSDate(),
              y: 3050
            },
            {
              x: now7.minus({ months: 8 }).plus({ day: 4 }).toJSDate(),
              y: 2574
            },
            {
              x: now7.minus({ months: 8 }).plus({ day: 7 }).toJSDate(),
              y: 2823
            },
            {
              x: now7.minus({ months: 8 }).plus({ day: 10 }).toJSDate(),
              y: 2848
            },
            {
              x: now7.minus({ months: 8 }).plus({ day: 13 }).toJSDate(),
              y: 3e3
            },
            {
              x: now7.minus({ months: 8 }).plus({ day: 16 }).toJSDate(),
              y: 3216
            },
            {
              x: now7.minus({ months: 8 }).plus({ day: 19 }).toJSDate(),
              y: 3299
            },
            {
              x: now7.minus({ months: 8 }).plus({ day: 22 }).toJSDate(),
              y: 3768
            },
            {
              x: now7.minus({ months: 8 }).plus({ day: 25 }).toJSDate(),
              y: 3524
            },
            {
              x: now7.minus({ months: 8 }).plus({ day: 28 }).toJSDate(),
              y: 3918
            },
            {
              x: now7.minus({ months: 7 }).plus({ day: 1 }).toJSDate(),
              y: 4145
            },
            {
              x: now7.minus({ months: 7 }).plus({ day: 4 }).toJSDate(),
              y: 4378
            },
            {
              x: now7.minus({ months: 7 }).plus({ day: 7 }).toJSDate(),
              y: 3941
            },
            {
              x: now7.minus({ months: 7 }).plus({ day: 10 }).toJSDate(),
              y: 3932
            },
            {
              x: now7.minus({ months: 7 }).plus({ day: 13 }).toJSDate(),
              y: 4380
            },
            {
              x: now7.minus({ months: 7 }).plus({ day: 16 }).toJSDate(),
              y: 4243
            },
            {
              x: now7.minus({ months: 7 }).plus({ day: 19 }).toJSDate(),
              y: 4367
            },
            {
              x: now7.minus({ months: 7 }).plus({ day: 22 }).toJSDate(),
              y: 3879
            },
            {
              x: now7.minus({ months: 7 }).plus({ day: 25 }).toJSDate(),
              y: 4357
            },
            {
              x: now7.minus({ months: 7 }).plus({ day: 28 }).toJSDate(),
              y: 4181
            },
            {
              x: now7.minus({ months: 6 }).plus({ day: 1 }).toJSDate(),
              y: 4619
            },
            {
              x: now7.minus({ months: 6 }).plus({ day: 4 }).toJSDate(),
              y: 4769
            },
            {
              x: now7.minus({ months: 6 }).plus({ day: 7 }).toJSDate(),
              y: 4901
            },
            {
              x: now7.minus({ months: 6 }).plus({ day: 10 }).toJSDate(),
              y: 4640
            },
            {
              x: now7.minus({ months: 6 }).plus({ day: 13 }).toJSDate(),
              y: 5128
            },
            {
              x: now7.minus({ months: 6 }).plus({ day: 16 }).toJSDate(),
              y: 5015
            },
            {
              x: now7.minus({ months: 6 }).plus({ day: 19 }).toJSDate(),
              y: 5360
            },
            {
              x: now7.minus({ months: 6 }).plus({ day: 22 }).toJSDate(),
              y: 5608
            },
            {
              x: now7.minus({ months: 6 }).plus({ day: 25 }).toJSDate(),
              y: 5272
            },
            {
              x: now7.minus({ months: 6 }).plus({ day: 28 }).toJSDate(),
              y: 5660
            },
            {
              x: now7.minus({ months: 5 }).plus({ day: 1 }).toJSDate(),
              y: 5836
            },
            {
              x: now7.minus({ months: 5 }).plus({ day: 4 }).toJSDate(),
              y: 5659
            },
            {
              x: now7.minus({ months: 5 }).plus({ day: 7 }).toJSDate(),
              y: 5575
            },
            {
              x: now7.minus({ months: 5 }).plus({ day: 10 }).toJSDate(),
              y: 5474
            },
            {
              x: now7.minus({ months: 5 }).plus({ day: 13 }).toJSDate(),
              y: 5427
            },
            {
              x: now7.minus({ months: 5 }).plus({ day: 16 }).toJSDate(),
              y: 5865
            },
            {
              x: now7.minus({ months: 5 }).plus({ day: 19 }).toJSDate(),
              y: 5700
            },
            {
              x: now7.minus({ months: 5 }).plus({ day: 22 }).toJSDate(),
              y: 6052
            },
            {
              x: now7.minus({ months: 5 }).plus({ day: 25 }).toJSDate(),
              y: 5760
            },
            {
              x: now7.minus({ months: 5 }).plus({ day: 28 }).toJSDate(),
              y: 5648
            },
            {
              x: now7.minus({ months: 4 }).plus({ day: 1 }).toJSDate(),
              y: 5435
            },
            {
              x: now7.minus({ months: 4 }).plus({ day: 4 }).toJSDate(),
              y: 5239
            },
            {
              x: now7.minus({ months: 4 }).plus({ day: 7 }).toJSDate(),
              y: 5452
            },
            {
              x: now7.minus({ months: 4 }).plus({ day: 10 }).toJSDate(),
              y: 5416
            },
            {
              x: now7.minus({ months: 4 }).plus({ day: 13 }).toJSDate(),
              y: 5195
            },
            {
              x: now7.minus({ months: 4 }).plus({ day: 16 }).toJSDate(),
              y: 5119
            },
            {
              x: now7.minus({ months: 4 }).plus({ day: 19 }).toJSDate(),
              y: 4635
            },
            {
              x: now7.minus({ months: 4 }).plus({ day: 22 }).toJSDate(),
              y: 4833
            },
            {
              x: now7.minus({ months: 4 }).plus({ day: 25 }).toJSDate(),
              y: 4584
            },
            {
              x: now7.minus({ months: 4 }).plus({ day: 28 }).toJSDate(),
              y: 4822
            },
            {
              x: now7.minus({ months: 3 }).plus({ day: 1 }).toJSDate(),
              y: 4582
            },
            {
              x: now7.minus({ months: 3 }).plus({ day: 4 }).toJSDate(),
              y: 4348
            },
            {
              x: now7.minus({ months: 3 }).plus({ day: 7 }).toJSDate(),
              y: 4132
            },
            {
              x: now7.minus({ months: 3 }).plus({ day: 10 }).toJSDate(),
              y: 4099
            },
            {
              x: now7.minus({ months: 3 }).plus({ day: 13 }).toJSDate(),
              y: 3849
            },
            {
              x: now7.minus({ months: 3 }).plus({ day: 16 }).toJSDate(),
              y: 4010
            },
            {
              x: now7.minus({ months: 3 }).plus({ day: 19 }).toJSDate(),
              y: 4486
            },
            {
              x: now7.minus({ months: 3 }).plus({ day: 22 }).toJSDate(),
              y: 4403
            },
            {
              x: now7.minus({ months: 3 }).plus({ day: 25 }).toJSDate(),
              y: 4141
            },
            {
              x: now7.minus({ months: 3 }).plus({ day: 28 }).toJSDate(),
              y: 3780
            },
            {
              x: now7.minus({ months: 2 }).plus({ day: 1 }).toJSDate(),
              y: 3524
            },
            {
              x: now7.minus({ months: 2 }).plus({ day: 4 }).toJSDate(),
              y: 3212
            },
            {
              x: now7.minus({ months: 2 }).plus({ day: 7 }).toJSDate(),
              y: 3568
            },
            {
              x: now7.minus({ months: 2 }).plus({ day: 10 }).toJSDate(),
              y: 3800
            },
            {
              x: now7.minus({ months: 2 }).plus({ day: 13 }).toJSDate(),
              y: 3796
            },
            {
              x: now7.minus({ months: 2 }).plus({ day: 16 }).toJSDate(),
              y: 3870
            },
            {
              x: now7.minus({ months: 2 }).plus({ day: 19 }).toJSDate(),
              y: 3745
            },
            {
              x: now7.minus({ months: 2 }).plus({ day: 22 }).toJSDate(),
              y: 3751
            },
            {
              x: now7.minus({ months: 2 }).plus({ day: 25 }).toJSDate(),
              y: 3310
            },
            {
              x: now7.minus({ months: 2 }).plus({ day: 28 }).toJSDate(),
              y: 3509
            },
            {
              x: now7.minus({ months: 1 }).plus({ day: 1 }).toJSDate(),
              y: 3187
            },
            {
              x: now7.minus({ months: 1 }).plus({ day: 4 }).toJSDate(),
              y: 2918
            },
            {
              x: now7.minus({ months: 1 }).plus({ day: 7 }).toJSDate(),
              y: 3191
            },
            {
              x: now7.minus({ months: 1 }).plus({ day: 10 }).toJSDate(),
              y: 3437
            },
            {
              x: now7.minus({ months: 1 }).plus({ day: 13 }).toJSDate(),
              y: 3291
            },
            {
              x: now7.minus({ months: 1 }).plus({ day: 16 }).toJSDate(),
              y: 3317
            },
            {
              x: now7.minus({ months: 1 }).plus({ day: 19 }).toJSDate(),
              y: 3716
            },
            {
              x: now7.minus({ months: 1 }).plus({ day: 22 }).toJSDate(),
              y: 3260
            },
            {
              x: now7.minus({ months: 1 }).plus({ day: 25 }).toJSDate(),
              y: 3694
            },
            {
              x: now7.minus({ months: 1 }).plus({ day: 28 }).toJSDate(),
              y: 3598
            }
          ]
        }
      ],
      "last-year": [
        {
          name: "Visitors",
          data: [
            {
              x: now7.minus({ months: 24 }).plus({ day: 1 }).toJSDate(),
              y: 2021
            },
            {
              x: now7.minus({ months: 24 }).plus({ day: 4 }).toJSDate(),
              y: 1749
            },
            {
              x: now7.minus({ months: 24 }).plus({ day: 7 }).toJSDate(),
              y: 1654
            },
            {
              x: now7.minus({ months: 24 }).plus({ day: 10 }).toJSDate(),
              y: 1900
            },
            {
              x: now7.minus({ months: 24 }).plus({ day: 13 }).toJSDate(),
              y: 1647
            },
            {
              x: now7.minus({ months: 24 }).plus({ day: 16 }).toJSDate(),
              y: 1315
            },
            {
              x: now7.minus({ months: 24 }).plus({ day: 19 }).toJSDate(),
              y: 1807
            },
            {
              x: now7.minus({ months: 24 }).plus({ day: 22 }).toJSDate(),
              y: 1793
            },
            {
              x: now7.minus({ months: 24 }).plus({ day: 25 }).toJSDate(),
              y: 1892
            },
            {
              x: now7.minus({ months: 24 }).plus({ day: 28 }).toJSDate(),
              y: 1846
            },
            {
              x: now7.minus({ months: 23 }).plus({ day: 1 }).toJSDate(),
              y: 1804
            },
            {
              x: now7.minus({ months: 23 }).plus({ day: 4 }).toJSDate(),
              y: 1778
            },
            {
              x: now7.minus({ months: 23 }).plus({ day: 7 }).toJSDate(),
              y: 2015
            },
            {
              x: now7.minus({ months: 23 }).plus({ day: 10 }).toJSDate(),
              y: 1892
            },
            {
              x: now7.minus({ months: 23 }).plus({ day: 13 }).toJSDate(),
              y: 1708
            },
            {
              x: now7.minus({ months: 23 }).plus({ day: 16 }).toJSDate(),
              y: 1711
            },
            {
              x: now7.minus({ months: 23 }).plus({ day: 19 }).toJSDate(),
              y: 1570
            },
            {
              x: now7.minus({ months: 23 }).plus({ day: 22 }).toJSDate(),
              y: 1507
            },
            {
              x: now7.minus({ months: 23 }).plus({ day: 25 }).toJSDate(),
              y: 1451
            },
            {
              x: now7.minus({ months: 23 }).plus({ day: 28 }).toJSDate(),
              y: 1522
            },
            {
              x: now7.minus({ months: 22 }).plus({ day: 1 }).toJSDate(),
              y: 1977
            },
            {
              x: now7.minus({ months: 22 }).plus({ day: 4 }).toJSDate(),
              y: 2367
            },
            {
              x: now7.minus({ months: 22 }).plus({ day: 7 }).toJSDate(),
              y: 2798
            },
            {
              x: now7.minus({ months: 22 }).plus({ day: 10 }).toJSDate(),
              y: 3080
            },
            {
              x: now7.minus({ months: 22 }).plus({ day: 13 }).toJSDate(),
              y: 2856
            },
            {
              x: now7.minus({ months: 22 }).plus({ day: 16 }).toJSDate(),
              y: 2745
            },
            {
              x: now7.minus({ months: 22 }).plus({ day: 19 }).toJSDate(),
              y: 2750
            },
            {
              x: now7.minus({ months: 22 }).plus({ day: 22 }).toJSDate(),
              y: 2728
            },
            {
              x: now7.minus({ months: 22 }).plus({ day: 25 }).toJSDate(),
              y: 2436
            },
            {
              x: now7.minus({ months: 22 }).plus({ day: 28 }).toJSDate(),
              y: 2289
            },
            {
              x: now7.minus({ months: 21 }).plus({ day: 1 }).toJSDate(),
              y: 2804
            },
            {
              x: now7.minus({ months: 21 }).plus({ day: 4 }).toJSDate(),
              y: 2777
            },
            {
              x: now7.minus({ months: 21 }).plus({ day: 7 }).toJSDate(),
              y: 3024
            },
            {
              x: now7.minus({ months: 21 }).plus({ day: 10 }).toJSDate(),
              y: 2657
            },
            {
              x: now7.minus({ months: 21 }).plus({ day: 13 }).toJSDate(),
              y: 2218
            },
            {
              x: now7.minus({ months: 21 }).plus({ day: 16 }).toJSDate(),
              y: 1964
            },
            {
              x: now7.minus({ months: 21 }).plus({ day: 19 }).toJSDate(),
              y: 1674
            },
            {
              x: now7.minus({ months: 21 }).plus({ day: 22 }).toJSDate(),
              y: 1721
            },
            {
              x: now7.minus({ months: 21 }).plus({ day: 25 }).toJSDate(),
              y: 2005
            },
            {
              x: now7.minus({ months: 21 }).plus({ day: 28 }).toJSDate(),
              y: 1613
            },
            {
              x: now7.minus({ months: 20 }).plus({ day: 1 }).toJSDate(),
              y: 1071
            },
            {
              x: now7.minus({ months: 20 }).plus({ day: 4 }).toJSDate(),
              y: 1079
            },
            {
              x: now7.minus({ months: 20 }).plus({ day: 7 }).toJSDate(),
              y: 1133
            },
            {
              x: now7.minus({ months: 20 }).plus({ day: 10 }).toJSDate(),
              y: 1536
            },
            {
              x: now7.minus({ months: 20 }).plus({ day: 13 }).toJSDate(),
              y: 2016
            },
            {
              x: now7.minus({ months: 20 }).plus({ day: 16 }).toJSDate(),
              y: 2256
            },
            {
              x: now7.minus({ months: 20 }).plus({ day: 19 }).toJSDate(),
              y: 1934
            },
            {
              x: now7.minus({ months: 20 }).plus({ day: 22 }).toJSDate(),
              y: 1832
            },
            {
              x: now7.minus({ months: 20 }).plus({ day: 25 }).toJSDate(),
              y: 2075
            },
            {
              x: now7.minus({ months: 20 }).plus({ day: 28 }).toJSDate(),
              y: 1709
            },
            {
              x: now7.minus({ months: 19 }).plus({ day: 1 }).toJSDate(),
              y: 1831
            },
            {
              x: now7.minus({ months: 19 }).plus({ day: 4 }).toJSDate(),
              y: 1434
            },
            {
              x: now7.minus({ months: 19 }).plus({ day: 7 }).toJSDate(),
              y: 1293
            },
            {
              x: now7.minus({ months: 19 }).plus({ day: 10 }).toJSDate(),
              y: 1064
            },
            {
              x: now7.minus({ months: 19 }).plus({ day: 13 }).toJSDate(),
              y: 1080
            },
            {
              x: now7.minus({ months: 19 }).plus({ day: 16 }).toJSDate(),
              y: 1032
            },
            {
              x: now7.minus({ months: 19 }).plus({ day: 19 }).toJSDate(),
              y: 1280
            },
            {
              x: now7.minus({ months: 19 }).plus({ day: 22 }).toJSDate(),
              y: 1344
            },
            {
              x: now7.minus({ months: 19 }).plus({ day: 25 }).toJSDate(),
              y: 1835
            },
            {
              x: now7.minus({ months: 19 }).plus({ day: 28 }).toJSDate(),
              y: 2287
            },
            {
              x: now7.minus({ months: 18 }).plus({ day: 1 }).toJSDate(),
              y: 2692
            },
            {
              x: now7.minus({ months: 18 }).plus({ day: 4 }).toJSDate(),
              y: 2250
            },
            {
              x: now7.minus({ months: 18 }).plus({ day: 7 }).toJSDate(),
              y: 1814
            },
            {
              x: now7.minus({ months: 18 }).plus({ day: 10 }).toJSDate(),
              y: 1906
            },
            {
              x: now7.minus({ months: 18 }).plus({ day: 13 }).toJSDate(),
              y: 1973
            },
            {
              x: now7.minus({ months: 18 }).plus({ day: 16 }).toJSDate(),
              y: 1882
            },
            {
              x: now7.minus({ months: 18 }).plus({ day: 19 }).toJSDate(),
              y: 2333
            },
            {
              x: now7.minus({ months: 18 }).plus({ day: 22 }).toJSDate(),
              y: 2048
            },
            {
              x: now7.minus({ months: 18 }).plus({ day: 25 }).toJSDate(),
              y: 2547
            },
            {
              x: now7.minus({ months: 18 }).plus({ day: 28 }).toJSDate(),
              y: 2884
            },
            {
              x: now7.minus({ months: 17 }).plus({ day: 1 }).toJSDate(),
              y: 2771
            },
            {
              x: now7.minus({ months: 17 }).plus({ day: 4 }).toJSDate(),
              y: 2522
            },
            {
              x: now7.minus({ months: 17 }).plus({ day: 7 }).toJSDate(),
              y: 2543
            },
            {
              x: now7.minus({ months: 17 }).plus({ day: 10 }).toJSDate(),
              y: 2413
            },
            {
              x: now7.minus({ months: 17 }).plus({ day: 13 }).toJSDate(),
              y: 2002
            },
            {
              x: now7.minus({ months: 17 }).plus({ day: 16 }).toJSDate(),
              y: 1838
            },
            {
              x: now7.minus({ months: 17 }).plus({ day: 19 }).toJSDate(),
              y: 1830
            },
            {
              x: now7.minus({ months: 17 }).plus({ day: 22 }).toJSDate(),
              y: 1872
            },
            {
              x: now7.minus({ months: 17 }).plus({ day: 25 }).toJSDate(),
              y: 2246
            },
            {
              x: now7.minus({ months: 17 }).plus({ day: 28 }).toJSDate(),
              y: 2171
            },
            {
              x: now7.minus({ months: 16 }).plus({ day: 1 }).toJSDate(),
              y: 2988
            },
            {
              x: now7.minus({ months: 16 }).plus({ day: 4 }).toJSDate(),
              y: 2694
            },
            {
              x: now7.minus({ months: 16 }).plus({ day: 7 }).toJSDate(),
              y: 2806
            },
            {
              x: now7.minus({ months: 16 }).plus({ day: 10 }).toJSDate(),
              y: 3040
            },
            {
              x: now7.minus({ months: 16 }).plus({ day: 13 }).toJSDate(),
              y: 2898
            },
            {
              x: now7.minus({ months: 16 }).plus({ day: 16 }).toJSDate(),
              y: 3013
            },
            {
              x: now7.minus({ months: 16 }).plus({ day: 19 }).toJSDate(),
              y: 2760
            },
            {
              x: now7.minus({ months: 16 }).plus({ day: 22 }).toJSDate(),
              y: 3021
            },
            {
              x: now7.minus({ months: 16 }).plus({ day: 25 }).toJSDate(),
              y: 2688
            },
            {
              x: now7.minus({ months: 16 }).plus({ day: 28 }).toJSDate(),
              y: 2572
            },
            {
              x: now7.minus({ months: 15 }).plus({ day: 1 }).toJSDate(),
              y: 2789
            },
            {
              x: now7.minus({ months: 15 }).plus({ day: 4 }).toJSDate(),
              y: 3069
            },
            {
              x: now7.minus({ months: 15 }).plus({ day: 7 }).toJSDate(),
              y: 3142
            },
            {
              x: now7.minus({ months: 15 }).plus({ day: 10 }).toJSDate(),
              y: 3614
            },
            {
              x: now7.minus({ months: 15 }).plus({ day: 13 }).toJSDate(),
              y: 3202
            },
            {
              x: now7.minus({ months: 15 }).plus({ day: 16 }).toJSDate(),
              y: 2730
            },
            {
              x: now7.minus({ months: 15 }).plus({ day: 19 }).toJSDate(),
              y: 2951
            },
            {
              x: now7.minus({ months: 15 }).plus({ day: 22 }).toJSDate(),
              y: 3267
            },
            {
              x: now7.minus({ months: 15 }).plus({ day: 25 }).toJSDate(),
              y: 2882
            },
            {
              x: now7.minus({ months: 15 }).plus({ day: 28 }).toJSDate(),
              y: 2885
            },
            {
              x: now7.minus({ months: 14 }).plus({ day: 1 }).toJSDate(),
              y: 2915
            },
            {
              x: now7.minus({ months: 14 }).plus({ day: 4 }).toJSDate(),
              y: 2790
            },
            {
              x: now7.minus({ months: 14 }).plus({ day: 7 }).toJSDate(),
              y: 3071
            },
            {
              x: now7.minus({ months: 14 }).plus({ day: 10 }).toJSDate(),
              y: 2802
            },
            {
              x: now7.minus({ months: 14 }).plus({ day: 13 }).toJSDate(),
              y: 2382
            },
            {
              x: now7.minus({ months: 14 }).plus({ day: 16 }).toJSDate(),
              y: 1883
            },
            {
              x: now7.minus({ months: 14 }).plus({ day: 19 }).toJSDate(),
              y: 1448
            },
            {
              x: now7.minus({ months: 14 }).plus({ day: 22 }).toJSDate(),
              y: 1176
            },
            {
              x: now7.minus({ months: 14 }).plus({ day: 25 }).toJSDate(),
              y: 1275
            },
            {
              x: now7.minus({ months: 14 }).plus({ day: 28 }).toJSDate(),
              y: 1136
            },
            {
              x: now7.minus({ months: 13 }).plus({ day: 1 }).toJSDate(),
              y: 1160
            },
            {
              x: now7.minus({ months: 13 }).plus({ day: 4 }).toJSDate(),
              y: 1524
            },
            {
              x: now7.minus({ months: 13 }).plus({ day: 7 }).toJSDate(),
              y: 1305
            },
            {
              x: now7.minus({ months: 13 }).plus({ day: 10 }).toJSDate(),
              y: 1725
            },
            {
              x: now7.minus({ months: 13 }).plus({ day: 13 }).toJSDate(),
              y: 1850
            },
            {
              x: now7.minus({ months: 13 }).plus({ day: 16 }).toJSDate(),
              y: 2304
            },
            {
              x: now7.minus({ months: 13 }).plus({ day: 19 }).toJSDate(),
              y: 2187
            },
            {
              x: now7.minus({ months: 13 }).plus({ day: 22 }).toJSDate(),
              y: 2597
            },
            {
              x: now7.minus({ months: 13 }).plus({ day: 25 }).toJSDate(),
              y: 2246
            },
            {
              x: now7.minus({ months: 13 }).plus({ day: 28 }).toJSDate(),
              y: 1767
            }
          ]
        }
      ]
    }
  },
  conversions: {
    amount: 4123,
    labels: [
      now7.minus({ days: 47 }).toFormat("dd MMM") + " - " + now7.minus({ days: 40 }).toFormat("dd MMM"),
      now7.minus({ days: 39 }).toFormat("dd MMM") + " - " + now7.minus({ days: 32 }).toFormat("dd MMM"),
      now7.minus({ days: 31 }).toFormat("dd MMM") + " - " + now7.minus({ days: 24 }).toFormat("dd MMM"),
      now7.minus({ days: 23 }).toFormat("dd MMM") + " - " + now7.minus({ days: 16 }).toFormat("dd MMM"),
      now7.minus({ days: 15 }).toFormat("dd MMM") + " - " + now7.minus({ days: 8 }).toFormat("dd MMM"),
      now7.minus({ days: 7 }).toFormat("dd MMM") + " - " + now7.toFormat("dd MMM")
    ],
    series: [
      {
        name: "Conversions",
        data: [4412, 4345, 4541, 4677, 4322, 4123]
      }
    ]
  },
  impressions: {
    amount: 46085,
    labels: [
      now7.minus({ days: 31 }).toFormat("dd MMM") + " - " + now7.minus({ days: 24 }).toFormat("dd MMM"),
      now7.minus({ days: 23 }).toFormat("dd MMM") + " - " + now7.minus({ days: 16 }).toFormat("dd MMM"),
      now7.minus({ days: 15 }).toFormat("dd MMM") + " - " + now7.minus({ days: 8 }).toFormat("dd MMM"),
      now7.minus({ days: 7 }).toFormat("dd MMM") + " - " + now7.toFormat("dd MMM")
    ],
    series: [
      {
        name: "Impressions",
        data: [11577, 11441, 11544, 11523]
      }
    ]
  },
  visits: {
    amount: 62083,
    labels: [
      now7.minus({ days: 31 }).toFormat("dd MMM") + " - " + now7.minus({ days: 24 }).toFormat("dd MMM"),
      now7.minus({ days: 23 }).toFormat("dd MMM") + " - " + now7.minus({ days: 16 }).toFormat("dd MMM"),
      now7.minus({ days: 15 }).toFormat("dd MMM") + " - " + now7.minus({ days: 8 }).toFormat("dd MMM"),
      now7.minus({ days: 7 }).toFormat("dd MMM") + " - " + now7.toFormat("dd MMM")
    ],
    series: [
      {
        name: "Visits",
        data: [15521, 15519, 15522, 15521]
      }
    ]
  },
  visitorsVsPageViews: {
    overallScore: 472,
    averageRatio: 45,
    predictedRatio: 55,
    series: [
      {
        name: "Page Views",
        data: [
          {
            x: now7.minus({ days: 65 }).toJSDate(),
            y: 4769
          },
          {
            x: now7.minus({ days: 64 }).toJSDate(),
            y: 4901
          },
          {
            x: now7.minus({ days: 63 }).toJSDate(),
            y: 4640
          },
          {
            x: now7.minus({ days: 62 }).toJSDate(),
            y: 5128
          },
          {
            x: now7.minus({ days: 61 }).toJSDate(),
            y: 5015
          },
          {
            x: now7.minus({ days: 60 }).toJSDate(),
            y: 5360
          },
          {
            x: now7.minus({ days: 59 }).toJSDate(),
            y: 5608
          },
          {
            x: now7.minus({ days: 58 }).toJSDate(),
            y: 5272
          },
          {
            x: now7.minus({ days: 57 }).toJSDate(),
            y: 5660
          },
          {
            x: now7.minus({ days: 56 }).toJSDate(),
            y: 6026
          },
          {
            x: now7.minus({ days: 55 }).toJSDate(),
            y: 5836
          },
          {
            x: now7.minus({ days: 54 }).toJSDate(),
            y: 5659
          },
          {
            x: now7.minus({ days: 53 }).toJSDate(),
            y: 5575
          },
          {
            x: now7.minus({ days: 52 }).toJSDate(),
            y: 5474
          },
          {
            x: now7.minus({ days: 51 }).toJSDate(),
            y: 5427
          },
          {
            x: now7.minus({ days: 50 }).toJSDate(),
            y: 5865
          },
          {
            x: now7.minus({ days: 49 }).toJSDate(),
            y: 5700
          },
          {
            x: now7.minus({ days: 48 }).toJSDate(),
            y: 6052
          },
          {
            x: now7.minus({ days: 47 }).toJSDate(),
            y: 5760
          },
          {
            x: now7.minus({ days: 46 }).toJSDate(),
            y: 5648
          },
          {
            x: now7.minus({ days: 45 }).toJSDate(),
            y: 5510
          },
          {
            x: now7.minus({ days: 44 }).toJSDate(),
            y: 5435
          },
          {
            x: now7.minus({ days: 43 }).toJSDate(),
            y: 5239
          },
          {
            x: now7.minus({ days: 42 }).toJSDate(),
            y: 5452
          },
          {
            x: now7.minus({ days: 41 }).toJSDate(),
            y: 5416
          },
          {
            x: now7.minus({ days: 40 }).toJSDate(),
            y: 5195
          },
          {
            x: now7.minus({ days: 39 }).toJSDate(),
            y: 5119
          },
          {
            x: now7.minus({ days: 38 }).toJSDate(),
            y: 4635
          },
          {
            x: now7.minus({ days: 37 }).toJSDate(),
            y: 4833
          },
          {
            x: now7.minus({ days: 36 }).toJSDate(),
            y: 4584
          },
          {
            x: now7.minus({ days: 35 }).toJSDate(),
            y: 4822
          },
          {
            x: now7.minus({ days: 34 }).toJSDate(),
            y: 4330
          },
          {
            x: now7.minus({ days: 33 }).toJSDate(),
            y: 4582
          },
          {
            x: now7.minus({ days: 32 }).toJSDate(),
            y: 4348
          },
          {
            x: now7.minus({ days: 31 }).toJSDate(),
            y: 4132
          },
          {
            x: now7.minus({ days: 30 }).toJSDate(),
            y: 4099
          },
          {
            x: now7.minus({ days: 29 }).toJSDate(),
            y: 3849
          },
          {
            x: now7.minus({ days: 28 }).toJSDate(),
            y: 4010
          },
          {
            x: now7.minus({ days: 27 }).toJSDate(),
            y: 4486
          },
          {
            x: now7.minus({ days: 26 }).toJSDate(),
            y: 4403
          },
          {
            x: now7.minus({ days: 25 }).toJSDate(),
            y: 4141
          },
          {
            x: now7.minus({ days: 24 }).toJSDate(),
            y: 3780
          },
          {
            x: now7.minus({ days: 23 }).toJSDate(),
            y: 3929
          },
          {
            x: now7.minus({ days: 22 }).toJSDate(),
            y: 3524
          },
          {
            x: now7.minus({ days: 21 }).toJSDate(),
            y: 3212
          },
          {
            x: now7.minus({ days: 20 }).toJSDate(),
            y: 3568
          },
          {
            x: now7.minus({ days: 19 }).toJSDate(),
            y: 3800
          },
          {
            x: now7.minus({ days: 18 }).toJSDate(),
            y: 3796
          },
          {
            x: now7.minus({ days: 17 }).toJSDate(),
            y: 3870
          },
          {
            x: now7.minus({ days: 16 }).toJSDate(),
            y: 3745
          },
          {
            x: now7.minus({ days: 15 }).toJSDate(),
            y: 3751
          },
          {
            x: now7.minus({ days: 14 }).toJSDate(),
            y: 3310
          },
          {
            x: now7.minus({ days: 13 }).toJSDate(),
            y: 3509
          },
          {
            x: now7.minus({ days: 12 }).toJSDate(),
            y: 3311
          },
          {
            x: now7.minus({ days: 11 }).toJSDate(),
            y: 3187
          },
          {
            x: now7.minus({ days: 10 }).toJSDate(),
            y: 2918
          },
          {
            x: now7.minus({ days: 9 }).toJSDate(),
            y: 3191
          },
          {
            x: now7.minus({ days: 8 }).toJSDate(),
            y: 3437
          },
          {
            x: now7.minus({ days: 7 }).toJSDate(),
            y: 3291
          },
          {
            x: now7.minus({ days: 6 }).toJSDate(),
            y: 3317
          },
          {
            x: now7.minus({ days: 5 }).toJSDate(),
            y: 3716
          },
          {
            x: now7.minus({ days: 4 }).toJSDate(),
            y: 3260
          },
          {
            x: now7.minus({ days: 3 }).toJSDate(),
            y: 3694
          },
          {
            x: now7.minus({ days: 2 }).toJSDate(),
            y: 3598
          },
          {
            x: now7.minus({ days: 1 }).toJSDate(),
            y: 3812
          }
        ]
      },
      {
        name: "Visitors",
        data: [
          {
            x: now7.minus({ days: 65 }).toJSDate(),
            y: 1654
          },
          {
            x: now7.minus({ days: 64 }).toJSDate(),
            y: 1900
          },
          {
            x: now7.minus({ days: 63 }).toJSDate(),
            y: 1647
          },
          {
            x: now7.minus({ days: 62 }).toJSDate(),
            y: 1315
          },
          {
            x: now7.minus({ days: 61 }).toJSDate(),
            y: 1807
          },
          {
            x: now7.minus({ days: 60 }).toJSDate(),
            y: 1793
          },
          {
            x: now7.minus({ days: 59 }).toJSDate(),
            y: 1892
          },
          {
            x: now7.minus({ days: 58 }).toJSDate(),
            y: 1846
          },
          {
            x: now7.minus({ days: 57 }).toJSDate(),
            y: 1966
          },
          {
            x: now7.minus({ days: 56 }).toJSDate(),
            y: 1804
          },
          {
            x: now7.minus({ days: 55 }).toJSDate(),
            y: 1778
          },
          {
            x: now7.minus({ days: 54 }).toJSDate(),
            y: 2015
          },
          {
            x: now7.minus({ days: 53 }).toJSDate(),
            y: 1892
          },
          {
            x: now7.minus({ days: 52 }).toJSDate(),
            y: 1708
          },
          {
            x: now7.minus({ days: 51 }).toJSDate(),
            y: 1711
          },
          {
            x: now7.minus({ days: 50 }).toJSDate(),
            y: 1570
          },
          {
            x: now7.minus({ days: 49 }).toJSDate(),
            y: 1507
          },
          {
            x: now7.minus({ days: 48 }).toJSDate(),
            y: 1451
          },
          {
            x: now7.minus({ days: 47 }).toJSDate(),
            y: 1522
          },
          {
            x: now7.minus({ days: 46 }).toJSDate(),
            y: 1801
          },
          {
            x: now7.minus({ days: 45 }).toJSDate(),
            y: 1977
          },
          {
            x: now7.minus({ days: 44 }).toJSDate(),
            y: 2367
          },
          {
            x: now7.minus({ days: 43 }).toJSDate(),
            y: 2798
          },
          {
            x: now7.minus({ days: 42 }).toJSDate(),
            y: 3080
          },
          {
            x: now7.minus({ days: 41 }).toJSDate(),
            y: 2856
          },
          {
            x: now7.minus({ days: 40 }).toJSDate(),
            y: 2745
          },
          {
            x: now7.minus({ days: 39 }).toJSDate(),
            y: 2750
          },
          {
            x: now7.minus({ days: 38 }).toJSDate(),
            y: 2728
          },
          {
            x: now7.minus({ days: 37 }).toJSDate(),
            y: 2436
          },
          {
            x: now7.minus({ days: 36 }).toJSDate(),
            y: 2289
          },
          {
            x: now7.minus({ days: 35 }).toJSDate(),
            y: 2657
          },
          {
            x: now7.minus({ days: 34 }).toJSDate(),
            y: 2804
          },
          {
            x: now7.minus({ days: 33 }).toJSDate(),
            y: 2777
          },
          {
            x: now7.minus({ days: 32 }).toJSDate(),
            y: 3024
          },
          {
            x: now7.minus({ days: 31 }).toJSDate(),
            y: 2657
          },
          {
            x: now7.minus({ days: 30 }).toJSDate(),
            y: 2218
          },
          {
            x: now7.minus({ days: 29 }).toJSDate(),
            y: 1964
          },
          {
            x: now7.minus({ days: 28 }).toJSDate(),
            y: 1674
          },
          {
            x: now7.minus({ days: 27 }).toJSDate(),
            y: 1721
          },
          {
            x: now7.minus({ days: 26 }).toJSDate(),
            y: 2005
          },
          {
            x: now7.minus({ days: 25 }).toJSDate(),
            y: 1613
          },
          {
            x: now7.minus({ days: 24 }).toJSDate(),
            y: 1295
          },
          {
            x: now7.minus({ days: 23 }).toJSDate(),
            y: 1071
          },
          {
            x: now7.minus({ days: 22 }).toJSDate(),
            y: 799
          },
          {
            x: now7.minus({ days: 21 }).toJSDate(),
            y: 1133
          },
          {
            x: now7.minus({ days: 20 }).toJSDate(),
            y: 1536
          },
          {
            x: now7.minus({ days: 19 }).toJSDate(),
            y: 2016
          },
          {
            x: now7.minus({ days: 18 }).toJSDate(),
            y: 2256
          },
          {
            x: now7.minus({ days: 17 }).toJSDate(),
            y: 1934
          },
          {
            x: now7.minus({ days: 16 }).toJSDate(),
            y: 1832
          },
          {
            x: now7.minus({ days: 15 }).toJSDate(),
            y: 2075
          },
          {
            x: now7.minus({ days: 14 }).toJSDate(),
            y: 1709
          },
          {
            x: now7.minus({ days: 13 }).toJSDate(),
            y: 1932
          },
          {
            x: now7.minus({ days: 12 }).toJSDate(),
            y: 1831
          },
          {
            x: now7.minus({ days: 11 }).toJSDate(),
            y: 1434
          },
          {
            x: now7.minus({ days: 10 }).toJSDate(),
            y: 993
          },
          {
            x: now7.minus({ days: 9 }).toJSDate(),
            y: 1064
          },
          {
            x: now7.minus({ days: 8 }).toJSDate(),
            y: 618
          },
          {
            x: now7.minus({ days: 7 }).toJSDate(),
            y: 1032
          },
          {
            x: now7.minus({ days: 6 }).toJSDate(),
            y: 1280
          },
          {
            x: now7.minus({ days: 5 }).toJSDate(),
            y: 1344
          },
          {
            x: now7.minus({ days: 4 }).toJSDate(),
            y: 1835
          },
          {
            x: now7.minus({ days: 3 }).toJSDate(),
            y: 2287
          },
          {
            x: now7.minus({ days: 2 }).toJSDate(),
            y: 2226
          },
          {
            x: now7.minus({ days: 1 }).toJSDate(),
            y: 2692
          }
        ]
      }
    ]
  },
  newVsReturning: {
    uniqueVisitors: 46085,
    series: [80, 20],
    labels: ["New", "Returning"]
  },
  gender: {
    uniqueVisitors: 46085,
    series: [55, 45],
    labels: ["Male", "Female"]
  },
  age: {
    uniqueVisitors: 46085,
    series: [35, 65],
    labels: ["Under 30", "Over 30"]
  },
  language: {
    uniqueVisitors: 46085,
    series: [25, 75],
    labels: ["English", "Other"]
  }
};

// src/app/mock-api/dashboards/analytics/api.ts
var _AnalyticsMockApi = class _AnalyticsMockApi {
  /**
   * Constructor
   */
  constructor(_fuseMockApiService) {
    this._fuseMockApiService = _fuseMockApiService;
    this._analytics = analytics;
    this.registerHandlers();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Register Mock API handlers
   */
  registerHandlers() {
    this._fuseMockApiService.onGet("api/dashboards/analytics").reply(() => [200, cloneDeep_default(this._analytics)]);
  }
};
_AnalyticsMockApi.\u0275fac = function AnalyticsMockApi_Factory(t) {
  return new (t || _AnalyticsMockApi)(\u0275\u0275inject(FuseMockApiService));
};
_AnalyticsMockApi.\u0275prov = /* @__PURE__ */ \u0275\u0275defineInjectable({ token: _AnalyticsMockApi, factory: _AnalyticsMockApi.\u0275fac, providedIn: "root" });
var AnalyticsMockApi = _AnalyticsMockApi;

// src/app/mock-api/dashboards/crypto/data.ts
var now8 = DateTime.now();
var crypto = {
  btc: {
    amount: 8878.48,
    trend: {
      dir: "up",
      amount: 0.17
    },
    marketCap: 148752956966,
    volume: 22903438381,
    supply: 18168448,
    allTimeHigh: 19891,
    price: {
      series: [
        {
          name: "Price",
          data: [
            {
              x: -145,
              y: 6554.36
            },
            {
              x: -144,
              y: 6554.36
            },
            {
              x: -143,
              y: 6546.94
            },
            {
              x: -142,
              y: 6546.96
            },
            {
              x: -141,
              y: 6546.11
            },
            {
              x: -140,
              y: 6550.26
            },
            {
              x: -139,
              y: 6546.11
            },
            {
              x: -138,
              y: 6550.79
            },
            {
              x: -137,
              y: 6545.36
            },
            {
              x: -136,
              y: 6541.06
            },
            {
              x: -135,
              y: 6540.1
            },
            {
              x: -134,
              y: 6538.31
            },
            {
              x: -133,
              y: 6538.42
            },
            {
              x: -132,
              y: 6538.48
            },
            {
              x: -131,
              y: 6538.71
            },
            {
              x: -130,
              y: 6548.42
            },
            {
              x: -129,
              y: 6546.87
            },
            {
              x: -128,
              y: 6547.07
            },
            {
              x: -127,
              y: 6535.07
            },
            {
              x: -126,
              y: 6535.01
            },
            {
              x: -125,
              y: 6539.02
            },
            {
              x: -124,
              y: 6547.96
            },
            {
              x: -123,
              y: 6547.92
            },
            {
              x: -122,
              y: 6546.56
            },
            {
              x: -121,
              y: 6546.56
            },
            {
              x: -120,
              y: 6564.16
            },
            {
              x: -119,
              y: 6560.83
            },
            {
              x: -118,
              y: 6559.08
            },
            {
              x: -117,
              y: 6553.02
            },
            {
              x: -116,
              y: 6564.99
            },
            {
              x: -115,
              y: 6558.7
            },
            {
              x: -114,
              y: 6568.73
            },
            {
              x: -113,
              y: 6568.8
            },
            {
              x: -112,
              y: 6568.8
            },
            {
              x: -111,
              y: 6568.8
            },
            {
              x: -110,
              y: 6571.83
            },
            {
              x: -109,
              y: 6562.64
            },
            {
              x: -108,
              y: 6561.28
            },
            {
              x: -107,
              y: 6561.28
            },
            {
              x: -106,
              y: 6560.4
            },
            {
              x: -105,
              y: 6564.41
            },
            {
              x: -104,
              y: 6562.44
            },
            {
              x: -103,
              y: 6565.13
            },
            {
              x: -102,
              y: 6553.3
            },
            {
              x: -101,
              y: 6552.68
            },
            {
              x: -100,
              y: 6551.92
            },
            {
              x: -99,
              y: 6553.85
            },
            {
              x: -98,
              y: 6560
            },
            {
              x: -97,
              y: 6560
            },
            {
              x: -96,
              y: 6565.01
            },
            {
              x: -95,
              y: 6583.19
            },
            {
              x: -94,
              y: 6555.79
            },
            {
              x: -93,
              y: 6556.04
            },
            {
              x: -92,
              y: 6558.85
            },
            {
              x: -91,
              y: 6564.75
            },
            {
              x: -90,
              y: 6564.88
            },
            {
              x: -89,
              y: 6565.1
            },
            {
              x: -88,
              y: 6565.72
            },
            {
              x: -87,
              y: 6565.72
            },
            {
              x: -86,
              y: 6565.95
            },
            {
              x: -85,
              y: 6561.82
            },
            {
              x: -84,
              y: 6566.26
            },
            {
              x: -83,
              y: 6568.81
            },
            {
              x: -82,
              y: 6588.57
            },
            {
              x: -81,
              y: 6587.11
            },
            {
              x: -80,
              y: 6577.86
            },
            {
              x: -79,
              y: 6586.51
            },
            {
              x: -78,
              y: 6581.14
            },
            {
              x: -77,
              y: 6581.45
            },
            {
              x: -76,
              y: 6589.54
            },
            {
              x: -75,
              y: 6580.91
            },
            {
              x: -74,
              y: 6581.67
            },
            {
              x: -73,
              y: 6579.06
            },
            {
              x: -72,
              y: 6578.73
            },
            {
              x: -71,
              y: 6578.64
            },
            {
              x: -70,
              y: 6579.08
            },
            {
              x: -69,
              y: 6577.43
            },
            {
              x: -68,
              y: 6582.12
            },
            {
              x: -67,
              y: 6572.42
            },
            {
              x: -66,
              y: 6578.72
            },
            {
              x: -65,
              y: 6572.43
            },
            {
              x: -64,
              y: 6570.64
            },
            {
              x: -63,
              y: 6561.64
            },
            {
              x: -62,
              y: 6550.84
            },
            {
              x: -61,
              y: 6561.83
            },
            {
              x: -60,
              y: 6561.84
            },
            {
              x: -59,
              y: 6552.44
            },
            {
              x: -58,
              y: 6552.47
            },
            {
              x: -57,
              y: 6562.31
            },
            {
              x: -56,
              y: 6562.1
            },
            {
              x: -55,
              y: 6561.65
            },
            {
              x: -54,
              y: 6547.96
            },
            {
              x: -53,
              y: 6559.95
            },
            {
              x: -52,
              y: 6562.08
            },
            {
              x: -51,
              y: 6557.71
            },
            {
              x: -50,
              y: 6559.05
            },
            {
              x: -49,
              y: 6562.69
            },
            {
              x: -48,
              y: 6578.18
            },
            {
              x: -47,
              y: 6580.15
            },
            {
              x: -46,
              y: 6584.26
            },
            {
              x: -45,
              y: 6574.75
            },
            {
              x: -44,
              y: 6574.85
            },
            {
              x: -43,
              y: 6582.63
            },
            {
              x: -42,
              y: 6569.7
            },
            {
              x: -41,
              y: 6570.1
            },
            {
              x: -40,
              y: 6570.11
            },
            {
              x: -39,
              y: 6569.71
            },
            {
              x: -38,
              y: 6578.03
            },
            {
              x: -37,
              y: 6579.92
            },
            {
              x: -36,
              y: 6571.03
            },
            {
              x: -35,
              y: 6571.48
            },
            {
              x: -34,
              y: 6576.67
            },
            {
              x: -33,
              y: 6576.67
            },
            {
              x: -32,
              y: 6576.63
            },
            {
              x: -31,
              y: 6576.68
            },
            {
              x: -30,
              y: 6573.29
            },
            {
              x: -29,
              y: 6577.28
            },
            {
              x: -28,
              y: 6577.73
            },
            {
              x: -27,
              y: 6577.7
            },
            {
              x: -26,
              y: 6578.36
            },
            {
              x: -25,
              y: 6578.24
            },
            {
              x: -24,
              y: 6581.3
            },
            {
              x: -23,
              y: 6582.59
            },
            {
              x: -22,
              y: 6602.51
            },
            {
              x: -21,
              y: 6582.65
            },
            {
              x: -20,
              y: 6574.77
            },
            {
              x: -19,
              y: 6574.41
            },
            {
              x: -18,
              y: 6575.08
            },
            {
              x: -17,
              y: 6575.08
            },
            {
              x: -16,
              y: 6574.09
            },
            {
              x: -15,
              y: 6568.84
            },
            {
              x: -14,
              y: 6567.49
            },
            {
              x: -13,
              y: 6559.75
            },
            {
              x: -12,
              y: 6566.65
            },
            {
              x: -11,
              y: 6567.52
            },
            {
              x: -10,
              y: 6567.59
            },
            {
              x: -9,
              y: 6564.18
            },
            {
              x: -8,
              y: 6570.11
            },
            {
              x: -7,
              y: 6562.7
            },
            {
              x: -6,
              y: 6562.7
            },
            {
              x: -5,
              y: 6562.77
            },
            {
              x: -4,
              y: 6569.46
            },
            {
              x: -3,
              y: 6571.04
            },
            {
              x: -2,
              y: 6571.48
            },
            {
              x: -1,
              y: 6571.3
            }
          ]
        }
      ]
    }
  },
  prices: {
    btc: 8878.48,
    eth: 170.46,
    bch: 359.93,
    xrp: 0.23512
  },
  wallets: {
    btc: 24.97311243,
    eth: 126.3212,
    bch: 78.454412,
    xrp: 11278.771123
  },
  watchlist: [
    {
      title: "Ethereum",
      iso: "ETH",
      amount: 170.46,
      trend: {
        dir: "up",
        amount: 2.35
      },
      series: [
        {
          name: "Price",
          data: [
            {
              x: now8.minus({ minutes: 20 }).toFormat("HH:mm"),
              y: 154.36
            },
            {
              x: now8.minus({ minutes: 19 }).toFormat("HH:mm"),
              y: 154.36
            },
            {
              x: now8.minus({ minutes: 18 }).toFormat("HH:mm"),
              y: 146.94
            },
            {
              x: now8.minus({ minutes: 17 }).toFormat("HH:mm"),
              y: 146.96
            },
            {
              x: now8.minus({ minutes: 16 }).toFormat("HH:mm"),
              y: 146.11
            },
            {
              x: now8.minus({ minutes: 15 }).toFormat("HH:mm"),
              y: 150.26
            },
            {
              x: now8.minus({ minutes: 14 }).toFormat("HH:mm"),
              y: 146.11
            },
            {
              x: now8.minus({ minutes: 13 }).toFormat("HH:mm"),
              y: 150.79
            },
            {
              x: now8.minus({ minutes: 12 }).toFormat("HH:mm"),
              y: 145.36
            },
            {
              x: now8.minus({ minutes: 11 }).toFormat("HH:mm"),
              y: 141.06
            },
            {
              x: now8.minus({ minutes: 10 }).toFormat("HH:mm"),
              y: 140.1
            },
            {
              x: now8.minus({ minutes: 9 }).toFormat("HH:mm"),
              y: 138.31
            },
            {
              x: now8.minus({ minutes: 8 }).toFormat("HH:mm"),
              y: 138.42
            },
            {
              x: now8.minus({ minutes: 7 }).toFormat("HH:mm"),
              y: 138.48
            },
            {
              x: now8.minus({ minutes: 6 }).toFormat("HH:mm"),
              y: 138.71
            },
            {
              x: now8.minus({ minutes: 5 }).toFormat("HH:mm"),
              y: 148.42
            },
            {
              x: now8.minus({ minutes: 4 }).toFormat("HH:mm"),
              y: 146.87
            },
            {
              x: now8.minus({ minutes: 3 }).toFormat("HH:mm"),
              y: 147.07
            },
            {
              x: now8.minus({ minutes: 2 }).toFormat("HH:mm"),
              y: 135.07
            },
            {
              x: now8.minus({ minutes: 1 }).toFormat("HH:mm"),
              y: 135.01
            }
          ]
        }
      ]
    },
    {
      title: "Bitcoin Cash",
      iso: "BCH",
      amount: 359.93,
      trend: {
        dir: "up",
        amount: 9.94
      },
      series: [
        {
          name: "Price",
          data: [
            {
              x: now8.minus({ minutes: 20 }).toFormat("HH:mm"),
              y: 374.77
            },
            {
              x: now8.minus({ minutes: 19 }).toFormat("HH:mm"),
              y: 374.41
            },
            {
              x: now8.minus({ minutes: 18 }).toFormat("HH:mm"),
              y: 375.08
            },
            {
              x: now8.minus({ minutes: 17 }).toFormat("HH:mm"),
              y: 375.08
            },
            {
              x: now8.minus({ minutes: 16 }).toFormat("HH:mm"),
              y: 374.09
            },
            {
              x: now8.minus({ minutes: 15 }).toFormat("HH:mm"),
              y: 368.84
            },
            {
              x: now8.minus({ minutes: 14 }).toFormat("HH:mm"),
              y: 367.49
            },
            {
              x: now8.minus({ minutes: 13 }).toFormat("HH:mm"),
              y: 359.75
            },
            {
              x: now8.minus({ minutes: 12 }).toFormat("HH:mm"),
              y: 366.65
            },
            {
              x: now8.minus({ minutes: 11 }).toFormat("HH:mm"),
              y: 367.52
            },
            {
              x: now8.minus({ minutes: 10 }).toFormat("HH:mm"),
              y: 367.59
            },
            {
              x: now8.minus({ minutes: 9 }).toFormat("HH:mm"),
              y: 364.18
            },
            {
              x: now8.minus({ minutes: 8 }).toFormat("HH:mm"),
              y: 370.11
            },
            {
              x: now8.minus({ minutes: 7 }).toFormat("HH:mm"),
              y: 362.7
            },
            {
              x: now8.minus({ minutes: 6 }).toFormat("HH:mm"),
              y: 362.7
            },
            {
              x: now8.minus({ minutes: 5 }).toFormat("HH:mm"),
              y: 362.77
            },
            {
              x: now8.minus({ minutes: 4 }).toFormat("HH:mm"),
              y: 369.46
            },
            {
              x: now8.minus({ minutes: 3 }).toFormat("HH:mm"),
              y: 371.04
            },
            {
              x: now8.minus({ minutes: 2 }).toFormat("HH:mm"),
              y: 371.48
            },
            {
              x: now8.minus({ minutes: 1 }).toFormat("HH:mm"),
              y: 371.3
            }
          ]
        }
      ]
    },
    {
      title: "XRP",
      iso: "XRP",
      amount: 0.23512,
      trend: {
        dir: "down",
        amount: 0.35
      },
      series: [
        {
          name: "Price",
          data: [
            {
              x: now8.minus({ minutes: 20 }).toFormat("HH:mm"),
              y: 0.258
            },
            {
              x: now8.minus({ minutes: 19 }).toFormat("HH:mm"),
              y: 0.256
            },
            {
              x: now8.minus({ minutes: 18 }).toFormat("HH:mm"),
              y: 0.255
            },
            {
              x: now8.minus({ minutes: 17 }).toFormat("HH:mm"),
              y: 0.255
            },
            {
              x: now8.minus({ minutes: 16 }).toFormat("HH:mm"),
              y: 0.254
            },
            {
              x: now8.minus({ minutes: 15 }).toFormat("HH:mm"),
              y: 0.248
            },
            {
              x: now8.minus({ minutes: 14 }).toFormat("HH:mm"),
              y: 0.247
            },
            {
              x: now8.minus({ minutes: 13 }).toFormat("HH:mm"),
              y: 0.249
            },
            {
              x: now8.minus({ minutes: 12 }).toFormat("HH:mm"),
              y: 0.246
            },
            {
              x: now8.minus({ minutes: 11 }).toFormat("HH:mm"),
              y: 0.247
            },
            {
              x: now8.minus({ minutes: 10 }).toFormat("HH:mm"),
              y: 0.247
            },
            {
              x: now8.minus({ minutes: 9 }).toFormat("HH:mm"),
              y: 0.244
            },
            {
              x: now8.minus({ minutes: 8 }).toFormat("HH:mm"),
              y: 0.25
            },
            {
              x: now8.minus({ minutes: 7 }).toFormat("HH:mm"),
              y: 0.242
            },
            {
              x: now8.minus({ minutes: 6 }).toFormat("HH:mm"),
              y: 0.251
            },
            {
              x: now8.minus({ minutes: 5 }).toFormat("HH:mm"),
              y: 0.251
            },
            {
              x: now8.minus({ minutes: 4 }).toFormat("HH:mm"),
              y: 0.251
            },
            {
              x: now8.minus({ minutes: 3 }).toFormat("HH:mm"),
              y: 0.249
            },
            {
              x: now8.minus({ minutes: 2 }).toFormat("HH:mm"),
              y: 0.242
            },
            {
              x: now8.minus({ minutes: 1 }).toFormat("HH:mm"),
              y: 0.24
            }
          ]
        }
      ]
    },
    {
      title: "Litecoin",
      iso: "LTC",
      amount: 60.15,
      trend: {
        dir: "up",
        amount: 0.99
      },
      series: [
        {
          name: "Price",
          data: [
            {
              x: now8.minus({ minutes: 20 }).toFormat("HH:mm"),
              y: 62.54
            },
            {
              x: now8.minus({ minutes: 19 }).toFormat("HH:mm"),
              y: 61.54
            },
            {
              x: now8.minus({ minutes: 18 }).toFormat("HH:mm"),
              y: 62.55
            },
            {
              x: now8.minus({ minutes: 17 }).toFormat("HH:mm"),
              y: 60.55
            },
            {
              x: now8.minus({ minutes: 16 }).toFormat("HH:mm"),
              y: 59.54
            },
            {
              x: now8.minus({ minutes: 15 }).toFormat("HH:mm"),
              y: 58.48
            },
            {
              x: now8.minus({ minutes: 14 }).toFormat("HH:mm"),
              y: 54.47
            },
            {
              x: now8.minus({ minutes: 13 }).toFormat("HH:mm"),
              y: 51.49
            },
            {
              x: now8.minus({ minutes: 12 }).toFormat("HH:mm"),
              y: 51.46
            },
            {
              x: now8.minus({ minutes: 11 }).toFormat("HH:mm"),
              y: 53.47
            },
            {
              x: now8.minus({ minutes: 10 }).toFormat("HH:mm"),
              y: 52.47
            },
            {
              x: now8.minus({ minutes: 9 }).toFormat("HH:mm"),
              y: 54.44
            },
            {
              x: now8.minus({ minutes: 8 }).toFormat("HH:mm"),
              y: 59.5
            },
            {
              x: now8.minus({ minutes: 7 }).toFormat("HH:mm"),
              y: 62.42
            },
            {
              x: now8.minus({ minutes: 6 }).toFormat("HH:mm"),
              y: 61.42
            },
            {
              x: now8.minus({ minutes: 5 }).toFormat("HH:mm"),
              y: 60.42
            },
            {
              x: now8.minus({ minutes: 4 }).toFormat("HH:mm"),
              y: 58.49
            },
            {
              x: now8.minus({ minutes: 3 }).toFormat("HH:mm"),
              y: 57.51
            },
            {
              x: now8.minus({ minutes: 2 }).toFormat("HH:mm"),
              y: 54.51
            },
            {
              x: now8.minus({ minutes: 1 }).toFormat("HH:mm"),
              y: 51.25
            }
          ]
        }
      ]
    },
    {
      title: "Zcash",
      iso: "ZEC",
      amount: 58.41,
      trend: {
        dir: "down",
        amount: 8.79
      },
      series: [
        {
          name: "Price",
          data: [
            {
              x: now8.minus({ minutes: 20 }).toFormat("HH:mm"),
              y: 53.54
            },
            {
              x: now8.minus({ minutes: 19 }).toFormat("HH:mm"),
              y: 52.54
            },
            {
              x: now8.minus({ minutes: 18 }).toFormat("HH:mm"),
              y: 52.55
            },
            {
              x: now8.minus({ minutes: 17 }).toFormat("HH:mm"),
              y: 46.44
            },
            {
              x: now8.minus({ minutes: 16 }).toFormat("HH:mm"),
              y: 49.5
            },
            {
              x: now8.minus({ minutes: 15 }).toFormat("HH:mm"),
              y: 55.42
            },
            {
              x: now8.minus({ minutes: 14 }).toFormat("HH:mm"),
              y: 54.42
            },
            {
              x: now8.minus({ minutes: 13 }).toFormat("HH:mm"),
              y: 43.49
            },
            {
              x: now8.minus({ minutes: 12 }).toFormat("HH:mm"),
              y: 43.46
            },
            {
              x: now8.minus({ minutes: 11 }).toFormat("HH:mm"),
              y: 41.47
            },
            {
              x: now8.minus({ minutes: 10 }).toFormat("HH:mm"),
              y: 41.47
            },
            {
              x: now8.minus({ minutes: 9 }).toFormat("HH:mm"),
              y: 51.55
            },
            {
              x: now8.minus({ minutes: 8 }).toFormat("HH:mm"),
              y: 48.54
            },
            {
              x: now8.minus({ minutes: 7 }).toFormat("HH:mm"),
              y: 49.48
            },
            {
              x: now8.minus({ minutes: 6 }).toFormat("HH:mm"),
              y: 45.47
            },
            {
              x: now8.minus({ minutes: 5 }).toFormat("HH:mm"),
              y: 51.42
            },
            {
              x: now8.minus({ minutes: 4 }).toFormat("HH:mm"),
              y: 49.49
            },
            {
              x: now8.minus({ minutes: 3 }).toFormat("HH:mm"),
              y: 46.51
            },
            {
              x: now8.minus({ minutes: 2 }).toFormat("HH:mm"),
              y: 41.51
            },
            {
              x: now8.minus({ minutes: 1 }).toFormat("HH:mm"),
              y: 44.25
            }
          ]
        }
      ]
    },
    {
      title: "Bitcoin Gold",
      iso: "BTG",
      amount: 12.23,
      trend: {
        dir: "down",
        amount: 4.42
      },
      series: [
        {
          name: "Price",
          data: [
            {
              x: now8.minus({ minutes: 20 }).toFormat("HH:mm"),
              y: 14.77
            },
            {
              x: now8.minus({ minutes: 19 }).toFormat("HH:mm"),
              y: 14.41
            },
            {
              x: now8.minus({ minutes: 18 }).toFormat("HH:mm"),
              y: 15.08
            },
            {
              x: now8.minus({ minutes: 17 }).toFormat("HH:mm"),
              y: 15.08
            },
            {
              x: now8.minus({ minutes: 16 }).toFormat("HH:mm"),
              y: 14.09
            },
            {
              x: now8.minus({ minutes: 15 }).toFormat("HH:mm"),
              y: 18.84
            },
            {
              x: now8.minus({ minutes: 14 }).toFormat("HH:mm"),
              y: 17.49
            },
            {
              x: now8.minus({ minutes: 13 }).toFormat("HH:mm"),
              y: 19.75
            },
            {
              x: now8.minus({ minutes: 12 }).toFormat("HH:mm"),
              y: 16.65
            },
            {
              x: now8.minus({ minutes: 11 }).toFormat("HH:mm"),
              y: 17.52
            },
            {
              x: now8.minus({ minutes: 10 }).toFormat("HH:mm"),
              y: 17.59
            },
            {
              x: now8.minus({ minutes: 9 }).toFormat("HH:mm"),
              y: 14.18
            },
            {
              x: now8.minus({ minutes: 8 }).toFormat("HH:mm"),
              y: 10.11
            },
            {
              x: now8.minus({ minutes: 7 }).toFormat("HH:mm"),
              y: 12.7
            },
            {
              x: now8.minus({ minutes: 6 }).toFormat("HH:mm"),
              y: 12.7
            },
            {
              x: now8.minus({ minutes: 5 }).toFormat("HH:mm"),
              y: 12.77
            },
            {
              x: now8.minus({ minutes: 4 }).toFormat("HH:mm"),
              y: 19.46
            },
            {
              x: now8.minus({ minutes: 3 }).toFormat("HH:mm"),
              y: 11.04
            },
            {
              x: now8.minus({ minutes: 2 }).toFormat("HH:mm"),
              y: 11.48
            },
            {
              x: now8.minus({ minutes: 1 }).toFormat("HH:mm"),
              y: 11.3
            }
          ]
        }
      ]
    }
  ]
};

// src/app/mock-api/dashboards/crypto/api.ts
var _CryptoMockApi = class _CryptoMockApi {
  /**
   * Constructor
   */
  constructor(_fuseMockApiService) {
    this._fuseMockApiService = _fuseMockApiService;
    this._crypto = crypto;
    this.registerHandlers();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Register Mock API handlers
   */
  registerHandlers() {
    this._fuseMockApiService.onGet("api/dashboards/crypto").reply(() => [200, cloneDeep_default(this._crypto)]);
  }
};
_CryptoMockApi.\u0275fac = function CryptoMockApi_Factory(t) {
  return new (t || _CryptoMockApi)(\u0275\u0275inject(FuseMockApiService));
};
_CryptoMockApi.\u0275prov = /* @__PURE__ */ \u0275\u0275defineInjectable({ token: _CryptoMockApi, factory: _CryptoMockApi.\u0275fac, providedIn: "root" });
var CryptoMockApi = _CryptoMockApi;

// src/app/mock-api/dashboards/finance/data.ts
var now9 = DateTime.now();
var finance = {
  accountBalance: {
    growRate: 38.33,
    ami: 45332,
    series: [
      {
        name: "Predicted",
        data: [
          {
            x: now9.minus({ months: 12 }).plus({ day: 1 }).toJSDate(),
            y: 48.84
          },
          {
            x: now9.minus({ months: 12 }).plus({ day: 4 }).toJSDate(),
            y: 53.51
          },
          {
            x: now9.minus({ months: 12 }).plus({ day: 7 }).toJSDate(),
            y: 52.93
          },
          {
            x: now9.minus({ months: 12 }).plus({ day: 10 }).toJSDate(),
            y: 49.08
          },
          {
            x: now9.minus({ months: 12 }).plus({ day: 13 }).toJSDate(),
            y: 50.27
          },
          {
            x: now9.minus({ months: 12 }).plus({ day: 16 }).toJSDate(),
            y: 48.37
          },
          {
            x: now9.minus({ months: 12 }).plus({ day: 19 }).toJSDate(),
            y: 44.84
          },
          {
            x: now9.minus({ months: 12 }).plus({ day: 22 }).toJSDate(),
            y: 40.71
          },
          {
            x: now9.minus({ months: 12 }).plus({ day: 25 }).toJSDate(),
            y: 41.24
          },
          {
            x: now9.minus({ months: 12 }).plus({ day: 28 }).toJSDate(),
            y: 45.63
          },
          {
            x: now9.minus({ months: 11 }).plus({ day: 1 }).toJSDate(),
            y: 38.2
          },
          {
            x: now9.minus({ months: 11 }).plus({ day: 4 }).toJSDate(),
            y: 39.68
          },
          {
            x: now9.minus({ months: 11 }).plus({ day: 7 }).toJSDate(),
            y: 41.02
          },
          {
            x: now9.minus({ months: 11 }).plus({ day: 10 }).toJSDate(),
            y: 39.41
          },
          {
            x: now9.minus({ months: 11 }).plus({ day: 13 }).toJSDate(),
            y: 35.66
          },
          {
            x: now9.minus({ months: 11 }).plus({ day: 16 }).toJSDate(),
            y: 38.53
          },
          {
            x: now9.minus({ months: 11 }).plus({ day: 19 }).toJSDate(),
            y: 38.53
          },
          {
            x: now9.minus({ months: 11 }).plus({ day: 22 }).toJSDate(),
            y: 40.69
          },
          {
            x: now9.minus({ months: 11 }).plus({ day: 25 }).toJSDate(),
            y: 38.79
          },
          {
            x: now9.minus({ months: 11 }).plus({ day: 28 }).toJSDate(),
            y: 42.98
          },
          {
            x: now9.minus({ months: 10 }).plus({ day: 1 }).toJSDate(),
            y: 43.55
          },
          {
            x: now9.minus({ months: 10 }).plus({ day: 4 }).toJSDate(),
            y: 40.65
          },
          {
            x: now9.minus({ months: 10 }).plus({ day: 7 }).toJSDate(),
            y: 36.5
          },
          {
            x: now9.minus({ months: 10 }).plus({ day: 10 }).toJSDate(),
            y: 33.79
          },
          {
            x: now9.minus({ months: 10 }).plus({ day: 13 }).toJSDate(),
            y: 31.91
          },
          {
            x: now9.minus({ months: 10 }).plus({ day: 16 }).toJSDate(),
            y: 29.68
          },
          {
            x: now9.minus({ months: 10 }).plus({ day: 19 }).toJSDate(),
            y: 29.57
          },
          {
            x: now9.minus({ months: 10 }).plus({ day: 22 }).toJSDate(),
            y: 33.13
          },
          {
            x: now9.minus({ months: 10 }).plus({ day: 25 }).toJSDate(),
            y: 37.08
          },
          {
            x: now9.minus({ months: 10 }).plus({ day: 28 }).toJSDate(),
            y: 35.86
          },
          {
            x: now9.minus({ months: 9 }).plus({ day: 1 }).toJSDate(),
            y: 39.65
          },
          {
            x: now9.minus({ months: 9 }).plus({ day: 4 }).toJSDate(),
            y: 39.01
          },
          {
            x: now9.minus({ months: 9 }).plus({ day: 7 }).toJSDate(),
            y: 34.1
          },
          {
            x: now9.minus({ months: 9 }).plus({ day: 10 }).toJSDate(),
            y: 37.48
          },
          {
            x: now9.minus({ months: 9 }).plus({ day: 13 }).toJSDate(),
            y: 39.29
          },
          {
            x: now9.minus({ months: 9 }).plus({ day: 16 }).toJSDate(),
            y: 38.46
          },
          {
            x: now9.minus({ months: 9 }).plus({ day: 19 }).toJSDate(),
            y: 37.71
          },
          {
            x: now9.minus({ months: 9 }).plus({ day: 22 }).toJSDate(),
            y: 40.15
          },
          {
            x: now9.minus({ months: 9 }).plus({ day: 25 }).toJSDate(),
            y: 35.89
          },
          {
            x: now9.minus({ months: 9 }).plus({ day: 28 }).toJSDate(),
            y: 31.5
          },
          {
            x: now9.minus({ months: 8 }).plus({ day: 1 }).toJSDate(),
            y: 30.5
          },
          {
            x: now9.minus({ months: 8 }).plus({ day: 4 }).toJSDate(),
            y: 25.74
          },
          {
            x: now9.minus({ months: 8 }).plus({ day: 7 }).toJSDate(),
            y: 28.23
          },
          {
            x: now9.minus({ months: 8 }).plus({ day: 10 }).toJSDate(),
            y: 28.48
          },
          {
            x: now9.minus({ months: 8 }).plus({ day: 13 }).toJSDate(),
            y: 30
          },
          {
            x: now9.minus({ months: 8 }).plus({ day: 16 }).toJSDate(),
            y: 32.16
          },
          {
            x: now9.minus({ months: 8 }).plus({ day: 19 }).toJSDate(),
            y: 32.99
          },
          {
            x: now9.minus({ months: 8 }).plus({ day: 22 }).toJSDate(),
            y: 37.68
          },
          {
            x: now9.minus({ months: 8 }).plus({ day: 25 }).toJSDate(),
            y: 35.24
          },
          {
            x: now9.minus({ months: 8 }).plus({ day: 28 }).toJSDate(),
            y: 39.18
          },
          {
            x: now9.minus({ months: 7 }).plus({ day: 1 }).toJSDate(),
            y: 41.45
          },
          {
            x: now9.minus({ months: 7 }).plus({ day: 4 }).toJSDate(),
            y: 43.78
          },
          {
            x: now9.minus({ months: 7 }).plus({ day: 7 }).toJSDate(),
            y: 39.41
          },
          {
            x: now9.minus({ months: 7 }).plus({ day: 10 }).toJSDate(),
            y: 39.32
          },
          {
            x: now9.minus({ months: 7 }).plus({ day: 13 }).toJSDate(),
            y: 43.8
          },
          {
            x: now9.minus({ months: 7 }).plus({ day: 16 }).toJSDate(),
            y: 42.43
          },
          {
            x: now9.minus({ months: 7 }).plus({ day: 19 }).toJSDate(),
            y: 43.67
          },
          {
            x: now9.minus({ months: 7 }).plus({ day: 22 }).toJSDate(),
            y: 38.79
          },
          {
            x: now9.minus({ months: 7 }).plus({ day: 25 }).toJSDate(),
            y: 43.57
          },
          {
            x: now9.minus({ months: 7 }).plus({ day: 28 }).toJSDate(),
            y: 41.81
          },
          {
            x: now9.minus({ months: 6 }).plus({ day: 1 }).toJSDate(),
            y: 46.19
          },
          {
            x: now9.minus({ months: 6 }).plus({ day: 4 }).toJSDate(),
            y: 47.69
          },
          {
            x: now9.minus({ months: 6 }).plus({ day: 7 }).toJSDate(),
            y: 49.01
          },
          {
            x: now9.minus({ months: 6 }).plus({ day: 10 }).toJSDate(),
            y: 46.4
          },
          {
            x: now9.minus({ months: 6 }).plus({ day: 13 }).toJSDate(),
            y: 51.28
          },
          {
            x: now9.minus({ months: 6 }).plus({ day: 16 }).toJSDate(),
            y: 50.15
          },
          {
            x: now9.minus({ months: 6 }).plus({ day: 19 }).toJSDate(),
            y: 53.6
          },
          {
            x: now9.minus({ months: 6 }).plus({ day: 22 }).toJSDate(),
            y: 56.08
          },
          {
            x: now9.minus({ months: 6 }).plus({ day: 25 }).toJSDate(),
            y: 52.72
          },
          {
            x: now9.minus({ months: 6 }).plus({ day: 28 }).toJSDate(),
            y: 56.6
          },
          {
            x: now9.minus({ months: 5 }).plus({ day: 1 }).toJSDate(),
            y: 58.36
          },
          {
            x: now9.minus({ months: 5 }).plus({ day: 4 }).toJSDate(),
            y: 56.59
          },
          {
            x: now9.minus({ months: 5 }).plus({ day: 7 }).toJSDate(),
            y: 55.75
          },
          {
            x: now9.minus({ months: 5 }).plus({ day: 10 }).toJSDate(),
            y: 54.74
          },
          {
            x: now9.minus({ months: 5 }).plus({ day: 13 }).toJSDate(),
            y: 54.27
          },
          {
            x: now9.minus({ months: 5 }).plus({ day: 16 }).toJSDate(),
            y: 58.65
          },
          {
            x: now9.minus({ months: 5 }).plus({ day: 19 }).toJSDate(),
            y: 57
          },
          {
            x: now9.minus({ months: 5 }).plus({ day: 22 }).toJSDate(),
            y: 60.52
          },
          {
            x: now9.minus({ months: 5 }).plus({ day: 25 }).toJSDate(),
            y: 57.6
          },
          {
            x: now9.minus({ months: 5 }).plus({ day: 28 }).toJSDate(),
            y: 56.48
          },
          {
            x: now9.minus({ months: 4 }).plus({ day: 1 }).toJSDate(),
            y: 54.35
          },
          {
            x: now9.minus({ months: 4 }).plus({ day: 4 }).toJSDate(),
            y: 52.39
          },
          {
            x: now9.minus({ months: 4 }).plus({ day: 7 }).toJSDate(),
            y: 54.52
          },
          {
            x: now9.minus({ months: 4 }).plus({ day: 10 }).toJSDate(),
            y: 54.16
          },
          {
            x: now9.minus({ months: 4 }).plus({ day: 13 }).toJSDate(),
            y: 51.95
          },
          {
            x: now9.minus({ months: 4 }).plus({ day: 16 }).toJSDate(),
            y: 51.19
          },
          {
            x: now9.minus({ months: 4 }).plus({ day: 19 }).toJSDate(),
            y: 46.35
          },
          {
            x: now9.minus({ months: 4 }).plus({ day: 22 }).toJSDate(),
            y: 48.33
          },
          {
            x: now9.minus({ months: 4 }).plus({ day: 25 }).toJSDate(),
            y: 45.84
          },
          {
            x: now9.minus({ months: 4 }).plus({ day: 28 }).toJSDate(),
            y: 48.22
          },
          {
            x: now9.minus({ months: 3 }).plus({ day: 1 }).toJSDate(),
            y: 45.82
          },
          {
            x: now9.minus({ months: 3 }).plus({ day: 4 }).toJSDate(),
            y: 43.48
          },
          {
            x: now9.minus({ months: 3 }).plus({ day: 7 }).toJSDate(),
            y: 41.32
          },
          {
            x: now9.minus({ months: 3 }).plus({ day: 10 }).toJSDate(),
            y: 40.99
          },
          {
            x: now9.minus({ months: 3 }).plus({ day: 13 }).toJSDate(),
            y: 38.49
          },
          {
            x: now9.minus({ months: 3 }).plus({ day: 16 }).toJSDate(),
            y: 40.1
          },
          {
            x: now9.minus({ months: 3 }).plus({ day: 19 }).toJSDate(),
            y: 44.86
          },
          {
            x: now9.minus({ months: 3 }).plus({ day: 22 }).toJSDate(),
            y: 44.03
          },
          {
            x: now9.minus({ months: 3 }).plus({ day: 25 }).toJSDate(),
            y: 41.41
          },
          {
            x: now9.minus({ months: 3 }).plus({ day: 28 }).toJSDate(),
            y: 37.8
          },
          {
            x: now9.minus({ months: 2 }).plus({ day: 1 }).toJSDate(),
            y: 35.24
          },
          {
            x: now9.minus({ months: 2 }).plus({ day: 4 }).toJSDate(),
            y: 32.12
          },
          {
            x: now9.minus({ months: 2 }).plus({ day: 7 }).toJSDate(),
            y: 35.68
          },
          {
            x: now9.minus({ months: 2 }).plus({ day: 10 }).toJSDate(),
            y: 38
          },
          {
            x: now9.minus({ months: 2 }).plus({ day: 13 }).toJSDate(),
            y: 37.96
          },
          {
            x: now9.minus({ months: 2 }).plus({ day: 16 }).toJSDate(),
            y: 38.7
          },
          {
            x: now9.minus({ months: 2 }).plus({ day: 19 }).toJSDate(),
            y: 37.45
          },
          {
            x: now9.minus({ months: 2 }).plus({ day: 22 }).toJSDate(),
            y: 37.51
          },
          {
            x: now9.minus({ months: 2 }).plus({ day: 25 }).toJSDate(),
            y: 33.1
          },
          {
            x: now9.minus({ months: 2 }).plus({ day: 28 }).toJSDate(),
            y: 35.09
          },
          {
            x: now9.minus({ months: 1 }).plus({ day: 1 }).toJSDate(),
            y: 31.87
          },
          {
            x: now9.minus({ months: 1 }).plus({ day: 4 }).toJSDate(),
            y: 29.18
          },
          {
            x: now9.minus({ months: 1 }).plus({ day: 7 }).toJSDate(),
            y: 31.91
          },
          {
            x: now9.minus({ months: 1 }).plus({ day: 10 }).toJSDate(),
            y: 34.37
          },
          {
            x: now9.minus({ months: 1 }).plus({ day: 13 }).toJSDate(),
            y: 32.91
          },
          {
            x: now9.minus({ months: 1 }).plus({ day: 16 }).toJSDate(),
            y: 33.17
          },
          {
            x: now9.minus({ months: 1 }).plus({ day: 19 }).toJSDate(),
            y: 37.16
          },
          {
            x: now9.minus({ months: 1 }).plus({ day: 22 }).toJSDate(),
            y: 32.6
          },
          {
            x: now9.minus({ months: 1 }).plus({ day: 25 }).toJSDate(),
            y: 36.94
          },
          {
            x: now9.minus({ months: 1 }).plus({ day: 28 }).toJSDate(),
            y: 35.98
          }
        ]
      },
      {
        name: "Actual",
        data: [
          {
            x: now9.minus({ months: 12 }).plus({ day: 1 }).toJSDate(),
            y: 20.21
          },
          {
            x: now9.minus({ months: 12 }).plus({ day: 4 }).toJSDate(),
            y: 17.49
          },
          {
            x: now9.minus({ months: 12 }).plus({ day: 7 }).toJSDate(),
            y: 16.54
          },
          {
            x: now9.minus({ months: 12 }).plus({ day: 10 }).toJSDate(),
            y: 19
          },
          {
            x: now9.minus({ months: 12 }).plus({ day: 13 }).toJSDate(),
            y: 16.47
          },
          {
            x: now9.minus({ months: 12 }).plus({ day: 16 }).toJSDate(),
            y: 13.15
          },
          {
            x: now9.minus({ months: 12 }).plus({ day: 19 }).toJSDate(),
            y: 18.07
          },
          {
            x: now9.minus({ months: 12 }).plus({ day: 22 }).toJSDate(),
            y: 17.93
          },
          {
            x: now9.minus({ months: 12 }).plus({ day: 25 }).toJSDate(),
            y: 18.92
          },
          {
            x: now9.minus({ months: 12 }).plus({ day: 28 }).toJSDate(),
            y: 18.46
          },
          {
            x: now9.minus({ months: 11 }).plus({ day: 1 }).toJSDate(),
            y: 18.04
          },
          {
            x: now9.minus({ months: 11 }).plus({ day: 4 }).toJSDate(),
            y: 17.78
          },
          {
            x: now9.minus({ months: 11 }).plus({ day: 7 }).toJSDate(),
            y: 20.15
          },
          {
            x: now9.minus({ months: 11 }).plus({ day: 10 }).toJSDate(),
            y: 18.92
          },
          {
            x: now9.minus({ months: 11 }).plus({ day: 13 }).toJSDate(),
            y: 17.08
          },
          {
            x: now9.minus({ months: 11 }).plus({ day: 16 }).toJSDate(),
            y: 17.11
          },
          {
            x: now9.minus({ months: 11 }).plus({ day: 19 }).toJSDate(),
            y: 15.7
          },
          {
            x: now9.minus({ months: 11 }).plus({ day: 22 }).toJSDate(),
            y: 15.07
          },
          {
            x: now9.minus({ months: 11 }).plus({ day: 25 }).toJSDate(),
            y: 14.51
          },
          {
            x: now9.minus({ months: 11 }).plus({ day: 28 }).toJSDate(),
            y: 15.22
          },
          {
            x: now9.minus({ months: 10 }).plus({ day: 1 }).toJSDate(),
            y: 19.77
          },
          {
            x: now9.minus({ months: 10 }).plus({ day: 4 }).toJSDate(),
            y: 23.67
          },
          {
            x: now9.minus({ months: 10 }).plus({ day: 7 }).toJSDate(),
            y: 27.98
          },
          {
            x: now9.minus({ months: 10 }).plus({ day: 10 }).toJSDate(),
            y: 30.8
          },
          {
            x: now9.minus({ months: 10 }).plus({ day: 13 }).toJSDate(),
            y: 28.56
          },
          {
            x: now9.minus({ months: 10 }).plus({ day: 16 }).toJSDate(),
            y: 27.45
          },
          {
            x: now9.minus({ months: 10 }).plus({ day: 19 }).toJSDate(),
            y: 27.5
          },
          {
            x: now9.minus({ months: 10 }).plus({ day: 22 }).toJSDate(),
            y: 27.28
          },
          {
            x: now9.minus({ months: 10 }).plus({ day: 25 }).toJSDate(),
            y: 24.36
          },
          {
            x: now9.minus({ months: 10 }).plus({ day: 28 }).toJSDate(),
            y: 22.89
          },
          {
            x: now9.minus({ months: 9 }).plus({ day: 1 }).toJSDate(),
            y: 28.04
          },
          {
            x: now9.minus({ months: 9 }).plus({ day: 4 }).toJSDate(),
            y: 27.77
          },
          {
            x: now9.minus({ months: 9 }).plus({ day: 7 }).toJSDate(),
            y: 30.24
          },
          {
            x: now9.minus({ months: 9 }).plus({ day: 10 }).toJSDate(),
            y: 26.57
          },
          {
            x: now9.minus({ months: 9 }).plus({ day: 13 }).toJSDate(),
            y: 22.18
          },
          {
            x: now9.minus({ months: 9 }).plus({ day: 16 }).toJSDate(),
            y: 19.64
          },
          {
            x: now9.minus({ months: 9 }).plus({ day: 19 }).toJSDate(),
            y: 16.74
          },
          {
            x: now9.minus({ months: 9 }).plus({ day: 22 }).toJSDate(),
            y: 17.21
          },
          {
            x: now9.minus({ months: 9 }).plus({ day: 25 }).toJSDate(),
            y: 20.05
          },
          {
            x: now9.minus({ months: 9 }).plus({ day: 28 }).toJSDate(),
            y: 16.13
          },
          {
            x: now9.minus({ months: 8 }).plus({ day: 1 }).toJSDate(),
            y: 10.71
          },
          {
            x: now9.minus({ months: 8 }).plus({ day: 4 }).toJSDate(),
            y: 7.99
          },
          {
            x: now9.minus({ months: 8 }).plus({ day: 7 }).toJSDate(),
            y: 11.33
          },
          {
            x: now9.minus({ months: 8 }).plus({ day: 10 }).toJSDate(),
            y: 15.36
          },
          {
            x: now9.minus({ months: 8 }).plus({ day: 13 }).toJSDate(),
            y: 20.16
          },
          {
            x: now9.minus({ months: 8 }).plus({ day: 16 }).toJSDate(),
            y: 22.56
          },
          {
            x: now9.minus({ months: 8 }).plus({ day: 19 }).toJSDate(),
            y: 19.34
          },
          {
            x: now9.minus({ months: 8 }).plus({ day: 22 }).toJSDate(),
            y: 18.32
          },
          {
            x: now9.minus({ months: 8 }).plus({ day: 25 }).toJSDate(),
            y: 20.75
          },
          {
            x: now9.minus({ months: 8 }).plus({ day: 28 }).toJSDate(),
            y: 17.09
          },
          {
            x: now9.minus({ months: 7 }).plus({ day: 1 }).toJSDate(),
            y: 18.31
          },
          {
            x: now9.minus({ months: 7 }).plus({ day: 4 }).toJSDate(),
            y: 14.34
          },
          {
            x: now9.minus({ months: 7 }).plus({ day: 7 }).toJSDate(),
            y: 9.93
          },
          {
            x: now9.minus({ months: 7 }).plus({ day: 10 }).toJSDate(),
            y: 10.64
          },
          {
            x: now9.minus({ months: 7 }).plus({ day: 13 }).toJSDate(),
            y: 6.18
          },
          {
            x: now9.minus({ months: 7 }).plus({ day: 16 }).toJSDate(),
            y: 10.32
          },
          {
            x: now9.minus({ months: 7 }).plus({ day: 19 }).toJSDate(),
            y: 12.8
          },
          {
            x: now9.minus({ months: 7 }).plus({ day: 22 }).toJSDate(),
            y: 13.44
          },
          {
            x: now9.minus({ months: 7 }).plus({ day: 25 }).toJSDate(),
            y: 18.35
          },
          {
            x: now9.minus({ months: 7 }).plus({ day: 28 }).toJSDate(),
            y: 22.87
          },
          {
            x: now9.minus({ months: 6 }).plus({ day: 1 }).toJSDate(),
            y: 26.92
          },
          {
            x: now9.minus({ months: 6 }).plus({ day: 4 }).toJSDate(),
            y: 22.5
          },
          {
            x: now9.minus({ months: 6 }).plus({ day: 7 }).toJSDate(),
            y: 18.14
          },
          {
            x: now9.minus({ months: 6 }).plus({ day: 10 }).toJSDate(),
            y: 19.06
          },
          {
            x: now9.minus({ months: 6 }).plus({ day: 13 }).toJSDate(),
            y: 19.73
          },
          {
            x: now9.minus({ months: 6 }).plus({ day: 16 }).toJSDate(),
            y: 18.82
          },
          {
            x: now9.minus({ months: 6 }).plus({ day: 19 }).toJSDate(),
            y: 23.33
          },
          {
            x: now9.minus({ months: 6 }).plus({ day: 22 }).toJSDate(),
            y: 20.48
          },
          {
            x: now9.minus({ months: 6 }).plus({ day: 25 }).toJSDate(),
            y: 25.47
          },
          {
            x: now9.minus({ months: 6 }).plus({ day: 28 }).toJSDate(),
            y: 28.84
          },
          {
            x: now9.minus({ months: 5 }).plus({ day: 1 }).toJSDate(),
            y: 27.71
          },
          {
            x: now9.minus({ months: 5 }).plus({ day: 4 }).toJSDate(),
            y: 25.22
          },
          {
            x: now9.minus({ months: 5 }).plus({ day: 7 }).toJSDate(),
            y: 25.43
          },
          {
            x: now9.minus({ months: 5 }).plus({ day: 10 }).toJSDate(),
            y: 24.13
          },
          {
            x: now9.minus({ months: 5 }).plus({ day: 13 }).toJSDate(),
            y: 20.02
          },
          {
            x: now9.minus({ months: 5 }).plus({ day: 16 }).toJSDate(),
            y: 18.38
          },
          {
            x: now9.minus({ months: 5 }).plus({ day: 19 }).toJSDate(),
            y: 18.3
          },
          {
            x: now9.minus({ months: 5 }).plus({ day: 22 }).toJSDate(),
            y: 18.72
          },
          {
            x: now9.minus({ months: 5 }).plus({ day: 25 }).toJSDate(),
            y: 22.46
          },
          {
            x: now9.minus({ months: 5 }).plus({ day: 28 }).toJSDate(),
            y: 21.71
          },
          {
            x: now9.minus({ months: 4 }).plus({ day: 1 }).toJSDate(),
            y: 29.88
          },
          {
            x: now9.minus({ months: 4 }).plus({ day: 4 }).toJSDate(),
            y: 26.94
          },
          {
            x: now9.minus({ months: 4 }).plus({ day: 7 }).toJSDate(),
            y: 28.06
          },
          {
            x: now9.minus({ months: 4 }).plus({ day: 10 }).toJSDate(),
            y: 30.4
          },
          {
            x: now9.minus({ months: 4 }).plus({ day: 13 }).toJSDate(),
            y: 28.98
          },
          {
            x: now9.minus({ months: 4 }).plus({ day: 16 }).toJSDate(),
            y: 30.13
          },
          {
            x: now9.minus({ months: 4 }).plus({ day: 19 }).toJSDate(),
            y: 27.6
          },
          {
            x: now9.minus({ months: 4 }).plus({ day: 22 }).toJSDate(),
            y: 30.21
          },
          {
            x: now9.minus({ months: 4 }).plus({ day: 25 }).toJSDate(),
            y: 26.88
          },
          {
            x: now9.minus({ months: 4 }).plus({ day: 28 }).toJSDate(),
            y: 25.72
          },
          {
            x: now9.minus({ months: 3 }).plus({ day: 1 }).toJSDate(),
            y: 27.89
          },
          {
            x: now9.minus({ months: 3 }).plus({ day: 4 }).toJSDate(),
            y: 30.69
          },
          {
            x: now9.minus({ months: 3 }).plus({ day: 7 }).toJSDate(),
            y: 31.42
          },
          {
            x: now9.minus({ months: 3 }).plus({ day: 10 }).toJSDate(),
            y: 36.14
          },
          {
            x: now9.minus({ months: 3 }).plus({ day: 13 }).toJSDate(),
            y: 32.02
          },
          {
            x: now9.minus({ months: 3 }).plus({ day: 16 }).toJSDate(),
            y: 27.3
          },
          {
            x: now9.minus({ months: 3 }).plus({ day: 19 }).toJSDate(),
            y: 29.51
          },
          {
            x: now9.minus({ months: 3 }).plus({ day: 22 }).toJSDate(),
            y: 32.67
          },
          {
            x: now9.minus({ months: 3 }).plus({ day: 25 }).toJSDate(),
            y: 28.82
          },
          {
            x: now9.minus({ months: 3 }).plus({ day: 28 }).toJSDate(),
            y: 28.85
          },
          {
            x: now9.minus({ months: 2 }).plus({ day: 1 }).toJSDate(),
            y: 29.15
          },
          {
            x: now9.minus({ months: 2 }).plus({ day: 4 }).toJSDate(),
            y: 27.9
          },
          {
            x: now9.minus({ months: 2 }).plus({ day: 7 }).toJSDate(),
            y: 30.71
          },
          {
            x: now9.minus({ months: 2 }).plus({ day: 10 }).toJSDate(),
            y: 28.02
          },
          {
            x: now9.minus({ months: 2 }).plus({ day: 13 }).toJSDate(),
            y: 23.82
          },
          {
            x: now9.minus({ months: 2 }).plus({ day: 16 }).toJSDate(),
            y: 18.83
          },
          {
            x: now9.minus({ months: 2 }).plus({ day: 19 }).toJSDate(),
            y: 14.48
          },
          {
            x: now9.minus({ months: 2 }).plus({ day: 22 }).toJSDate(),
            y: 11.76
          },
          {
            x: now9.minus({ months: 2 }).plus({ day: 25 }).toJSDate(),
            y: 12.75
          },
          {
            x: now9.minus({ months: 2 }).plus({ day: 28 }).toJSDate(),
            y: 11.36
          },
          {
            x: now9.minus({ months: 1 }).plus({ day: 1 }).toJSDate(),
            y: 11.6
          },
          {
            x: now9.minus({ months: 1 }).plus({ day: 4 }).toJSDate(),
            y: 15.24
          },
          {
            x: now9.minus({ months: 1 }).plus({ day: 7 }).toJSDate(),
            y: 13.05
          },
          {
            x: now9.minus({ months: 1 }).plus({ day: 10 }).toJSDate(),
            y: 17.25
          },
          {
            x: now9.minus({ months: 1 }).plus({ day: 13 }).toJSDate(),
            y: 18.5
          },
          {
            x: now9.minus({ months: 1 }).plus({ day: 16 }).toJSDate(),
            y: 23.04
          },
          {
            x: now9.minus({ months: 1 }).plus({ day: 19 }).toJSDate(),
            y: 21.87
          },
          {
            x: now9.minus({ months: 1 }).plus({ day: 22 }).toJSDate(),
            y: 25.97
          },
          {
            x: now9.minus({ months: 1 }).plus({ day: 25 }).toJSDate(),
            y: 22.46
          },
          {
            x: now9.minus({ months: 1 }).plus({ day: 28 }).toJSDate(),
            y: 17.67
          }
        ]
      }
    ]
  },
  budget: {
    expenses: 11763.34,
    expensesLimit: 2e4,
    savings: 10974.12,
    savingsGoal: 25e4,
    bills: 1789.22,
    billsLimit: 1e3
  },
  previousStatement: {
    status: "paid",
    date: now9.startOf("day").minus({ days: 15 }).toFormat("DDD"),
    limit: 34500,
    spent: 27221.21,
    minimum: 7331.94
  },
  currentStatement: {
    status: "pending",
    date: now9.startOf("day").minus({ days: 15 }).plus({ month: 1 }).toFormat("DDD"),
    limit: 34500,
    spent: 39819.41,
    minimum: 9112.51
  },
  recentTransactions: [
    {
      id: "1b6fd296-bc6a-4d45-bf4f-e45519a58cf5",
      transactionId: "528651571NT",
      name: "Morgan Page",
      amount: 1358.75,
      status: "completed",
      date: "2019-10-07T22:22:37.274Z"
    },
    {
      id: "2dec6074-98bd-4623-9526-6480e4776569",
      transactionId: "421436904YT",
      name: "Nita Hebert",
      amount: -1042.82,
      status: "completed",
      date: "2019-12-18T14:51:24.461Z"
    },
    {
      id: "ae7c065f-4197-4021-a799-7a221822ad1d",
      transactionId: "685377421YT",
      name: "Marsha Chambers",
      amount: 1828.16,
      status: "pending",
      date: "2019-12-25T17:52:14.304Z"
    },
    {
      id: "0c43dd40-74f6-49d5-848a-57a4a45772ab",
      transactionId: "884960091RT",
      name: "Charmaine Jackson",
      amount: 1647.55,
      status: "completed",
      date: "2019-11-29T06:32:16.111Z"
    },
    {
      id: "e5c9f0ed-a64c-4bfe-a113-29f80b4e162c",
      transactionId: "361402213NT",
      name: "Maura Carey",
      amount: -927.43,
      status: "completed",
      date: "2019-11-24T12:13:23.064Z"
    }
  ]
};

// src/app/mock-api/dashboards/finance/api.ts
var _FinanceMockApi = class _FinanceMockApi {
  /**
   * Constructor
   */
  constructor(_fuseMockApiService) {
    this._fuseMockApiService = _fuseMockApiService;
    this._finance = finance;
    this.registerHandlers();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Register Mock API handlers
   */
  registerHandlers() {
    this._fuseMockApiService.onGet("api/dashboards/finance").reply(() => [200, cloneDeep_default(this._finance)]);
  }
};
_FinanceMockApi.\u0275fac = function FinanceMockApi_Factory(t) {
  return new (t || _FinanceMockApi)(\u0275\u0275inject(FuseMockApiService));
};
_FinanceMockApi.\u0275prov = /* @__PURE__ */ \u0275\u0275defineInjectable({ token: _FinanceMockApi, factory: _FinanceMockApi.\u0275fac, providedIn: "root" });
var FinanceMockApi = _FinanceMockApi;

// src/app/mock-api/dashboards/project/data.ts
var now10 = DateTime.now();
var project = {
  githubIssues: {
    overview: {
      "this-week": {
        "new-issues": 214,
        "closed-issues": 75,
        fixed: 3,
        "wont-fix": 4,
        "re-opened": 8,
        "needs-triage": 6
      },
      "last-week": {
        "new-issues": 197,
        "closed-issues": 72,
        fixed: 6,
        "wont-fix": 11,
        "re-opened": 6,
        "needs-triage": 5
      }
    },
    labels: ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"],
    series: {
      "this-week": [
        {
          name: "New issues",
          type: "line",
          data: [42, 28, 43, 34, 20, 25, 22]
        },
        {
          name: "Closed issues",
          type: "column",
          data: [11, 10, 8, 11, 8, 10, 17]
        }
      ],
      "last-week": [
        {
          name: "New issues",
          type: "line",
          data: [37, 32, 39, 27, 18, 24, 20]
        },
        {
          name: "Closed issues",
          type: "column",
          data: [9, 8, 10, 12, 7, 11, 15]
        }
      ]
    }
  },
  taskDistribution: {
    overview: {
      "this-week": {
        new: 594,
        completed: 287
      },
      "last-week": {
        new: 526,
        completed: 260
      }
    },
    labels: ["API", "Backend", "Frontend", "Issues"],
    series: {
      "this-week": [15, 20, 38, 27],
      "last-week": [19, 16, 42, 23]
    }
  },
  schedule: {
    today: [
      {
        title: "Group Meeting",
        time: "in 32 minutes",
        location: "Conference room 1B"
      },
      {
        title: "Coffee Break",
        time: "10:30 AM"
      },
      {
        title: "Public Beta Release",
        time: "11:00 AM"
      },
      {
        title: "Lunch",
        time: "12:10 PM"
      },
      {
        title: "Dinner with David",
        time: "05:30 PM",
        location: "Magnolia"
      },
      {
        title: "Jane's Birthday Party",
        time: "07:30 PM",
        location: "Home"
      },
      {
        title: "Overseer's Retirement Party",
        time: "09:30 PM",
        location: "Overseer's room"
      }
    ],
    tomorrow: [
      {
        title: "Marketing Meeting",
        time: "09:00 AM",
        location: "Conference room 1A"
      },
      {
        title: "Public Announcement",
        time: "11:00 AM"
      },
      {
        title: "Lunch",
        time: "12:10 PM"
      },
      {
        title: "Meeting with Beta Testers",
        time: "03:00 PM",
        location: "Conference room 2C"
      },
      {
        title: "Live Stream",
        time: "05:30 PM"
      },
      {
        title: "Release Party",
        time: "07:30 PM",
        location: "CEO's house"
      },
      {
        title: "CEO's Private Party",
        time: "09:30 PM",
        location: "CEO's Penthouse"
      }
    ]
  },
  budgetDistribution: {
    categories: ["Concept", "Design", "Development", "Extras", "Marketing"],
    series: [
      {
        name: "Budget",
        data: [12, 20, 28, 15, 25]
      }
    ]
  },
  weeklyExpenses: {
    amount: 17663,
    labels: [
      now10.minus({ days: 47 }).toFormat("dd MMM") + " - " + now10.minus({ days: 40 }).toFormat("dd MMM"),
      now10.minus({ days: 39 }).toFormat("dd MMM") + " - " + now10.minus({ days: 32 }).toFormat("dd MMM"),
      now10.minus({ days: 31 }).toFormat("dd MMM") + " - " + now10.minus({ days: 24 }).toFormat("dd MMM"),
      now10.minus({ days: 23 }).toFormat("dd MMM") + " - " + now10.minus({ days: 16 }).toFormat("dd MMM"),
      now10.minus({ days: 15 }).toFormat("dd MMM") + " - " + now10.minus({ days: 8 }).toFormat("dd MMM"),
      now10.minus({ days: 7 }).toFormat("dd MMM") + " - " + now10.toFormat("dd MMM")
    ],
    series: [
      {
        name: "Expenses",
        data: [4412, 4345, 4541, 4677, 4322, 4123]
      }
    ]
  },
  monthlyExpenses: {
    amount: 54663,
    labels: [
      now10.minus({ days: 31 }).toFormat("dd MMM") + " - " + now10.minus({ days: 24 }).toFormat("dd MMM"),
      now10.minus({ days: 23 }).toFormat("dd MMM") + " - " + now10.minus({ days: 16 }).toFormat("dd MMM"),
      now10.minus({ days: 15 }).toFormat("dd MMM") + " - " + now10.minus({ days: 8 }).toFormat("dd MMM"),
      now10.minus({ days: 7 }).toFormat("dd MMM") + " - " + now10.toFormat("dd MMM")
    ],
    series: [
      {
        name: "Expenses",
        data: [15521, 15519, 15522, 15521]
      }
    ]
  },
  yearlyExpenses: {
    amount: 648813,
    labels: [
      now10.minus({ days: 79 }).toFormat("dd MMM") + " - " + now10.minus({ days: 72 }).toFormat("dd MMM"),
      now10.minus({ days: 71 }).toFormat("dd MMM") + " - " + now10.minus({ days: 64 }).toFormat("dd MMM"),
      now10.minus({ days: 63 }).toFormat("dd MMM") + " - " + now10.minus({ days: 56 }).toFormat("dd MMM"),
      now10.minus({ days: 55 }).toFormat("dd MMM") + " - " + now10.minus({ days: 48 }).toFormat("dd MMM"),
      now10.minus({ days: 47 }).toFormat("dd MMM") + " - " + now10.minus({ days: 40 }).toFormat("dd MMM"),
      now10.minus({ days: 39 }).toFormat("dd MMM") + " - " + now10.minus({ days: 32 }).toFormat("dd MMM"),
      now10.minus({ days: 31 }).toFormat("dd MMM") + " - " + now10.minus({ days: 24 }).toFormat("dd MMM"),
      now10.minus({ days: 23 }).toFormat("dd MMM") + " - " + now10.minus({ days: 16 }).toFormat("dd MMM"),
      now10.minus({ days: 15 }).toFormat("dd MMM") + " - " + now10.minus({ days: 8 }).toFormat("dd MMM"),
      now10.minus({ days: 7 }).toFormat("dd MMM") + " - " + now10.toFormat("dd MMM")
    ],
    series: [
      {
        name: "Expenses",
        data: [
          45891,
          45801,
          45834,
          45843,
          45800,
          45900,
          45814,
          45856,
          45910,
          45849
        ]
      }
    ]
  },
  budgetDetails: {
    columns: [
      "type",
      "total",
      "expensesAmount",
      "expensesPercentage",
      "remainingAmount",
      "remainingPercentage"
    ],
    rows: [
      {
        id: 1,
        type: "Concept",
        total: 14880,
        expensesAmount: 14e3,
        expensesPercentage: 94.08,
        remainingAmount: 880,
        remainingPercentage: 5.92
      },
      {
        id: 2,
        type: "Design",
        total: 21080,
        expensesAmount: 17240.34,
        expensesPercentage: 81.78,
        remainingAmount: 3839.66,
        remainingPercentage: 18.22
      },
      {
        id: 3,
        type: "Development",
        total: 34720,
        expensesAmount: 3518,
        expensesPercentage: 10.13,
        remainingAmount: 31202,
        remainingPercentage: 89.87
      },
      {
        id: 4,
        type: "Extras",
        total: 18600,
        expensesAmount: 0,
        expensesPercentage: 0,
        remainingAmount: 18600,
        remainingPercentage: 100
      },
      {
        id: 5,
        type: "Marketing",
        total: 34720,
        expensesAmount: 19859.84,
        expensesPercentage: 57.2,
        remainingAmount: 14860.16,
        remainingPercentage: 42.8
      }
    ]
  },
  teamMembers: [
    {
      id: "2bfa2be5-7688-48d5-b5ac-dc0d9ac97f14",
      avatar: "images/avatars/female-10.jpg",
      name: "Nadia Mcknight",
      email: "nadiamcknight@mail.com",
      phone: "+1-943-511-2203",
      title: "Project Director"
    },
    {
      id: "77a4383b-b5a5-4943-bc46-04c3431d1566",
      avatar: "images/avatars/male-19.jpg",
      name: "Best Blackburn",
      email: "blackburn.best@beadzza.me",
      phone: "+1-814-498-3701",
      title: "Senior Developer"
    },
    {
      id: "8bb0f597-673a-47ca-8c77-2f83219cb9af",
      avatar: "images/avatars/male-14.jpg",
      name: "Duncan Carver",
      email: "duncancarver@mail.info",
      phone: "+1-968-547-2111",
      title: "Senior Developer"
    },
    {
      id: "c318e31f-1d74-49c5-8dae-2bc5805e2fdb",
      avatar: "images/avatars/male-01.jpg",
      name: "Martin Richards",
      email: "martinrichards@mail.biz",
      phone: "+1-902-500-2668",
      title: "Junior Developer"
    },
    {
      id: "0a8bc517-631a-4a93-aacc-000fa2e8294c",
      avatar: "images/avatars/female-20.jpg",
      name: "Candice Munoz",
      email: "candicemunoz@mail.co.uk",
      phone: "+1-838-562-2769",
      title: "Lead Designer"
    },
    {
      id: "a4c9945a-757b-40b0-8942-d20e0543cabd",
      avatar: "images/avatars/female-01.jpg",
      name: "Vickie Mosley",
      email: "vickiemosley@mail.net",
      phone: "+1-939-555-3054",
      title: "Designer"
    },
    {
      id: "b8258ccf-48b5-46a2-9c95-e0bd7580c645",
      avatar: "images/avatars/female-02.jpg",
      name: "Tina Harris",
      email: "tinaharris@mail.ca",
      phone: "+1-933-464-2431",
      title: "Designer"
    },
    {
      id: "f004ea79-98fc-436c-9ba5-6cfe32fe583d",
      avatar: "images/avatars/male-02.jpg",
      name: "Holt Manning",
      email: "holtmanning@mail.org",
      phone: "+1-822-531-2600",
      title: "Marketing Manager"
    },
    {
      id: "8b69fe2d-d7cc-4a3d-983d-559173e37d37",
      avatar: "images/avatars/female-03.jpg",
      name: "Misty Ramsey",
      email: "mistyramsey@mail.us",
      phone: "+1-990-457-2106",
      title: "Consultant"
    }
  ]
};

// src/app/mock-api/dashboards/project/api.ts
var _ProjectMockApi = class _ProjectMockApi {
  /**
   * Constructor
   */
  constructor(_fuseMockApiService) {
    this._fuseMockApiService = _fuseMockApiService;
    this._project = project;
    this.registerHandlers();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Register Mock API handlers
   */
  registerHandlers() {
    this._fuseMockApiService.onGet("api/dashboards/project").reply(() => [200, cloneDeep_default(this._project)]);
  }
};
_ProjectMockApi.\u0275fac = function ProjectMockApi_Factory(t) {
  return new (t || _ProjectMockApi)(\u0275\u0275inject(FuseMockApiService));
};
_ProjectMockApi.\u0275prov = /* @__PURE__ */ \u0275\u0275defineInjectable({ token: _ProjectMockApi, factory: _ProjectMockApi.\u0275fac, providedIn: "root" });
var ProjectMockApi = _ProjectMockApi;

// src/app/mock-api/pages/activities/data.ts
var now11 = DateTime.now();
var activities = [
  {
    id: "493190c9-5b61-4912-afe5-78c21f1044d7",
    icon: "heroicons_solid:star",
    description: "Your submission has been accepted",
    date: now11.minus({ minutes: 25 }).toISO(),
    // 25 minutes ago
    extraContent: `<div class="font-bold">Congratulations for your acceptance!</div><br>
                        <div>Hi Brian,<br>Your submission has been accepted and you are ready to move into the next phase. Once you are ready, reach out to me and we will ...</div>`
  },
  {
    id: "6e3e97e5-effc-4fb7-b730-52a151f0b641",
    image: "images/avatars/male-04.jpg",
    description: "<strong>Leo Gill</strong> added you to <strong>Top Secret Project</strong> group and assigned you as a <strong>Project Manager</strong>",
    date: now11.minus({ minutes: 50 }).toISO(),
    // 50 minutes ago
    linkedContent: "Top Secret Project",
    link: "/dashboards/project",
    useRouter: true
  },
  {
    id: "b91ccb58-b06c-413b-b389-87010e03a120",
    icon: "heroicons_solid:envelope",
    description: "You have 15 unread mails across 3 mailboxes",
    date: now11.minus({ hours: 3 }).toISO(),
    // 3 hours ago
    linkedContent: "Mailbox",
    link: "/apps/mailbox",
    useRouter: true
  },
  {
    id: "541416c9-84a7-408a-8d74-27a43c38d797",
    icon: "heroicons_solid:arrow-path",
    description: "Your <strong>Docker container</strong> is ready to publish",
    date: now11.minus({ hours: 5 }).toISO(),
    // 5 hours ago
    linkedContent: "Download the container",
    link: ".",
    useRouter: true
  },
  {
    id: "ef7b95a7-8e8b-4616-9619-130d9533add9",
    image: "images/avatars/male-06.jpg",
    description: "<strong>Roger Murray</strong> accepted your friend request",
    date: now11.minus({ hours: 7 }).toISO(),
    // 7 hours ago
    extraContent: `You have <span class="font-semibold">8</span> mutual friends.`
  },
  {
    id: "eb8aa470-635e-461d-88e1-23d9ea2a5665",
    image: "images/avatars/female-04.jpg",
    description: "<strong>Sophie Stone</strong> sent you a direct message",
    date: now11.minus({ hours: 9 }).toISO()
    // 9 hours ago
  },
  {
    id: "b85c2338-cc98-4140-bbf8-c226ce4e395e",
    icon: "heroicons_solid:envelope",
    description: "You have 3 new mails",
    date: now11.minus({ day: 1 }).toISO(),
    // 1 day ago
    extraContent: `<ol class="list-decimal list-inside space-y-2">
                            <li class="font-medium">Please review and sign the attached agreement</li>
                            <li class="font-medium">Delivery address confirmation</li>
                            <li class="font-medium">Previous clients and their invoices</li>
                        </ol>`,
    linkedContent: "Mailbox",
    link: "/apps/mailbox",
    useRouter: true
  },
  {
    id: "fd0f01b4-f3de-4333-add5-cd86850279f8",
    image: "images/avatars/female-02.jpg",
    description: "<strong>Tina Harris</strong> started a chat with you",
    date: now11.minus({ day: 1 }).toISO(),
    // 1 day ago,
    linkedContent: "Go to Chat (Tina Harris)",
    link: "/apps/chat/5636c0ba-fa47-42ca-9160-27340583041e",
    useRouter: true
  },
  {
    id: "8f8e1bf9-4661-4939-9e43-390957b60f42",
    icon: "heroicons_solid:star",
    description: "Your submission has been accepted and you are ready to sign-up for the final assigment which will be ready in 2 days",
    date: now11.minus({ days: 3 }).toISO()
    // 3 days ago
  },
  {
    id: "30af917b-7a6a-45d1-822f-9e7ad7f8bf69",
    icon: "heroicons_solid:arrow-path",
    description: "Your Vagrant container is ready to download",
    date: now11.minus({ day: 4 }).toISO()
    // 4 days ago
  }
];

// src/app/mock-api/pages/activities/api.ts
var _ActivitiesMockApi = class _ActivitiesMockApi {
  /**
   * Constructor
   */
  constructor(_fuseMockApiService) {
    this._fuseMockApiService = _fuseMockApiService;
    this._activities = activities;
    this.registerHandlers();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Register Mock API handlers
   */
  registerHandlers() {
    this._fuseMockApiService.onGet("api/pages/activities").reply(() => [200, cloneDeep_default(this._activities)]);
  }
};
_ActivitiesMockApi.\u0275fac = function ActivitiesMockApi_Factory(t) {
  return new (t || _ActivitiesMockApi)(\u0275\u0275inject(FuseMockApiService));
};
_ActivitiesMockApi.\u0275prov = /* @__PURE__ */ \u0275\u0275defineInjectable({ token: _ActivitiesMockApi, factory: _ActivitiesMockApi.\u0275fac, providedIn: "root" });
var ActivitiesMockApi = _ActivitiesMockApi;

// src/app/mock-api/ui/icons/data.ts
var material = [
  "10k",
  "10mp",
  "11mp",
  "12mp",
  "13mp",
  "14mp",
  "15mp",
  "16mp",
  "17mp",
  "18mp",
  "19mp",
  "1k",
  "1k_plus",
  "1x_mobiledata",
  "20mp",
  "21mp",
  "22mp",
  "23mp",
  "24mp",
  "2k",
  "2k_plus",
  "2mp",
  "30fps",
  "30fps_select",
  "360",
  "3d_rotation",
  "3g_mobiledata",
  "3k",
  "3k_plus",
  "3mp",
  "3p",
  "4g_mobiledata",
  "4g_plus_mobiledata",
  "4k",
  "4k_plus",
  "4mp",
  "5g",
  "5k",
  "5k_plus",
  "5mp",
  "60fps",
  "60fps_select",
  "6_ft_apart",
  "6k",
  "6k_plus",
  "6mp",
  "7k",
  "7k_plus",
  "7mp",
  "8k",
  "8k_plus",
  "8mp",
  "9k",
  "9k_plus",
  "9mp",
  "ac_unit",
  "access_alarm",
  "access_alarms",
  "access_time",
  "access_time_filled",
  "accessibility",
  "accessibility_new",
  "accessible",
  "accessible_forward",
  "account_balance",
  "account_balance_wallet",
  "account_box",
  "account_circle",
  "account_tree",
  "ad_units",
  "adb",
  "add",
  "add_a_photo",
  "add_alarm",
  "add_alert",
  "add_box",
  "add_business",
  "add_chart",
  "add_circle",
  "add_circle_outline",
  "add_comment",
  "add_ic_call",
  "add_link",
  "add_location",
  "add_location_alt",
  "add_moderator",
  "add_photo_alternate",
  "add_reaction",
  "add_road",
  "add_shopping_cart",
  "add_task",
  "add_to_drive",
  "add_to_home_screen",
  "add_to_photos",
  "add_to_queue",
  "addchart",
  "adjust",
  "admin_panel_settings",
  "ads_click",
  "agriculture",
  "air",
  "airline_seat_flat",
  "airline_seat_flat_angled",
  "airline_seat_individual_suite",
  "airline_seat_legroom_extra",
  "airline_seat_legroom_normal",
  "airline_seat_legroom_reduced",
  "airline_seat_recline_extra",
  "airline_seat_recline_normal",
  "airplane_ticket",
  "airplanemode_active",
  "airplanemode_inactive",
  "airplay",
  "airport_shuttle",
  "alarm",
  "alarm_add",
  "alarm_off",
  "alarm_on",
  "album",
  "align_horizontal_center",
  "align_horizontal_left",
  "align_horizontal_right",
  "align_vertical_bottom",
  "align_vertical_center",
  "align_vertical_top",
  "all_inbox",
  "all_inclusive",
  "all_out",
  "alt_route",
  "alternate_email",
  "analytics",
  "anchor",
  "android",
  "animation",
  "announcement",
  "aod",
  "apartment",
  "api",
  "app_blocking",
  "app_registration",
  "app_settings_alt",
  "approval",
  "apps",
  "architecture",
  "archive",
  "area_chart",
  "arrow_back",
  "arrow_back_ios",
  "arrow_back_ios_new",
  "arrow_circle_down",
  "arrow_circle_up",
  "arrow_downward",
  "arrow_drop_down",
  "arrow_drop_down_circle",
  "arrow_drop_up",
  "arrow_forward",
  "arrow_forward_ios",
  "arrow_left",
  "arrow_right",
  "arrow_right_alt",
  "arrow_upward",
  "art_track",
  "article",
  "aspect_ratio",
  "assessment",
  "assignment",
  "assignment_ind",
  "assignment_late",
  "assignment_return",
  "assignment_returned",
  "assignment_turned_in",
  "assistant",
  "assistant_direction",
  "assistant_photo",
  "atm",
  "attach_email",
  "attach_file",
  "attach_money",
  "attachment",
  "attractions",
  "attribution",
  "audiotrack",
  "auto_awesome",
  "auto_awesome_mosaic",
  "auto_awesome_motion",
  "auto_delete",
  "auto_fix_high",
  "auto_fix_normal",
  "auto_fix_off",
  "auto_graph",
  "auto_stories",
  "autofps_select",
  "autorenew",
  "av_timer",
  "baby_changing_station",
  "back_hand",
  "backpack",
  "backspace",
  "backup",
  "backup_table",
  "badge",
  "bakery_dining",
  "balcony",
  "ballot",
  "bar_chart",
  "batch_prediction",
  "bathroom",
  "bathtub",
  "battery_alert",
  "battery_charging_full",
  "battery_full",
  "battery_saver",
  "battery_std",
  "battery_unknown",
  "beach_access",
  "bed",
  "bedroom_baby",
  "bedroom_child",
  "bedroom_parent",
  "bedtime",
  "beenhere",
  "bento",
  "bike_scooter",
  "biotech",
  "blender",
  "block",
  "bloodtype",
  "bluetooth",
  "bluetooth_audio",
  "bluetooth_connected",
  "bluetooth_disabled",
  "bluetooth_drive",
  "bluetooth_searching",
  "blur_circular",
  "blur_linear",
  "blur_off",
  "blur_on",
  "bolt",
  "book",
  "book_online",
  "bookmark",
  "bookmark_add",
  "bookmark_added",
  "bookmark_border",
  "bookmark_remove",
  "bookmarks",
  "border_all",
  "border_bottom",
  "border_clear",
  "border_color",
  "border_horizontal",
  "border_inner",
  "border_left",
  "border_outer",
  "border_right",
  "border_style",
  "border_top",
  "border_vertical",
  "branding_watermark",
  "breakfast_dining",
  "brightness_1",
  "brightness_2",
  "brightness_3",
  "brightness_4",
  "brightness_5",
  "brightness_6",
  "brightness_7",
  "brightness_auto",
  "brightness_high",
  "brightness_low",
  "brightness_medium",
  "broken_image",
  "browser_not_supported",
  "brunch_dining",
  "brush",
  "bubble_chart",
  "bug_report",
  "build",
  "build_circle",
  "bungalow",
  "burst_mode",
  "bus_alert",
  "business",
  "business_center",
  "cabin",
  "cable",
  "cached",
  "cake",
  "calculate",
  "calendar_today",
  "calendar_view_day",
  "calendar_view_month",
  "calendar_view_week",
  "call",
  "call_end",
  "call_made",
  "call_merge",
  "call_missed",
  "call_missed_outgoing",
  "call_received",
  "call_split",
  "call_to_action",
  "camera",
  "camera_alt",
  "camera_enhance",
  "camera_front",
  "camera_indoor",
  "camera_outdoor",
  "camera_rear",
  "camera_roll",
  "cameraswitch",
  "campaign",
  "cancel",
  "cancel_presentation",
  "cancel_schedule_send",
  "car_rental",
  "car_repair",
  "card_giftcard",
  "card_membership",
  "card_travel",
  "carpenter",
  "cases",
  "casino",
  "cast",
  "cast_connected",
  "cast_for_education",
  "catching_pokemon",
  "category",
  "celebration",
  "cell_wifi",
  "center_focus_strong",
  "center_focus_weak",
  "chair",
  "chair_alt",
  "chalet",
  "change_circle",
  "change_history",
  "charging_station",
  "chat",
  "chat_bubble",
  "chat_bubble_outline",
  "check",
  "check_box",
  "check_box_outline_blank",
  "check_circle",
  "check_circle_outline",
  "checklist",
  "checklist_rtl",
  "checkroom",
  "chevron_left",
  "chevron_right",
  "child_care",
  "child_friendly",
  "chrome_reader_mode",
  "circle",
  "circle_notifications",
  "class",
  "clean_hands",
  "cleaning_services",
  "clear",
  "clear_all",
  "close",
  "close_fullscreen",
  "closed_caption",
  "closed_caption_disabled",
  "closed_caption_off",
  "cloud",
  "cloud_circle",
  "cloud_done",
  "cloud_download",
  "cloud_off",
  "cloud_queue",
  "cloud_upload",
  "code",
  "code_off",
  "coffee",
  "coffee_maker",
  "collections",
  "collections_bookmark",
  "color_lens",
  "colorize",
  "comment",
  "comment_bank",
  "commute",
  "compare",
  "compare_arrows",
  "compass_calibration",
  "compost",
  "compress",
  "computer",
  "confirmation_number",
  "connect_without_contact",
  "connected_tv",
  "construction",
  "contact_mail",
  "contact_page",
  "contact_phone",
  "contact_support",
  "contactless",
  "contacts",
  "content_copy",
  "content_cut",
  "content_paste",
  "content_paste_off",
  "control_camera",
  "control_point",
  "control_point_duplicate",
  "copy_all",
  "copyright",
  "coronavirus",
  "corporate_fare",
  "cottage",
  "countertops",
  "create",
  "create_new_folder",
  "credit_card",
  "credit_card_off",
  "credit_score",
  "crib",
  "crop",
  "crop_16_9",
  "crop_3_2",
  "crop_5_4",
  "crop_7_5",
  "crop_din",
  "crop_free",
  "crop_landscape",
  "crop_original",
  "crop_portrait",
  "crop_rotate",
  "crop_square",
  "cruelty_free",
  "dangerous",
  "dark_mode",
  "dashboard",
  "dashboard_customize",
  "data_exploration",
  "data_saver_off",
  "data_saver_on",
  "data_usage",
  "date_range",
  "deck",
  "dehaze",
  "delete",
  "delete_forever",
  "delete_outline",
  "delete_sweep",
  "delivery_dining",
  "departure_board",
  "description",
  "design_services",
  "desktop_access_disabled",
  "desktop_mac",
  "desktop_windows",
  "details",
  "developer_board",
  "developer_board_off",
  "developer_mode",
  "device_hub",
  "device_thermostat",
  "device_unknown",
  "devices",
  "devices_other",
  "dialer_sip",
  "dialpad",
  "dining",
  "dinner_dining",
  "directions",
  "directions_bike",
  "directions_boat",
  "directions_boat_filled",
  "directions_bus",
  "directions_bus_filled",
  "directions_car",
  "directions_car_filled",
  "directions_off",
  "directions_railway",
  "directions_railway_filled",
  "directions_run",
  "directions_subway",
  "directions_subway_filled",
  "directions_transit",
  "directions_transit_filled",
  "directions_walk",
  "dirty_lens",
  "disabled_by_default",
  "disabled_visible",
  "disc_full",
  "dns",
  "do_disturb",
  "do_disturb_alt",
  "do_disturb_off",
  "do_disturb_on",
  "do_not_disturb",
  "do_not_disturb_alt",
  "do_not_disturb_off",
  "do_not_disturb_on",
  "do_not_disturb_on_total_silence",
  "do_not_step",
  "do_not_touch",
  "dock",
  "document_scanner",
  "domain",
  "domain_disabled",
  "domain_verification",
  "done",
  "done_all",
  "done_outline",
  "donut_large",
  "donut_small",
  "door_back",
  "door_front",
  "door_sliding",
  "doorbell",
  "double_arrow",
  "downhill_skiing",
  "download",
  "download_done",
  "download_for_offline",
  "downloading",
  "drafts",
  "drag_handle",
  "drag_indicator",
  "draw",
  "drive_eta",
  "drive_file_move",
  "drive_file_move_rtl",
  "drive_file_rename_outline",
  "drive_folder_upload",
  "dry",
  "dry_cleaning",
  "duo",
  "dvr",
  "dynamic_feed",
  "dynamic_form",
  "e_mobiledata",
  "earbuds",
  "earbuds_battery",
  "east",
  "edgesensor_high",
  "edgesensor_low",
  "edit",
  "edit_attributes",
  "edit_calendar",
  "edit_location",
  "edit_location_alt",
  "edit_note",
  "edit_notifications",
  "edit_off",
  "edit_road",
  "eject",
  "elderly",
  "electric_bike",
  "electric_car",
  "electric_moped",
  "electric_rickshaw",
  "electric_scooter",
  "electrical_services",
  "elevator",
  "email",
  "emergency",
  "emoji_emotions",
  "emoji_events",
  "emoji_flags",
  "emoji_food_beverage",
  "emoji_nature",
  "emoji_objects",
  "emoji_people",
  "emoji_symbols",
  "emoji_transportation",
  "engineering",
  "enhanced_encryption",
  "equalizer",
  "error",
  "error_outline",
  "escalator",
  "escalator_warning",
  "euro",
  "euro_symbol",
  "ev_station",
  "event",
  "event_available",
  "event_busy",
  "event_note",
  "event_seat",
  "exit_to_app",
  "expand",
  "expand_less",
  "expand_more",
  "explicit",
  "explore",
  "explore_off",
  "exposure",
  "exposure_neg_1",
  "exposure_neg_2",
  "exposure_plus_1",
  "exposure_plus_2",
  "exposure_zero",
  "extension",
  "extension_off",
  "face",
  "face_retouching_natural",
  "face_retouching_off",
  "facebook",
  "fact_check",
  "family_restroom",
  "fast_forward",
  "fast_rewind",
  "fastfood",
  "favorite",
  "favorite_border",
  "featured_play_list",
  "featured_video",
  "feed",
  "feedback",
  "female",
  "fence",
  "festival",
  "fiber_dvr",
  "fiber_manual_record",
  "fiber_new",
  "fiber_pin",
  "fiber_smart_record",
  "file_copy",
  "file_download",
  "file_download_done",
  "file_download_off",
  "file_present",
  "file_upload",
  "filter",
  "filter_1",
  "filter_2",
  "filter_3",
  "filter_4",
  "filter_5",
  "filter_6",
  "filter_7",
  "filter_8",
  "filter_9",
  "filter_9_plus",
  "filter_alt",
  "filter_b_and_w",
  "filter_center_focus",
  "filter_drama",
  "filter_frames",
  "filter_hdr",
  "filter_list",
  "filter_none",
  "filter_tilt_shift",
  "filter_vintage",
  "find_in_page",
  "find_replace",
  "fingerprint",
  "fire_extinguisher",
  "fireplace",
  "first_page",
  "fit_screen",
  "fitness_center",
  "flag",
  "flaky",
  "flare",
  "flash_auto",
  "flash_off",
  "flash_on",
  "flashlight_off",
  "flashlight_on",
  "flatware",
  "flight",
  "flight_land",
  "flight_takeoff",
  "flip",
  "flip_camera_android",
  "flip_camera_ios",
  "flip_to_back",
  "flip_to_front",
  "flourescent",
  "flutter_dash",
  "fmd_bad",
  "fmd_good",
  "folder",
  "folder_open",
  "folder_shared",
  "folder_special",
  "follow_the_signs",
  "font_download",
  "font_download_off",
  "food_bank",
  "format_align_center",
  "format_align_justify",
  "format_align_left",
  "format_align_right",
  "format_bold",
  "format_clear",
  "format_color_fill",
  "format_color_reset",
  "format_color_text",
  "format_indent_decrease",
  "format_indent_increase",
  "format_italic",
  "format_line_spacing",
  "format_list_bulleted",
  "format_list_numbered",
  "format_list_numbered_rtl",
  "format_paint",
  "format_quote",
  "format_shapes",
  "format_size",
  "format_strikethrough",
  "format_textdirection_l_to_r",
  "format_textdirection_r_to_l",
  "format_underlined",
  "forum",
  "forward",
  "forward_10",
  "forward_30",
  "forward_5",
  "forward_to_inbox",
  "foundation",
  "free_breakfast",
  "free_cancellation",
  "front_hand",
  "fullscreen",
  "fullscreen_exit",
  "functions",
  "g_mobiledata",
  "g_translate",
  "gamepad",
  "games",
  "garage",
  "gavel",
  "generating_tokens",
  "gesture",
  "get_app",
  "gif",
  "gite",
  "golf_course",
  "gpp_bad",
  "gpp_good",
  "gpp_maybe",
  "gps_fixed",
  "gps_not_fixed",
  "gps_off",
  "grade",
  "gradient",
  "grading",
  "grain",
  "graphic_eq",
  "grass",
  "grid_3x3",
  "grid_4x4",
  "grid_goldenratio",
  "grid_off",
  "grid_on",
  "grid_view",
  "group",
  "group_add",
  "group_off",
  "group_work",
  "groups",
  "h_mobiledata",
  "h_plus_mobiledata",
  "hail",
  "handyman",
  "hardware",
  "hd",
  "hdr_auto",
  "hdr_auto_select",
  "hdr_enhanced_select",
  "hdr_off",
  "hdr_off_select",
  "hdr_on",
  "hdr_on_select",
  "hdr_plus",
  "hdr_strong",
  "hdr_weak",
  "headphones",
  "headphones_battery",
  "headset",
  "headset_mic",
  "headset_off",
  "healing",
  "health_and_safety",
  "hearing",
  "hearing_disabled",
  "height",
  "help",
  "help_center",
  "help_outline",
  "hevc",
  "hide_image",
  "hide_source",
  "high_quality",
  "highlight",
  "highlight_alt",
  "highlight_off",
  "hiking",
  "history",
  "history_edu",
  "history_toggle_off",
  "holiday_village",
  "home",
  "home_max",
  "home_mini",
  "home_repair_service",
  "home_work",
  "horizontal_distribute",
  "horizontal_rule",
  "horizontal_split",
  "hot_tub",
  "hotel",
  "hotel_class",
  "hourglass_bottom",
  "hourglass_disabled",
  "hourglass_empty",
  "hourglass_full",
  "hourglass_top",
  "house",
  "house_siding",
  "houseboat",
  "how_to_reg",
  "how_to_vote",
  "http",
  "https",
  "hvac",
  "ice_skating",
  "icecream",
  "image",
  "image_aspect_ratio",
  "image_not_supported",
  "image_search",
  "imagesearch_roller",
  "import_contacts",
  "import_export",
  "important_devices",
  "inbox",
  "incomplete_circle",
  "indeterminate_check_box",
  "info",
  "input",
  "insert_chart",
  "insert_chart_outlined",
  "insert_comment",
  "insert_drive_file",
  "insert_emoticon",
  "insert_invitation",
  "insert_link",
  "insert_photo",
  "insights",
  "integration_instructions",
  "inventory",
  "inventory_2",
  "invert_colors",
  "invert_colors_off",
  "ios_share",
  "iron",
  "iso",
  "kayaking",
  "keyboard",
  "keyboard_alt",
  "keyboard_arrow_down",
  "keyboard_arrow_left",
  "keyboard_arrow_right",
  "keyboard_arrow_up",
  "keyboard_backspace",
  "keyboard_capslock",
  "keyboard_hide",
  "keyboard_return",
  "keyboard_tab",
  "keyboard_voice",
  "king_bed",
  "kitchen",
  "kitesurfing",
  "label",
  "label_important",
  "label_off",
  "landscape",
  "language",
  "laptop",
  "laptop_chromebook",
  "laptop_mac",
  "laptop_windows",
  "last_page",
  "launch",
  "layers",
  "layers_clear",
  "leaderboard",
  "leak_add",
  "leak_remove",
  "legend_toggle",
  "lens",
  "lens_blur",
  "library_add",
  "library_add_check",
  "library_books",
  "library_music",
  "light",
  "light_mode",
  "lightbulb",
  "line_style",
  "line_weight",
  "linear_scale",
  "link",
  "link_off",
  "linked_camera",
  "liquor",
  "list",
  "list_alt",
  "live_help",
  "live_tv",
  "living",
  "local_activity",
  "local_airport",
  "local_atm",
  "local_bar",
  "local_cafe",
  "local_car_wash",
  "local_convenience_store",
  "local_dining",
  "local_drink",
  "local_fire_department",
  "local_florist",
  "local_gas_station",
  "local_grocery_store",
  "local_hospital",
  "local_hotel",
  "local_laundry_service",
  "local_library",
  "local_mall",
  "local_movies",
  "local_offer",
  "local_parking",
  "local_pharmacy",
  "local_phone",
  "local_pizza",
  "local_play",
  "local_police",
  "local_post_office",
  "local_printshop",
  "local_see",
  "local_shipping",
  "local_taxi",
  "location_city",
  "location_disabled",
  "location_off",
  "location_on",
  "location_searching",
  "lock",
  "lock_clock",
  "lock_open",
  "login",
  "logout",
  "looks",
  "looks_3",
  "looks_4",
  "looks_5",
  "looks_6",
  "looks_one",
  "looks_two",
  "loop",
  "loupe",
  "low_priority",
  "loyalty",
  "lte_mobiledata",
  "lte_plus_mobiledata",
  "luggage",
  "lunch_dining",
  "mail",
  "mail_outline",
  "male",
  "manage_accounts",
  "manage_search",
  "map",
  "maps_home_work",
  "maps_ugc",
  "margin",
  "mark_as_unread",
  "mark_chat_read",
  "mark_chat_unread",
  "mark_email_read",
  "mark_email_unread",
  "markunread",
  "markunread_mailbox",
  "masks",
  "maximize",
  "media_bluetooth_off",
  "media_bluetooth_on",
  "mediation",
  "medical_services",
  "medication",
  "meeting_room",
  "memory",
  "menu",
  "menu_book",
  "menu_open",
  "merge_type",
  "message",
  "mic",
  "mic_external_off",
  "mic_external_on",
  "mic_none",
  "mic_off",
  "microwave",
  "military_tech",
  "minimize",
  "miscellaneous_services",
  "missed_video_call",
  "mms",
  "mobile_friendly",
  "mobile_off",
  "mobile_screen_share",
  "mobiledata_off",
  "mode",
  "mode_comment",
  "mode_edit",
  "mode_edit_outline",
  "mode_night",
  "mode_standby",
  "model_training",
  "monetization_on",
  "money",
  "money_off",
  "money_off_csred",
  "monitor",
  "monitor_weight",
  "monochrome_photos",
  "mood",
  "mood_bad",
  "moped",
  "more",
  "more_horiz",
  "more_time",
  "more_vert",
  "motion_photos_auto",
  "motion_photos_off",
  "motion_photos_on",
  "motion_photos_pause",
  "motion_photos_paused",
  "mouse",
  "move_to_inbox",
  "movie",
  "movie_creation",
  "movie_filter",
  "moving",
  "mp",
  "multiline_chart",
  "multiple_stop",
  "museum",
  "music_note",
  "music_off",
  "music_video",
  "my_location",
  "nat",
  "nature",
  "nature_people",
  "navigate_before",
  "navigate_next",
  "navigation",
  "near_me",
  "near_me_disabled",
  "nearby_error",
  "nearby_off",
  "network_cell",
  "network_check",
  "network_locked",
  "network_wifi",
  "new_label",
  "new_releases",
  "next_plan",
  "next_week",
  "nfc",
  "night_shelter",
  "nightlife",
  "nightlight",
  "nightlight_round",
  "nights_stay",
  "no_accounts",
  "no_backpack",
  "no_cell",
  "no_drinks",
  "no_encryption",
  "no_encryption_gmailerrorred",
  "no_flash",
  "no_food",
  "no_luggage",
  "no_meals",
  "no_meeting_room",
  "no_photography",
  "no_sim",
  "no_stroller",
  "no_transfer",
  "nordic_walking",
  "north",
  "north_east",
  "north_west",
  "not_accessible",
  "not_interested",
  "not_listed_location",
  "not_started",
  "note",
  "note_add",
  "note_alt",
  "notes",
  "notification_add",
  "notification_important",
  "notifications",
  "notifications_active",
  "notifications_none",
  "notifications_off",
  "notifications_paused",
  "offline_bolt",
  "offline_pin",
  "offline_share",
  "ondemand_video",
  "online_prediction",
  "opacity",
  "open_in_browser",
  "open_in_full",
  "open_in_new",
  "open_in_new_off",
  "open_with",
  "other_houses",
  "outbound",
  "outbox",
  "outdoor_grill",
  "outlet",
  "outlined_flag",
  "padding",
  "pages",
  "pageview",
  "paid",
  "palette",
  "pan_tool",
  "panorama",
  "panorama_fish_eye",
  "panorama_horizontal",
  "panorama_horizontal_select",
  "panorama_photosphere",
  "panorama_photosphere_select",
  "panorama_vertical",
  "panorama_vertical_select",
  "panorama_wide_angle",
  "panorama_wide_angle_select",
  "paragliding",
  "park",
  "party_mode",
  "password",
  "pattern",
  "pause",
  "pause_circle",
  "pause_circle_filled",
  "pause_circle_outline",
  "pause_presentation",
  "payment",
  "payments",
  "pedal_bike",
  "pending",
  "pending_actions",
  "people",
  "people_alt",
  "people_outline",
  "perm_camera_mic",
  "perm_contact_calendar",
  "perm_data_setting",
  "perm_device_information",
  "perm_identity",
  "perm_media",
  "perm_phone_msg",
  "perm_scan_wifi",
  "person",
  "person_add",
  "person_add_alt",
  "person_add_alt_1",
  "person_add_disabled",
  "person_off",
  "person_outline",
  "person_pin",
  "person_pin_circle",
  "person_remove",
  "person_remove_alt_1",
  "person_search",
  "personal_injury",
  "personal_video",
  "pest_control",
  "pest_control_rodent",
  "pets",
  "phone",
  "phone_android",
  "phone_bluetooth_speaker",
  "phone_callback",
  "phone_disabled",
  "phone_enabled",
  "phone_forwarded",
  "phone_in_talk",
  "phone_iphone",
  "phone_locked",
  "phone_missed",
  "phone_paused",
  "phonelink",
  "phonelink_erase",
  "phonelink_lock",
  "phonelink_off",
  "phonelink_ring",
  "phonelink_setup",
  "photo",
  "photo_album",
  "photo_camera",
  "photo_camera_back",
  "photo_camera_front",
  "photo_filter",
  "photo_library",
  "photo_size_select_actual",
  "photo_size_select_large",
  "photo_size_select_small",
  "piano",
  "piano_off",
  "picture_as_pdf",
  "picture_in_picture",
  "picture_in_picture_alt",
  "pie_chart",
  "pie_chart_outline",
  "pin",
  "pin_drop",
  "pin_end",
  "pin_invoke",
  "pivot_table_chart",
  "place",
  "plagiarism",
  "play_arrow",
  "play_circle",
  "play_circle_filled",
  "play_circle_outline",
  "play_disabled",
  "play_for_work",
  "play_lesson",
  "playlist_add",
  "playlist_add_check",
  "playlist_play",
  "plumbing",
  "plus_one",
  "podcasts",
  "point_of_sale",
  "policy",
  "poll",
  "polymer",
  "pool",
  "portable_wifi_off",
  "portrait",
  "post_add",
  "power",
  "power_input",
  "power_off",
  "power_settings_new",
  "precision_manufacturing",
  "pregnant_woman",
  "present_to_all",
  "preview",
  "price_change",
  "price_check",
  "print",
  "print_disabled",
  "priority_high",
  "privacy_tip",
  "private_connectivity",
  "production_quantity_limits",
  "psychology",
  "public",
  "public_off",
  "publish",
  "published_with_changes",
  "push_pin",
  "qr_code",
  "qr_code_2",
  "qr_code_scanner",
  "query_builder",
  "query_stats",
  "question_answer",
  "queue",
  "queue_music",
  "queue_play_next",
  "quickreply",
  "quiz",
  "r_mobiledata",
  "radar",
  "radio",
  "radio_button_checked",
  "radio_button_unchecked",
  "railway_alert",
  "ramen_dining",
  "rate_review",
  "raw_off",
  "raw_on",
  "read_more",
  "real_estate_agent",
  "receipt",
  "receipt_long",
  "recent_actors",
  "recommend",
  "record_voice_over",
  "recycling",
  "redeem",
  "redo",
  "reduce_capacity",
  "refresh",
  "remember_me",
  "remove",
  "remove_circle",
  "remove_circle_outline",
  "remove_done",
  "remove_from_queue",
  "remove_moderator",
  "remove_red_eye",
  "remove_shopping_cart",
  "reorder",
  "repeat",
  "repeat_on",
  "repeat_one",
  "repeat_one_on",
  "replay",
  "replay_10",
  "replay_30",
  "replay_5",
  "replay_circle_filled",
  "reply",
  "reply_all",
  "report",
  "report_gmailerrorred",
  "report_off",
  "report_problem",
  "request_page",
  "request_quote",
  "reset_tv",
  "restart_alt",
  "restaurant",
  "restaurant_menu",
  "restore",
  "restore_from_trash",
  "restore_page",
  "reviews",
  "rice_bowl",
  "ring_volume",
  "roofing",
  "room",
  "room_preferences",
  "room_service",
  "rotate_90_degrees_ccw",
  "rotate_left",
  "rotate_right",
  "rounded_corner",
  "router",
  "rowing",
  "rss_feed",
  "rsvp",
  "rtt",
  "rule",
  "rule_folder",
  "run_circle",
  "running_with_errors",
  "rv_hookup",
  "safety_divider",
  "sailing",
  "sanitizer",
  "satellite",
  "save",
  "save_alt",
  "saved_search",
  "savings",
  "scanner",
  "scatter_plot",
  "schedule",
  "schedule_send",
  "schema",
  "school",
  "science",
  "score",
  "screen_lock_landscape",
  "screen_lock_portrait",
  "screen_lock_rotation",
  "screen_rotation",
  "screen_search_desktop",
  "screen_share",
  "screenshot",
  "sd",
  "sd_card",
  "sd_card_alert",
  "sd_storage",
  "search",
  "search_off",
  "security",
  "security_update",
  "security_update_good",
  "security_update_warning",
  "segment",
  "select_all",
  "self_improvement",
  "sell",
  "send",
  "send_and_archive",
  "send_to_mobile",
  "sensor_door",
  "sensor_window",
  "sensors",
  "sensors_off",
  "sentiment_dissatisfied",
  "sentiment_neutral",
  "sentiment_satisfied",
  "sentiment_satisfied_alt",
  "sentiment_very_dissatisfied",
  "sentiment_very_satisfied",
  "set_meal",
  "settings",
  "settings_accessibility",
  "settings_applications",
  "settings_backup_restore",
  "settings_bluetooth",
  "settings_brightness",
  "settings_cell",
  "settings_ethernet",
  "settings_input_antenna",
  "settings_input_component",
  "settings_input_composite",
  "settings_input_hdmi",
  "settings_input_svideo",
  "settings_overscan",
  "settings_phone",
  "settings_power",
  "settings_remote",
  "settings_suggest",
  "settings_system_daydream",
  "settings_voice",
  "share",
  "share_location",
  "shield",
  "shop",
  "shop_2",
  "shop_two",
  "shopping_bag",
  "shopping_basket",
  "shopping_cart",
  "short_text",
  "shortcut",
  "show_chart",
  "shower",
  "shuffle",
  "shuffle_on",
  "shutter_speed",
  "sick",
  "signal_cellular_0_bar",
  "signal_cellular_4_bar",
  "signal_cellular_alt",
  "signal_cellular_connected_no_internet_0_bar",
  "signal_cellular_connected_no_internet_4_bar",
  "signal_cellular_no_sim",
  "signal_cellular_nodata",
  "signal_cellular_null",
  "signal_cellular_off",
  "signal_wifi_0_bar",
  "signal_wifi_4_bar",
  "signal_wifi_4_bar_lock",
  "signal_wifi_bad",
  "signal_wifi_connected_no_internet_4",
  "signal_wifi_off",
  "signal_wifi_statusbar_4_bar",
  "signal_wifi_statusbar_connected_no_internet_4",
  "signal_wifi_statusbar_null",
  "sim_card",
  "sim_card_alert",
  "sim_card_download",
  "single_bed",
  "sip",
  "skateboarding",
  "skip_next",
  "skip_previous",
  "sledding",
  "slideshow",
  "slow_motion_video",
  "smart_button",
  "smart_display",
  "smart_screen",
  "smart_toy",
  "smartphone",
  "smoke_free",
  "smoking_rooms",
  "sms",
  "sms_failed",
  "snippet_folder",
  "snooze",
  "snowboarding",
  "snowmobile",
  "snowshoeing",
  "soap",
  "social_distance",
  "sort",
  "sort_by_alpha",
  "source",
  "south",
  "south_east",
  "south_west",
  "spa",
  "space_bar",
  "space_dashboard",
  "speaker",
  "speaker_group",
  "speaker_notes",
  "speaker_notes_off",
  "speaker_phone",
  "speed",
  "spellcheck",
  "splitscreen",
  "sports",
  "sports_bar",
  "sports_baseball",
  "sports_basketball",
  "sports_cricket",
  "sports_esports",
  "sports_football",
  "sports_golf",
  "sports_handball",
  "sports_hockey",
  "sports_kabaddi",
  "sports_mma",
  "sports_motorsports",
  "sports_rugby",
  "sports_score",
  "sports_soccer",
  "sports_tennis",
  "sports_volleyball",
  "square_foot",
  "stacked_bar_chart",
  "stacked_line_chart",
  "stairs",
  "star",
  "star_border",
  "star_border_purple500",
  "star_half",
  "star_outline",
  "star_purple500",
  "star_rate",
  "stars",
  "stay_current_landscape",
  "stay_current_portrait",
  "stay_primary_landscape",
  "stay_primary_portrait",
  "sticky_note_2",
  "stop",
  "stop_circle",
  "stop_screen_share",
  "storage",
  "store",
  "store_mall_directory",
  "storefront",
  "storm",
  "straighten",
  "stream",
  "streetview",
  "strikethrough_s",
  "stroller",
  "style",
  "subdirectory_arrow_left",
  "subdirectory_arrow_right",
  "subject",
  "subscript",
  "subscriptions",
  "subtitles",
  "subtitles_off",
  "subway",
  "summarize",
  "superscript",
  "supervised_user_circle",
  "supervisor_account",
  "support",
  "support_agent",
  "surfing",
  "surround_sound",
  "swap_calls",
  "swap_horiz",
  "swap_horizontal_circle",
  "swap_vert",
  "swap_vertical_circle",
  "swipe",
  "switch_account",
  "switch_camera",
  "switch_left",
  "switch_right",
  "switch_video",
  "sync",
  "sync_alt",
  "sync_disabled",
  "sync_problem",
  "system_security_update",
  "system_security_update_good",
  "system_security_update_warning",
  "system_update",
  "system_update_alt",
  "tab",
  "tab_unselected",
  "table_chart",
  "table_rows",
  "table_view",
  "tablet",
  "tablet_android",
  "tablet_mac",
  "tag",
  "tag_faces",
  "takeout_dining",
  "tap_and_play",
  "tapas",
  "task",
  "task_alt",
  "taxi_alert",
  "terrain",
  "text_fields",
  "text_format",
  "text_rotate_up",
  "text_rotate_vertical",
  "text_rotation_angledown",
  "text_rotation_angleup",
  "text_rotation_down",
  "text_rotation_none",
  "text_snippet",
  "textsms",
  "texture",
  "theater_comedy",
  "theaters",
  "thermostat",
  "thermostat_auto",
  "thumb_down",
  "thumb_down_alt",
  "thumb_down_off_alt",
  "thumb_up",
  "thumb_up_alt",
  "thumb_up_off_alt",
  "thumbs_up_down",
  "time_to_leave",
  "timelapse",
  "timeline",
  "timer",
  "timer_10",
  "timer_10_select",
  "timer_3",
  "timer_3_select",
  "timer_off",
  "tips_and_updates",
  "title",
  "toc",
  "today",
  "toggle_off",
  "toggle_on",
  "toll",
  "tonality",
  "topic",
  "touch_app",
  "tour",
  "toys",
  "track_changes",
  "traffic",
  "train",
  "tram",
  "transfer_within_a_station",
  "transform",
  "transgender",
  "transit_enterexit",
  "translate",
  "travel_explore",
  "trending_down",
  "trending_flat",
  "trending_up",
  "trip_origin",
  "try",
  "tty",
  "tune",
  "tungsten",
  "turned_in",
  "turned_in_not",
  "tv",
  "tv_off",
  "two_wheeler",
  "umbrella",
  "unarchive",
  "undo",
  "unfold_less",
  "unfold_more",
  "unpublished",
  "unsubscribe",
  "upcoming",
  "update",
  "update_disabled",
  "upgrade",
  "upload",
  "upload_file",
  "usb",
  "usb_off",
  "verified",
  "verified_user",
  "vertical_align_bottom",
  "vertical_align_center",
  "vertical_align_top",
  "vertical_distribute",
  "vertical_split",
  "vibration",
  "video_call",
  "video_camera_back",
  "video_camera_front",
  "video_label",
  "video_library",
  "video_settings",
  "video_stable",
  "videocam",
  "videocam_off",
  "videogame_asset",
  "videogame_asset_off",
  "view_agenda",
  "view_array",
  "view_carousel",
  "view_column",
  "view_comfy",
  "view_compact",
  "view_day",
  "view_headline",
  "view_in_ar",
  "view_list",
  "view_module",
  "view_quilt",
  "view_sidebar",
  "view_stream",
  "view_week",
  "vignette",
  "villa",
  "visibility",
  "visibility_off",
  "voice_chat",
  "voice_over_off",
  "voicemail",
  "volume_down",
  "volume_mute",
  "volume_off",
  "volume_up",
  "volunteer_activism",
  "vpn_key",
  "vpn_lock",
  "vrpano",
  "wallpaper",
  "warning",
  "warning_amber",
  "wash",
  "watch",
  "watch_later",
  "water",
  "water_damage",
  "water_drop",
  "waterfall_chart",
  "waves",
  "waving_hand",
  "wb_auto",
  "wb_cloudy",
  "wb_incandescent",
  "wb_iridescent",
  "wb_shade",
  "wb_sunny",
  "wb_twilight",
  "wc",
  "web",
  "web_asset",
  "web_asset_off",
  "weekend",
  "west",
  "whatshot",
  "wheelchair_pickup",
  "where_to_vote",
  "widgets",
  "wifi",
  "wifi_calling",
  "wifi_calling_3",
  "wifi_lock",
  "wifi_off",
  "wifi_protected_setup",
  "wifi_tethering",
  "wifi_tethering_error_rounded",
  "wifi_tethering_off",
  "window",
  "wine_bar",
  "work",
  "work_off",
  "work_outline",
  "workspaces",
  "wrap_text",
  "wrong_location",
  "wysiwyg",
  "yard",
  "youtube_searched_for",
  "zoom_in",
  "zoom_out",
  "zoom_out_map"
];
var feather = [
  "activity",
  "airplay",
  "alert-circle",
  "alert-octagon",
  "alert-triangle",
  "align-center",
  "align-justify",
  "align-left",
  "align-right",
  "anchor",
  "aperture",
  "archive",
  "arrow-down-circle",
  "arrow-down-left",
  "arrow-down-right",
  "arrow-down",
  "arrow-left-circle",
  "arrow-left",
  "arrow-right-circle",
  "arrow-right",
  "arrow-up-circle",
  "arrow-up-left",
  "arrow-up-right",
  "arrow-up",
  "at-sign",
  "award",
  "bar-chart-2",
  "bar-chart",
  "battery-charging",
  "battery",
  "bell-off",
  "bell",
  "bluetooth",
  "bold",
  "book-open",
  "book",
  "bookmark",
  "box",
  "briefcase",
  "calendar",
  "camera-off",
  "camera",
  "cast",
  "check-circle",
  "check-square",
  "check",
  "chevron-down",
  "chevron-left",
  "chevron-right",
  "chevron-up",
  "chevrons-down",
  "chevrons-left",
  "chevrons-right",
  "chevrons-up",
  "chrome",
  "circle",
  "clipboard",
  "clock",
  "cloud-drizzle",
  "cloud-lightning",
  "cloud-off",
  "cloud-rain",
  "cloud-snow",
  "cloud",
  "code",
  "codepen",
  "codesandbox",
  "coffee",
  "columns",
  "command",
  "compass",
  "copy",
  "corner-down-left",
  "corner-down-right",
  "corner-left-down",
  "corner-left-up",
  "corner-right-down",
  "corner-right-up",
  "corner-up-left",
  "corner-up-right",
  "cpu",
  "credit-card",
  "crop",
  "crosshair",
  "database",
  "delete",
  "disc",
  "dollar-sign",
  "download-cloud",
  "download",
  "droplet",
  "edit-2",
  "edit-3",
  "edit",
  "external-link",
  "eye-off",
  "eye",
  "facebook",
  "fast-forward",
  "feather",
  "figma",
  "file-minus",
  "file-plus",
  "file-text",
  "file",
  "film",
  "filter",
  "flag",
  "folder-minus",
  "folder-plus",
  "folder",
  "framer",
  "frown",
  "gift",
  "git-branch",
  "git-commit",
  "git-merge",
  "git-pull-request",
  "github",
  "gitlab",
  "globe",
  "grid",
  "hard-drive",
  "hash",
  "headphones",
  "heart",
  "help-circle",
  "hexagon",
  "home",
  "image",
  "inbox",
  "info",
  "instagram",
  "italic",
  "key",
  "layers",
  "layout",
  "life-buoy",
  "link-2",
  "link",
  "linkedin",
  "list",
  "loader",
  "lock",
  "log-in",
  "log-out",
  "mail",
  "map-pin",
  "map",
  "maximize-2",
  "maximize",
  "meh",
  "menu",
  "message-circle",
  "message-square",
  "mic-off",
  "mic",
  "minimize-2",
  "minimize",
  "minus-circle",
  "minus-square",
  "minus",
  "monitor",
  "moon",
  "more-horizontal",
  "more-vertical",
  "mouse-pointer",
  "move",
  "music",
  "navigation-2",
  "navigation",
  "octagon",
  "package",
  "paperclip",
  "pause-circle",
  "pause",
  "pen-tool",
  "percent",
  "phone-call",
  "phone-forwarded",
  "phone-incoming",
  "phone-missed",
  "phone-off",
  "phone-outgoing",
  "phone",
  "pie-chart",
  "play-circle",
  "play",
  "plus-circle",
  "plus-square",
  "plus",
  "pocket",
  "power",
  "printer",
  "radio",
  "refresh-ccw",
  "refresh-cw",
  "repeat",
  "rewind",
  "rotate-ccw",
  "rotate-cw",
  "rss",
  "save",
  "scissors",
  "search",
  "send",
  "server",
  "settings",
  "share-2",
  "share",
  "shield-off",
  "shield",
  "shopping-bag",
  "shopping-cart",
  "shuffle",
  "sidebar",
  "skip-back",
  "skip-forward",
  "slack",
  "slash",
  "sliders",
  "smartphone",
  "smile",
  "speaker",
  "square",
  "star",
  "stop-circle",
  "sun",
  "sunrise",
  "sunset",
  "tablet",
  "tag",
  "target",
  "terminal",
  "thermometer",
  "thumbs-down",
  "thumbs-up",
  "toggle-left",
  "toggle-right",
  "tool",
  "trash-2",
  "trash",
  "trello",
  "trending-down",
  "trending-up",
  "triangle",
  "truck",
  "tv",
  "twitch",
  "twitter",
  "type",
  "umbrella",
  "underline",
  "unlock",
  "upload-cloud",
  "upload",
  "user-check",
  "user-minus",
  "user-plus",
  "user-x",
  "user",
  "users",
  "video-off",
  "video",
  "voicemail",
  "volume-1",
  "volume-2",
  "volume-x",
  "volume",
  "watch",
  "wifi-off",
  "wifi",
  "wind",
  "x-circle",
  "x-octagon",
  "x-square",
  "x",
  "youtube",
  "zap-off",
  "zap",
  "zoom-in",
  "zoom-out"
];
var heroicons = [
  "academic-cap",
  "archive-box-arrow-down",
  "adjustments-vertical",
  "archive-box",
  "arrow-down-circle",
  "archive-box-x-mark",
  "adjustments-horizontal",
  "arrow-down-left",
  "arrow-down-on-square",
  "arrow-down-on-square-stack",
  "arrow-down",
  "arrow-down-right",
  "arrow-left",
  "arrow-left-circle",
  "arrow-down-tray",
  "arrow-long-right",
  "arrow-long-down",
  "arrow-left-on-rectangle",
  "arrow-path",
  "arrow-long-up",
  "arrow-right-circle",
  "arrow-right-on-rectangle",
  "arrow-right",
  "arrow-small-down",
  "arrow-path-rounded-square",
  "arrow-long-left",
  "arrow-small-left",
  "arrow-trending-down",
  "arrow-small-up",
  "arrow-up-left",
  "arrow-trending-up",
  "arrow-up-circle",
  "arrow-up-on-square-stack",
  "arrow-up-on-square",
  "arrow-up-right",
  "arrow-up-tray",
  "arrow-up",
  "arrow-uturn-right",
  "arrow-uturn-up",
  "arrow-top-right-on-square",
  "arrow-uturn-down",
  "arrows-pointing-out",
  "arrow-uturn-left",
  "arrows-pointing-in",
  "arrows-up-down",
  "at-symbol",
  "backspace",
  "backward",
  "banknotes",
  "arrows-right-left",
  "bars-2",
  "bars-3-bottom-left",
  "bars-3-center-left",
  "bars-3",
  "bars-arrow-down",
  "bars-4",
  "bars-arrow-up",
  "battery-0",
  "bars-3-bottom-right",
  "battery-100",
  "bell-alert",
  "bell-slash",
  "battery-50",
  "arrow-small-right",
  "beaker",
  "bell",
  "bolt",
  "bookmark-slash",
  "book-open",
  "bookmark-square",
  "bolt-slash",
  "bookmark",
  "briefcase",
  "building-library",
  "bell-snooze",
  "building-office-2",
  "building-storefront",
  "building-office",
  "calculator",
  "cake",
  "calendar-days",
  "chart-bar-square",
  "chart-bar",
  "camera",
  "bug-ant",
  "calendar",
  "chat-bubble-bottom-center",
  "chart-pie",
  "chat-bubble-left-right",
  "chat-bubble-left-ellipsis",
  "chat-bubble-bottom-center-text",
  "check-circle",
  "check-badge",
  "chat-bubble-oval-left",
  "chat-bubble-left",
  "check",
  "chat-bubble-oval-left-ellipsis",
  "chevron-double-right",
  "chevron-down",
  "chevron-double-down",
  "chevron-double-up",
  "circle-stack",
  "chevron-up-down",
  "chevron-up",
  "clipboard-document-list",
  "chevron-double-left",
  "chevron-right",
  "chevron-left",
  "cloud-arrow-down",
  "cloud-arrow-up",
  "cloud",
  "code-bracket-square",
  "code-bracket",
  "cog-6-tooth",
  "clipboard-document",
  "clock",
  "clipboard-document-check",
  "cog-8-tooth",
  "cog",
  "command-line",
  "computer-desktop",
  "cube-transparent",
  "cpu-chip",
  "credit-card",
  "cube",
  "currency-dollar",
  "currency-bangladeshi",
  "currency-euro",
  "currency-pound",
  "currency-yen",
  "currency-rupee",
  "cursor-arrow-ripple",
  "device-phone-mobile",
  "device-tablet",
  "document-arrow-down",
  "cursor-arrow-rays",
  "document-check",
  "document-chart-bar",
  "document-duplicate",
  "document-minus",
  "clipboard",
  "document-magnifying-glass",
  "document-plus",
  "document",
  "document-text",
  "ellipsis-horizontal-circle",
  "document-arrow-up",
  "ellipsis-horizontal",
  "ellipsis-vertical",
  "eye-dropper",
  "exclamation-triangle",
  "eye-slash",
  "eye",
  "exclamation-circle",
  "envelope-open",
  "face-smile",
  "film",
  "flag",
  "folder-arrow-down",
  "envelope",
  "fire",
  "folder-minus",
  "folder-open",
  "face-frown",
  "folder-plus",
  "forward",
  "funnel",
  "gift-top",
  "folder",
  "gif",
  "globe-alt",
  "finger-print",
  "globe-asia-australia",
  "globe-europe-africa",
  "hand-raised",
  "gift",
  "home",
  "identification",
  "globe-americas",
  "hashtag",
  "inbox-arrow-down",
  "inbox-stack",
  "information-circle",
  "inbox",
  "key",
  "lifebuoy",
  "hand-thumb-down",
  "language",
  "hand-thumb-up",
  "heart",
  "home-modern",
  "light-bulb",
  "lock-closed",
  "magnifying-glass-plus",
  "magnifying-glass",
  "lock-open",
  "magnifying-glass-circle",
  "link",
  "list-bullet",
  "map",
  "map-pin",
  "megaphone",
  "magnifying-glass-minus",
  "minus-circle",
  "musical-note",
  "paint-brush",
  "newspaper",
  "no-symbol",
  "minus-small",
  "paper-airplane",
  "minus",
  "microphone",
  "moon",
  "paper-clip",
  "pause",
  "phone-arrow-up-right",
  "phone-arrow-down-left",
  "phone-x-mark",
  "phone",
  "pencil",
  "play-pause",
  "photo",
  "pencil-square",
  "play",
  "plus-small",
  "plus",
  "power",
  "play-circle",
  "presentation-chart-line",
  "pause-circle",
  "presentation-chart-bar",
  "printer",
  "question-mark-circle",
  "qr-code",
  "queue-list",
  "receipt-percent",
  "radio",
  "receipt-refund",
  "plus-circle",
  "rectangle-group",
  "puzzle-piece",
  "rocket-launch",
  "rectangle-stack",
  "server",
  "rss",
  "scale",
  "server-stack",
  "share",
  "shield-exclamation",
  "shopping-cart",
  "shopping-bag",
  "signal-slash",
  "signal",
  "scissors",
  "shield-check",
  "speaker-wave",
  "speaker-x-mark",
  "squares-plus",
  "star",
  "stop-circle",
  "sun",
  "sparkles",
  "squares-2x2",
  "square-2-stack",
  "square-3-stack-3d",
  "table-cells",
  "ticket",
  "swatch",
  "tag",
  "tv",
  "user-plus",
  "user-minus",
  "stop",
  "user",
  "truck",
  "users",
  "video-camera-slash",
  "user-circle",
  "video-camera",
  "user-group",
  "trophy",
  "viewfinder-circle",
  "variable",
  "trash",
  "view-columns",
  "wifi",
  "window",
  "wrench-screwdriver",
  "wrench",
  "x-mark",
  "wallet",
  "x-circle"
];

// src/app/mock-api/ui/icons/api.ts
var _IconsMockApi = class _IconsMockApi {
  /**
   * Constructor
   */
  constructor(_fuseMockApiService) {
    this._fuseMockApiService = _fuseMockApiService;
    this._feather = feather;
    this._heroicons = heroicons;
    this._material = material;
    this.registerHandlers();
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Register Mock API handlers
   */
  registerHandlers() {
    this._fuseMockApiService.onGet("api/ui/icons/feather").reply(() => [
      200,
      {
        namespace: "feather",
        name: "Feather",
        grid: "icon-size-6",
        list: cloneDeep_default(this._feather)
      }
    ]);
    this._fuseMockApiService.onGet("api/ui/icons/heroicons-outline").reply(() => [
      200,
      {
        namespace: "heroicons_outline",
        name: "Heroicons Outline",
        grid: "icon-size-6",
        list: cloneDeep_default(this._heroicons)
      }
    ]);
    this._fuseMockApiService.onGet("api/ui/icons/heroicons-solid").reply(() => [
      200,
      {
        namespace: "heroicons_solid",
        name: "Heroicons Solid",
        grid: "icon-size-6",
        list: cloneDeep_default(this._heroicons)
      }
    ]);
    this._fuseMockApiService.onGet("api/ui/icons/heroicons-mini").reply(() => [
      200,
      {
        namespace: "heroicons_mini",
        name: "Heroicons Mini",
        grid: "icon-size-5",
        list: cloneDeep_default(this._heroicons)
      }
    ]);
    this._fuseMockApiService.onGet("api/ui/icons/material-solid").reply(() => [
      200,
      {
        namespace: "mat_solid",
        name: "Material Solid",
        grid: "icon-size-6",
        list: cloneDeep_default(this._material)
      }
    ]);
    this._fuseMockApiService.onGet("api/ui/icons/material-outline").reply(() => [
      200,
      {
        namespace: "mat_outline",
        name: "Material Outline",
        grid: "icon-size-6",
        list: cloneDeep_default(this._material)
      }
    ]);
    this._fuseMockApiService.onGet("api/ui/icons/material-twotone").reply(() => [
      200,
      {
        namespace: "",
        name: "Material Twotone",
        grid: "icon-size-6",
        list: cloneDeep_default(this._material)
      }
    ]);
  }
};
_IconsMockApi.\u0275fac = function IconsMockApi_Factory(t) {
  return new (t || _IconsMockApi)(\u0275\u0275inject(FuseMockApiService));
};
_IconsMockApi.\u0275prov = /* @__PURE__ */ \u0275\u0275defineInjectable({ token: _IconsMockApi, factory: _IconsMockApi.\u0275fac, providedIn: "root" });
var IconsMockApi = _IconsMockApi;

// src/app/mock-api/index.ts
var mockApiServices = [
  AcademyMockApi,
  ActivitiesMockApi,
  AnalyticsMockApi,
  AuthMockApi,
  ChatMockApi,
  ContactsMockApi,
  CryptoMockApi,
  ECommerceInventoryMockApi,
  FileManagerMockApi,
  FinanceMockApi,
  HelpCenterMockApi,
  IconsMockApi,
  MailboxMockApi,
  MessagesMockApi,
  NavigationMockApi,
  NotesMockApi,
  NotificationsMockApi,
  ProjectMockApi,
  SearchMockApi,
  ScrumboardMockApi,
  ShortcutsMockApi,
  TasksMockApi,
  UserMockApi
];

// src/app/core/transloco/transloco.http-loader.ts
var _TranslocoHttpLoader = class _TranslocoHttpLoader {
  constructor() {
    this._httpClient = inject(HttpClient);
  }
  // -----------------------------------------------------------------------------------------------------
  // @ Public methods
  // -----------------------------------------------------------------------------------------------------
  /**
   * Get translation
   *
   * @param lang
   */
  getTranslation(lang) {
    return this._httpClient.get(`./i18n/${lang}.json`);
  }
};
_TranslocoHttpLoader.\u0275fac = function TranslocoHttpLoader_Factory(t) {
  return new (t || _TranslocoHttpLoader)();
};
_TranslocoHttpLoader.\u0275prov = /* @__PURE__ */ \u0275\u0275defineInjectable({ token: _TranslocoHttpLoader, factory: _TranslocoHttpLoader.\u0275fac, providedIn: "root" });
var TranslocoHttpLoader = _TranslocoHttpLoader;

// node_modules/@angular/service-worker/fesm2022/service-worker.mjs
var ERR_SW_NOT_SUPPORTED = "Service workers are disabled or not supported by this browser";
function errorObservable(message) {
  return defer(() => throwError(new Error(message)));
}
var NgswCommChannel = class {
  constructor(serviceWorker) {
    this.serviceWorker = serviceWorker;
    if (!serviceWorker) {
      this.worker = this.events = this.registration = errorObservable(ERR_SW_NOT_SUPPORTED);
    } else {
      const controllerChangeEvents = fromEvent(serviceWorker, "controllerchange");
      const controllerChanges = controllerChangeEvents.pipe(map(() => serviceWorker.controller));
      const currentController = defer(() => of(serviceWorker.controller));
      const controllerWithChanges = concat(currentController, controllerChanges);
      this.worker = controllerWithChanges.pipe(filter((c) => !!c));
      this.registration = this.worker.pipe(switchMap(() => serviceWorker.getRegistration()));
      const rawEvents = fromEvent(serviceWorker, "message");
      const rawEventPayload = rawEvents.pipe(map((event) => event.data));
      const eventsUnconnected = rawEventPayload.pipe(filter((event) => event && event.type));
      const events = eventsUnconnected.pipe(publish());
      events.connect();
      this.events = events;
    }
  }
  postMessage(action, payload) {
    return this.worker.pipe(take(1), tap((sw) => {
      sw.postMessage(__spreadValues({
        action
      }, payload));
    })).toPromise().then(() => void 0);
  }
  postMessageWithOperation(type, payload, operationNonce) {
    const waitForOperationCompleted = this.waitForOperationCompleted(operationNonce);
    const postMessage = this.postMessage(type, payload);
    return Promise.all([postMessage, waitForOperationCompleted]).then(([, result]) => result);
  }
  generateNonce() {
    return Math.round(Math.random() * 1e7);
  }
  eventsOfType(type) {
    let filterFn;
    if (typeof type === "string") {
      filterFn = (event) => event.type === type;
    } else {
      filterFn = (event) => type.includes(event.type);
    }
    return this.events.pipe(filter(filterFn));
  }
  nextEventOfType(type) {
    return this.eventsOfType(type).pipe(take(1));
  }
  waitForOperationCompleted(nonce) {
    return this.eventsOfType("OPERATION_COMPLETED").pipe(filter((event) => event.nonce === nonce), take(1), map((event) => {
      if (event.result !== void 0) {
        return event.result;
      }
      throw new Error(event.error);
    })).toPromise();
  }
  get isEnabled() {
    return !!this.serviceWorker;
  }
};
var _SwPush = class _SwPush {
  /**
   * True if the Service Worker is enabled (supported by the browser and enabled via
   * `ServiceWorkerModule`).
   */
  get isEnabled() {
    return this.sw.isEnabled;
  }
  constructor(sw) {
    this.sw = sw;
    this.pushManager = null;
    this.subscriptionChanges = new Subject();
    if (!sw.isEnabled) {
      this.messages = NEVER;
      this.notificationClicks = NEVER;
      this.subscription = NEVER;
      return;
    }
    this.messages = this.sw.eventsOfType("PUSH").pipe(map((message) => message.data));
    this.notificationClicks = this.sw.eventsOfType("NOTIFICATION_CLICK").pipe(map((message) => message.data));
    this.pushManager = this.sw.registration.pipe(map((registration) => registration.pushManager));
    const workerDrivenSubscriptions = this.pushManager.pipe(switchMap((pm) => pm.getSubscription()));
    this.subscription = merge(workerDrivenSubscriptions, this.subscriptionChanges);
  }
  /**
   * Subscribes to Web Push Notifications,
   * after requesting and receiving user permission.
   *
   * @param options An object containing the `serverPublicKey` string.
   * @returns A Promise that resolves to the new subscription object.
   */
  requestSubscription(options) {
    if (!this.sw.isEnabled || this.pushManager === null) {
      return Promise.reject(new Error(ERR_SW_NOT_SUPPORTED));
    }
    const pushOptions = {
      userVisibleOnly: true
    };
    let key = this.decodeBase64(options.serverPublicKey.replace(/_/g, "/").replace(/-/g, "+"));
    let applicationServerKey = new Uint8Array(new ArrayBuffer(key.length));
    for (let i = 0; i < key.length; i++) {
      applicationServerKey[i] = key.charCodeAt(i);
    }
    pushOptions.applicationServerKey = applicationServerKey;
    return this.pushManager.pipe(switchMap((pm) => pm.subscribe(pushOptions)), take(1)).toPromise().then((sub) => {
      this.subscriptionChanges.next(sub);
      return sub;
    });
  }
  /**
   * Unsubscribes from Service Worker push notifications.
   *
   * @returns A Promise that is resolved when the operation succeeds, or is rejected if there is no
   *          active subscription or the unsubscribe operation fails.
   */
  unsubscribe() {
    if (!this.sw.isEnabled) {
      return Promise.reject(new Error(ERR_SW_NOT_SUPPORTED));
    }
    const doUnsubscribe = (sub) => {
      if (sub === null) {
        throw new Error("Not subscribed to push notifications.");
      }
      return sub.unsubscribe().then((success) => {
        if (!success) {
          throw new Error("Unsubscribe failed!");
        }
        this.subscriptionChanges.next(null);
      });
    };
    return this.subscription.pipe(take(1), switchMap(doUnsubscribe)).toPromise();
  }
  decodeBase64(input) {
    return atob(input);
  }
};
_SwPush.\u0275fac = function SwPush_Factory(t) {
  return new (t || _SwPush)(\u0275\u0275inject(NgswCommChannel));
};
_SwPush.\u0275prov = /* @__PURE__ */ \u0275\u0275defineInjectable({
  token: _SwPush,
  factory: _SwPush.\u0275fac
});
var SwPush = _SwPush;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && setClassMetadata(SwPush, [{
    type: Injectable
  }], () => [{
    type: NgswCommChannel
  }], null);
})();
var _SwUpdate = class _SwUpdate {
  /**
   * True if the Service Worker is enabled (supported by the browser and enabled via
   * `ServiceWorkerModule`).
   */
  get isEnabled() {
    return this.sw.isEnabled;
  }
  constructor(sw) {
    this.sw = sw;
    if (!sw.isEnabled) {
      this.versionUpdates = NEVER;
      this.unrecoverable = NEVER;
      return;
    }
    this.versionUpdates = this.sw.eventsOfType(["VERSION_DETECTED", "VERSION_INSTALLATION_FAILED", "VERSION_READY", "NO_NEW_VERSION_DETECTED"]);
    this.unrecoverable = this.sw.eventsOfType("UNRECOVERABLE_STATE");
  }
  /**
   * Checks for an update and waits until the new version is downloaded from the server and ready
   * for activation.
   *
   * @returns a promise that
   * - resolves to `true` if a new version was found and is ready to be activated.
   * - resolves to `false` if no new version was found
   * - rejects if any error occurs
   */
  checkForUpdate() {
    if (!this.sw.isEnabled) {
      return Promise.reject(new Error(ERR_SW_NOT_SUPPORTED));
    }
    const nonce = this.sw.generateNonce();
    return this.sw.postMessageWithOperation("CHECK_FOR_UPDATES", {
      nonce
    }, nonce);
  }
  /**
   * Updates the current client (i.e. browser tab) to the latest version that is ready for
   * activation.
   *
   * In most cases, you should not use this method and instead should update a client by reloading
   * the page.
   *
   * <div class="alert is-important">
   *
   * Updating a client without reloading can easily result in a broken application due to a version
   * mismatch between the [application shell](guide/glossary#app-shell) and other page resources,
   * such as [lazy-loaded chunks](guide/glossary#lazy-loading), whose filenames may change between
   * versions.
   *
   * Only use this method, if you are certain it is safe for your specific use case.
   *
   * </div>
   *
   * @returns a promise that
   *  - resolves to `true` if an update was activated successfully
   *  - resolves to `false` if no update was available (for example, the client was already on the
   *    latest version).
   *  - rejects if any error occurs
   */
  activateUpdate() {
    if (!this.sw.isEnabled) {
      return Promise.reject(new Error(ERR_SW_NOT_SUPPORTED));
    }
    const nonce = this.sw.generateNonce();
    return this.sw.postMessageWithOperation("ACTIVATE_UPDATE", {
      nonce
    }, nonce);
  }
};
_SwUpdate.\u0275fac = function SwUpdate_Factory(t) {
  return new (t || _SwUpdate)(\u0275\u0275inject(NgswCommChannel));
};
_SwUpdate.\u0275prov = /* @__PURE__ */ \u0275\u0275defineInjectable({
  token: _SwUpdate,
  factory: _SwUpdate.\u0275fac
});
var SwUpdate = _SwUpdate;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && setClassMetadata(SwUpdate, [{
    type: Injectable
  }], () => [{
    type: NgswCommChannel
  }], null);
})();
var SCRIPT = new InjectionToken(ngDevMode ? "NGSW_REGISTER_SCRIPT" : "");
function ngswAppInitializer(injector, script, options, platformId) {
  return () => {
    if (!(isPlatformBrowser(platformId) && "serviceWorker" in navigator && options.enabled !== false)) {
      return;
    }
    navigator.serviceWorker.addEventListener("controllerchange", () => {
      if (navigator.serviceWorker.controller !== null) {
        navigator.serviceWorker.controller.postMessage({
          action: "INITIALIZE"
        });
      }
    });
    let readyToRegister$;
    if (typeof options.registrationStrategy === "function") {
      readyToRegister$ = options.registrationStrategy();
    } else {
      const [strategy, ...args] = (options.registrationStrategy || "registerWhenStable:30000").split(":");
      switch (strategy) {
        case "registerImmediately":
          readyToRegister$ = of(null);
          break;
        case "registerWithDelay":
          readyToRegister$ = delayWithTimeout(+args[0] || 0);
          break;
        case "registerWhenStable":
          readyToRegister$ = !args[0] ? whenStable(injector) : merge(whenStable(injector), delayWithTimeout(+args[0]));
          break;
        default:
          throw new Error(`Unknown ServiceWorker registration strategy: ${options.registrationStrategy}`);
      }
    }
    const ngZone = injector.get(NgZone);
    ngZone.runOutsideAngular(() => readyToRegister$.pipe(take(1)).subscribe(() => navigator.serviceWorker.register(script, {
      scope: options.scope
    }).catch((err) => console.error("Service worker registration failed with:", err))));
  };
}
function delayWithTimeout(timeout) {
  return of(null).pipe(delay(timeout));
}
function whenStable(injector) {
  const appRef = injector.get(ApplicationRef);
  return appRef.isStable.pipe(filter((stable) => stable));
}
function ngswCommChannelFactory(opts, platformId) {
  return new NgswCommChannel(isPlatformBrowser(platformId) && opts.enabled !== false ? navigator.serviceWorker : void 0);
}
var SwRegistrationOptions = class {
};
function provideServiceWorker(script, options = {}) {
  return makeEnvironmentProviders([SwPush, SwUpdate, {
    provide: SCRIPT,
    useValue: script
  }, {
    provide: SwRegistrationOptions,
    useValue: options
  }, {
    provide: NgswCommChannel,
    useFactory: ngswCommChannelFactory,
    deps: [SwRegistrationOptions, PLATFORM_ID]
  }, {
    provide: APP_INITIALIZER,
    useFactory: ngswAppInitializer,
    deps: [Injector, SCRIPT, SwRegistrationOptions, PLATFORM_ID],
    multi: true
  }]);
}
var _ServiceWorkerModule = class _ServiceWorkerModule {
  /**
   * Register the given Angular Service Worker script.
   *
   * If `enabled` is set to `false` in the given options, the module will behave as if service
   * workers are not supported by the browser, and the service worker will not be registered.
   */
  static register(script, options = {}) {
    return {
      ngModule: _ServiceWorkerModule,
      providers: [provideServiceWorker(script, options)]
    };
  }
};
_ServiceWorkerModule.\u0275fac = function ServiceWorkerModule_Factory(t) {
  return new (t || _ServiceWorkerModule)();
};
_ServiceWorkerModule.\u0275mod = /* @__PURE__ */ \u0275\u0275defineNgModule({
  type: _ServiceWorkerModule
});
_ServiceWorkerModule.\u0275inj = /* @__PURE__ */ \u0275\u0275defineInjector({
  providers: [SwPush, SwUpdate]
});
var ServiceWorkerModule = _ServiceWorkerModule;
(() => {
  (typeof ngDevMode === "undefined" || ngDevMode) && setClassMetadata(ServiceWorkerModule, [{
    type: NgModule,
    args: [{
      providers: [SwPush, SwUpdate]
    }]
  }], null, null);
})();

// src/app/app.config.ts
var appConfig = {
  providers: [
    provideAnimations(),
    provideHttpClient(),
    provideServiceWorker("ngsw-worker.js", {
      enabled: !isDevMode(),
      registrationStrategy: "registerWhenStable:30000"
    }),
    provideRouter(appRoutes, withPreloading(PreloadAllModules), withInMemoryScrolling({ scrollPositionRestoration: "enabled" })),
    // Material Date Adapter
    {
      provide: DateAdapter,
      useClass: LuxonDateAdapter
    },
    {
      provide: MAT_DATE_FORMATS,
      useValue: {
        parse: {
          dateInput: "D"
        },
        display: {
          dateInput: "DDD",
          monthYearLabel: "LLL yyyy",
          dateA11yLabel: "DD",
          monthYearA11yLabel: "LLLL yyyy"
        }
      }
    },
    // Transloco Config
    provideTransloco({
      config: {
        availableLangs: [
          {
            id: "en",
            label: "English"
          },
          {
            id: "tr",
            label: "Turkish"
          }
        ],
        defaultLang: "en",
        fallbackLang: "en",
        reRenderOnLangChange: true,
        prodMode: true
      },
      loader: TranslocoHttpLoader
    }),
    {
      // Preload the default language before the app starts to prevent empty/jumping content
      provide: APP_INITIALIZER,
      useFactory: () => {
        const translocoService = inject(TranslocoService);
        const defaultLang = translocoService.getDefaultLang();
        translocoService.setActiveLang(defaultLang);
        return () => firstValueFrom(translocoService.load(defaultLang));
      },
      multi: true
    },
    // Fuse
    provideAuth(),
    provideIcons(),
    provideFuse({
      mockApi: {
        delay: 0,
        services: mockApiServices
      },
      fuse: {
        layout: "classic",
        scheme: "light",
        screens: {
          sm: "600px",
          md: "960px",
          lg: "1280px",
          xl: "1440px"
        },
        theme: "theme-default",
        themes: [
          {
            id: "theme-default",
            name: "Default"
          },
          {
            id: "theme-brand",
            name: "Brand"
          },
          {
            id: "theme-teal",
            name: "Teal"
          },
          {
            id: "theme-rose",
            name: "Rose"
          },
          {
            id: "theme-purple",
            name: "Purple"
          },
          {
            id: "theme-amber",
            name: "Amber"
          }
        ]
      }
    })
  ]
};

// src/main.ts
if ("serviceWorker" in navigator && environment.production) {
  window.addEventListener("load", () => {
    navigator.serviceWorker.register("/ngsw-worker.js").then((registration) => {
      console.log("Service Worker registrado con \xE9xito:", registration);
    }).catch((error) => {
      console.error("Error en el registro del Service Worker:", error);
    });
  });
}
bootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));
/*! Bundled license information:

@angular/animations/fesm2022/browser.mjs:
  (**
   * @license Angular v18.0.1
   * (c) 2010-2024 Google LLC. https://angular.io/
   * License: MIT
   *)

@angular/platform-browser/fesm2022/animations.mjs:
  (**
   * @license Angular v18.0.1
   * (c) 2010-2024 Google LLC. https://angular.io/
   * License: MIT
   *)

perfect-scrollbar/dist/perfect-scrollbar.esm.js:
  (*!
   * perfect-scrollbar v1.5.3
   * Copyright 2021 Hyunje Jun, MDBootstrap and Contributors
   * Licensed under MIT
   *)

@angular/service-worker/fesm2022/service-worker.mjs:
  (**
   * @license Angular v17.3.11
   * (c) 2010-2024 Google LLC. https://angular.io/
   * License: MIT
   *)
  (*!
   * @license
   * Copyright Google LLC All Rights Reserved.
   *
   * Use of this source code is governed by an MIT-style license that can be
   * found in the LICENSE file at https://angular.io/license
   *)
*/
//# sourceMappingURL=main.js.map
