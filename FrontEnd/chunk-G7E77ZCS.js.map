{
  "version": 3,
  "sources": ["src/@fuse/animations/defaults.ts", "src/@fuse/animations/expand-collapse.ts", "src/@fuse/animations/fade.ts", "src/@fuse/animations/shake.ts", "src/@fuse/animations/slide.ts", "src/@fuse/animations/zoom.ts", "src/@fuse/animations/public-api.ts", "src/@fuse/services/utils/utils.service.ts"],
  "sourcesContent": ["export class FuseAnimationCurves {\r\n    static standard = 'cubic-bezier(0.4, 0.0, 0.2, 1)';\r\n    static deceleration = 'cubic-bezier(0.0, 0.0, 0.2, 1)';\r\n    static acceleration = 'cubic-bezier(0.4, 0.0, 1, 1)';\r\n    static sharp = 'cubic-bezier(0.4, 0.0, 0.6, 1)';\r\n}\r\n\r\nexport class FuseAnimationDurations {\r\n    static complex = '375ms';\r\n    static entering = '225ms';\r\n    static exiting = '195ms';\r\n}\r\n", "import {\r\n    animate,\r\n    state,\r\n    style,\r\n    transition,\r\n    trigger,\r\n} from '@angular/animations';\r\nimport {\r\n    FuseAnimationCurves,\r\n    FuseAnimationDurations,\r\n} from '@fuse/animations/defaults';\r\n\r\n// -----------------------------------------------------------------------------------------------------\r\n// @ Expand / collapse\r\n// -----------------------------------------------------------------------------------------------------\r\nconst expandCollapse = trigger('expandCollapse', [\r\n    state(\r\n        'void, collapsed',\r\n        style({\r\n            height: '0',\r\n        })\r\n    ),\r\n\r\n    state('*, expanded', style('*')),\r\n\r\n    // Prevent the transition if the state is false\r\n    transition('void <=> false, collapsed <=> false, expanded <=> false', []),\r\n\r\n    // Transition\r\n    transition('void <=> *, collapsed <=> expanded', animate('{{timings}}'), {\r\n        params: {\r\n            timings: `${FuseAnimationDurations.entering} ${FuseAnimationCurves.deceleration}`,\r\n        },\r\n    }),\r\n]);\r\n\r\nexport { expandCollapse };\r\n", "import {\r\n    animate,\r\n    state,\r\n    style,\r\n    transition,\r\n    trigger,\r\n} from '@angular/animations';\r\nimport {\r\n    FuseAnimationCurves,\r\n    FuseAnimationDurations,\r\n} from '@fuse/animations/defaults';\r\n\r\n// -----------------------------------------------------------------------------------------------------\r\n// @ Fade in\r\n// -----------------------------------------------------------------------------------------------------\r\nconst fadeIn = trigger('fadeIn', [\r\n    state(\r\n        'void',\r\n        style({\r\n            opacity: 0,\r\n        })\r\n    ),\r\n\r\n    state(\r\n        '*',\r\n        style({\r\n            opacity: 1,\r\n        })\r\n    ),\r\n\r\n    // Prevent the transition if the state is false\r\n    transition('void => false', []),\r\n\r\n    // Transition\r\n    transition('void => *', animate('{{timings}}'), {\r\n        params: {\r\n            timings: `${FuseAnimationDurations.entering} ${FuseAnimationCurves.deceleration}`,\r\n        },\r\n    }),\r\n]);\r\n\r\n// -----------------------------------------------------------------------------------------------------\r\n// @ Fade in top\r\n// -----------------------------------------------------------------------------------------------------\r\nconst fadeInTop = trigger('fadeInTop', [\r\n    state(\r\n        'void',\r\n        style({\r\n            opacity: 0,\r\n            transform: 'translate3d(0, -100%, 0)',\r\n        })\r\n    ),\r\n\r\n    state(\r\n        '*',\r\n        style({\r\n            opacity: 1,\r\n            transform: 'translate3d(0, 0, 0)',\r\n        })\r\n    ),\r\n\r\n    // Prevent the transition if the state is false\r\n    transition('void => false', []),\r\n\r\n    // Transition\r\n    transition('void => *', animate('{{timings}}'), {\r\n        params: {\r\n            timings: `${FuseAnimationDurations.entering} ${FuseAnimationCurves.deceleration}`,\r\n        },\r\n    }),\r\n]);\r\n\r\n// -----------------------------------------------------------------------------------------------------\r\n// @ Fade in bottom\r\n// -----------------------------------------------------------------------------------------------------\r\nconst fadeInBottom = trigger('fadeInBottom', [\r\n    state(\r\n        'void',\r\n        style({\r\n            opacity: 0,\r\n            transform: 'translate3d(0, 100%, 0)',\r\n        })\r\n    ),\r\n\r\n    state(\r\n        '*',\r\n        style({\r\n            opacity: 1,\r\n            transform: 'translate3d(0, 0, 0)',\r\n        })\r\n    ),\r\n\r\n    // Prevent the transition if the state is false\r\n    transition('void => false', []),\r\n\r\n    // Transition\r\n    transition('void => *', animate('{{timings}}'), {\r\n        params: {\r\n            timings: `${FuseAnimationDurations.entering} ${FuseAnimationCurves.deceleration}`,\r\n        },\r\n    }),\r\n]);\r\n\r\n// -----------------------------------------------------------------------------------------------------\r\n// @ Fade in left\r\n// -----------------------------------------------------------------------------------------------------\r\nconst fadeInLeft = trigger('fadeInLeft', [\r\n    state(\r\n        'void',\r\n        style({\r\n            opacity: 0,\r\n            transform: 'translate3d(-100%, 0, 0)',\r\n        })\r\n    ),\r\n\r\n    state(\r\n        '*',\r\n        style({\r\n            opacity: 1,\r\n            transform: 'translate3d(0, 0, 0)',\r\n        })\r\n    ),\r\n\r\n    // Prevent the transition if the state is false\r\n    transition('void => false', []),\r\n\r\n    // Transition\r\n    transition('void => *', animate('{{timings}}'), {\r\n        params: {\r\n            timings: `${FuseAnimationDurations.entering} ${FuseAnimationCurves.deceleration}`,\r\n        },\r\n    }),\r\n]);\r\n\r\n// -----------------------------------------------------------------------------------------------------\r\n// @ Fade in right\r\n// -----------------------------------------------------------------------------------------------------\r\nconst fadeInRight = trigger('fadeInRight', [\r\n    state(\r\n        'void',\r\n        style({\r\n            opacity: 0,\r\n            transform: 'translate3d(100%, 0, 0)',\r\n        })\r\n    ),\r\n\r\n    state(\r\n        '*',\r\n        style({\r\n            opacity: 1,\r\n            transform: 'translate3d(0, 0, 0)',\r\n        })\r\n    ),\r\n\r\n    // Prevent the transition if the state is false\r\n    transition('void => false', []),\r\n\r\n    // Transition\r\n    transition('void => *', animate('{{timings}}'), {\r\n        params: {\r\n            timings: `${FuseAnimationDurations.entering} ${FuseAnimationCurves.deceleration}`,\r\n        },\r\n    }),\r\n]);\r\n\r\n// -----------------------------------------------------------------------------------------------------\r\n// @ Fade out\r\n// -----------------------------------------------------------------------------------------------------\r\nconst fadeOut = trigger('fadeOut', [\r\n    state(\r\n        '*',\r\n        style({\r\n            opacity: 1,\r\n        })\r\n    ),\r\n\r\n    state(\r\n        'void',\r\n        style({\r\n            opacity: 0,\r\n        })\r\n    ),\r\n\r\n    // Prevent the transition if the state is false\r\n    transition('false => void', []),\r\n\r\n    // Transition\r\n    transition('* => void', animate('{{timings}}'), {\r\n        params: {\r\n            timings: `${FuseAnimationDurations.exiting} ${FuseAnimationCurves.acceleration}`,\r\n        },\r\n    }),\r\n]);\r\n\r\n// -----------------------------------------------------------------------------------------------------\r\n// @ Fade out top\r\n// -----------------------------------------------------------------------------------------------------\r\nconst fadeOutTop = trigger('fadeOutTop', [\r\n    state(\r\n        '*',\r\n        style({\r\n            opacity: 1,\r\n            transform: 'translate3d(0, 0, 0)',\r\n        })\r\n    ),\r\n\r\n    state(\r\n        'void',\r\n        style({\r\n            opacity: 0,\r\n            transform: 'translate3d(0, -100%, 0)',\r\n        })\r\n    ),\r\n\r\n    // Prevent the transition if the state is false\r\n    transition('false => void', []),\r\n\r\n    // Transition\r\n    transition('* => void', animate('{{timings}}'), {\r\n        params: {\r\n            timings: `${FuseAnimationDurations.exiting} ${FuseAnimationCurves.acceleration}`,\r\n        },\r\n    }),\r\n]);\r\n\r\n// -----------------------------------------------------------------------------------------------------\r\n// @ Fade out bottom\r\n// -----------------------------------------------------------------------------------------------------\r\nconst fadeOutBottom = trigger('fadeOutBottom', [\r\n    state(\r\n        '*',\r\n        style({\r\n            opacity: 1,\r\n            transform: 'translate3d(0, 0, 0)',\r\n        })\r\n    ),\r\n\r\n    state(\r\n        'void',\r\n        style({\r\n            opacity: 0,\r\n            transform: 'translate3d(0, 100%, 0)',\r\n        })\r\n    ),\r\n\r\n    // Prevent the transition if the state is false\r\n    transition('false => void', []),\r\n\r\n    // Transition\r\n    transition('* => void', animate('{{timings}}'), {\r\n        params: {\r\n            timings: `${FuseAnimationDurations.exiting} ${FuseAnimationCurves.acceleration}`,\r\n        },\r\n    }),\r\n]);\r\n\r\n// -----------------------------------------------------------------------------------------------------\r\n// @ Fade out left\r\n// -----------------------------------------------------------------------------------------------------\r\nconst fadeOutLeft = trigger('fadeOutLeft', [\r\n    state(\r\n        '*',\r\n        style({\r\n            opacity: 1,\r\n            transform: 'translate3d(0, 0, 0)',\r\n        })\r\n    ),\r\n\r\n    state(\r\n        'void',\r\n        style({\r\n            opacity: 0,\r\n            transform: 'translate3d(-100%, 0, 0)',\r\n        })\r\n    ),\r\n\r\n    // Prevent the transition if the state is false\r\n    transition('false => void', []),\r\n\r\n    // Transition\r\n    transition('* => void', animate('{{timings}}'), {\r\n        params: {\r\n            timings: `${FuseAnimationDurations.exiting} ${FuseAnimationCurves.acceleration}`,\r\n        },\r\n    }),\r\n]);\r\n\r\n// -----------------------------------------------------------------------------------------------------\r\n// @ Fade out right\r\n// -----------------------------------------------------------------------------------------------------\r\nconst fadeOutRight = trigger('fadeOutRight', [\r\n    state(\r\n        '*',\r\n        style({\r\n            opacity: 1,\r\n            transform: 'translate3d(0, 0, 0)',\r\n        })\r\n    ),\r\n\r\n    state(\r\n        'void',\r\n        style({\r\n            opacity: 0,\r\n            transform: 'translate3d(100%, 0, 0)',\r\n        })\r\n    ),\r\n\r\n    // Prevent the transition if the state is false\r\n    transition('false => void', []),\r\n\r\n    // Transition\r\n    transition('* => void', animate('{{timings}}'), {\r\n        params: {\r\n            timings: `${FuseAnimationDurations.exiting} ${FuseAnimationCurves.acceleration}`,\r\n        },\r\n    }),\r\n]);\r\n\r\nexport {\r\n    fadeIn,\r\n    fadeInBottom,\r\n    fadeInLeft,\r\n    fadeInRight,\r\n    fadeInTop,\r\n    fadeOut,\r\n    fadeOutBottom,\r\n    fadeOutLeft,\r\n    fadeOutRight,\r\n    fadeOutTop,\r\n};\r\n", "import {\r\n    animate,\r\n    keyframes,\r\n    style,\r\n    transition,\r\n    trigger,\r\n} from '@angular/animations';\r\n\r\n// -----------------------------------------------------------------------------------------------------\r\n// @ Shake\r\n// -----------------------------------------------------------------------------------------------------\r\nconst shake = trigger('shake', [\r\n    // Prevent the transition if the state is false\r\n    transition('void => false', []),\r\n\r\n    // Transition\r\n    transition(\r\n        'void => *, * => true',\r\n        [\r\n            animate(\r\n                '{{timings}}',\r\n                keyframes([\r\n                    style({\r\n                        transform: 'translate3d(0, 0, 0)',\r\n                        offset: 0,\r\n                    }),\r\n                    style({\r\n                        transform: 'translate3d(-10px, 0, 0)',\r\n                        offset: 0.1,\r\n                    }),\r\n                    style({\r\n                        transform: 'translate3d(10px, 0, 0)',\r\n                        offset: 0.2,\r\n                    }),\r\n                    style({\r\n                        transform: 'translate3d(-10px, 0, 0)',\r\n                        offset: 0.3,\r\n                    }),\r\n                    style({\r\n                        transform: 'translate3d(10px, 0, 0)',\r\n                        offset: 0.4,\r\n                    }),\r\n                    style({\r\n                        transform: 'translate3d(-10px, 0, 0)',\r\n                        offset: 0.5,\r\n                    }),\r\n                    style({\r\n                        transform: 'translate3d(10px, 0, 0)',\r\n                        offset: 0.6,\r\n                    }),\r\n                    style({\r\n                        transform: 'translate3d(-10px, 0, 0)',\r\n                        offset: 0.7,\r\n                    }),\r\n                    style({\r\n                        transform: 'translate3d(10px, 0, 0)',\r\n                        offset: 0.8,\r\n                    }),\r\n                    style({\r\n                        transform: 'translate3d(-10px, 0, 0)',\r\n                        offset: 0.9,\r\n                    }),\r\n                    style({\r\n                        transform: 'translate3d(0, 0, 0)',\r\n                        offset: 1,\r\n                    }),\r\n                ])\r\n            ),\r\n        ],\r\n        {\r\n            params: {\r\n                timings: '0.8s cubic-bezier(0.455, 0.03, 0.515, 0.955)',\r\n            },\r\n        }\r\n    ),\r\n]);\r\n\r\nexport { shake };\r\n", "import {\r\n    animate,\r\n    state,\r\n    style,\r\n    transition,\r\n    trigger,\r\n} from '@angular/animations';\r\nimport {\r\n    FuseAnimationCurves,\r\n    FuseAnimationDurations,\r\n} from '@fuse/animations/defaults';\r\n\r\n// -----------------------------------------------------------------------------------------------------\r\n// @ Slide in top\r\n// -----------------------------------------------------------------------------------------------------\r\nconst slideInTop = trigger('slideInTop', [\r\n    state(\r\n        'void',\r\n        style({\r\n            transform: 'translate3d(0, -100%, 0)',\r\n        })\r\n    ),\r\n\r\n    state(\r\n        '*',\r\n        style({\r\n            transform: 'translate3d(0, 0, 0)',\r\n        })\r\n    ),\r\n\r\n    // Prevent the transition if the state is false\r\n    transition('void => false', []),\r\n\r\n    // Transition\r\n    transition('void => *', animate('{{timings}}'), {\r\n        params: {\r\n            timings: `${FuseAnimationDurations.entering} ${FuseAnimationCurves.deceleration}`,\r\n        },\r\n    }),\r\n]);\r\n\r\n// -----------------------------------------------------------------------------------------------------\r\n// @ Slide in bottom\r\n// -----------------------------------------------------------------------------------------------------\r\nconst slideInBottom = trigger('slideInBottom', [\r\n    state(\r\n        'void',\r\n        style({\r\n            transform: 'translate3d(0, 100%, 0)',\r\n        })\r\n    ),\r\n\r\n    state(\r\n        '*',\r\n        style({\r\n            transform: 'translate3d(0, 0, 0)',\r\n        })\r\n    ),\r\n\r\n    // Prevent the transition if the state is false\r\n    transition('void => false', []),\r\n\r\n    // Transition\r\n    transition('void => *', animate('{{timings}}'), {\r\n        params: {\r\n            timings: `${FuseAnimationDurations.entering} ${FuseAnimationCurves.deceleration}`,\r\n        },\r\n    }),\r\n]);\r\n\r\n// -----------------------------------------------------------------------------------------------------\r\n// @ Slide in left\r\n// -----------------------------------------------------------------------------------------------------\r\nconst slideInLeft = trigger('slideInLeft', [\r\n    state(\r\n        'void',\r\n        style({\r\n            transform: 'translate3d(-100%, 0, 0)',\r\n        })\r\n    ),\r\n\r\n    state(\r\n        '*',\r\n        style({\r\n            transform: 'translate3d(0, 0, 0)',\r\n        })\r\n    ),\r\n\r\n    // Prevent the transition if the state is false\r\n    transition('void => false', []),\r\n\r\n    // Transition\r\n    transition('void => *', animate('{{timings}}'), {\r\n        params: {\r\n            timings: `${FuseAnimationDurations.entering} ${FuseAnimationCurves.deceleration}`,\r\n        },\r\n    }),\r\n]);\r\n\r\n// -----------------------------------------------------------------------------------------------------\r\n// @ Slide in right\r\n// -----------------------------------------------------------------------------------------------------\r\nconst slideInRight = trigger('slideInRight', [\r\n    state(\r\n        'void',\r\n        style({\r\n            transform: 'translate3d(100%, 0, 0)',\r\n        })\r\n    ),\r\n\r\n    state(\r\n        '*',\r\n        style({\r\n            transform: 'translate3d(0, 0, 0)',\r\n        })\r\n    ),\r\n\r\n    // Prevent the transition if the state is false\r\n    transition('void => false', []),\r\n\r\n    // Transition\r\n    transition('void => *', animate('{{timings}}'), {\r\n        params: {\r\n            timings: `${FuseAnimationDurations.entering} ${FuseAnimationCurves.deceleration}`,\r\n        },\r\n    }),\r\n]);\r\n\r\n// -----------------------------------------------------------------------------------------------------\r\n// @ Slide out top\r\n// -----------------------------------------------------------------------------------------------------\r\nconst slideOutTop = trigger('slideOutTop', [\r\n    state(\r\n        '*',\r\n        style({\r\n            transform: 'translate3d(0, 0, 0)',\r\n        })\r\n    ),\r\n\r\n    state(\r\n        'void',\r\n        style({\r\n            transform: 'translate3d(0, -100%, 0)',\r\n        })\r\n    ),\r\n\r\n    // Prevent the transition if the state is false\r\n    transition('false => void', []),\r\n\r\n    // Transition\r\n    transition('* => void', animate('{{timings}}'), {\r\n        params: {\r\n            timings: `${FuseAnimationDurations.exiting} ${FuseAnimationCurves.acceleration}`,\r\n        },\r\n    }),\r\n]);\r\n\r\n// -----------------------------------------------------------------------------------------------------\r\n// @ Slide out bottom\r\n// -----------------------------------------------------------------------------------------------------\r\nconst slideOutBottom = trigger('slideOutBottom', [\r\n    state(\r\n        '*',\r\n        style({\r\n            transform: 'translate3d(0, 0, 0)',\r\n        })\r\n    ),\r\n\r\n    state(\r\n        'void',\r\n        style({\r\n            transform: 'translate3d(0, 100%, 0)',\r\n        })\r\n    ),\r\n\r\n    // Prevent the transition if the state is false\r\n    transition('false => void', []),\r\n\r\n    // Transition\r\n    transition('* => void', animate('{{timings}}'), {\r\n        params: {\r\n            timings: `${FuseAnimationDurations.exiting} ${FuseAnimationCurves.acceleration}`,\r\n        },\r\n    }),\r\n]);\r\n\r\n// -----------------------------------------------------------------------------------------------------\r\n// @ Slide out left\r\n// -----------------------------------------------------------------------------------------------------\r\nconst slideOutLeft = trigger('slideOutLeft', [\r\n    state(\r\n        '*',\r\n        style({\r\n            transform: 'translate3d(0, 0, 0)',\r\n        })\r\n    ),\r\n\r\n    state(\r\n        'void',\r\n        style({\r\n            transform: 'translate3d(-100%, 0, 0)',\r\n        })\r\n    ),\r\n\r\n    // Prevent the transition if the state is false\r\n    transition('false => void', []),\r\n\r\n    // Transition\r\n    transition('* => void', animate('{{timings}}'), {\r\n        params: {\r\n            timings: `${FuseAnimationDurations.exiting} ${FuseAnimationCurves.acceleration}`,\r\n        },\r\n    }),\r\n]);\r\n\r\n// -----------------------------------------------------------------------------------------------------\r\n// @ Slide out right\r\n// -----------------------------------------------------------------------------------------------------\r\nconst slideOutRight = trigger('slideOutRight', [\r\n    state(\r\n        '*',\r\n        style({\r\n            transform: 'translate3d(0, 0, 0)',\r\n        })\r\n    ),\r\n\r\n    state(\r\n        'void',\r\n        style({\r\n            transform: 'translate3d(100%, 0, 0)',\r\n        })\r\n    ),\r\n\r\n    // Prevent the transition if the state is false\r\n    transition('false => void', []),\r\n\r\n    // Transition\r\n    transition('* => void', animate('{{timings}}'), {\r\n        params: {\r\n            timings: `${FuseAnimationDurations.exiting} ${FuseAnimationCurves.acceleration}`,\r\n        },\r\n    }),\r\n]);\r\n\r\nexport {\r\n    slideInBottom,\r\n    slideInLeft,\r\n    slideInRight,\r\n    slideInTop,\r\n    slideOutBottom,\r\n    slideOutLeft,\r\n    slideOutRight,\r\n    slideOutTop,\r\n};\r\n", "import {\r\n    animate,\r\n    state,\r\n    style,\r\n    transition,\r\n    trigger,\r\n} from '@angular/animations';\r\nimport {\r\n    FuseAnimationCurves,\r\n    FuseAnimationDurations,\r\n} from '@fuse/animations/defaults';\r\n\r\n// -----------------------------------------------------------------------------------------------------\r\n// @ Zoom in\r\n// -----------------------------------------------------------------------------------------------------\r\nconst zoomIn = trigger('zoomIn', [\r\n    state(\r\n        'void',\r\n        style({\r\n            opacity: 0,\r\n            transform: 'scale(0.5)',\r\n        })\r\n    ),\r\n\r\n    state(\r\n        '*',\r\n        style({\r\n            opacity: 1,\r\n            transform: 'scale(1)',\r\n        })\r\n    ),\r\n\r\n    // Prevent the transition if the state is false\r\n    transition('void => false', []),\r\n\r\n    // Transition\r\n    transition('void => *', animate('{{timings}}'), {\r\n        params: {\r\n            timings: `${FuseAnimationDurations.entering} ${FuseAnimationCurves.deceleration}`,\r\n        },\r\n    }),\r\n]);\r\n\r\n// -----------------------------------------------------------------------------------------------------\r\n// @ Zoom out\r\n// -----------------------------------------------------------------------------------------------------\r\nconst zoomOut = trigger('zoomOut', [\r\n    state(\r\n        '*',\r\n        style({\r\n            opacity: 1,\r\n            transform: 'scale(1)',\r\n        })\r\n    ),\r\n\r\n    state(\r\n        'void',\r\n        style({\r\n            opacity: 0,\r\n            transform: 'scale(0.5)',\r\n        })\r\n    ),\r\n\r\n    // Prevent the transition if the state is false\r\n    transition('false => void', []),\r\n\r\n    // Transition\r\n    transition('* => void', animate('{{timings}}'), {\r\n        params: {\r\n            timings: `${FuseAnimationDurations.exiting} ${FuseAnimationCurves.acceleration}`,\r\n        },\r\n    }),\r\n]);\r\n\r\nexport { zoomIn, zoomOut };\r\n", "import { expandCollapse } from '@fuse/animations/expand-collapse';\r\nimport {\r\n    fadeIn,\r\n    fadeInBottom,\r\n    fadeInLeft,\r\n    fadeInRight,\r\n    fadeInTop,\r\n    fadeOut,\r\n    fadeOutBottom,\r\n    fadeOutLeft,\r\n    fadeOutRight,\r\n    fadeOutTop,\r\n} from '@fuse/animations/fade';\r\nimport { shake } from '@fuse/animations/shake';\r\nimport {\r\n    slideInBottom,\r\n    slideInLeft,\r\n    slideInRight,\r\n    slideInTop,\r\n    slideOutBottom,\r\n    slideOutLeft,\r\n    slideOutRight,\r\n    slideOutTop,\r\n} from '@fuse/animations/slide';\r\nimport { zoomIn, zoomOut } from '@fuse/animations/zoom';\r\n\r\nexport const fuseAnimations = [\r\n    expandCollapse,\r\n    fadeIn,\r\n    fadeInTop,\r\n    fadeInBottom,\r\n    fadeInLeft,\r\n    fadeInRight,\r\n    fadeOut,\r\n    fadeOutTop,\r\n    fadeOutBottom,\r\n    fadeOutLeft,\r\n    fadeOutRight,\r\n    shake,\r\n    slideInTop,\r\n    slideInBottom,\r\n    slideInLeft,\r\n    slideInRight,\r\n    slideOutTop,\r\n    slideOutBottom,\r\n    slideOutLeft,\r\n    slideOutRight,\r\n    zoomIn,\r\n    zoomOut,\r\n];\r\n", "import { Injectable } from '@angular/core';\r\nimport { IsActiveMatchOptions } from '@angular/router';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class FuseUtilsService {\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Accessors\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Get the equivalent \"IsActiveMatchOptions\" options for \"exact = true\".\r\n     */\r\n    get exactMatchOptions(): IsActiveMatchOptions {\r\n        return {\r\n            paths: 'exact',\r\n            fragment: 'ignored',\r\n            matrixParams: 'ignored',\r\n            queryParams: 'exact',\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Get the equivalent \"IsActiveMatchOptions\" options for \"exact = false\".\r\n     */\r\n    get subsetMatchOptions(): IsActiveMatchOptions {\r\n        return {\r\n            paths: 'subset',\r\n            fragment: 'ignored',\r\n            matrixParams: 'ignored',\r\n            queryParams: 'subset',\r\n        };\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Generates a random id\r\n     *\r\n     * @param length\r\n     */\r\n    randomId(length: number = 10): string {\r\n        const chars =\r\n            'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        let name = '';\r\n\r\n        for (let i = 0; i < 10; i++) {\r\n            name += chars.charAt(Math.floor(Math.random() * chars.length));\r\n        }\r\n\r\n        return name;\r\n    }\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
